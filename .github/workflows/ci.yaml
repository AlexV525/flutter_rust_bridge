name: CI

on:
  push:
    paths-ignore:
      - "docs/**"
      - "**/*.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**/*.md"

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # -------------------------- test --------------------------
  valgrind_test:
    name: Valgrind test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.64.0
          components: rustfmt

      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install valgrind and llvm
        run: sudo apt update && sudo apt install -y valgrind libclang-dev

      - uses: dart-lang/setup-dart@v1
        with:
          # TODO should be 2.19.2 but has a weird bug currently
          # https://github.com/fzyzcjy/flutter_rust_bridge/pull/1039#issuecomment-1424292105
          sdk: "2.17.6"

      - name: Install dart dependencies (single block)
        working-directory: ./frb_example/pure_dart/dart
        run: dart pub get

      - name: Install dart dependencies (multi blocks)
        working-directory: ./frb_example/pure_dart_multi/dart
        run: dart pub get

      - name: Run valgrind script (single block)
        working-directory: ./frb_example/pure_dart/dart
        run: chmod +x ./run.sh ./valgrind_util.py && ./run.sh
        env:
          CARGO_TARGET_DIR: /home/runner # NOTE here, must be an absolute path, since in my script uses it in multiple different directories

      - name: Run valgrind script (multi blocks)
        working-directory: ./frb_example/pure_dart_multi/dart
        run: chmod +x ./run.sh && ./run.sh
        env:
          CARGO_TARGET_DIR: /home/runner # NOTE here, must be an absolute path, since in my script uses it in multiple different directories

  # ref https://medium.com/flutter-community/run-flutter-driver-tests-on-github-actions-13c639c7e4ab
  flutter_ios_test:
    name: Flutter (iOS) integration test
    strategy:
      matrix:
        device:
          - "iPad (9th generation) Simulator (16.2)"
          - "iPhone 12 Pro Max Simulator (16.2)"
      fail-fast: false
    uses: ./.github/workflows/ci_flutter_ios_test.yml
    with:
      device: ${{ matrix.device }}

  # ref https://betterprogramming.pub/test-flutter-apps-on-android-with-github-actions-abdba2137b4
  flutter_android_test:
    name: Flutter (Android) integration test
    strategy:
      matrix:
        device:
          - "pixel"
          - "Nexus 6"
      fail-fast: false
    uses: ./.github/workflows/ci_flutter_android_test.yml
    with:
      device: ${{ matrix.device }}

  flutter_windows_test:
    name: Flutter (Windows) integration test
    uses: ./.github/workflows/ci_flutter_windows_test.yml

  flutter_macos_test:
    name: Flutter (macOS) integration test
    uses: ./.github/workflows/ci_flutter_macos_test.yml

  flutter_linux_test:
    name: Flutter (Linux) integration test
    uses: ./.github/workflows/ci_flutter_linux_test.yml

  dart_web_test:
    name: Dart (Web) unit tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - features: [ ]
          - features: [ wasm-start ]

    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: "2.19.2"
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          components: rust-src,rustfmt
      - uses: extractions/setup-just@v1

      - run: just install_ffigen

      - name: Cache dependencies
        id: test-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            frb_codegen/target
            frb_example/pure_dart/rust/target/
            frb_example/pure_dart/dart/.local-chromium
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install crates
        if: steps.test-cache.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf)" '' -f
      - name: Setup Dart dependencies
        run: dart pub get
        working-directory: frb_dart

      - name: Run unit tests
        run: just dart_test_web_unit

      - name: Run integration tests
        timeout-minutes: 20
        uses: Wandalen/wretry.action@v1.0.25
        with:
          command: just dart_test_web_integration ${{ join(matrix.features, ',') }}
          current_path: frb_example/pure_dart/dart

  dart_vm_service_test:
    name: Test with --enable-vm-service
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.64.0
          components: rustfmt

      - uses: dart-lang/setup-dart@v1
        with:
          sdk: "2.19.2"
      - name: Install llvm dependency (Linux)
        run: sudo apt update && sudo apt-get install -y libclang-dev

      - name: Build pure_dart example
        working-directory: ./frb_example/pure_dart/rust
        run: cargo build --verbose
      - name: Run tests for pure_dart with vm service
        run: |
          dart run --enable-vm-service --define=ENABLE_FRB_FFI_TEST_TOOL=true \
            ./frb_example/pure_dart/dart/lib/main_with_vm_service.dart \
            ./target/debug/libflutter_rust_bridge_example.so

  rust_build_and_test:
    name: Build and run Rust
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.64.0
          components: rustfmt
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: "2.19.2"

      - run: just install_llvm_linux
      - run: just rust_build_and_test

  rust_linter:
    name: Rust linter
    runs-on: ubuntu-latest

    strategy:
      matrix:
        cargo_toolchain_version:
          - 1.64.0

    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.cargo_toolchain_version }}
          components: rustfmt, clippy
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: "2.19.2"
      - uses: extractions/setup-just@v1

      - run: just install_llvm_linux
      - run: just rust_linter

  dart_linter:
    name: Dart linter
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: "2.19.2"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.7.2"
      - uses: extractions/setup-just@v1

      - run: just dart_linter

  # -------------------------- codegen --------------------------
  codegen:
    name: Run codegen
    strategy:
      fail-fast: false
      matrix:
        os:
          - image: macos-11
            family: osx
          - image: windows-2019
            family: windows
          - image: ubuntu-20.04
            family: linux

    uses: ./.github/workflows/ci_code_generator.yml
    with:
      image: ${{ matrix.os.image }}
      family: ${{ matrix.os.family }}
