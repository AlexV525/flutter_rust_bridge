// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.10.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<int> minimalAdder({required int a, required int b, dynamic hint}) =>
    RustLib.instance.api.minimalAdder(a: a, b: b, hint: hint);

Future<MyOpaqueTypeAnotherOpaqueType> foo({dynamic hint}) =>
    RustLib.instance.api.foo(hint: hint);

Future<AnotherOpaqueType> bar({dynamic hint}) =>
    RustLib.instance.api.bar(hint: hint);

// Rust type: flutter_rust_bridge::RustOpaque<std::sync::RwLock<crate::api::minimal::AnotherOpaqueType>>
@sealed
class AnotherOpaqueType extends RustOpaque {
  AnotherOpaqueType.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  AnotherOpaqueType.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_AnotherOpaqueType,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_AnotherOpaqueType,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_AnotherOpaqueTypePtr,
  );
}

// Rust type: flutter_rust_bridge::RustOpaque<std::sync::RwLock<(crate::api::minimal::MyOpaqueType,crate::api::minimal::AnotherOpaqueType,)>>
@sealed
class MyOpaqueTypeAnotherOpaqueType extends RustOpaque {
  MyOpaqueTypeAnotherOpaqueType.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  MyOpaqueTypeAnotherOpaqueType.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_MyOpaqueTypeAnotherOpaqueType,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_MyOpaqueTypeAnotherOpaqueType,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_MyOpaqueTypeAnotherOpaqueTypePtr,
  );
}
