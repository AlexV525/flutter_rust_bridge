// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.19.

// Section: imports

use super::*;
use flutter_rust_bridge::for_generated::byteorder::{NativeEndian, ReadBytesExt, WriteBytesExt};
use flutter_rust_bridge::for_generated::transform_result_dco;
use flutter_rust_bridge::{Handler, IntoIntoDart};

// Section: boilerplate

flutter_rust_bridge::frb_generated_boilerplate_io!();

// Section: dart2rust

impl CstDecode<String> for *mut wire_cst_list_prim_u_8_strict {
    fn cst_decode(self) -> String {
        let vec: Vec<u8> = self.cst_decode();
        String::from_utf8(vec).unwrap()
    }
}
impl CstDecode<crate::api::minimal::MyEnum> for *mut wire_cst_my_enum {
    fn cst_decode(self) -> crate::api::minimal::MyEnum {
        let wrap = unsafe { flutter_rust_bridge::for_generated::box_from_leak_ptr(self) };
        CstDecode::<crate::api::minimal::MyEnum>::cst_decode(*wrap).into()
    }
}
impl CstDecode<crate::api::minimal::MyStruct> for *mut wire_cst_my_struct {
    fn cst_decode(self) -> crate::api::minimal::MyStruct {
        let wrap = unsafe { flutter_rust_bridge::for_generated::box_from_leak_ptr(self) };
        CstDecode::<crate::api::minimal::MyStruct>::cst_decode(*wrap).into()
    }
}
impl CstDecode<Vec<u8>> for *mut wire_cst_list_prim_u_8_strict {
    fn cst_decode(self) -> Vec<u8> {
        unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        }
    }
}
impl CstDecode<crate::api::minimal::MyEnum> for wire_cst_my_enum {
    fn cst_decode(self) -> crate::api::minimal::MyEnum {
        match self.tag {
            0 => crate::api::minimal::MyEnum::Apple,
            1 => {
                let ans = unsafe { self.kind.Orange };
                crate::api::minimal::MyEnum::Orange(ans.field0.cst_decode())
            }
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::minimal::MyStruct> for wire_cst_my_struct {
    fn cst_decode(self) -> crate::api::minimal::MyStruct {
        crate::api::minimal::MyStruct {
            field: self.field.cst_decode(),
        }
    }
}
impl NewWithNullPtr for wire_cst_my_enum {
    fn new_with_null_ptr() -> Self {
        Self {
            tag: -1,
            kind: MyEnumKind { nil__: () },
        }
    }
}
impl Default for wire_cst_my_enum {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_my_struct {
    fn new_with_null_ptr() -> Self {
        Self {
            field: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_my_struct {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
