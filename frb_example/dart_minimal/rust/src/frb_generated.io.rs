// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 1.82.4.

// Section: imports

use super::*;
use flutter_rust_bridge::for_generated::byteorder::{NativeEndian, ReadBytesExt, WriteBytesExt};
use flutter_rust_bridge::for_generated::transform_result_dco;
use flutter_rust_bridge::{Handler, IntoIntoDart};

// Section: dart2rust

impl CstDecode<flutter_rust_bridge::DartOpaque> for *const std::ffi::c_void {
    fn cst_decode(self) -> flutter_rust_bridge::DartOpaque {
        unsafe { flutter_rust_bridge::for_generated::cst_decode_dart_opaque(self) }
    }
}
pub trait NewWithNullPtr {
    fn new_with_null_ptr() -> Self;
}

impl<T> NewWithNullPtr for *mut T {
    fn new_with_null_ptr() -> Self {
        std::ptr::null_mut()
    }
}

#[no_mangle]
pub extern "C" fn dart_fn_deliver_output(
    call_id: i32,
    ptr_: *mut u8,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    let message = unsafe {
        flutter_rust_bridge::for_generated::Dart2RustMessageSse::from_wire(
            ptr_,
            rust_vec_len_,
            data_len_,
        )
    };
    FLUTTER_RUST_BRIDGE_HANDLER.dart_fn_handle_output(call_id, message)
}

#[no_mangle]
pub extern "C" fn wire_hi_1(port_: i64, callback: *const std::ffi::c_void) {
    wire_hi_1_impl(port_, callback)
}

#[no_mangle]
pub extern "C" fn wire_hi_2(port_: i64, opaque: *const std::ffi::c_void) {
    wire_hi_2_impl(port_, opaque)
}

#[no_mangle]
pub extern "C" fn wire_minimal_adder(port_: i64, a: i32, b: i32) {
    wire_minimal_adder_impl(port_, a, b)
}

#[no_mangle]
pub extern "C" fn dart_opaque_dart2rust_encode(
    handle: flutter_rust_bridge::for_generated::dart_sys::Dart_Handle,
    drop_port: i64,
) -> *const std::ffi::c_void {
    unsafe {
        flutter_rust_bridge::for_generated::dart_opaque_dart2rust_encode(
            &*FLUTTER_RUST_BRIDGE_HANDLER,
            handle,
            drop_port,
        ) as _
    }
}
