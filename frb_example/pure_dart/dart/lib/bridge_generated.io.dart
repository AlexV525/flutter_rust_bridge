// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.48.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';
import 'package:meta/meta.dart';
import 'dart:ffi' as ffi;

class FlutterRustBridgeExampleSingleBlockTestPlatform
    extends FlutterRustBridgeBase<FlutterRustBridgeExampleSingleBlockTestWire> {
  FlutterRustBridgeExampleSingleBlockTestPlatform(ffi.DynamicLibrary dylib)
      : super(FlutterRustBridgeExampleSingleBlockTestWire(dylib));
// Section: api2wire

  @protected
  ffi.Pointer<wire_BoxDartDebug> api2wire_BoxDartDebug(BoxDartDebug raw) {
    final ptr = inner.new_BoxDartDebug();
    _api_fill_to_wire_BoxDartDebug(raw, ptr);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_RwLockI32> api2wire_RwLockI32(RwLockI32 raw) {
    final ptr = inner.new_RwLockI32();
    _api_fill_to_wire_RwLockI32(raw, ptr);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_RwLockIsize10> api2wire_RwLockIsize10(RwLockIsize10 raw) {
    final ptr = inner.new_RwLockIsize10();
    _api_fill_to_wire_RwLockIsize10(raw, ptr);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_Str> api2wire_Str(Str raw) {
    final ptr = inner.new_Str();
    _api_fill_to_wire_Str(raw, ptr);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_OpaqueBag> api2wire_box_autoadd_opaque_bag(OpaqueBag raw) {
    final ptr = inner.new_box_autoadd_opaque_bag_0();
    _api_fill_to_wire_opaque_bag(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_OpaqueBag> api2wire_opt_box_autoadd_opaque_bag(OpaqueBag? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_opaque_bag(raw);
  }
// Section: api_fill_to_wire

  void _api_fill_to_wire_BoxDartDebug(BoxDartDebug apiObj, ffi.Pointer<wire_BoxDartDebug> wireObj) {
    wireObj.ref.ptr = FrbOpaque.lend(apiObj).cast();
  }

  void _api_fill_to_wire_RwLockI32(RwLockI32 apiObj, ffi.Pointer<wire_RwLockI32> wireObj) {
    wireObj.ref.ptr = FrbOpaque.lend(apiObj).cast();
  }

  void _api_fill_to_wire_RwLockIsize10(RwLockIsize10 apiObj, ffi.Pointer<wire_RwLockIsize10> wireObj) {
    wireObj.ref.ptr = FrbOpaque.lend(apiObj).cast();
  }

  void _api_fill_to_wire_Str(Str apiObj, ffi.Pointer<wire_Str> wireObj) {
    wireObj.ref.ptr = FrbOpaque.lend(apiObj).cast();
  }

  void _api_fill_to_wire_box_autoadd_opaque_bag(OpaqueBag apiObj, ffi.Pointer<wire_OpaqueBag> wireObj) {
    _api_fill_to_wire_opaque_bag(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_opaque_bag(OpaqueBag apiObj, wire_OpaqueBag wireObj) {
    wireObj.primitive = api2wire_RwLockI32(apiObj.primitive);
    wireObj.array = api2wire_RwLockIsize10(apiObj.array);
    wireObj.lifetime = api2wire_Str(apiObj.lifetime);
    wireObj.trait_obj = api2wire_BoxDartDebug(apiObj.traitObj);
  }

  void _api_fill_to_wire_opt_box_autoadd_opaque_bag(OpaqueBag? apiObj, ffi.Pointer<wire_OpaqueBag> wireObj) {
    if (apiObj != null) _api_fill_to_wire_box_autoadd_opaque_bag(apiObj, wireObj);
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.

/// generated by flutter_rust_bridge
class FlutterRustBridgeExampleSingleBlockTestWire implements FlutterRustBridgeWireBase {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  FlutterRustBridgeExampleSingleBlockTestWire(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  FlutterRustBridgeExampleSingleBlockTestWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup)
      : _lookup = lookup;

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>('store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr.asFunction<void Function(DartPostCObjectFnType)>();

  void wire_test42(
    int port_,
  ) {
    return _wire_test42(
      port_,
    );
  }

  late final _wire_test42Ptr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>('wire_test42');
  late final _wire_test42 = _wire_test42Ptr.asFunction<void Function(int)>();

  void wire_handle_opaque(
    int port_,
    ffi.Pointer<wire_OpaqueBag> value,
  ) {
    return _wire_handle_opaque(
      port_,
      value,
    );
  }

  late final _wire_handle_opaquePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<wire_OpaqueBag>)>>('wire_handle_opaque');
  late final _wire_handle_opaque = _wire_handle_opaquePtr.asFunction<void Function(int, ffi.Pointer<wire_OpaqueBag>)>();

  void wire_handle_opaque_repr(
    int port_,
    ffi.Pointer<wire_RwLockI32> value,
  ) {
    return _wire_handle_opaque_repr(
      port_,
      value,
    );
  }

  late final _wire_handle_opaque_reprPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<wire_RwLockI32>)>>('wire_handle_opaque_repr');
  late final _wire_handle_opaque_repr =
      _wire_handle_opaque_reprPtr.asFunction<void Function(int, ffi.Pointer<wire_RwLockI32>)>();

  ffi.Pointer<wire_BoxDartDebug> new_BoxDartDebug() {
    return _new_BoxDartDebug();
  }

  late final _new_BoxDartDebugPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_BoxDartDebug> Function()>>('new_BoxDartDebug');
  late final _new_BoxDartDebug = _new_BoxDartDebugPtr.asFunction<ffi.Pointer<wire_BoxDartDebug> Function()>();

  ffi.Pointer<wire_RwLockI32> new_RwLockI32() {
    return _new_RwLockI32();
  }

  late final _new_RwLockI32Ptr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_RwLockI32> Function()>>('new_RwLockI32');
  late final _new_RwLockI32 = _new_RwLockI32Ptr.asFunction<ffi.Pointer<wire_RwLockI32> Function()>();

  ffi.Pointer<wire_RwLockIsize10> new_RwLockIsize10() {
    return _new_RwLockIsize10();
  }

  late final _new_RwLockIsize10Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_RwLockIsize10> Function()>>('new_RwLockIsize10');
  late final _new_RwLockIsize10 = _new_RwLockIsize10Ptr.asFunction<ffi.Pointer<wire_RwLockIsize10> Function()>();

  ffi.Pointer<wire_Str> new_Str() {
    return _new_Str();
  }

  late final _new_StrPtr = _lookup<ffi.NativeFunction<ffi.Pointer<wire_Str> Function()>>('new_Str');
  late final _new_Str = _new_StrPtr.asFunction<ffi.Pointer<wire_Str> Function()>();

  ffi.Pointer<wire_OpaqueBag> new_box_autoadd_opaque_bag_0() {
    return _new_box_autoadd_opaque_bag_0();
  }

  late final _new_box_autoadd_opaque_bag_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_OpaqueBag> Function()>>('new_box_autoadd_opaque_bag_0');
  late final _new_box_autoadd_opaque_bag_0 =
      _new_box_autoadd_opaque_bag_0Ptr.asFunction<ffi.Pointer<wire_OpaqueBag> Function()>();

  void free_WireSyncReturnStruct(
    WireSyncReturnStruct val,
  ) {
    return _free_WireSyncReturnStruct(
      val,
    );
  }

  late final _free_WireSyncReturnStructPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturnStruct)>>('free_WireSyncReturnStruct');
  late final _free_WireSyncReturnStruct =
      _free_WireSyncReturnStructPtr.asFunction<void Function(WireSyncReturnStruct)>();
}

class wire_RwLockI32 extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

class wire_RwLockIsize10 extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

class wire_Str extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

class wire_BoxDartDebug extends ffi.Struct {
  external ffi.Pointer<ffi.Void> ptr;
}

class wire_OpaqueBag extends ffi.Struct {
  external ffi.Pointer<wire_RwLockI32> primitive;

  external ffi.Pointer<wire_RwLockIsize10> array;

  external ffi.Pointer<wire_Str> lifetime;

  external ffi.Pointer<wire_BoxDartDebug> trait_obj;
}

typedef DartPostCObjectFnType = ffi.Pointer<ffi.NativeFunction<ffi.Bool Function(DartPort, ffi.Pointer<ffi.Void>)>>;
typedef DartPort = ffi.Int64;
