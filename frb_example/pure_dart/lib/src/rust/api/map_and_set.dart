// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.9.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../auxiliary/sample_types.dart';
import '../frb_generated.dart';
import 'enumeration.dart';
import 'misc_example.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<Map<int, int>> funcHashMapI32I32TwinNormal(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api.funcHashMapI32I32TwinNormal(arg: arg, hint: hint);

Future<Set<int>> funcHashSetI32TwinNormal(
        {required Set<int> arg, dynamic hint}) =>
    RustLib.instance.api.funcHashSetI32TwinNormal(arg: arg, hint: hint);

Future<Map<String, String>> funcHashMapStringStringTwinNormal(
        {required Map<String, String> arg, dynamic hint}) =>
    RustLib.instance.api
        .funcHashMapStringStringTwinNormal(arg: arg, hint: hint);

Future<Set<String>> funcHashSetStringTwinNormal(
        {required Set<String> arg, dynamic hint}) =>
    RustLib.instance.api.funcHashSetStringTwinNormal(arg: arg, hint: hint);

Future<Map<Uint8List, Uint8List>> funcHashMapBytesBytesTwinNormal(
        {required Map<Uint8List, Uint8List> arg, dynamic hint}) =>
    RustLib.instance.api.funcHashMapBytesBytesTwinNormal(arg: arg, hint: hint);

Future<Set<Uint8List>> funcHashSetBytesTwinNormal(
        {required Set<Uint8List> arg, dynamic hint}) =>
    RustLib.instance.api.funcHashSetBytesTwinNormal(arg: arg, hint: hint);

Future<Map<String, MySize>> funcHashMapStringStructTwinNormal(
        {required Map<String, MySize> arg, dynamic hint}) =>
    RustLib.instance.api
        .funcHashMapStringStructTwinNormal(arg: arg, hint: hint);

Future<Map<String, EnumSimpleTwinNormal>> funcHashMapStringSimpleEnumTwinNormal(
        {required Map<String, EnumSimpleTwinNormal> arg, dynamic hint}) =>
    RustLib.instance.api
        .funcHashMapStringSimpleEnumTwinNormal(arg: arg, hint: hint);

Future<Map<String, KitchenSinkTwinNormal>>
    funcHashMapStringComplexEnumTwinNormal(
            {required Map<String, KitchenSinkTwinNormal> arg, dynamic hint}) =>
        RustLib.instance.api
            .funcHashMapStringComplexEnumTwinNormal(arg: arg, hint: hint);
