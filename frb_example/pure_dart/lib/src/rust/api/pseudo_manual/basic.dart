// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.18.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<int> exampleBasicTypeI8TwinNormal({required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeI8TwinNormal(arg: arg, hint: hint);

Future<int> exampleBasicTypeI16TwinNormal({required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeI16TwinNormal(arg: arg, hint: hint);

Future<int> exampleBasicTypeI32TwinNormal({required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeI32TwinNormal(arg: arg, hint: hint);

Future<int> exampleBasicTypeI64TwinNormal({required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeI64TwinNormal(arg: arg, hint: hint);

Future<int> exampleBasicTypeU8TwinNormal({required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeU8TwinNormal(arg: arg, hint: hint);

Future<int> exampleBasicTypeU16TwinNormal({required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeU16TwinNormal(arg: arg, hint: hint);

Future<int> exampleBasicTypeU32TwinNormal({required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeU32TwinNormal(arg: arg, hint: hint);

Future<int> exampleBasicTypeU64TwinNormal({required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeU64TwinNormal(arg: arg, hint: hint);

Future<double> exampleBasicTypeF32TwinNormal(
        {required double arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeF32TwinNormal(arg: arg, hint: hint);

Future<double> exampleBasicTypeF64TwinNormal(
        {required double arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeF64TwinNormal(arg: arg, hint: hint);

Future<bool> exampleBasicTypeBoolTwinNormal(
        {required bool arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeBoolTwinNormal(arg: arg, hint: hint);
