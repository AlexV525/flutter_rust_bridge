// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.18.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<Int8List> exampleBasicListTypeI8TwinSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeI8TwinSse(arg: arg, hint: hint);

Future<Int16List> exampleBasicListTypeI16TwinSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeI16TwinSse(arg: arg, hint: hint);

Future<Int32List> exampleBasicListTypeI32TwinSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeI32TwinSse(arg: arg, hint: hint);

Future<Int64List> exampleBasicListTypeI64TwinSse(
        {required Int64List arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeI64TwinSse(arg: arg, hint: hint);

Future<Uint8List> exampleBasicListTypeU8TwinSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeU8TwinSse(arg: arg, hint: hint);

Future<Uint16List> exampleBasicListTypeU16TwinSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeU16TwinSse(arg: arg, hint: hint);

Future<Uint32List> exampleBasicListTypeU32TwinSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeU32TwinSse(arg: arg, hint: hint);

Future<Uint64List> exampleBasicListTypeU64TwinSse(
        {required Uint64List arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeU64TwinSse(arg: arg, hint: hint);

Future<Float32List> exampleBasicListTypeF32TwinSse(
        {required List<double> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeF32TwinSse(arg: arg, hint: hint);

Future<Float64List> exampleBasicListTypeF64TwinSse(
        {required List<double> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeF64TwinSse(arg: arg, hint: hint);

Future<List<bool>> exampleBasicListTypeBoolTwinSse(
        {required List<bool> arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicListTypeBoolTwinSse(arg: arg, hint: hint);
