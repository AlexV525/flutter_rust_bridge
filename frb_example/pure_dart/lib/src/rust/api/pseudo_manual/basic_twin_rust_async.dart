// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.18.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<int> exampleBasicTypeI8TwinRustAsync({required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeI8TwinRustAsync(arg: arg, hint: hint);

Future<int> exampleBasicTypeI16TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeI16TwinRustAsync(arg: arg, hint: hint);

Future<int> exampleBasicTypeI32TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeI32TwinRustAsync(arg: arg, hint: hint);

Future<int> exampleBasicTypeI64TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeI64TwinRustAsync(arg: arg, hint: hint);

Future<int> exampleBasicTypeU8TwinRustAsync({required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeU8TwinRustAsync(arg: arg, hint: hint);

Future<int> exampleBasicTypeU16TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeU16TwinRustAsync(arg: arg, hint: hint);

Future<int> exampleBasicTypeU32TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeU32TwinRustAsync(arg: arg, hint: hint);

Future<int> exampleBasicTypeU64TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeU64TwinRustAsync(arg: arg, hint: hint);

Future<double> exampleBasicTypeF32TwinRustAsync(
        {required double arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeF32TwinRustAsync(arg: arg, hint: hint);

Future<double> exampleBasicTypeF64TwinRustAsync(
        {required double arg, dynamic hint}) =>
    RustLib.instance.api.exampleBasicTypeF64TwinRustAsync(arg: arg, hint: hint);

Future<bool> exampleBasicTypeBoolTwinRustAsync(
        {required bool arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeBoolTwinRustAsync(arg: arg, hint: hint);
