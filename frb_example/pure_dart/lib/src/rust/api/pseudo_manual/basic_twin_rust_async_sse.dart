// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.18.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<int> exampleBasicTypeI8TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeI8TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> exampleBasicTypeI16TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeI16TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> exampleBasicTypeI32TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeI32TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> exampleBasicTypeI64TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeI64TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> exampleBasicTypeU8TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeU8TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> exampleBasicTypeU16TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeU16TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> exampleBasicTypeU32TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeU32TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> exampleBasicTypeU64TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeU64TwinRustAsyncSse(arg: arg, hint: hint);

Future<double> exampleBasicTypeF32TwinRustAsyncSse(
        {required double arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeF32TwinRustAsyncSse(arg: arg, hint: hint);

Future<double> exampleBasicTypeF64TwinRustAsyncSse(
        {required double arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeF64TwinRustAsyncSse(arg: arg, hint: hint);

Future<bool> exampleBasicTypeBoolTwinRustAsyncSse(
        {required bool arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleBasicTypeBoolTwinRustAsyncSse(arg: arg, hint: hint);
