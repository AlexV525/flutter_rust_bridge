// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.26.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<ConstructorOpaqueStructTwinSse>>
@sealed
class ConstructorOpaqueStructTwinSse extends RustOpaque {
  ConstructorOpaqueStructTwinSse.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  ConstructorOpaqueStructTwinSse.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_ConstructorOpaqueStructTwinSse,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_ConstructorOpaqueStructTwinSse,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_ConstructorOpaqueStructTwinSsePtr,
  );

  void checkTwinSse({dynamic hint}) =>
      RustLib.instance.api.constructorOpaqueStructTwinSseCheckTwinSse(
        that: this,
      );

  static Future<ConstructorOpaqueStructTwinSse> newTwinSse({dynamic hint}) =>
      RustLib.instance.api.constructorOpaqueStructTwinSseNewTwinSse(hint: hint);
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::rust_async::RwLock<ConstructorOpaqueSyncStructTwinSse>>
@sealed
class ConstructorOpaqueSyncStructTwinSse extends RustOpaque {
  ConstructorOpaqueSyncStructTwinSse.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  ConstructorOpaqueSyncStructTwinSse.sseDecode(
      int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_ConstructorOpaqueSyncStructTwinSse,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_ConstructorOpaqueSyncStructTwinSse,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_ConstructorOpaqueSyncStructTwinSsePtr,
  );

  void checkTwinSse({dynamic hint}) =>
      RustLib.instance.api.constructorOpaqueSyncStructTwinSseCheckTwinSse(
        that: this,
      );

  static ConstructorOpaqueSyncStructTwinSse newTwinSse({dynamic hint}) =>
      RustLib.instance.api
          .constructorOpaqueSyncStructTwinSseNewTwinSse(hint: hint);
}

class ConstructorTranslatableStructTwinSse {
  final String one;

  const ConstructorTranslatableStructTwinSse({
    required this.one,
  });

  static Future<ConstructorTranslatableStructTwinSse> newTwinSse(
          {dynamic hint}) =>
      RustLib.instance.api
          .constructorTranslatableStructTwinSseNewTwinSse(hint: hint);

  @override
  int get hashCode => one.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ConstructorTranslatableStructTwinSse &&
          runtimeType == other.runtimeType &&
          one == other.one;
}

class ConstructorTranslatableSyncStructTwinSse {
  final String one;

  const ConstructorTranslatableSyncStructTwinSse({
    required this.one,
  });

  static ConstructorTranslatableSyncStructTwinSse newTwinSse({dynamic hint}) =>
      RustLib.instance.api
          .constructorTranslatableSyncStructTwinSseNewTwinSse(hint: hint);

  @override
  int get hashCode => one.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ConstructorTranslatableSyncStructTwinSse &&
          runtimeType == other.runtimeType &&
          one == other.one;
}
