// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.18.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

int? exampleOptionalBasicTypeI8TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeI8TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalBasicTypeI16TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeI16TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalBasicTypeI32TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeI32TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalBasicTypeI64TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeI64TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalBasicTypeU8TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeU8TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalBasicTypeU16TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeU16TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalBasicTypeU32TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeU32TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalBasicTypeU64TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeU64TwinSyncSse(arg: arg, hint: hint);

double? exampleOptionalBasicTypeF32TwinSyncSse({double? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeF32TwinSyncSse(arg: arg, hint: hint);

double? exampleOptionalBasicTypeF64TwinSyncSse({double? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeF64TwinSyncSse(arg: arg, hint: hint);

bool? exampleOptionalBasicTypeBoolTwinSyncSse({bool? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalBasicTypeBoolTwinSyncSse(arg: arg, hint: hint);
