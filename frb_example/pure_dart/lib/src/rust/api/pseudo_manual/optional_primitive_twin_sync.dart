// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 1.82.4.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

int? exampleOptionalPrimitiveTypeI8TwinSync({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeI8TwinSync(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeI16TwinSync({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeI16TwinSync(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeI32TwinSync({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeI32TwinSync(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeI64TwinSync({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeI64TwinSync(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeU8TwinSync({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeU8TwinSync(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeU16TwinSync({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeU16TwinSync(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeU32TwinSync({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeU32TwinSync(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeU64TwinSync({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeU64TwinSync(arg: arg, hint: hint);

double? exampleOptionalPrimitiveTypeF32TwinSync({double? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeF32TwinSync(arg: arg, hint: hint);

double? exampleOptionalPrimitiveTypeF64TwinSync({double? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeF64TwinSync(arg: arg, hint: hint);

bool? exampleOptionalPrimitiveTypeBoolTwinSync({bool? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeBoolTwinSync(arg: arg, hint: hint);
