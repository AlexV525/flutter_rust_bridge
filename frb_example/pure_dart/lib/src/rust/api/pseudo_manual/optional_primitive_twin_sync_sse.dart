// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.6.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

int? exampleOptionalPrimitiveTypeI8TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeI8TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeI16TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeI16TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeI32TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeI32TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeI64TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeI64TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeU8TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeU8TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeU16TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeU16TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeU32TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeU32TwinSyncSse(arg: arg, hint: hint);

int? exampleOptionalPrimitiveTypeU64TwinSyncSse({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeU64TwinSyncSse(arg: arg, hint: hint);

double? exampleOptionalPrimitiveTypeF32TwinSyncSse(
        {double? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeF32TwinSyncSse(arg: arg, hint: hint);

double? exampleOptionalPrimitiveTypeF64TwinSyncSse(
        {double? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeF64TwinSyncSse(arg: arg, hint: hint);

bool? exampleOptionalPrimitiveTypeBoolTwinSyncSse({bool? arg, dynamic hint}) =>
    RustLib.instance.api
        .exampleOptionalPrimitiveTypeBoolTwinSyncSse(arg: arg, hint: hint);
