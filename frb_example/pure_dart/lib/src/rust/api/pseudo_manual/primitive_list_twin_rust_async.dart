
        // This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.8.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';


        Future<Int8List> examplePrimitiveListTypeI8TwinRustAsync({required Int8List arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeI8TwinRustAsync(arg: arg, hint: hint);

Future<Int16List> examplePrimitiveListTypeI16TwinRustAsync({required Int16List arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeI16TwinRustAsync(arg: arg, hint: hint);

Future<Int32List> examplePrimitiveListTypeI32TwinRustAsync({required Int32List arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeI32TwinRustAsync(arg: arg, hint: hint);

Future<Int64List> examplePrimitiveListTypeI64TwinRustAsync({required Int64List arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeI64TwinRustAsync(arg: arg, hint: hint);

Future<Uint8List> examplePrimitiveListTypeU8TwinRustAsync({required Uint8List arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeU8TwinRustAsync(arg: arg, hint: hint);

Future<Uint16List> examplePrimitiveListTypeU16TwinRustAsync({required Uint16List arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeU16TwinRustAsync(arg: arg, hint: hint);

Future<Uint32List> examplePrimitiveListTypeU32TwinRustAsync({required Uint32List arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeU32TwinRustAsync(arg: arg, hint: hint);

Future<Uint64List> examplePrimitiveListTypeU64TwinRustAsync({required Uint64List arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeU64TwinRustAsync(arg: arg, hint: hint);

Future<Float32List> examplePrimitiveListTypeF32TwinRustAsync({required Float32List arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeF32TwinRustAsync(arg: arg, hint: hint);

Future<Float64List> examplePrimitiveListTypeF64TwinRustAsync({required Float64List arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeF64TwinRustAsync(arg: arg, hint: hint);

Future<List<bool>> examplePrimitiveListTypeBoolTwinRustAsync({required List<bool> arg , dynamic hint}) => RustLib.instance.api.examplePrimitiveListTypeBoolTwinRustAsync(arg: arg, hint: hint);

        
        