// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.13.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<Int8List> examplePrimitiveListTypeI8TwinRustAsyncSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeI8TwinRustAsyncSse(arg: arg, hint: hint);

Future<Int16List> examplePrimitiveListTypeI16TwinRustAsyncSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeI16TwinRustAsyncSse(arg: arg, hint: hint);

Future<Int32List> examplePrimitiveListTypeI32TwinRustAsyncSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeI32TwinRustAsyncSse(arg: arg, hint: hint);

Future<Int64List> examplePrimitiveListTypeI64TwinRustAsyncSse(
        {required Int64List arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeI64TwinRustAsyncSse(arg: arg, hint: hint);

Future<Uint8List> examplePrimitiveListTypeU8TwinRustAsyncSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeU8TwinRustAsyncSse(arg: arg, hint: hint);

Future<Uint16List> examplePrimitiveListTypeU16TwinRustAsyncSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeU16TwinRustAsyncSse(arg: arg, hint: hint);

Future<Uint32List> examplePrimitiveListTypeU32TwinRustAsyncSse(
        {required List<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeU32TwinRustAsyncSse(arg: arg, hint: hint);

Future<Uint64List> examplePrimitiveListTypeU64TwinRustAsyncSse(
        {required Uint64List arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeU64TwinRustAsyncSse(arg: arg, hint: hint);

Future<Float32List> examplePrimitiveListTypeF32TwinRustAsyncSse(
        {required List<double> arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeF32TwinRustAsyncSse(arg: arg, hint: hint);

Future<Float64List> examplePrimitiveListTypeF64TwinRustAsyncSse(
        {required List<double> arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeF64TwinRustAsyncSse(arg: arg, hint: hint);

Future<List<bool>> examplePrimitiveListTypeBoolTwinRustAsyncSse(
        {required List<bool> arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveListTypeBoolTwinRustAsyncSse(arg: arg, hint: hint);
