// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.11.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<int> examplePrimitiveTypeI8TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeI8TwinRustAsync(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeI16TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeI16TwinRustAsync(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeI32TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeI32TwinRustAsync(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeI64TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeI64TwinRustAsync(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeU8TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeU8TwinRustAsync(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeU16TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeU16TwinRustAsync(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeU32TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeU32TwinRustAsync(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeU64TwinRustAsync(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeU64TwinRustAsync(arg: arg, hint: hint);

Future<double> examplePrimitiveTypeF32TwinRustAsync(
        {required double arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeF32TwinRustAsync(arg: arg, hint: hint);

Future<double> examplePrimitiveTypeF64TwinRustAsync(
        {required double arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeF64TwinRustAsync(arg: arg, hint: hint);

Future<bool> examplePrimitiveTypeBoolTwinRustAsync(
        {required bool arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeBoolTwinRustAsync(arg: arg, hint: hint);
