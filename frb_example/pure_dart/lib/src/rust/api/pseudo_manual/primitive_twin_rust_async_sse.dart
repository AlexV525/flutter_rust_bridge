// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.11.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<int> examplePrimitiveTypeI8TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeI8TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeI16TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeI16TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeI32TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeI32TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeI64TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeI64TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeU8TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeU8TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeU16TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeU16TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeU32TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeU32TwinRustAsyncSse(arg: arg, hint: hint);

Future<int> examplePrimitiveTypeU64TwinRustAsyncSse(
        {required int arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeU64TwinRustAsyncSse(arg: arg, hint: hint);

Future<double> examplePrimitiveTypeF32TwinRustAsyncSse(
        {required double arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeF32TwinRustAsyncSse(arg: arg, hint: hint);

Future<double> examplePrimitiveTypeF64TwinRustAsyncSse(
        {required double arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeF64TwinRustAsyncSse(arg: arg, hint: hint);

Future<bool> examplePrimitiveTypeBoolTwinRustAsyncSse(
        {required bool arg, dynamic hint}) =>
    RustLib.instance.api
        .examplePrimitiveTypeBoolTwinRustAsyncSse(arg: arg, hint: hint);
