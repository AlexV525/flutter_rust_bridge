// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.17.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'rust_auto_opaque_twin_rust_async.dart';

void rustAutoOpaqueArgOwnTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi arg,
        required int expect,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueArgOwnTwinSyncMoi(arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueArgBorrowTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi arg,
        required int expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgBorrowTwinSyncMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueArgMutBorrowTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi arg,
        required int expect,
        required int adder,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgMutBorrowTwinSyncMoi(
        arg: arg, expect: expect, adder: adder, hint: hint);

NonCloneSimpleTwinSyncMoi rustAutoOpaqueReturnOwnTwinSyncMoi(
        {required int initial, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueReturnOwnTwinSyncMoi(initial: initial, hint: hint);

NonCloneSimpleTwinSyncMoi rustAutoOpaqueArgOwnAndReturnOwnTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueArgOwnAndReturnOwnTwinSyncMoi(arg: arg, hint: hint);

void rustAutoOpaqueTwoArgsTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi a,
        required NonCloneSimpleTwinSyncMoi b,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueTwoArgsTwinSyncMoi(a: a, b: b, hint: hint);

void rustAutoOpaqueNormalAndOpaqueArgTwinSyncMoi(
        {required NonCloneSimpleTwinSyncMoi a,
        required String b,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueNormalAndOpaqueArgTwinSyncMoi(a: a, b: b, hint: hint);

/// "+" inside the type signature
void rustAutoOpaquePlusSignArgTwinSyncMoi(
        {required BoxMyTraitTwinSyncMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaquePlusSignArgTwinSyncMoi(arg: arg, hint: hint);

BoxMyTraitTwinSyncMoi rustAutoOpaquePlusSignReturnTwinSyncMoi({dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaquePlusSignReturnTwinSyncMoi(hint: hint);

void rustAutoOpaqueCallableArgTwinSyncMoi(
        {required BoxFnStringString arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueCallableArgTwinSyncMoi(arg: arg, hint: hint);

BoxFnStringString rustAutoOpaqueCallableReturnTwinSyncMoi({dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueCallableReturnTwinSyncMoi(hint: hint);

void rustAutoOpaqueTraitObjectArgOwnTwinSyncMoi(
        {required BoxHelloTraitTwinSyncMoi arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueTraitObjectArgOwnTwinSyncMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueTraitObjectArgBorrowTwinSyncMoi(
        {required BoxHelloTraitTwinSyncMoi arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueTraitObjectArgBorrowTwinSyncMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueTraitObjectArgMutBorrowTwinSyncMoi(
        {required BoxHelloTraitTwinSyncMoi arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueTraitObjectArgMutBorrowTwinSyncMoi(
        arg: arg, expect: expect, hint: hint);

BoxHelloTraitTwinSyncMoi rustAutoOpaqueTraitObjectReturnOwnOneTwinSyncMoi(
        {dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueTraitObjectReturnOwnOneTwinSyncMoi(hint: hint);

BoxHelloTraitTwinSyncMoi rustAutoOpaqueTraitObjectReturnOwnTwoTwinSyncMoi(
        {dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueTraitObjectReturnOwnTwoTwinSyncMoi(hint: hint);

void rustAutoOpaqueStructWithGoodAndOpaqueFieldArgOwnTwinSyncMoi(
        {required StructWithGoodAndOpaqueFieldTwinSyncMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueStructWithGoodAndOpaqueFieldArgOwnTwinSyncMoi(
            arg: arg, hint: hint);

void rustAutoOpaqueStructWithGoodAndOpaqueFieldArgBorrowTwinSyncMoi(
        {required StructWithGoodAndOpaqueFieldTwinSyncMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueStructWithGoodAndOpaqueFieldArgBorrowTwinSyncMoi(
            arg: arg, hint: hint);

void rustAutoOpaqueStructWithGoodAndOpaqueFieldArgMutBorrowTwinSyncMoi(
        {required StructWithGoodAndOpaqueFieldTwinSyncMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueStructWithGoodAndOpaqueFieldArgMutBorrowTwinSyncMoi(
            arg: arg, hint: hint);

StructWithGoodAndOpaqueFieldTwinSyncMoi
    rustAutoOpaqueStructWithGoodAndOpaqueFieldReturnOwnTwinSyncMoi(
            {dynamic hint}) =>
        RustLib.instance.api
            .rustAutoOpaqueStructWithGoodAndOpaqueFieldReturnOwnTwinSyncMoi(
                hint: hint);

OpaqueOneTwinSyncMoiOpaqueTwoTwinSyncMoi
    rustAutoOpaqueReturnOpaqueOneAndTwoTwinSyncMoi({dynamic hint}) =>
        RustLib.instance.api
            .rustAutoOpaqueReturnOpaqueOneAndTwoTwinSyncMoi(hint: hint);

OpaqueTwoTwinSyncMoi rustAutoOpaqueReturnOpaqueTwoTwinSyncMoi({dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueReturnOpaqueTwoTwinSyncMoi(hint: hint);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSyncMoi>>>
@sealed
class BoxHelloTraitTwinSyncMoi extends RustOpaque {
  BoxHelloTraitTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  BoxHelloTraitTwinSyncMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_BoxHelloTraitTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn MyTraitTwinSyncMoi + Send + Sync>>>
@sealed
class BoxMyTraitTwinSyncMoi extends RustOpaque {
  BoxMyTraitTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  BoxMyTraitTwinSyncMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_BoxMyTraitTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_BoxMyTraitTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_BoxMyTraitTwinSyncMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncMoi>>
@sealed
class NonCloneSimpleTwinSyncMoi extends RustOpaque {
  NonCloneSimpleTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  NonCloneSimpleTwinSyncMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_NonCloneSimpleTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncMoiPtr,
  );

  void instanceMethodArgBorrowTwinSyncMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiInstanceMethodArgBorrowTwinSyncMoi(
        that: this,
      );

  void instanceMethodArgMutBorrowTwinSyncMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiInstanceMethodArgMutBorrowTwinSyncMoi(
        that: this,
      );

  void instanceMethodArgOwnTwinSyncMoi({dynamic hint}) => RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiInstanceMethodArgOwnTwinSyncMoi(
        that: this,
      );

  int get instanceMethodGetterTwinSyncMoi => RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiInstanceMethodGetterTwinSyncMoi(
        that: this,
      );

  NonCloneSimpleTwinSyncMoi instanceMethodReturnOwnTwinSyncMoi(
          {dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiInstanceMethodReturnOwnTwinSyncMoi(
        that: this,
      );

  /// named constructor
  static NonCloneSimpleTwinSyncMoi newCustomNameTwinSyncMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiNewCustomNameTwinSyncMoi(hint: hint);

  /// unnamed constructor
  static NonCloneSimpleTwinSyncMoi newTwinSyncMoi({dynamic hint}) =>
      RustLib.instance.api.nonCloneSimpleTwinSyncMoiNewTwinSyncMoi(hint: hint);

  /// constructor with Result
  static NonCloneSimpleTwinSyncMoi newWithResultTwinSyncMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiNewWithResultTwinSyncMoi(hint: hint);

  static void staticMethodArgBorrowTwinSyncMoi(
          {required NonCloneSimpleTwinSyncMoi arg, dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiStaticMethodArgBorrowTwinSyncMoi(
              arg: arg, hint: hint);

  static void staticMethodArgMutBorrowTwinSyncMoi(
          {required NonCloneSimpleTwinSyncMoi arg, dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiStaticMethodArgMutBorrowTwinSyncMoi(
              arg: arg, hint: hint);

  static void staticMethodArgOwnTwinSyncMoi(
          {required NonCloneSimpleTwinSyncMoi arg, dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiStaticMethodArgOwnTwinSyncMoi(
              arg: arg, hint: hint);

  static NonCloneSimpleTwinSyncMoi staticMethodReturnOwnTwinSyncMoi(
          {dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncMoiStaticMethodReturnOwnTwinSyncMoi(
              hint: hint);
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<StructWithGoodAndOpaqueFieldTwinSyncMoi>>
@sealed
class StructWithGoodAndOpaqueFieldTwinSyncMoi extends RustOpaque {
  StructWithGoodAndOpaqueFieldTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  StructWithGoodAndOpaqueFieldTwinSyncMoi.sseDecode(
      int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_StructWithGoodAndOpaqueFieldTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldTwinSyncMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<(crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::OpaqueOneTwinSyncMoi,crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::OpaqueTwoTwinSyncMoi,)>>
@sealed
class OpaqueOneTwinSyncMoiOpaqueTwoTwinSyncMoi extends RustOpaque {
  OpaqueOneTwinSyncMoiOpaqueTwoTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  OpaqueOneTwinSyncMoiOpaqueTwoTwinSyncMoi.sseDecode(
      int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_OpaqueOneTwinSyncMoiOpaqueTwoTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_OpaqueOneTwinSyncMoiOpaqueTwoTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_OpaqueOneTwinSyncMoiOpaqueTwoTwinSyncMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<crate::api::pseudo_manual::rust_auto_opaque_twin_sync_moi::OpaqueTwoTwinSyncMoi>>
@sealed
class OpaqueTwoTwinSyncMoi extends RustOpaque {
  OpaqueTwoTwinSyncMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  OpaqueTwoTwinSyncMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_OpaqueTwoTwinSyncMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueTwoTwinSyncMoi,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueTwoTwinSyncMoiPtr,
  );
}
