// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.17.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'rust_auto_opaque_twin_moi.dart';

void rustAutoOpaqueArgOwnTwinSyncSseMoi(
        {required NonCloneSimpleTwinSyncSseMoi arg,
        required int expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgOwnTwinSyncSseMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueArgBorrowTwinSyncSseMoi(
        {required NonCloneSimpleTwinSyncSseMoi arg,
        required int expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgBorrowTwinSyncSseMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueArgMutBorrowTwinSyncSseMoi(
        {required NonCloneSimpleTwinSyncSseMoi arg,
        required int expect,
        required int adder,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgMutBorrowTwinSyncSseMoi(
        arg: arg, expect: expect, adder: adder, hint: hint);

NonCloneSimpleTwinSyncSseMoi rustAutoOpaqueReturnOwnTwinSyncSseMoi(
        {required int initial, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueReturnOwnTwinSyncSseMoi(initial: initial, hint: hint);

NonCloneSimpleTwinSyncSseMoi rustAutoOpaqueArgOwnAndReturnOwnTwinSyncSseMoi(
        {required NonCloneSimpleTwinSyncSseMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueArgOwnAndReturnOwnTwinSyncSseMoi(arg: arg, hint: hint);

void rustAutoOpaqueTwoArgsTwinSyncSseMoi(
        {required NonCloneSimpleTwinSyncSseMoi a,
        required NonCloneSimpleTwinSyncSseMoi b,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueTwoArgsTwinSyncSseMoi(a: a, b: b, hint: hint);

void rustAutoOpaqueNormalAndOpaqueArgTwinSyncSseMoi(
        {required NonCloneSimpleTwinSyncSseMoi a,
        required String b,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueNormalAndOpaqueArgTwinSyncSseMoi(a: a, b: b, hint: hint);

/// "+" inside the type signature
void rustAutoOpaquePlusSignArgTwinSyncSseMoi(
        {required BoxMyTraitTwinSyncSseMoi arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaquePlusSignArgTwinSyncSseMoi(arg: arg, hint: hint);

BoxMyTraitTwinSyncSseMoi rustAutoOpaquePlusSignReturnTwinSyncSseMoi(
        {dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaquePlusSignReturnTwinSyncSseMoi(hint: hint);

void rustAutoOpaqueCallableArgTwinSyncSseMoi(
        {required BoxFnStringString arg, dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueCallableArgTwinSyncSseMoi(arg: arg, hint: hint);

BoxFnStringString rustAutoOpaqueCallableReturnTwinSyncSseMoi({dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueCallableReturnTwinSyncSseMoi(hint: hint);

void rustAutoOpaqueTraitObjectArgOwnTwinSyncSseMoi(
        {required BoxHelloTraitTwinSyncSseMoi arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueTraitObjectArgOwnTwinSyncSseMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueTraitObjectArgBorrowTwinSyncSseMoi(
        {required BoxHelloTraitTwinSyncSseMoi arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueTraitObjectArgBorrowTwinSyncSseMoi(
        arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueTraitObjectArgMutBorrowTwinSyncSseMoi(
        {required BoxHelloTraitTwinSyncSseMoi arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueTraitObjectArgMutBorrowTwinSyncSseMoi(
        arg: arg, expect: expect, hint: hint);

BoxHelloTraitTwinSyncSseMoi rustAutoOpaqueTraitObjectReturnOwnOneTwinSyncSseMoi(
        {dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueTraitObjectReturnOwnOneTwinSyncSseMoi(hint: hint);

BoxHelloTraitTwinSyncSseMoi rustAutoOpaqueTraitObjectReturnOwnTwoTwinSyncSseMoi(
        {dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueTraitObjectReturnOwnTwoTwinSyncSseMoi(hint: hint);

void rustAutoOpaqueStructWithGoodAndOpaqueFieldArgOwnTwinSyncSseMoi(
        {required StructWithGoodAndOpaqueFieldTwinSyncSseMoi arg,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueStructWithGoodAndOpaqueFieldArgOwnTwinSyncSseMoi(
            arg: arg, hint: hint);

void rustAutoOpaqueStructWithGoodAndOpaqueFieldArgBorrowTwinSyncSseMoi(
        {required StructWithGoodAndOpaqueFieldTwinSyncSseMoi arg,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueStructWithGoodAndOpaqueFieldArgBorrowTwinSyncSseMoi(
            arg: arg, hint: hint);

void rustAutoOpaqueStructWithGoodAndOpaqueFieldArgMutBorrowTwinSyncSseMoi(
        {required StructWithGoodAndOpaqueFieldTwinSyncSseMoi arg,
        dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueStructWithGoodAndOpaqueFieldArgMutBorrowTwinSyncSseMoi(
            arg: arg, hint: hint);

StructWithGoodAndOpaqueFieldTwinSyncSseMoi
    rustAutoOpaqueStructWithGoodAndOpaqueFieldReturnOwnTwinSyncSseMoi(
            {dynamic hint}) =>
        RustLib.instance.api
            .rustAutoOpaqueStructWithGoodAndOpaqueFieldReturnOwnTwinSyncSseMoi(
                hint: hint);

OpaqueOneTwinSyncSseMoiOpaqueTwoTwinSyncSseMoi
    rustAutoOpaqueReturnOpaqueOneAndTwoTwinSyncSseMoi({dynamic hint}) =>
        RustLib.instance.api
            .rustAutoOpaqueReturnOpaqueOneAndTwoTwinSyncSseMoi(hint: hint);

OpaqueTwoTwinSyncSseMoi rustAutoOpaqueReturnOpaqueTwoTwinSyncSseMoi(
        {dynamic hint}) =>
    RustLib.instance.api
        .rustAutoOpaqueReturnOpaqueTwoTwinSyncSseMoi(hint: hint);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn HelloTraitTwinSyncSseMoi>>>
@sealed
class BoxHelloTraitTwinSyncSseMoi extends RustOpaque {
  BoxHelloTraitTwinSyncSseMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  BoxHelloTraitTwinSyncSseMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_BoxHelloTraitTwinSyncSseMoi,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncSseMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncSseMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<Box<dyn MyTraitTwinSyncSseMoi + Send + Sync>>>
@sealed
class BoxMyTraitTwinSyncSseMoi extends RustOpaque {
  BoxMyTraitTwinSyncSseMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  BoxMyTraitTwinSyncSseMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_BoxMyTraitTwinSyncSseMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_BoxMyTraitTwinSyncSseMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_BoxMyTraitTwinSyncSseMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<NonCloneSimpleTwinSyncSseMoi>>
@sealed
class NonCloneSimpleTwinSyncSseMoi extends RustOpaque {
  NonCloneSimpleTwinSyncSseMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  NonCloneSimpleTwinSyncSseMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_NonCloneSimpleTwinSyncSseMoi,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncSseMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncSseMoiPtr,
  );

  void instanceMethodArgBorrowTwinSyncSseMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiInstanceMethodArgBorrowTwinSyncSseMoi(
        that: this,
      );

  void instanceMethodArgMutBorrowTwinSyncSseMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiInstanceMethodArgMutBorrowTwinSyncSseMoi(
        that: this,
      );

  void instanceMethodArgOwnTwinSyncSseMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiInstanceMethodArgOwnTwinSyncSseMoi(
        that: this,
      );

  int get instanceMethodGetterTwinSyncSseMoi => RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiInstanceMethodGetterTwinSyncSseMoi(
        that: this,
      );

  NonCloneSimpleTwinSyncSseMoi instanceMethodReturnOwnTwinSyncSseMoi(
          {dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiInstanceMethodReturnOwnTwinSyncSseMoi(
        that: this,
      );

  /// named constructor
  static NonCloneSimpleTwinSyncSseMoi newCustomNameTwinSyncSseMoi(
          {dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiNewCustomNameTwinSyncSseMoi(hint: hint);

  /// unnamed constructor
  static NonCloneSimpleTwinSyncSseMoi newTwinSyncSseMoi({dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiNewTwinSyncSseMoi(hint: hint);

  /// constructor with Result
  static NonCloneSimpleTwinSyncSseMoi newWithResultTwinSyncSseMoi(
          {dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiNewWithResultTwinSyncSseMoi(hint: hint);

  static void staticMethodArgBorrowTwinSyncSseMoi(
          {required NonCloneSimpleTwinSyncSseMoi arg, dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiStaticMethodArgBorrowTwinSyncSseMoi(
              arg: arg, hint: hint);

  static void staticMethodArgMutBorrowTwinSyncSseMoi(
          {required NonCloneSimpleTwinSyncSseMoi arg, dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiStaticMethodArgMutBorrowTwinSyncSseMoi(
              arg: arg, hint: hint);

  static void staticMethodArgOwnTwinSyncSseMoi(
          {required NonCloneSimpleTwinSyncSseMoi arg, dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiStaticMethodArgOwnTwinSyncSseMoi(
              arg: arg, hint: hint);

  static NonCloneSimpleTwinSyncSseMoi staticMethodReturnOwnTwinSyncSseMoi(
          {dynamic hint}) =>
      RustLib.instance.api
          .nonCloneSimpleTwinSyncSseMoiStaticMethodReturnOwnTwinSyncSseMoi(
              hint: hint);
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<StructWithGoodAndOpaqueFieldTwinSyncSseMoi>>
@sealed
class StructWithGoodAndOpaqueFieldTwinSyncSseMoi extends RustOpaque {
  StructWithGoodAndOpaqueFieldTwinSyncSseMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  StructWithGoodAndOpaqueFieldTwinSyncSseMoi.sseDecode(
      int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_StructWithGoodAndOpaqueFieldTwinSyncSseMoi,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldTwinSyncSseMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldTwinSyncSseMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<(crate::api::pseudo_manual::rust_auto_opaque_twin_sync_sse_moi::OpaqueOneTwinSyncSseMoi,crate::api::pseudo_manual::rust_auto_opaque_twin_sync_sse_moi::OpaqueTwoTwinSyncSseMoi,)>>
@sealed
class OpaqueOneTwinSyncSseMoiOpaqueTwoTwinSyncSseMoi extends RustOpaque {
  OpaqueOneTwinSyncSseMoiOpaqueTwoTwinSyncSseMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  OpaqueOneTwinSyncSseMoiOpaqueTwoTwinSyncSseMoi.sseDecode(
      int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_OpaqueOneTwinSyncSseMoiOpaqueTwoTwinSyncSseMoi,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_OpaqueOneTwinSyncSseMoiOpaqueTwoTwinSyncSseMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_OpaqueOneTwinSyncSseMoiOpaqueTwoTwinSyncSseMoiPtr,
  );
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::rust_async::RwLock<crate::api::pseudo_manual::rust_auto_opaque_twin_sync_sse_moi::OpaqueTwoTwinSyncSseMoi>>
@sealed
class OpaqueTwoTwinSyncSseMoi extends RustOpaque {
  OpaqueTwoTwinSyncSseMoi.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  OpaqueTwoTwinSyncSseMoi.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_OpaqueTwoTwinSyncSseMoi,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueTwoTwinSyncSseMoi,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_OpaqueTwoTwinSyncSseMoiPtr,
  );
}
