// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.30.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// The type `LogTwinRustAsyncSse` is not used by any `pub` functions, thus it is ignored.
// The type `MyStreamEntryTwinRustAsyncSse` is not used by any `pub` functions, thus it is ignored.

Future<Stream<String>> funcStreamReturnErrorTwinRustAsyncSse({dynamic hint}) =>
    RustLib.instance.api.funcStreamReturnErrorTwinRustAsyncSse(hint: hint);

Future<Stream<String>> funcStreamReturnPanicTwinRustAsyncSse({dynamic hint}) =>
    RustLib.instance.api.funcStreamReturnPanicTwinRustAsyncSse(hint: hint);

Future<Stream<int>> funcStreamSinkArgPositionTwinRustAsyncSse(
        {required int a, required int b, dynamic hint}) =>
    RustLib.instance.api
        .funcStreamSinkArgPositionTwinRustAsyncSse(a: a, b: b, hint: hint);

Future<Stream<MyStreamEntryTwinRustAsyncSse>>
    handleStreamOfStructTwinRustAsyncSse({dynamic hint}) =>
        RustLib.instance.api.handleStreamOfStructTwinRustAsyncSse(hint: hint);

Future<Stream<LogTwinRustAsyncSse>> handleStreamSinkAt1TwinRustAsyncSse(
        {required int key, required int max, dynamic hint}) =>
    RustLib.instance.api
        .handleStreamSinkAt1TwinRustAsyncSse(key: key, max: max, hint: hint);

Future<Stream<LogTwinRustAsyncSse>> handleStreamSinkAt2TwinRustAsyncSse(
        {required int key, required int max, dynamic hint}) =>
    RustLib.instance.api
        .handleStreamSinkAt2TwinRustAsyncSse(key: key, max: max, hint: hint);

Future<Stream<LogTwinRustAsyncSse>> handleStreamSinkAt3TwinRustAsyncSse(
        {required int key, required int max, dynamic hint}) =>
    RustLib.instance.api
        .handleStreamSinkAt3TwinRustAsyncSse(key: key, max: max, hint: hint);

Future<Stream<U8Array2>> streamSinkFixedSizedPrimitiveArrayTwinRustAsyncSse(
        {dynamic hint}) =>
    RustLib.instance.api
        .streamSinkFixedSizedPrimitiveArrayTwinRustAsyncSse(hint: hint);
