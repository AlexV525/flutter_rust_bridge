// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.30.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// The type `LogTwinSse` is not used by any `pub` functions, thus it is ignored.
// The type `MyStreamEntryTwinSse` is not used by any `pub` functions, thus it is ignored.

Future<Stream<String>> funcStreamReturnErrorTwinSse({dynamic hint}) =>
    RustLib.instance.api.funcStreamReturnErrorTwinSse(hint: hint);

Future<Stream<String>> funcStreamReturnPanicTwinSse({dynamic hint}) =>
    RustLib.instance.api.funcStreamReturnPanicTwinSse(hint: hint);

Future<Stream<int>> funcStreamSinkArgPositionTwinSse(
        {required int a, required int b, dynamic hint}) =>
    RustLib.instance.api
        .funcStreamSinkArgPositionTwinSse(a: a, b: b, hint: hint);

Future<Stream<MyStreamEntryTwinSse>> handleStreamOfStructTwinSse(
        {dynamic hint}) =>
    RustLib.instance.api.handleStreamOfStructTwinSse(hint: hint);

Future<Stream<LogTwinSse>> handleStreamSinkAt1TwinSse(
        {required int key, required int max, dynamic hint}) =>
    RustLib.instance.api
        .handleStreamSinkAt1TwinSse(key: key, max: max, hint: hint);

Future<Stream<LogTwinSse>> handleStreamSinkAt2TwinSse(
        {required int key, required int max, dynamic hint}) =>
    RustLib.instance.api
        .handleStreamSinkAt2TwinSse(key: key, max: max, hint: hint);

Future<Stream<LogTwinSse>> handleStreamSinkAt3TwinSse(
        {required int key, required int max, dynamic hint}) =>
    RustLib.instance.api
        .handleStreamSinkAt3TwinSse(key: key, max: max, hint: hint);

Future<Stream<U8Array2>> streamSinkFixedSizedPrimitiveArrayTwinSse(
        {dynamic hint}) =>
    RustLib.instance.api.streamSinkFixedSizedPrimitiveArrayTwinSse(hint: hint);
