// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 1.82.4.

// ignore_for_file: invalid_use_of_internal_member, unused_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<void> rustAutoOpaqueArgOwn(
        {required RwLockNonCloneSimpleTwinNormal arg, dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgOwn(arg: arg, hint: hint);

Future<void> rustAutoOpaqueArgBorrow(
        {required RwLockNonCloneSimpleTwinNormal arg, dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgBorrow(arg: arg, hint: hint);

Future<void> rustAutoOpaqueArgMutBorrow(
        {required RwLockNonCloneSimpleTwinNormal arg, dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueArgMutBorrow(arg: arg, hint: hint);

Future<RwLockNonCloneSimpleTwinNormal> rustAutoOpaqueReturnOwn(
        {dynamic hint}) =>
    RustLib.instance.api.rustAutoOpaqueReturnOwn(hint: hint);

// Rust type: flutter_rust_bridge::RustOpaque<std::sync::RwLock<NonCloneSimpleTwinNormal>>
@sealed
class RwLockNonCloneSimpleTwinNormal extends RustOpaque {
  RwLockNonCloneSimpleTwinNormal.fromWire(dynamic wire)
      : super.fromWire(wire, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_RwLockNonCloneSimpleTwinNormal,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_RwLockNonCloneSimpleTwinNormal,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_RwLockNonCloneSimpleTwinNormalPtr,
  );
}
