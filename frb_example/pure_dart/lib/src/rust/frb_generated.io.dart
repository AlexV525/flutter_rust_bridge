// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.10.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables

import 'api/array.dart';
import 'api/async_misc.dart';
import 'api/async_spawn.dart';
import 'api/attribute.dart';
import 'api/benchmark_misc.dart';
import 'api/chrono_type.dart';
import 'api/comment.dart';
import 'api/customization.dart';
import 'api/dart_dynamic.dart';
import 'api/dart_fn.dart';
import 'api/dart_opaque.dart';
import 'api/dart_opaque_sync.dart';
import 'api/enumeration.dart';
import 'api/event_listener.dart';
import 'api/exception.dart';
import 'api/external_type_in_crate.dart';
import 'api/inside_macro.dart';
import 'api/map_and_set.dart';
import 'api/method.dart';
import 'api/mirror.dart';
import 'api/misc_example.dart';
import 'api/misc_type.dart';
import 'api/newtype_pattern.dart';
import 'api/optional.dart';
import 'api/optional_primitive_misc.dart';
import 'api/primitive_list_misc.dart';
import 'api/primitive_misc.dart';
import 'api/pseudo_manual/array_twin_rust_async.dart';
import 'api/pseudo_manual/array_twin_rust_async_sse.dart';
import 'api/pseudo_manual/array_twin_sse.dart';
import 'api/pseudo_manual/array_twin_sync.dart';
import 'api/pseudo_manual/array_twin_sync_sse.dart';
import 'api/pseudo_manual/async_misc_twin_sse.dart';
import 'api/pseudo_manual/attribute_twin_rust_async.dart';
import 'api/pseudo_manual/attribute_twin_rust_async_sse.dart';
import 'api/pseudo_manual/attribute_twin_sse.dart';
import 'api/pseudo_manual/attribute_twin_sync.dart';
import 'api/pseudo_manual/attribute_twin_sync_sse.dart';
import 'api/pseudo_manual/benchmark_api.dart';
import 'api/pseudo_manual/benchmark_api_twin_rust_async.dart';
import 'api/pseudo_manual/benchmark_api_twin_rust_async_sse.dart';
import 'api/pseudo_manual/benchmark_api_twin_sse.dart';
import 'api/pseudo_manual/benchmark_api_twin_sync.dart';
import 'api/pseudo_manual/benchmark_api_twin_sync_sse.dart';
import 'api/pseudo_manual/chrono_type_twin_rust_async.dart';
import 'api/pseudo_manual/chrono_type_twin_sync.dart';
import 'api/pseudo_manual/comment_twin_rust_async.dart';
import 'api/pseudo_manual/comment_twin_rust_async_sse.dart';
import 'api/pseudo_manual/comment_twin_sse.dart';
import 'api/pseudo_manual/comment_twin_sync.dart';
import 'api/pseudo_manual/comment_twin_sync_sse.dart';
import 'api/pseudo_manual/dart_dynamic_twin_rust_async.dart';
import 'api/pseudo_manual/dart_dynamic_twin_sync.dart';
import 'api/pseudo_manual/dart_fn_twin_rust_async.dart';
import 'api/pseudo_manual/dart_fn_twin_rust_async_sse.dart';
import 'api/pseudo_manual/dart_fn_twin_sse.dart';
import 'api/pseudo_manual/dart_opaque_sync_twin_sse.dart';
import 'api/pseudo_manual/dart_opaque_twin_rust_async.dart';
import 'api/pseudo_manual/dart_opaque_twin_rust_async_sse.dart';
import 'api/pseudo_manual/dart_opaque_twin_sse.dart';
import 'api/pseudo_manual/dart_opaque_twin_sync.dart';
import 'api/pseudo_manual/dart_opaque_twin_sync_sse.dart';
import 'api/pseudo_manual/enumeration_twin_rust_async.dart';
import 'api/pseudo_manual/enumeration_twin_rust_async_sse.dart';
import 'api/pseudo_manual/enumeration_twin_sse.dart';
import 'api/pseudo_manual/enumeration_twin_sync.dart';
import 'api/pseudo_manual/enumeration_twin_sync_sse.dart';
import 'api/pseudo_manual/event_listener_twin_rust_async.dart';
import 'api/pseudo_manual/event_listener_twin_rust_async_sse.dart';
import 'api/pseudo_manual/event_listener_twin_sse.dart';
import 'api/pseudo_manual/exception_twin_rust_async.dart';
import 'api/pseudo_manual/exception_twin_rust_async_sse.dart';
import 'api/pseudo_manual/exception_twin_sse.dart';
import 'api/pseudo_manual/exception_twin_sync.dart';
import 'api/pseudo_manual/exception_twin_sync_sse.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_rust_async.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_rust_async_sse.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_sse.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_sync.dart';
import 'api/pseudo_manual/external_type_in_crate_twin_sync_sse.dart';
import 'api/pseudo_manual/map_and_set_twin_rust_async.dart';
import 'api/pseudo_manual/map_and_set_twin_rust_async_sse.dart';
import 'api/pseudo_manual/map_and_set_twin_sse.dart';
import 'api/pseudo_manual/map_and_set_twin_sync.dart';
import 'api/pseudo_manual/map_and_set_twin_sync_sse.dart';
import 'api/pseudo_manual/method_twin_rust_async.dart';
import 'api/pseudo_manual/method_twin_rust_async_sse.dart';
import 'api/pseudo_manual/method_twin_sse.dart';
import 'api/pseudo_manual/method_twin_sync.dart';
import 'api/pseudo_manual/method_twin_sync_sse.dart';
import 'api/pseudo_manual/mirror_twin_rust_async.dart';
import 'api/pseudo_manual/mirror_twin_rust_async_sse.dart';
import 'api/pseudo_manual/mirror_twin_sse.dart';
import 'api/pseudo_manual/mirror_twin_sync.dart';
import 'api/pseudo_manual/mirror_twin_sync_sse.dart';
import 'api/pseudo_manual/misc_example_twin_rust_async.dart';
import 'api/pseudo_manual/misc_example_twin_rust_async_sse.dart';
import 'api/pseudo_manual/misc_example_twin_sse.dart';
import 'api/pseudo_manual/misc_example_twin_sync.dart';
import 'api/pseudo_manual/misc_example_twin_sync_sse.dart';
import 'api/pseudo_manual/misc_type_twin_rust_async.dart';
import 'api/pseudo_manual/misc_type_twin_rust_async_sse.dart';
import 'api/pseudo_manual/misc_type_twin_sse.dart';
import 'api/pseudo_manual/misc_type_twin_sync.dart';
import 'api/pseudo_manual/misc_type_twin_sync_sse.dart';
import 'api/pseudo_manual/newtype_pattern_twin_rust_async.dart';
import 'api/pseudo_manual/newtype_pattern_twin_rust_async_sse.dart';
import 'api/pseudo_manual/newtype_pattern_twin_sse.dart';
import 'api/pseudo_manual/newtype_pattern_twin_sync.dart';
import 'api/pseudo_manual/newtype_pattern_twin_sync_sse.dart';
import 'api/pseudo_manual/optional_primitive.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_rust_async.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_rust_async_sse.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_sse.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_sync.dart';
import 'api/pseudo_manual/optional_primitive_misc_twin_sync_sse.dart';
import 'api/pseudo_manual/optional_primitive_twin_rust_async.dart';
import 'api/pseudo_manual/optional_primitive_twin_rust_async_sse.dart';
import 'api/pseudo_manual/optional_primitive_twin_sse.dart';
import 'api/pseudo_manual/optional_primitive_twin_sync.dart';
import 'api/pseudo_manual/optional_primitive_twin_sync_sse.dart';
import 'api/pseudo_manual/optional_twin_rust_async.dart';
import 'api/pseudo_manual/optional_twin_rust_async_sse.dart';
import 'api/pseudo_manual/optional_twin_sse.dart';
import 'api/pseudo_manual/optional_twin_sync.dart';
import 'api/pseudo_manual/optional_twin_sync_sse.dart';
import 'api/pseudo_manual/primitive.dart';
import 'api/pseudo_manual/primitive_list.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_rust_async.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_rust_async_sse.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_sse.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_sync.dart';
import 'api/pseudo_manual/primitive_list_misc_twin_sync_sse.dart';
import 'api/pseudo_manual/primitive_list_twin_rust_async.dart';
import 'api/pseudo_manual/primitive_list_twin_rust_async_sse.dart';
import 'api/pseudo_manual/primitive_list_twin_sse.dart';
import 'api/pseudo_manual/primitive_list_twin_sync.dart';
import 'api/pseudo_manual/primitive_list_twin_sync_sse.dart';
import 'api/pseudo_manual/primitive_misc_twin_rust_async.dart';
import 'api/pseudo_manual/primitive_misc_twin_rust_async_sse.dart';
import 'api/pseudo_manual/primitive_misc_twin_sse.dart';
import 'api/pseudo_manual/primitive_misc_twin_sync.dart';
import 'api/pseudo_manual/primitive_misc_twin_sync_sse.dart';
import 'api/pseudo_manual/primitive_twin_rust_async.dart';
import 'api/pseudo_manual/primitive_twin_rust_async_sse.dart';
import 'api/pseudo_manual/primitive_twin_sse.dart';
import 'api/pseudo_manual/primitive_twin_sync.dart';
import 'api/pseudo_manual/primitive_twin_sync_sse.dart';
import 'api/pseudo_manual/raw_string_twin_rust_async.dart';
import 'api/pseudo_manual/raw_string_twin_rust_async_sse.dart';
import 'api/pseudo_manual/raw_string_twin_sse.dart';
import 'api/pseudo_manual/raw_string_twin_sync.dart';
import 'api/pseudo_manual/raw_string_twin_sync_sse.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sse.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sync.dart';
import 'api/pseudo_manual/rust_auto_opaque_twin_sync_sse.dart';
import 'api/pseudo_manual/rust_opaque_sync_twin_sse.dart';
import 'api/pseudo_manual/rust_opaque_twin_rust_async.dart';
import 'api/pseudo_manual/rust_opaque_twin_rust_async_sse.dart';
import 'api/pseudo_manual/rust_opaque_twin_sse.dart';
import 'api/pseudo_manual/rust_opaque_twin_sync.dart';
import 'api/pseudo_manual/rust_opaque_twin_sync_sse.dart';
import 'api/pseudo_manual/simple_twin_rust_async.dart';
import 'api/pseudo_manual/simple_twin_rust_async_sse.dart';
import 'api/pseudo_manual/simple_twin_sse.dart';
import 'api/pseudo_manual/simple_twin_sync.dart';
import 'api/pseudo_manual/simple_twin_sync_sse.dart';
import 'api/pseudo_manual/stream_misc_twin_sse.dart';
import 'api/pseudo_manual/stream_twin_rust_async.dart';
import 'api/pseudo_manual/stream_twin_rust_async_sse.dart';
import 'api/pseudo_manual/stream_twin_sse.dart';
import 'api/pseudo_manual/structure_twin_rust_async.dart';
import 'api/pseudo_manual/structure_twin_rust_async_sse.dart';
import 'api/pseudo_manual/structure_twin_sse.dart';
import 'api/pseudo_manual/structure_twin_sync.dart';
import 'api/pseudo_manual/structure_twin_sync_sse.dart';
import 'api/pseudo_manual/tuple_twin_rust_async.dart';
import 'api/pseudo_manual/tuple_twin_rust_async_sse.dart';
import 'api/pseudo_manual/tuple_twin_sse.dart';
import 'api/pseudo_manual/tuple_twin_sync.dart';
import 'api/pseudo_manual/tuple_twin_sync_sse.dart';
import 'api/pseudo_manual/type_alias_twin_rust_async.dart';
import 'api/pseudo_manual/type_alias_twin_rust_async_sse.dart';
import 'api/pseudo_manual/type_alias_twin_sse.dart';
import 'api/pseudo_manual/type_alias_twin_sync.dart';
import 'api/pseudo_manual/type_alias_twin_sync_sse.dart';
import 'api/pseudo_manual/uuid_type_twin_rust_async.dart';
import 'api/pseudo_manual/uuid_type_twin_sync.dart';
import 'api/raw_string.dart';
import 'api/rust_auto_opaque.dart';
import 'api/rust_opaque.dart';
import 'api/rust_opaque_sync.dart';
import 'api/simple.dart';
import 'api/stream.dart';
import 'api/stream_misc.dart';
import 'api/structure.dart';
import 'api/tuple.dart';
import 'api/type_alias.dart';
import 'api/uuid_type.dart';
import 'auxiliary/new_module_system/sub_module.dart';
import 'auxiliary/old_module_system/sub_module.dart';
import 'auxiliary/sample_types.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';
import 'package:meta/meta.dart' as meta;
import 'package:uuid/uuid.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_MutexHideDataPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_MutexHideDataPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_RwLockHideDataPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinRustAsyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinRustAsyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxDartDebugTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueReturnPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_frb_opaque_returnPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_FrbOpaqueSyncReturnPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_frb_opaque_sync_returnPtr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_HideDataPtr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_hide_dataPtr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_I32Ptr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_i_32Ptr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneDataPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_non_clone_dataPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonSendHideDataPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_non_send_hide_dataPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxFnStringStringPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BoxMyTraitTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinNormalPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncSsePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldTwinNormalPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormalPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldTwinSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSsePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldTwinSyncPtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldTwinSyncSsePtr =>
          wire._rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSsePtr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  BoxFnStringString
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  BoxMyTraitTwinNormal
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSse
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSync
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      dco_decode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      dco_decode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      dco_decode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          dynamic raw);

  @protected
  String dco_decode_Backtrace(dynamic raw);

  @protected
  Duration dco_decode_Chrono_Duration(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Local(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Naive(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Utc(dynamic raw);

  @protected
  FutureOr<void> Function(Object)
      dco_decode_DartFn_Inputs_DartOpaque_Output_unit(dynamic raw);

  @protected
  FutureOr<void> Function(String) dco_decode_DartFn_Inputs_String_Output_unit(
      dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinNormal)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_normal_Output_unit(
          dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinRustAsync)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_Output_unit(
          dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinRustAsyncSse)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_unit(
          dynamic raw);

  @protected
  FutureOr<void> Function(String, DemoStructForRustCallDartTwinSse)
      dco_decode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_sse_Output_unit(
          dynamic raw);

  @protected
  FutureOr<Object> Function() dco_decode_DartFn_Inputs__Output_DartOpaque(
      dynamic raw);

  @protected
  FutureOr<String> Function() dco_decode_DartFn_Inputs__Output_String(
      dynamic raw);

  @protected
  FutureOr<void> Function() dco_decode_DartFn_Inputs__Output_unit(dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinNormal> Function(
          DemoStructForRustCallDartTwinNormal)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_normal_Output_demo_struct_for_rust_call_dart_twin_normal(
          dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinRustAsync> Function(
          DemoStructForRustCallDartTwinRustAsync)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_Output_demo_struct_for_rust_call_dart_twin_rust_async(
          dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinRustAsyncSse> Function(
          DemoStructForRustCallDartTwinRustAsyncSse)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          dynamic raw);

  @protected
  FutureOr<DemoStructForRustCallDartTwinSse> Function(
          DemoStructForRustCallDartTwinSse)
      dco_decode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_sse_Output_demo_struct_for_rust_call_dart_twin_sse(
          dynamic raw);

  @protected
  Object dco_decode_DartOpaque(dynamic raw);

  @protected
  ObjectArray1 dco_decode_DartOpaque_array_1(dynamic raw);

  @protected
  Map<String, String> dco_decode_Map_String_String(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinNormal>
      dco_decode_Map_String_enum_simple_twin_normal(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinRustAsync>
      dco_decode_Map_String_enum_simple_twin_rust_async(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinRustAsyncSse>
      dco_decode_Map_String_enum_simple_twin_rust_async_sse(dynamic raw);

  @protected
  Map<String, EnumSimpleTwinSse> dco_decode_Map_String_enum_simple_twin_sse(
      dynamic raw);

  @protected
  Map<String, EnumSimpleTwinSync> dco_decode_Map_String_enum_simple_twin_sync(
      dynamic raw);

  @protected
  Map<String, EnumSimpleTwinSyncSse>
      dco_decode_Map_String_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinNormal>
      dco_decode_Map_String_kitchen_sink_twin_normal(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinRustAsync>
      dco_decode_Map_String_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinRustAsyncSse>
      dco_decode_Map_String_kitchen_sink_twin_rust_async_sse(dynamic raw);

  @protected
  Map<String, KitchenSinkTwinSse> dco_decode_Map_String_kitchen_sink_twin_sse(
      dynamic raw);

  @protected
  Map<String, KitchenSinkTwinSync> dco_decode_Map_String_kitchen_sink_twin_sync(
      dynamic raw);

  @protected
  Map<String, KitchenSinkTwinSyncSse>
      dco_decode_Map_String_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  Map<String, Uint8List> dco_decode_Map_String_list_prim_u_8(dynamic raw);

  @protected
  Map<String, MySize> dco_decode_Map_String_my_size(dynamic raw);

  @protected
  Map<int, int> dco_decode_Map_i_32_i_32(dynamic raw);

  @protected
  MutexHideData dco_decode_RustOpaque_MutexHideData(dynamic raw);

  @protected
  RwLockHideData dco_decode_RustOpaque_RwLockHideData(dynamic raw);

  @protected
  BoxDartDebugTwinNormal dco_decode_RustOpaque_box_dynDartDebugTwinNormal(
      dynamic raw);

  @protected
  BoxDartDebugTwinRustAsync dco_decode_RustOpaque_box_dynDartDebugTwinRustAsync(
      dynamic raw);

  @protected
  BoxDartDebugTwinRustAsyncSse
      dco_decode_RustOpaque_box_dynDartDebugTwinRustAsyncSse(dynamic raw);

  @protected
  BoxDartDebugTwinSse dco_decode_RustOpaque_box_dynDartDebugTwinSse(
      dynamic raw);

  @protected
  BoxDartDebugTwinSync dco_decode_RustOpaque_box_dynDartDebugTwinSync(
      dynamic raw);

  @protected
  BoxDartDebugTwinSyncSse dco_decode_RustOpaque_box_dynDartDebugTwinSyncSse(
      dynamic raw);

  @protected
  FrbOpaqueReturn dco_decode_RustOpaque_frb_opaque_return(dynamic raw);

  @protected
  FrbOpaqueSyncReturn dco_decode_RustOpaque_frb_opaque_sync_return(dynamic raw);

  @protected
  HideData dco_decode_RustOpaque_hide_data(dynamic raw);

  @protected
  HideDataArray2 dco_decode_RustOpaque_hide_data_array_2(dynamic raw);

  @protected
  I32 dco_decode_RustOpaque_i_32(dynamic raw);

  @protected
  NonCloneData dco_decode_RustOpaque_non_clone_data(dynamic raw);

  @protected
  NonSendHideData dco_decode_RustOpaque_non_send_hide_data(dynamic raw);

  @protected
  BoxFnStringString
      dco_decode_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
          dynamic raw);

  @protected
  BoxHelloTraitTwinNormal
      dco_decode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          dynamic raw);

  @protected
  BoxHelloTraitTwinSse
      dco_decode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(dynamic raw);

  @protected
  BoxHelloTraitTwinSync
      dco_decode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(dynamic raw);

  @protected
  BoxHelloTraitTwinSyncSse
      dco_decode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          dynamic raw);

  @protected
  BoxMyTraitTwinNormal
      dco_decode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSse
      dco_decode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSync
      dco_decode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
          dynamic raw);

  @protected
  BoxMyTraitTwinSyncSse
      dco_decode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          dynamic raw);

  @protected
  NonCloneSimpleTwinNormal
      dco_decode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(dynamic raw);

  @protected
  NonCloneSimpleTwinSse
      dco_decode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(dynamic raw);

  @protected
  NonCloneSimpleTwinSync
      dco_decode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(dynamic raw);

  @protected
  NonCloneSimpleTwinSyncSse
      dco_decode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      dco_decode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      dco_decode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      dco_decode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          dynamic raw);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      dco_decode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          dynamic raw);

  @protected
  Set<String> dco_decode_Set_String(dynamic raw);

  @protected
  Set<int> dco_decode_Set_i_32(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  UuidValue dco_decode_Uuid(dynamic raw);

  @protected
  ATwinNormal dco_decode_a_twin_normal(dynamic raw);

  @protected
  ATwinRustAsync dco_decode_a_twin_rust_async(dynamic raw);

  @protected
  ATwinRustAsyncSse dco_decode_a_twin_rust_async_sse(dynamic raw);

  @protected
  ATwinSse dco_decode_a_twin_sse(dynamic raw);

  @protected
  ATwinSync dco_decode_a_twin_sync(dynamic raw);

  @protected
  ATwinSyncSse dco_decode_a_twin_sync_sse(dynamic raw);

  @protected
  AbcTwinNormal dco_decode_abc_twin_normal(dynamic raw);

  @protected
  AbcTwinRustAsync dco_decode_abc_twin_rust_async(dynamic raw);

  @protected
  AbcTwinRustAsyncSse dco_decode_abc_twin_rust_async_sse(dynamic raw);

  @protected
  AbcTwinSse dco_decode_abc_twin_sse(dynamic raw);

  @protected
  AbcTwinSync dco_decode_abc_twin_sync(dynamic raw);

  @protected
  AbcTwinSyncSse dco_decode_abc_twin_sync_sse(dynamic raw);

  @protected
  AnotherMacroStructTwinNormal dco_decode_another_macro_struct_twin_normal(
      dynamic raw);

  @protected
  AnotherTwinNormal dco_decode_another_twin_normal(dynamic raw);

  @protected
  AnotherTwinRustAsync dco_decode_another_twin_rust_async(dynamic raw);

  @protected
  AnotherTwinRustAsyncSse dco_decode_another_twin_rust_async_sse(dynamic raw);

  @protected
  AnotherTwinSse dco_decode_another_twin_sse(dynamic raw);

  @protected
  AnotherTwinSync dco_decode_another_twin_sync(dynamic raw);

  @protected
  AnotherTwinSyncSse dco_decode_another_twin_sync_sse(dynamic raw);

  @protected
  ApplicationEnv dco_decode_application_env(dynamic raw);

  @protected
  ApplicationEnvVar dco_decode_application_env_var(dynamic raw);

  @protected
  ApplicationMessage dco_decode_application_message(dynamic raw);

  @protected
  ApplicationMode dco_decode_application_mode(dynamic raw);

  @protected
  ApplicationSettings dco_decode_application_settings(dynamic raw);

  @protected
  AttributeTwinNormal dco_decode_attribute_twin_normal(dynamic raw);

  @protected
  AttributeTwinRustAsync dco_decode_attribute_twin_rust_async(dynamic raw);

  @protected
  AttributeTwinRustAsyncSse dco_decode_attribute_twin_rust_async_sse(
      dynamic raw);

  @protected
  AttributeTwinSse dco_decode_attribute_twin_sse(dynamic raw);

  @protected
  AttributeTwinSync dco_decode_attribute_twin_sync(dynamic raw);

  @protected
  AttributeTwinSyncSse dco_decode_attribute_twin_sync_sse(dynamic raw);

  @protected
  BTwinNormal dco_decode_b_twin_normal(dynamic raw);

  @protected
  BTwinRustAsync dco_decode_b_twin_rust_async(dynamic raw);

  @protected
  BTwinRustAsyncSse dco_decode_b_twin_rust_async_sse(dynamic raw);

  @protected
  BTwinSse dco_decode_b_twin_sse(dynamic raw);

  @protected
  BTwinSync dco_decode_b_twin_sync(dynamic raw);

  @protected
  BTwinSyncSse dco_decode_b_twin_sync_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal dco_decode_benchmark_binary_tree_twin_normal(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      dco_decode_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      dco_decode_benchmark_binary_tree_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse dco_decode_benchmark_binary_tree_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync dco_decode_benchmark_binary_tree_twin_sync(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse dco_decode_benchmark_binary_tree_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBlobTwinNormal dco_decode_benchmark_blob_twin_normal(dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsync dco_decode_benchmark_blob_twin_rust_async(
      dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsyncSse dco_decode_benchmark_blob_twin_rust_async_sse(
      dynamic raw);

  @protected
  BenchmarkBlobTwinSse dco_decode_benchmark_blob_twin_sse(dynamic raw);

  @protected
  BenchmarkBlobTwinSync dco_decode_benchmark_blob_twin_sync(dynamic raw);

  @protected
  BenchmarkBlobTwinSyncSse dco_decode_benchmark_blob_twin_sync_sse(dynamic raw);

  @protected
  BigBuffersTwinNormal dco_decode_big_buffers_twin_normal(dynamic raw);

  @protected
  BigBuffersTwinRustAsync dco_decode_big_buffers_twin_rust_async(dynamic raw);

  @protected
  BigBuffersTwinRustAsyncSse dco_decode_big_buffers_twin_rust_async_sse(
      dynamic raw);

  @protected
  BigBuffersTwinSse dco_decode_big_buffers_twin_sse(dynamic raw);

  @protected
  BigBuffersTwinSync dco_decode_big_buffers_twin_sync(dynamic raw);

  @protected
  BigBuffersTwinSyncSse dco_decode_big_buffers_twin_sync_sse(dynamic raw);

  @protected
  BlobTwinNormal dco_decode_blob_twin_normal(dynamic raw);

  @protected
  BlobTwinRustAsync dco_decode_blob_twin_rust_async(dynamic raw);

  @protected
  BlobTwinRustAsyncSse dco_decode_blob_twin_rust_async_sse(dynamic raw);

  @protected
  BlobTwinSse dco_decode_blob_twin_sse(dynamic raw);

  @protected
  BlobTwinSync dco_decode_blob_twin_sync(dynamic raw);

  @protected
  BlobTwinSyncSse dco_decode_blob_twin_sync_sse(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  ApplicationEnv dco_decode_box_application_env(dynamic raw);

  @protected
  Duration dco_decode_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  DateTime dco_decode_box_autoadd_Chrono_Naive(dynamic raw);

  @protected
  DateTime dco_decode_box_autoadd_Chrono_Utc(dynamic raw);

  @protected
  Object dco_decode_box_autoadd_DartOpaque(dynamic raw);

  @protected
  HideData dco_decode_box_autoadd_RustOpaque_hide_data(dynamic raw);

  @protected
  ATwinNormal dco_decode_box_autoadd_a_twin_normal(dynamic raw);

  @protected
  ATwinRustAsync dco_decode_box_autoadd_a_twin_rust_async(dynamic raw);

  @protected
  ATwinRustAsyncSse dco_decode_box_autoadd_a_twin_rust_async_sse(dynamic raw);

  @protected
  ATwinSse dco_decode_box_autoadd_a_twin_sse(dynamic raw);

  @protected
  ATwinSync dco_decode_box_autoadd_a_twin_sync(dynamic raw);

  @protected
  ATwinSyncSse dco_decode_box_autoadd_a_twin_sync_sse(dynamic raw);

  @protected
  AbcTwinNormal dco_decode_box_autoadd_abc_twin_normal(dynamic raw);

  @protected
  AbcTwinRustAsync dco_decode_box_autoadd_abc_twin_rust_async(dynamic raw);

  @protected
  AbcTwinRustAsyncSse dco_decode_box_autoadd_abc_twin_rust_async_sse(
      dynamic raw);

  @protected
  AbcTwinSse dco_decode_box_autoadd_abc_twin_sse(dynamic raw);

  @protected
  AbcTwinSync dco_decode_box_autoadd_abc_twin_sync(dynamic raw);

  @protected
  AbcTwinSyncSse dco_decode_box_autoadd_abc_twin_sync_sse(dynamic raw);

  @protected
  ApplicationEnv dco_decode_box_autoadd_application_env(dynamic raw);

  @protected
  ApplicationSettings dco_decode_box_autoadd_application_settings(dynamic raw);

  @protected
  AttributeTwinNormal dco_decode_box_autoadd_attribute_twin_normal(dynamic raw);

  @protected
  AttributeTwinRustAsync dco_decode_box_autoadd_attribute_twin_rust_async(
      dynamic raw);

  @protected
  AttributeTwinRustAsyncSse
      dco_decode_box_autoadd_attribute_twin_rust_async_sse(dynamic raw);

  @protected
  AttributeTwinSse dco_decode_box_autoadd_attribute_twin_sse(dynamic raw);

  @protected
  AttributeTwinSync dco_decode_box_autoadd_attribute_twin_sync(dynamic raw);

  @protected
  AttributeTwinSyncSse dco_decode_box_autoadd_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  BTwinNormal dco_decode_box_autoadd_b_twin_normal(dynamic raw);

  @protected
  BTwinRustAsync dco_decode_box_autoadd_b_twin_rust_async(dynamic raw);

  @protected
  BTwinRustAsyncSse dco_decode_box_autoadd_b_twin_rust_async_sse(dynamic raw);

  @protected
  BTwinSse dco_decode_box_autoadd_b_twin_sse(dynamic raw);

  @protected
  BTwinSync dco_decode_box_autoadd_b_twin_sync(dynamic raw);

  @protected
  BTwinSyncSse dco_decode_box_autoadd_b_twin_sync_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal
      dco_decode_box_autoadd_benchmark_binary_tree_twin_normal(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      dco_decode_box_autoadd_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      dco_decode_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
          dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse
      dco_decode_box_autoadd_benchmark_binary_tree_twin_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync
      dco_decode_box_autoadd_benchmark_binary_tree_twin_sync(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      dco_decode_box_autoadd_benchmark_binary_tree_twin_sync_sse(dynamic raw);

  @protected
  BenchmarkBlobTwinNormal dco_decode_box_autoadd_benchmark_blob_twin_normal(
      dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsync
      dco_decode_box_autoadd_benchmark_blob_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBlobTwinRustAsyncSse
      dco_decode_box_autoadd_benchmark_blob_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBlobTwinSse dco_decode_box_autoadd_benchmark_blob_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBlobTwinSync dco_decode_box_autoadd_benchmark_blob_twin_sync(
      dynamic raw);

  @protected
  BenchmarkBlobTwinSyncSse dco_decode_box_autoadd_benchmark_blob_twin_sync_sse(
      dynamic raw);

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw);

  @protected
  CTwinNormal dco_decode_box_autoadd_c_twin_normal(dynamic raw);

  @protected
  CTwinRustAsync dco_decode_box_autoadd_c_twin_rust_async(dynamic raw);

  @protected
  CTwinRustAsyncSse dco_decode_box_autoadd_c_twin_rust_async_sse(dynamic raw);

  @protected
  CTwinSse dco_decode_box_autoadd_c_twin_sse(dynamic raw);

  @protected
  CTwinSync dco_decode_box_autoadd_c_twin_sync(dynamic raw);

  @protected
  CTwinSyncSse dco_decode_box_autoadd_c_twin_sync_sse(dynamic raw);

  @protected
  ConcatenateWithTwinNormal dco_decode_box_autoadd_concatenate_with_twin_normal(
      dynamic raw);

  @protected
  ConcatenateWithTwinRustAsync
      dco_decode_box_autoadd_concatenate_with_twin_rust_async(dynamic raw);

  @protected
  ConcatenateWithTwinRustAsyncSse
      dco_decode_box_autoadd_concatenate_with_twin_rust_async_sse(dynamic raw);

  @protected
  ConcatenateWithTwinSse dco_decode_box_autoadd_concatenate_with_twin_sse(
      dynamic raw);

  @protected
  ConcatenateWithTwinSync dco_decode_box_autoadd_concatenate_with_twin_sync(
      dynamic raw);

  @protected
  ConcatenateWithTwinSyncSse
      dco_decode_box_autoadd_concatenate_with_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedError2TwinNormal
      dco_decode_box_autoadd_custom_nested_error_2_twin_normal(dynamic raw);

  @protected
  CustomNestedError2TwinRustAsync
      dco_decode_box_autoadd_custom_nested_error_2_twin_rust_async(dynamic raw);

  @protected
  CustomNestedError2TwinRustAsyncSse
      dco_decode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomNestedError2TwinSse
      dco_decode_box_autoadd_custom_nested_error_2_twin_sse(dynamic raw);

  @protected
  CustomNestedError2TwinSync
      dco_decode_box_autoadd_custom_nested_error_2_twin_sync(dynamic raw);

  @protected
  CustomNestedError2TwinSyncSse
      dco_decode_box_autoadd_custom_nested_error_2_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinNormal
      dco_decode_box_autoadd_custom_nested_error_inner_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      dco_decode_box_autoadd_custom_nested_error_inner_twin_rust_async(
          dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      dco_decode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSse
      dco_decode_box_autoadd_custom_nested_error_inner_twin_sse(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSync
      dco_decode_box_autoadd_custom_nested_error_inner_twin_sync(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      dco_decode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
          dynamic raw);

  @protected
  CustomNestedErrorOuterTwinNormal
      dco_decode_box_autoadd_custom_nested_error_outer_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      dco_decode_box_autoadd_custom_nested_error_outer_twin_rust_async(
          dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      dco_decode_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSse
      dco_decode_box_autoadd_custom_nested_error_outer_twin_sse(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSync
      dco_decode_box_autoadd_custom_nested_error_outer_twin_sync(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      dco_decode_box_autoadd_custom_nested_error_outer_twin_sync_sse(
          dynamic raw);

  @protected
  CustomStructErrorTwinNormal
      dco_decode_box_autoadd_custom_struct_error_twin_normal(dynamic raw);

  @protected
  CustomStructErrorTwinRustAsync
      dco_decode_box_autoadd_custom_struct_error_twin_rust_async(dynamic raw);

  @protected
  CustomStructErrorTwinRustAsyncSse
      dco_decode_box_autoadd_custom_struct_error_twin_rust_async_sse(
          dynamic raw);

  @protected
  CustomStructErrorTwinSse dco_decode_box_autoadd_custom_struct_error_twin_sse(
      dynamic raw);

  @protected
  CustomStructErrorTwinSync
      dco_decode_box_autoadd_custom_struct_error_twin_sync(dynamic raw);

  @protected
  CustomStructErrorTwinSyncSse
      dco_decode_box_autoadd_custom_struct_error_twin_sync_sse(dynamic raw);

  @protected
  CustomStructTwinNormal dco_decode_box_autoadd_custom_struct_twin_normal(
      dynamic raw);

  @protected
  CustomStructTwinRustAsync
      dco_decode_box_autoadd_custom_struct_twin_rust_async(dynamic raw);

  @protected
  CustomStructTwinRustAsyncSse
      dco_decode_box_autoadd_custom_struct_twin_rust_async_sse(dynamic raw);

  @protected
  CustomStructTwinSse dco_decode_box_autoadd_custom_struct_twin_sse(
      dynamic raw);

  @protected
  CustomStructTwinSync dco_decode_box_autoadd_custom_struct_twin_sync(
      dynamic raw);

  @protected
  CustomStructTwinSyncSse dco_decode_box_autoadd_custom_struct_twin_sync_sse(
      dynamic raw);

  @protected
  CustomizedTwinNormal dco_decode_box_autoadd_customized_twin_normal(
      dynamic raw);

  @protected
  CustomizedTwinRustAsync dco_decode_box_autoadd_customized_twin_rust_async(
      dynamic raw);

  @protected
  CustomizedTwinRustAsyncSse
      dco_decode_box_autoadd_customized_twin_rust_async_sse(dynamic raw);

  @protected
  CustomizedTwinSse dco_decode_box_autoadd_customized_twin_sse(dynamic raw);

  @protected
  CustomizedTwinSync dco_decode_box_autoadd_customized_twin_sync(dynamic raw);

  @protected
  CustomizedTwinSyncSse dco_decode_box_autoadd_customized_twin_sync_sse(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinNormal
      dco_decode_box_autoadd_dart_opaque_nested_twin_normal(dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsync
      dco_decode_box_autoadd_dart_opaque_nested_twin_rust_async(dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      dco_decode_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
          dynamic raw);

  @protected
  DartOpaqueNestedTwinSse dco_decode_box_autoadd_dart_opaque_nested_twin_sse(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinSync dco_decode_box_autoadd_dart_opaque_nested_twin_sync(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinSyncSse
      dco_decode_box_autoadd_dart_opaque_nested_twin_sync_sse(dynamic raw);

  @protected
  ElementTwinNormal dco_decode_box_autoadd_element_twin_normal(dynamic raw);

  @protected
  ElementTwinRustAsync dco_decode_box_autoadd_element_twin_rust_async(
      dynamic raw);

  @protected
  ElementTwinRustAsyncSse dco_decode_box_autoadd_element_twin_rust_async_sse(
      dynamic raw);

  @protected
  ElementTwinSse dco_decode_box_autoadd_element_twin_sse(dynamic raw);

  @protected
  ElementTwinSync dco_decode_box_autoadd_element_twin_sync(dynamic raw);

  @protected
  ElementTwinSyncSse dco_decode_box_autoadd_element_twin_sync_sse(dynamic raw);

  @protected
  EmptyTwinNormal dco_decode_box_autoadd_empty_twin_normal(dynamic raw);

  @protected
  EmptyTwinRustAsync dco_decode_box_autoadd_empty_twin_rust_async(dynamic raw);

  @protected
  EmptyTwinRustAsyncSse dco_decode_box_autoadd_empty_twin_rust_async_sse(
      dynamic raw);

  @protected
  EmptyTwinSse dco_decode_box_autoadd_empty_twin_sse(dynamic raw);

  @protected
  EmptyTwinSync dco_decode_box_autoadd_empty_twin_sync(dynamic raw);

  @protected
  EmptyTwinSyncSse dco_decode_box_autoadd_empty_twin_sync_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinNormal dco_decode_box_autoadd_enum_dart_opaque_twin_normal(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsync
      dco_decode_box_autoadd_enum_dart_opaque_twin_rust_async(dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      dco_decode_box_autoadd_enum_dart_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinSse dco_decode_box_autoadd_enum_dart_opaque_twin_sse(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinSync dco_decode_box_autoadd_enum_dart_opaque_twin_sync(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinSyncSse
      dco_decode_box_autoadd_enum_dart_opaque_twin_sync_sse(dynamic raw);

  @protected
  EnumOpaqueTwinNormal dco_decode_box_autoadd_enum_opaque_twin_normal(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsync dco_decode_box_autoadd_enum_opaque_twin_rust_async(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSse
      dco_decode_box_autoadd_enum_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumOpaqueTwinSse dco_decode_box_autoadd_enum_opaque_twin_sse(dynamic raw);

  @protected
  EnumOpaqueTwinSync dco_decode_box_autoadd_enum_opaque_twin_sync(dynamic raw);

  @protected
  EnumOpaqueTwinSyncSse dco_decode_box_autoadd_enum_opaque_twin_sync_sse(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinNormal
      dco_decode_box_autoadd_enum_with_item_mixed_twin_normal(dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsync
      dco_decode_box_autoadd_enum_with_item_mixed_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithItemMixedTwinSse dco_decode_box_autoadd_enum_with_item_mixed_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinSync
      dco_decode_box_autoadd_enum_with_item_mixed_twin_sync(dynamic raw);

  @protected
  EnumWithItemMixedTwinSyncSse
      dco_decode_box_autoadd_enum_with_item_mixed_twin_sync_sse(dynamic raw);

  @protected
  EnumWithItemStructTwinNormal
      dco_decode_box_autoadd_enum_with_item_struct_twin_normal(dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsync
      dco_decode_box_autoadd_enum_with_item_struct_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithItemStructTwinSse
      dco_decode_box_autoadd_enum_with_item_struct_twin_sse(dynamic raw);

  @protected
  EnumWithItemStructTwinSync
      dco_decode_box_autoadd_enum_with_item_struct_twin_sync(dynamic raw);

  @protected
  EnumWithItemStructTwinSyncSse
      dco_decode_box_autoadd_enum_with_item_struct_twin_sync_sse(dynamic raw);

  @protected
  EnumWithItemTupleTwinNormal
      dco_decode_box_autoadd_enum_with_item_tuple_twin_normal(dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsync
      dco_decode_box_autoadd_enum_with_item_tuple_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      dco_decode_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
          dynamic raw);

  @protected
  EnumWithItemTupleTwinSse dco_decode_box_autoadd_enum_with_item_tuple_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinSync
      dco_decode_box_autoadd_enum_with_item_tuple_twin_sync(dynamic raw);

  @protected
  EnumWithItemTupleTwinSyncSse
      dco_decode_box_autoadd_enum_with_item_tuple_twin_sync_sse(dynamic raw);

  @protected
  EventTwinNormal dco_decode_box_autoadd_event_twin_normal(dynamic raw);

  @protected
  EventTwinRustAsync dco_decode_box_autoadd_event_twin_rust_async(dynamic raw);

  @protected
  EventTwinRustAsyncSse dco_decode_box_autoadd_event_twin_rust_async_sse(
      dynamic raw);

  @protected
  EventTwinSse dco_decode_box_autoadd_event_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal dco_decode_box_autoadd_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync
      dco_decode_box_autoadd_exotic_optionals_twin_rust_async(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      dco_decode_box_autoadd_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse dco_decode_box_autoadd_exotic_optionals_twin_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSync dco_decode_box_autoadd_exotic_optionals_twin_sync(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse
      dco_decode_box_autoadd_exotic_optionals_twin_sync_sse(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_32(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_64(dynamic raw);

  @protected
  FeatureChronoTwinNormal dco_decode_box_autoadd_feature_chrono_twin_normal(
      dynamic raw);

  @protected
  FeatureChronoTwinRustAsync
      dco_decode_box_autoadd_feature_chrono_twin_rust_async(dynamic raw);

  @protected
  FeatureChronoTwinSync dco_decode_box_autoadd_feature_chrono_twin_sync(
      dynamic raw);

  @protected
  FeatureUuidTwinNormal dco_decode_box_autoadd_feature_uuid_twin_normal(
      dynamic raw);

  @protected
  FeatureUuidTwinRustAsync dco_decode_box_autoadd_feature_uuid_twin_rust_async(
      dynamic raw);

  @protected
  FeatureUuidTwinSync dco_decode_box_autoadd_feature_uuid_twin_sync(
      dynamic raw);

  @protected
  FeedIdTwinNormal dco_decode_box_autoadd_feed_id_twin_normal(dynamic raw);

  @protected
  FeedIdTwinRustAsync dco_decode_box_autoadd_feed_id_twin_rust_async(
      dynamic raw);

  @protected
  FeedIdTwinRustAsyncSse dco_decode_box_autoadd_feed_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  FeedIdTwinSse dco_decode_box_autoadd_feed_id_twin_sse(dynamic raw);

  @protected
  FeedIdTwinSync dco_decode_box_autoadd_feed_id_twin_sync(dynamic raw);

  @protected
  FeedIdTwinSyncSse dco_decode_box_autoadd_feed_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_16(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_32(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_8(dynamic raw);

  @protected
  KitchenSinkTwinNormal dco_decode_box_autoadd_kitchen_sink_twin_normal(
      dynamic raw);

  @protected
  KitchenSinkTwinRustAsync dco_decode_box_autoadd_kitchen_sink_twin_rust_async(
      dynamic raw);

  @protected
  KitchenSinkTwinRustAsyncSse
      dco_decode_box_autoadd_kitchen_sink_twin_rust_async_sse(dynamic raw);

  @protected
  KitchenSinkTwinSse dco_decode_box_autoadd_kitchen_sink_twin_sse(dynamic raw);

  @protected
  KitchenSinkTwinSync dco_decode_box_autoadd_kitchen_sink_twin_sync(
      dynamic raw);

  @protected
  KitchenSinkTwinSyncSse dco_decode_box_autoadd_kitchen_sink_twin_sync_sse(
      dynamic raw);

  @protected
  ListOfNestedRawStringMirrored
      dco_decode_box_autoadd_list_of_nested_raw_string_mirrored(dynamic raw);

  @protected
  MacroStruct dco_decode_box_autoadd_macro_struct(dynamic raw);

  @protected
  MeasureTwinNormal dco_decode_box_autoadd_measure_twin_normal(dynamic raw);

  @protected
  MeasureTwinRustAsync dco_decode_box_autoadd_measure_twin_rust_async(
      dynamic raw);

  @protected
  MeasureTwinRustAsyncSse dco_decode_box_autoadd_measure_twin_rust_async_sse(
      dynamic raw);

  @protected
  MeasureTwinSse dco_decode_box_autoadd_measure_twin_sse(dynamic raw);

  @protected
  MeasureTwinSync dco_decode_box_autoadd_measure_twin_sync(dynamic raw);

  @protected
  MeasureTwinSyncSse dco_decode_box_autoadd_measure_twin_sync_sse(dynamic raw);

  @protected
  MessageIdTwinNormal dco_decode_box_autoadd_message_id_twin_normal(
      dynamic raw);

  @protected
  MessageIdTwinRustAsync dco_decode_box_autoadd_message_id_twin_rust_async(
      dynamic raw);

  @protected
  MessageIdTwinRustAsyncSse
      dco_decode_box_autoadd_message_id_twin_rust_async_sse(dynamic raw);

  @protected
  MessageIdTwinSse dco_decode_box_autoadd_message_id_twin_sse(dynamic raw);

  @protected
  MessageIdTwinSync dco_decode_box_autoadd_message_id_twin_sync(dynamic raw);

  @protected
  MessageIdTwinSyncSse dco_decode_box_autoadd_message_id_twin_sync_sse(
      dynamic raw);

  @protected
  MyNestedStructTwinNormal dco_decode_box_autoadd_my_nested_struct_twin_normal(
      dynamic raw);

  @protected
  MyNestedStructTwinRustAsync
      dco_decode_box_autoadd_my_nested_struct_twin_rust_async(dynamic raw);

  @protected
  MyNestedStructTwinRustAsyncSse
      dco_decode_box_autoadd_my_nested_struct_twin_rust_async_sse(dynamic raw);

  @protected
  MyNestedStructTwinSse dco_decode_box_autoadd_my_nested_struct_twin_sse(
      dynamic raw);

  @protected
  MyNestedStructTwinSync dco_decode_box_autoadd_my_nested_struct_twin_sync(
      dynamic raw);

  @protected
  MyNestedStructTwinSyncSse
      dco_decode_box_autoadd_my_nested_struct_twin_sync_sse(dynamic raw);

  @protected
  MySize dco_decode_box_autoadd_my_size(dynamic raw);

  @protected
  MyStruct dco_decode_box_autoadd_my_struct(dynamic raw);

  @protected
  MyTreeNodeTwinNormal dco_decode_box_autoadd_my_tree_node_twin_normal(
      dynamic raw);

  @protected
  MyTreeNodeTwinRustAsync dco_decode_box_autoadd_my_tree_node_twin_rust_async(
      dynamic raw);

  @protected
  MyTreeNodeTwinRustAsyncSse
      dco_decode_box_autoadd_my_tree_node_twin_rust_async_sse(dynamic raw);

  @protected
  MyTreeNodeTwinSse dco_decode_box_autoadd_my_tree_node_twin_sse(dynamic raw);

  @protected
  MyTreeNodeTwinSync dco_decode_box_autoadd_my_tree_node_twin_sync(dynamic raw);

  @protected
  MyTreeNodeTwinSyncSse dco_decode_box_autoadd_my_tree_node_twin_sync_sse(
      dynamic raw);

  @protected
  NestedRawStringMirrored dco_decode_box_autoadd_nested_raw_string_mirrored(
      dynamic raw);

  @protected
  NewTypeIntTwinNormal dco_decode_box_autoadd_new_type_int_twin_normal(
      dynamic raw);

  @protected
  NewTypeIntTwinRustAsync dco_decode_box_autoadd_new_type_int_twin_rust_async(
      dynamic raw);

  @protected
  NewTypeIntTwinRustAsyncSse
      dco_decode_box_autoadd_new_type_int_twin_rust_async_sse(dynamic raw);

  @protected
  NewTypeIntTwinSse dco_decode_box_autoadd_new_type_int_twin_sse(dynamic raw);

  @protected
  NewTypeIntTwinSync dco_decode_box_autoadd_new_type_int_twin_sync(dynamic raw);

  @protected
  NewTypeIntTwinSyncSse dco_decode_box_autoadd_new_type_int_twin_sync_sse(
      dynamic raw);

  @protected
  NoteTwinNormal dco_decode_box_autoadd_note_twin_normal(dynamic raw);

  @protected
  NoteTwinRustAsync dco_decode_box_autoadd_note_twin_rust_async(dynamic raw);

  @protected
  NoteTwinRustAsyncSse dco_decode_box_autoadd_note_twin_rust_async_sse(
      dynamic raw);

  @protected
  NoteTwinSse dco_decode_box_autoadd_note_twin_sse(dynamic raw);

  @protected
  NoteTwinSync dco_decode_box_autoadd_note_twin_sync(dynamic raw);

  @protected
  NoteTwinSyncSse dco_decode_box_autoadd_note_twin_sync_sse(dynamic raw);

  @protected
  Numbers dco_decode_box_autoadd_numbers(dynamic raw);

  @protected
  OpaqueNestedTwinNormal dco_decode_box_autoadd_opaque_nested_twin_normal(
      dynamic raw);

  @protected
  OpaqueNestedTwinRustAsync
      dco_decode_box_autoadd_opaque_nested_twin_rust_async(dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncSse
      dco_decode_box_autoadd_opaque_nested_twin_rust_async_sse(dynamic raw);

  @protected
  OpaqueNestedTwinSse dco_decode_box_autoadd_opaque_nested_twin_sse(
      dynamic raw);

  @protected
  OpaqueNestedTwinSync dco_decode_box_autoadd_opaque_nested_twin_sync(
      dynamic raw);

  @protected
  OpaqueNestedTwinSyncSse dco_decode_box_autoadd_opaque_nested_twin_sync_sse(
      dynamic raw);

  @protected
  OptVecsTwinNormal dco_decode_box_autoadd_opt_vecs_twin_normal(dynamic raw);

  @protected
  OptVecsTwinRustAsync dco_decode_box_autoadd_opt_vecs_twin_rust_async(
      dynamic raw);

  @protected
  OptVecsTwinRustAsyncSse dco_decode_box_autoadd_opt_vecs_twin_rust_async_sse(
      dynamic raw);

  @protected
  OptVecsTwinSse dco_decode_box_autoadd_opt_vecs_twin_sse(dynamic raw);

  @protected
  OptVecsTwinSync dco_decode_box_autoadd_opt_vecs_twin_sync(dynamic raw);

  @protected
  OptVecsTwinSyncSse dco_decode_box_autoadd_opt_vecs_twin_sync_sse(dynamic raw);

  @protected
  RawStringMirrored dco_decode_box_autoadd_raw_string_mirrored(dynamic raw);

  @protected
  (String, int) dco_decode_box_autoadd_record_string_i_32(dynamic raw);

  @protected
  Sequences dco_decode_box_autoadd_sequences(dynamic raw);

  @protected
  SomeStructTwinNormal dco_decode_box_autoadd_some_struct_twin_normal(
      dynamic raw);

  @protected
  SomeStructTwinRustAsync dco_decode_box_autoadd_some_struct_twin_rust_async(
      dynamic raw);

  @protected
  SomeStructTwinRustAsyncSse
      dco_decode_box_autoadd_some_struct_twin_rust_async_sse(dynamic raw);

  @protected
  SomeStructTwinSse dco_decode_box_autoadd_some_struct_twin_sse(dynamic raw);

  @protected
  SomeStructTwinSync dco_decode_box_autoadd_some_struct_twin_sync(dynamic raw);

  @protected
  SomeStructTwinSyncSse dco_decode_box_autoadd_some_struct_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithCommentsTwinNormal
      dco_decode_box_autoadd_struct_with_comments_twin_normal(dynamic raw);

  @protected
  StructWithCommentsTwinRustAsync
      dco_decode_box_autoadd_struct_with_comments_twin_rust_async(dynamic raw);

  @protected
  StructWithCommentsTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_comments_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithCommentsTwinSse
      dco_decode_box_autoadd_struct_with_comments_twin_sse(dynamic raw);

  @protected
  StructWithCommentsTwinSync
      dco_decode_box_autoadd_struct_with_comments_twin_sync(dynamic raw);

  @protected
  StructWithCommentsTwinSyncSse
      dco_decode_box_autoadd_struct_with_comments_twin_sync_sse(dynamic raw);

  @protected
  StructWithEnumTwinNormal dco_decode_box_autoadd_struct_with_enum_twin_normal(
      dynamic raw);

  @protected
  StructWithEnumTwinRustAsync
      dco_decode_box_autoadd_struct_with_enum_twin_rust_async(dynamic raw);

  @protected
  StructWithEnumTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_enum_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithEnumTwinSse dco_decode_box_autoadd_struct_with_enum_twin_sse(
      dynamic raw);

  @protected
  StructWithEnumTwinSync dco_decode_box_autoadd_struct_with_enum_twin_sync(
      dynamic raw);

  @protected
  StructWithEnumTwinSyncSse
      dco_decode_box_autoadd_struct_with_enum_twin_sync_sse(dynamic raw);

  @protected
  StructWithOneFieldTwinNormal
      dco_decode_box_autoadd_struct_with_one_field_twin_normal(dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_one_field_twin_rust_async(dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_one_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithOneFieldTwinSse
      dco_decode_box_autoadd_struct_with_one_field_twin_sse(dynamic raw);

  @protected
  StructWithOneFieldTwinSync
      dco_decode_box_autoadd_struct_with_one_field_twin_sync(dynamic raw);

  @protected
  StructWithOneFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_one_field_twin_sync_sse(dynamic raw);

  @protected
  StructWithTwoFieldTwinNormal
      dco_decode_box_autoadd_struct_with_two_field_twin_normal(dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_two_field_twin_rust_async(dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_two_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithTwoFieldTwinSse
      dco_decode_box_autoadd_struct_with_two_field_twin_sse(dynamic raw);

  @protected
  StructWithTwoFieldTwinSync
      dco_decode_box_autoadd_struct_with_two_field_twin_sync(dynamic raw);

  @protected
  StructWithTwoFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_two_field_twin_sync_sse(dynamic raw);

  @protected
  StructWithZeroFieldTwinNormal
      dco_decode_box_autoadd_struct_with_zero_field_twin_normal(dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsync
      dco_decode_box_autoadd_struct_with_zero_field_twin_rust_async(
          dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      dco_decode_box_autoadd_struct_with_zero_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  StructWithZeroFieldTwinSse
      dco_decode_box_autoadd_struct_with_zero_field_twin_sse(dynamic raw);

  @protected
  StructWithZeroFieldTwinSync
      dco_decode_box_autoadd_struct_with_zero_field_twin_sync(dynamic raw);

  @protected
  StructWithZeroFieldTwinSyncSse
      dco_decode_box_autoadd_struct_with_zero_field_twin_sync_sse(dynamic raw);

  @protected
  SumWithTwinNormal dco_decode_box_autoadd_sum_with_twin_normal(dynamic raw);

  @protected
  SumWithTwinRustAsync dco_decode_box_autoadd_sum_with_twin_rust_async(
      dynamic raw);

  @protected
  SumWithTwinRustAsyncSse dco_decode_box_autoadd_sum_with_twin_rust_async_sse(
      dynamic raw);

  @protected
  SumWithTwinSse dco_decode_box_autoadd_sum_with_twin_sse(dynamic raw);

  @protected
  SumWithTwinSync dco_decode_box_autoadd_sum_with_twin_sync(dynamic raw);

  @protected
  SumWithTwinSyncSse dco_decode_box_autoadd_sum_with_twin_sync_sse(dynamic raw);

  @protected
  TestIdTwinNormal dco_decode_box_autoadd_test_id_twin_normal(dynamic raw);

  @protected
  TestIdTwinRustAsync dco_decode_box_autoadd_test_id_twin_rust_async(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncSse dco_decode_box_autoadd_test_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  TestIdTwinSse dco_decode_box_autoadd_test_id_twin_sse(dynamic raw);

  @protected
  TestIdTwinSync dco_decode_box_autoadd_test_id_twin_sync(dynamic raw);

  @protected
  TestIdTwinSyncSse dco_decode_box_autoadd_test_id_twin_sync_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinNormal
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_normal(
          dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSse
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSync
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      dco_decode_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinNormal
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_normal(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
          dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSse
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSync
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      dco_decode_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
          dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_16(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_8(dynamic raw);

  @protected
  UserIdTwinNormal dco_decode_box_autoadd_user_id_twin_normal(dynamic raw);

  @protected
  UserIdTwinRustAsync dco_decode_box_autoadd_user_id_twin_rust_async(
      dynamic raw);

  @protected
  UserIdTwinRustAsyncSse dco_decode_box_autoadd_user_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  UserIdTwinSse dco_decode_box_autoadd_user_id_twin_sse(dynamic raw);

  @protected
  UserIdTwinSync dco_decode_box_autoadd_user_id_twin_sync(dynamic raw);

  @protected
  UserIdTwinSyncSse dco_decode_box_autoadd_user_id_twin_sync_sse(dynamic raw);

  @protected
  WeekdaysTwinNormal dco_decode_box_autoadd_weekdays_twin_normal(dynamic raw);

  @protected
  WeekdaysTwinRustAsync dco_decode_box_autoadd_weekdays_twin_rust_async(
      dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse dco_decode_box_autoadd_weekdays_twin_rust_async_sse(
      dynamic raw);

  @protected
  WeekdaysTwinSse dco_decode_box_autoadd_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync dco_decode_box_autoadd_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse dco_decode_box_autoadd_weekdays_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal
      dco_decode_box_benchmark_binary_tree_twin_normal(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      dco_decode_box_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      dco_decode_box_benchmark_binary_tree_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse dco_decode_box_benchmark_binary_tree_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync dco_decode_box_benchmark_binary_tree_twin_sync(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      dco_decode_box_benchmark_binary_tree_twin_sync_sse(dynamic raw);

  @protected
  BlobTwinNormal dco_decode_box_blob_twin_normal(dynamic raw);

  @protected
  BlobTwinRustAsync dco_decode_box_blob_twin_rust_async(dynamic raw);

  @protected
  BlobTwinRustAsyncSse dco_decode_box_blob_twin_rust_async_sse(dynamic raw);

  @protected
  BlobTwinSse dco_decode_box_blob_twin_sse(dynamic raw);

  @protected
  BlobTwinSync dco_decode_box_blob_twin_sync(dynamic raw);

  @protected
  BlobTwinSyncSse dco_decode_box_blob_twin_sync_sse(dynamic raw);

  @protected
  bool dco_decode_box_bool(dynamic raw);

  @protected
  DistanceTwinNormal dco_decode_box_distance_twin_normal(dynamic raw);

  @protected
  DistanceTwinRustAsync dco_decode_box_distance_twin_rust_async(dynamic raw);

  @protected
  DistanceTwinRustAsyncSse dco_decode_box_distance_twin_rust_async_sse(
      dynamic raw);

  @protected
  DistanceTwinSse dco_decode_box_distance_twin_sse(dynamic raw);

  @protected
  DistanceTwinSync dco_decode_box_distance_twin_sync(dynamic raw);

  @protected
  DistanceTwinSyncSse dco_decode_box_distance_twin_sync_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal dco_decode_box_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync dco_decode_box_exotic_optionals_twin_rust_async(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      dco_decode_box_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse dco_decode_box_exotic_optionals_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSync dco_decode_box_exotic_optionals_twin_sync(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse dco_decode_box_exotic_optionals_twin_sync_sse(
      dynamic raw);

  @protected
  double dco_decode_box_f_64(dynamic raw);

  @protected
  FeedIdTwinNormal dco_decode_box_feed_id_twin_normal(dynamic raw);

  @protected
  FeedIdTwinRustAsync dco_decode_box_feed_id_twin_rust_async(dynamic raw);

  @protected
  FeedIdTwinRustAsyncSse dco_decode_box_feed_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  FeedIdTwinSse dco_decode_box_feed_id_twin_sse(dynamic raw);

  @protected
  FeedIdTwinSync dco_decode_box_feed_id_twin_sync(dynamic raw);

  @protected
  FeedIdTwinSyncSse dco_decode_box_feed_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_i_32(dynamic raw);

  @protected
  int dco_decode_box_i_64(dynamic raw);

  @protected
  int dco_decode_box_i_8(dynamic raw);

  @protected
  KitchenSinkTwinNormal dco_decode_box_kitchen_sink_twin_normal(dynamic raw);

  @protected
  KitchenSinkTwinRustAsync dco_decode_box_kitchen_sink_twin_rust_async(
      dynamic raw);

  @protected
  KitchenSinkTwinRustAsyncSse dco_decode_box_kitchen_sink_twin_rust_async_sse(
      dynamic raw);

  @protected
  KitchenSinkTwinSse dco_decode_box_kitchen_sink_twin_sse(dynamic raw);

  @protected
  KitchenSinkTwinSync dco_decode_box_kitchen_sink_twin_sync(dynamic raw);

  @protected
  KitchenSinkTwinSyncSse dco_decode_box_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  MySize dco_decode_box_my_size(dynamic raw);

  @protected
  SpeedTwinNormal dco_decode_box_speed_twin_normal(dynamic raw);

  @protected
  SpeedTwinRustAsync dco_decode_box_speed_twin_rust_async(dynamic raw);

  @protected
  SpeedTwinRustAsyncSse dco_decode_box_speed_twin_rust_async_sse(dynamic raw);

  @protected
  SpeedTwinSse dco_decode_box_speed_twin_sse(dynamic raw);

  @protected
  SpeedTwinSync dco_decode_box_speed_twin_sync(dynamic raw);

  @protected
  SpeedTwinSyncSse dco_decode_box_speed_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_box_u_8(dynamic raw);

  @protected
  U8Array1600 dco_decode_box_u_8_array_1600(dynamic raw);

  @protected
  U8Array8 dco_decode_box_u_8_array_8(dynamic raw);

  @protected
  WeekdaysTwinNormal dco_decode_box_weekdays_twin_normal(dynamic raw);

  @protected
  WeekdaysTwinRustAsync dco_decode_box_weekdays_twin_rust_async(dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse dco_decode_box_weekdays_twin_rust_async_sse(
      dynamic raw);

  @protected
  WeekdaysTwinSse dco_decode_box_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync dco_decode_box_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse dco_decode_box_weekdays_twin_sync_sse(dynamic raw);

  @protected
  CTwinNormal dco_decode_c_twin_normal(dynamic raw);

  @protected
  CTwinRustAsync dco_decode_c_twin_rust_async(dynamic raw);

  @protected
  CTwinRustAsyncSse dco_decode_c_twin_rust_async_sse(dynamic raw);

  @protected
  CTwinSse dco_decode_c_twin_sse(dynamic raw);

  @protected
  CTwinSync dco_decode_c_twin_sync(dynamic raw);

  @protected
  CTwinSyncSse dco_decode_c_twin_sync_sse(dynamic raw);

  @protected
  ConcatenateWithTwinNormal dco_decode_concatenate_with_twin_normal(
      dynamic raw);

  @protected
  ConcatenateWithTwinRustAsync dco_decode_concatenate_with_twin_rust_async(
      dynamic raw);

  @protected
  ConcatenateWithTwinRustAsyncSse
      dco_decode_concatenate_with_twin_rust_async_sse(dynamic raw);

  @protected
  ConcatenateWithTwinSse dco_decode_concatenate_with_twin_sse(dynamic raw);

  @protected
  ConcatenateWithTwinSync dco_decode_concatenate_with_twin_sync(dynamic raw);

  @protected
  ConcatenateWithTwinSyncSse dco_decode_concatenate_with_twin_sync_sse(
      dynamic raw);

  @protected
  ContainsMirroredSubStructTwinNormal
      dco_decode_contains_mirrored_sub_struct_twin_normal(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinRustAsync
      dco_decode_contains_mirrored_sub_struct_twin_rust_async(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinRustAsyncSse
      dco_decode_contains_mirrored_sub_struct_twin_rust_async_sse(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinSse
      dco_decode_contains_mirrored_sub_struct_twin_sse(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinSync
      dco_decode_contains_mirrored_sub_struct_twin_sync(dynamic raw);

  @protected
  ContainsMirroredSubStructTwinSyncSse
      dco_decode_contains_mirrored_sub_struct_twin_sync_sse(dynamic raw);

  @protected
  CustomEnumErrorTwinNormal dco_decode_custom_enum_error_twin_normal(
      dynamic raw);

  @protected
  CustomEnumErrorTwinRustAsync dco_decode_custom_enum_error_twin_rust_async(
      dynamic raw);

  @protected
  CustomEnumErrorTwinRustAsyncSse
      dco_decode_custom_enum_error_twin_rust_async_sse(dynamic raw);

  @protected
  CustomEnumErrorTwinSse dco_decode_custom_enum_error_twin_sse(dynamic raw);

  @protected
  CustomEnumErrorTwinSync dco_decode_custom_enum_error_twin_sync(dynamic raw);

  @protected
  CustomEnumErrorTwinSyncSse dco_decode_custom_enum_error_twin_sync_sse(
      dynamic raw);

  @protected
  CustomErrorTwinNormal dco_decode_custom_error_twin_normal(dynamic raw);

  @protected
  CustomErrorTwinRustAsync dco_decode_custom_error_twin_rust_async(dynamic raw);

  @protected
  CustomErrorTwinRustAsyncSse dco_decode_custom_error_twin_rust_async_sse(
      dynamic raw);

  @protected
  CustomErrorTwinSse dco_decode_custom_error_twin_sse(dynamic raw);

  @protected
  CustomErrorTwinSync dco_decode_custom_error_twin_sync(dynamic raw);

  @protected
  CustomErrorTwinSyncSse dco_decode_custom_error_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedError1TwinNormal dco_decode_custom_nested_error_1_twin_normal(
      dynamic raw);

  @protected
  CustomNestedError1TwinRustAsync
      dco_decode_custom_nested_error_1_twin_rust_async(dynamic raw);

  @protected
  CustomNestedError1TwinRustAsyncSse
      dco_decode_custom_nested_error_1_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedError1TwinSse dco_decode_custom_nested_error_1_twin_sse(
      dynamic raw);

  @protected
  CustomNestedError1TwinSync dco_decode_custom_nested_error_1_twin_sync(
      dynamic raw);

  @protected
  CustomNestedError1TwinSyncSse dco_decode_custom_nested_error_1_twin_sync_sse(
      dynamic raw);

  @protected
  CustomNestedError2TwinNormal dco_decode_custom_nested_error_2_twin_normal(
      dynamic raw);

  @protected
  CustomNestedError2TwinRustAsync
      dco_decode_custom_nested_error_2_twin_rust_async(dynamic raw);

  @protected
  CustomNestedError2TwinRustAsyncSse
      dco_decode_custom_nested_error_2_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedError2TwinSse dco_decode_custom_nested_error_2_twin_sse(
      dynamic raw);

  @protected
  CustomNestedError2TwinSync dco_decode_custom_nested_error_2_twin_sync(
      dynamic raw);

  @protected
  CustomNestedError2TwinSyncSse dco_decode_custom_nested_error_2_twin_sync_sse(
      dynamic raw);

  @protected
  CustomNestedErrorInnerTwinNormal
      dco_decode_custom_nested_error_inner_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      dco_decode_custom_nested_error_inner_twin_rust_async(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      dco_decode_custom_nested_error_inner_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSse dco_decode_custom_nested_error_inner_twin_sse(
      dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSync dco_decode_custom_nested_error_inner_twin_sync(
      dynamic raw);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      dco_decode_custom_nested_error_inner_twin_sync_sse(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinNormal
      dco_decode_custom_nested_error_outer_twin_normal(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      dco_decode_custom_nested_error_outer_twin_rust_async(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      dco_decode_custom_nested_error_outer_twin_rust_async_sse(dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSse dco_decode_custom_nested_error_outer_twin_sse(
      dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSync dco_decode_custom_nested_error_outer_twin_sync(
      dynamic raw);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      dco_decode_custom_nested_error_outer_twin_sync_sse(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinNormal
      dco_decode_custom_struct_error_another_twin_normal(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinRustAsync
      dco_decode_custom_struct_error_another_twin_rust_async(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinRustAsyncSse
      dco_decode_custom_struct_error_another_twin_rust_async_sse(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinSse
      dco_decode_custom_struct_error_another_twin_sse(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinSync
      dco_decode_custom_struct_error_another_twin_sync(dynamic raw);

  @protected
  CustomStructErrorAnotherTwinSyncSse
      dco_decode_custom_struct_error_another_twin_sync_sse(dynamic raw);

  @protected
  CustomStructErrorTwinNormal dco_decode_custom_struct_error_twin_normal(
      dynamic raw);

  @protected
  CustomStructErrorTwinRustAsync dco_decode_custom_struct_error_twin_rust_async(
      dynamic raw);

  @protected
  CustomStructErrorTwinRustAsyncSse
      dco_decode_custom_struct_error_twin_rust_async_sse(dynamic raw);

  @protected
  CustomStructErrorTwinSse dco_decode_custom_struct_error_twin_sse(dynamic raw);

  @protected
  CustomStructErrorTwinSync dco_decode_custom_struct_error_twin_sync(
      dynamic raw);

  @protected
  CustomStructErrorTwinSyncSse dco_decode_custom_struct_error_twin_sync_sse(
      dynamic raw);

  @protected
  CustomStructTwinNormal dco_decode_custom_struct_twin_normal(dynamic raw);

  @protected
  CustomStructTwinRustAsync dco_decode_custom_struct_twin_rust_async(
      dynamic raw);

  @protected
  CustomStructTwinRustAsyncSse dco_decode_custom_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  CustomStructTwinSse dco_decode_custom_struct_twin_sse(dynamic raw);

  @protected
  CustomStructTwinSync dco_decode_custom_struct_twin_sync(dynamic raw);

  @protected
  CustomStructTwinSyncSse dco_decode_custom_struct_twin_sync_sse(dynamic raw);

  @protected
  CustomizedTwinNormal dco_decode_customized_twin_normal(dynamic raw);

  @protected
  CustomizedTwinRustAsync dco_decode_customized_twin_rust_async(dynamic raw);

  @protected
  CustomizedTwinRustAsyncSse dco_decode_customized_twin_rust_async_sse(
      dynamic raw);

  @protected
  CustomizedTwinSse dco_decode_customized_twin_sse(dynamic raw);

  @protected
  CustomizedTwinSync dco_decode_customized_twin_sync(dynamic raw);

  @protected
  CustomizedTwinSyncSse dco_decode_customized_twin_sync_sse(dynamic raw);

  @protected
  DartOpaqueNestedTwinNormal dco_decode_dart_opaque_nested_twin_normal(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsync dco_decode_dart_opaque_nested_twin_rust_async(
      dynamic raw);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      dco_decode_dart_opaque_nested_twin_rust_async_sse(dynamic raw);

  @protected
  DartOpaqueNestedTwinSse dco_decode_dart_opaque_nested_twin_sse(dynamic raw);

  @protected
  DartOpaqueNestedTwinSync dco_decode_dart_opaque_nested_twin_sync(dynamic raw);

  @protected
  DartOpaqueNestedTwinSyncSse dco_decode_dart_opaque_nested_twin_sync_sse(
      dynamic raw);

  @protected
  dynamic dco_decode_dartabi(dynamic raw);

  @protected
  DemoStructForRustCallDartTwinNormal
      dco_decode_demo_struct_for_rust_call_dart_twin_normal(dynamic raw);

  @protected
  DemoStructForRustCallDartTwinRustAsync
      dco_decode_demo_struct_for_rust_call_dart_twin_rust_async(dynamic raw);

  @protected
  DemoStructForRustCallDartTwinRustAsyncSse
      dco_decode_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          dynamic raw);

  @protected
  DemoStructForRustCallDartTwinSse
      dco_decode_demo_struct_for_rust_call_dart_twin_sse(dynamic raw);

  @protected
  DistanceTwinNormal dco_decode_distance_twin_normal(dynamic raw);

  @protected
  DistanceTwinRustAsync dco_decode_distance_twin_rust_async(dynamic raw);

  @protected
  DistanceTwinRustAsyncSse dco_decode_distance_twin_rust_async_sse(dynamic raw);

  @protected
  DistanceTwinSse dco_decode_distance_twin_sse(dynamic raw);

  @protected
  DistanceTwinSync dco_decode_distance_twin_sync(dynamic raw);

  @protected
  DistanceTwinSyncSse dco_decode_distance_twin_sync_sse(dynamic raw);

  @protected
  ElementTwinNormal dco_decode_element_twin_normal(dynamic raw);

  @protected
  ElementTwinRustAsync dco_decode_element_twin_rust_async(dynamic raw);

  @protected
  ElementTwinRustAsyncSse dco_decode_element_twin_rust_async_sse(dynamic raw);

  @protected
  ElementTwinSse dco_decode_element_twin_sse(dynamic raw);

  @protected
  ElementTwinSync dco_decode_element_twin_sync(dynamic raw);

  @protected
  ElementTwinSyncSse dco_decode_element_twin_sync_sse(dynamic raw);

  @protected
  EmptyTwinNormal dco_decode_empty_twin_normal(dynamic raw);

  @protected
  EmptyTwinRustAsync dco_decode_empty_twin_rust_async(dynamic raw);

  @protected
  EmptyTwinRustAsyncSse dco_decode_empty_twin_rust_async_sse(dynamic raw);

  @protected
  EmptyTwinSse dco_decode_empty_twin_sse(dynamic raw);

  @protected
  EmptyTwinSync dco_decode_empty_twin_sync(dynamic raw);

  @protected
  EmptyTwinSyncSse dco_decode_empty_twin_sync_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinNormal dco_decode_enum_dart_opaque_twin_normal(dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsync dco_decode_enum_dart_opaque_twin_rust_async(
      dynamic raw);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      dco_decode_enum_dart_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinSse dco_decode_enum_dart_opaque_twin_sse(dynamic raw);

  @protected
  EnumDartOpaqueTwinSync dco_decode_enum_dart_opaque_twin_sync(dynamic raw);

  @protected
  EnumDartOpaqueTwinSyncSse dco_decode_enum_dart_opaque_twin_sync_sse(
      dynamic raw);

  @protected
  EnumOpaqueTwinNormal dco_decode_enum_opaque_twin_normal(dynamic raw);

  @protected
  EnumOpaqueTwinNormalArray5 dco_decode_enum_opaque_twin_normal_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsync dco_decode_enum_opaque_twin_rust_async(dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncArray5 dco_decode_enum_opaque_twin_rust_async_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSse dco_decode_enum_opaque_twin_rust_async_sse(
      dynamic raw);

  @protected
  EnumOpaqueTwinRustAsyncSseArray5
      dco_decode_enum_opaque_twin_rust_async_sse_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinSse dco_decode_enum_opaque_twin_sse(dynamic raw);

  @protected
  EnumOpaqueTwinSseArray5 dco_decode_enum_opaque_twin_sse_array_5(dynamic raw);

  @protected
  EnumOpaqueTwinSync dco_decode_enum_opaque_twin_sync(dynamic raw);

  @protected
  EnumOpaqueTwinSyncArray5 dco_decode_enum_opaque_twin_sync_array_5(
      dynamic raw);

  @protected
  EnumOpaqueTwinSyncSse dco_decode_enum_opaque_twin_sync_sse(dynamic raw);

  @protected
  EnumOpaqueTwinSyncSseArray5 dco_decode_enum_opaque_twin_sync_sse_array_5(
      dynamic raw);

  @protected
  EnumSimpleTwinNormal dco_decode_enum_simple_twin_normal(dynamic raw);

  @protected
  EnumSimpleTwinRustAsync dco_decode_enum_simple_twin_rust_async(dynamic raw);

  @protected
  EnumSimpleTwinRustAsyncSse dco_decode_enum_simple_twin_rust_async_sse(
      dynamic raw);

  @protected
  EnumSimpleTwinSse dco_decode_enum_simple_twin_sse(dynamic raw);

  @protected
  EnumSimpleTwinSync dco_decode_enum_simple_twin_sync(dynamic raw);

  @protected
  EnumSimpleTwinSyncSse dco_decode_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  EnumWithItemMixedTwinNormal dco_decode_enum_with_item_mixed_twin_normal(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsync
      dco_decode_enum_with_item_mixed_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      dco_decode_enum_with_item_mixed_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithItemMixedTwinSse dco_decode_enum_with_item_mixed_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinSync dco_decode_enum_with_item_mixed_twin_sync(
      dynamic raw);

  @protected
  EnumWithItemMixedTwinSyncSse dco_decode_enum_with_item_mixed_twin_sync_sse(
      dynamic raw);

  @protected
  EnumWithItemStructTwinNormal dco_decode_enum_with_item_struct_twin_normal(
      dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsync
      dco_decode_enum_with_item_struct_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      dco_decode_enum_with_item_struct_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithItemStructTwinSse dco_decode_enum_with_item_struct_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemStructTwinSync dco_decode_enum_with_item_struct_twin_sync(
      dynamic raw);

  @protected
  EnumWithItemStructTwinSyncSse dco_decode_enum_with_item_struct_twin_sync_sse(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinNormal dco_decode_enum_with_item_tuple_twin_normal(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsync
      dco_decode_enum_with_item_tuple_twin_rust_async(dynamic raw);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      dco_decode_enum_with_item_tuple_twin_rust_async_sse(dynamic raw);

  @protected
  EnumWithItemTupleTwinSse dco_decode_enum_with_item_tuple_twin_sse(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinSync dco_decode_enum_with_item_tuple_twin_sync(
      dynamic raw);

  @protected
  EnumWithItemTupleTwinSyncSse dco_decode_enum_with_item_tuple_twin_sync_sse(
      dynamic raw);

  @protected
  EventTwinNormal dco_decode_event_twin_normal(dynamic raw);

  @protected
  EventTwinRustAsync dco_decode_event_twin_rust_async(dynamic raw);

  @protected
  EventTwinRustAsyncSse dco_decode_event_twin_rust_async_sse(dynamic raw);

  @protected
  EventTwinSse dco_decode_event_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal dco_decode_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync dco_decode_exotic_optionals_twin_rust_async(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      dco_decode_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse dco_decode_exotic_optionals_twin_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSync dco_decode_exotic_optionals_twin_sync(dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse dco_decode_exotic_optionals_twin_sync_sse(
      dynamic raw);

  @protected
  double dco_decode_f_32(dynamic raw);

  @protected
  double dco_decode_f_64(dynamic raw);

  @protected
  F64Array16 dco_decode_f_64_array_16(dynamic raw);

  @protected
  FeatureChronoTwinNormal dco_decode_feature_chrono_twin_normal(dynamic raw);

  @protected
  FeatureChronoTwinRustAsync dco_decode_feature_chrono_twin_rust_async(
      dynamic raw);

  @protected
  FeatureChronoTwinSync dco_decode_feature_chrono_twin_sync(dynamic raw);

  @protected
  FeatureUuidTwinNormal dco_decode_feature_uuid_twin_normal(dynamic raw);

  @protected
  FeatureUuidTwinRustAsync dco_decode_feature_uuid_twin_rust_async(dynamic raw);

  @protected
  FeatureUuidTwinSync dco_decode_feature_uuid_twin_sync(dynamic raw);

  @protected
  FeedIdTwinNormal dco_decode_feed_id_twin_normal(dynamic raw);

  @protected
  FeedIdTwinRustAsync dco_decode_feed_id_twin_rust_async(dynamic raw);

  @protected
  FeedIdTwinRustAsyncSse dco_decode_feed_id_twin_rust_async_sse(dynamic raw);

  @protected
  FeedIdTwinSse dco_decode_feed_id_twin_sse(dynamic raw);

  @protected
  FeedIdTwinSync dco_decode_feed_id_twin_sync(dynamic raw);

  @protected
  FeedIdTwinSyncSse dco_decode_feed_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_i_16(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  I32Array2 dco_decode_i_32_array_2(dynamic raw);

  @protected
  int dco_decode_i_64(dynamic raw);

  @protected
  int dco_decode_i_8(dynamic raw);

  @protected
  int dco_decode_isize(dynamic raw);

  @protected
  KitchenSinkTwinNormal dco_decode_kitchen_sink_twin_normal(dynamic raw);

  @protected
  KitchenSinkTwinRustAsync dco_decode_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  KitchenSinkTwinRustAsyncSse dco_decode_kitchen_sink_twin_rust_async_sse(
      dynamic raw);

  @protected
  KitchenSinkTwinSse dco_decode_kitchen_sink_twin_sse(dynamic raw);

  @protected
  KitchenSinkTwinSync dco_decode_kitchen_sink_twin_sync(dynamic raw);

  @protected
  KitchenSinkTwinSyncSse dco_decode_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  List<Duration> dco_decode_list_Chrono_Duration(dynamic raw);

  @protected
  List<DateTime> dco_decode_list_Chrono_Local(dynamic raw);

  @protected
  List<DateTime> dco_decode_list_Chrono_Naive(dynamic raw);

  @protected
  List<Object> dco_decode_list_DartOpaque(dynamic raw);

  @protected
  List<HideData> dco_decode_list_RustOpaque_hide_data(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<ApplicationEnvVar> dco_decode_list_application_env_var(dynamic raw);

  @protected
  List<ApplicationSettings> dco_decode_list_application_settings(dynamic raw);

  @protected
  List<AttributeTwinNormal> dco_decode_list_attribute_twin_normal(dynamic raw);

  @protected
  List<AttributeTwinRustAsync> dco_decode_list_attribute_twin_rust_async(
      dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse> dco_decode_list_attribute_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<AttributeTwinSse> dco_decode_list_attribute_twin_sse(dynamic raw);

  @protected
  List<AttributeTwinSync> dco_decode_list_attribute_twin_sync(dynamic raw);

  @protected
  List<AttributeTwinSyncSse> dco_decode_list_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  List<bool> dco_decode_list_bool(dynamic raw);

  @protected
  List<ElementTwinNormal> dco_decode_list_element_twin_normal(dynamic raw);

  @protected
  List<ElementTwinRustAsync> dco_decode_list_element_twin_rust_async(
      dynamic raw);

  @protected
  List<ElementTwinRustAsyncSse> dco_decode_list_element_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<ElementTwinSse> dco_decode_list_element_twin_sse(dynamic raw);

  @protected
  List<ElementTwinSync> dco_decode_list_element_twin_sync(dynamic raw);

  @protected
  List<ElementTwinSyncSse> dco_decode_list_element_twin_sync_sse(dynamic raw);

  @protected
  List<EnumOpaqueTwinNormal> dco_decode_list_enum_opaque_twin_normal(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinRustAsync> dco_decode_list_enum_opaque_twin_rust_async(
      dynamic raw);

  @protected
  List<EnumOpaqueTwinRustAsyncSse>
      dco_decode_list_enum_opaque_twin_rust_async_sse(dynamic raw);

  @protected
  List<EnumOpaqueTwinSse> dco_decode_list_enum_opaque_twin_sse(dynamic raw);

  @protected
  List<EnumOpaqueTwinSync> dco_decode_list_enum_opaque_twin_sync(dynamic raw);

  @protected
  List<EnumOpaqueTwinSyncSse> dco_decode_list_enum_opaque_twin_sync_sse(
      dynamic raw);

  @protected
  List<MyEnum> dco_decode_list_my_enum(dynamic raw);

  @protected
  List<MySize> dco_decode_list_my_size(dynamic raw);

  @protected
  List<MyTreeNodeTwinNormal> dco_decode_list_my_tree_node_twin_normal(
      dynamic raw);

  @protected
  List<MyTreeNodeTwinRustAsync> dco_decode_list_my_tree_node_twin_rust_async(
      dynamic raw);

  @protected
  List<MyTreeNodeTwinRustAsyncSse>
      dco_decode_list_my_tree_node_twin_rust_async_sse(dynamic raw);

  @protected
  List<MyTreeNodeTwinSse> dco_decode_list_my_tree_node_twin_sse(dynamic raw);

  @protected
  List<MyTreeNodeTwinSync> dco_decode_list_my_tree_node_twin_sync(dynamic raw);

  @protected
  List<MyTreeNodeTwinSyncSse> dco_decode_list_my_tree_node_twin_sync_sse(
      dynamic raw);

  @protected
  List<NestedRawStringMirrored> dco_decode_list_nested_raw_string_mirrored(
      dynamic raw);

  @protected
  ListOfNestedRawStringMirrored dco_decode_list_of_nested_raw_string_mirrored(
      dynamic raw);

  @protected
  List<String?> dco_decode_list_opt_String(dynamic raw);

  @protected
  List<AttributeTwinNormal?>
      dco_decode_list_opt_box_autoadd_attribute_twin_normal(dynamic raw);

  @protected
  List<AttributeTwinRustAsync?>
      dco_decode_list_opt_box_autoadd_attribute_twin_rust_async(dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse?>
      dco_decode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<AttributeTwinSse?> dco_decode_list_opt_box_autoadd_attribute_twin_sse(
      dynamic raw);

  @protected
  List<AttributeTwinSync?> dco_decode_list_opt_box_autoadd_attribute_twin_sync(
      dynamic raw);

  @protected
  List<AttributeTwinSyncSse?>
      dco_decode_list_opt_box_autoadd_attribute_twin_sync_sse(dynamic raw);

  @protected
  List<int?> dco_decode_list_opt_box_autoadd_i_32(dynamic raw);

  @protected
  List<WeekdaysTwinNormal?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_normal(dynamic raw);

  @protected
  List<WeekdaysTwinRustAsync?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_rust_async(dynamic raw);

  @protected
  List<WeekdaysTwinRustAsyncSse?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(dynamic raw);

  @protected
  List<WeekdaysTwinSse?> dco_decode_list_opt_box_autoadd_weekdays_twin_sse(
      dynamic raw);

  @protected
  List<WeekdaysTwinSync?> dco_decode_list_opt_box_autoadd_weekdays_twin_sync(
      dynamic raw);

  @protected
  List<WeekdaysTwinSyncSse?>
      dco_decode_list_opt_box_autoadd_weekdays_twin_sync_sse(dynamic raw);

  @protected
  List<Int32List?> dco_decode_list_opt_list_prim_i_32(dynamic raw);

  @protected
  List<PointTwinNormal> dco_decode_list_point_twin_normal(dynamic raw);

  @protected
  List<PointTwinRustAsync> dco_decode_list_point_twin_rust_async(dynamic raw);

  @protected
  List<PointTwinRustAsyncSse> dco_decode_list_point_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<PointTwinSse> dco_decode_list_point_twin_sse(dynamic raw);

  @protected
  List<PointTwinSync> dco_decode_list_point_twin_sync(dynamic raw);

  @protected
  List<PointTwinSyncSse> dco_decode_list_point_twin_sync_sse(dynamic raw);

  @protected
  Float32List dco_decode_list_prim_f_32(dynamic raw);

  @protected
  Float64List dco_decode_list_prim_f_64(dynamic raw);

  @protected
  Int16List dco_decode_list_prim_i_16(dynamic raw);

  @protected
  Int32List dco_decode_list_prim_i_32(dynamic raw);

  @protected
  Int64List dco_decode_list_prim_i_64(dynamic raw);

  @protected
  Int8List dco_decode_list_prim_i_8(dynamic raw);

  @protected
  Uint16List dco_decode_list_prim_u_16(dynamic raw);

  @protected
  Uint32List dco_decode_list_prim_u_32(dynamic raw);

  @protected
  Uint64List dco_decode_list_prim_u_64(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8(dynamic raw);

  @protected
  List<RawStringEnumMirrored> dco_decode_list_raw_string_enum_mirrored(
      dynamic raw);

  @protected
  List<RawStringMirrored> dco_decode_list_raw_string_mirrored(dynamic raw);

  @protected
  List<(int, int)> dco_decode_list_record_i_32_i_32(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinNormal)>
      dco_decode_list_record_string_enum_simple_twin_normal(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinRustAsync)>
      dco_decode_list_record_string_enum_simple_twin_rust_async(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinRustAsyncSse)>
      dco_decode_list_record_string_enum_simple_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<(String, EnumSimpleTwinSse)>
      dco_decode_list_record_string_enum_simple_twin_sse(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinSync)>
      dco_decode_list_record_string_enum_simple_twin_sync(dynamic raw);

  @protected
  List<(String, EnumSimpleTwinSyncSse)>
      dco_decode_list_record_string_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  List<(String, int)> dco_decode_list_record_string_i_32(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinNormal)>
      dco_decode_list_record_string_kitchen_sink_twin_normal(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinRustAsync)>
      dco_decode_list_record_string_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinRustAsyncSse)>
      dco_decode_list_record_string_kitchen_sink_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<(String, KitchenSinkTwinSse)>
      dco_decode_list_record_string_kitchen_sink_twin_sse(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinSync)>
      dco_decode_list_record_string_kitchen_sink_twin_sync(dynamic raw);

  @protected
  List<(String, KitchenSinkTwinSyncSse)>
      dco_decode_list_record_string_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  List<(String, Uint8List)> dco_decode_list_record_string_list_prim_u_8(
      dynamic raw);

  @protected
  List<(String, MySize)> dco_decode_list_record_string_my_size(dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  List<SumWithTwinNormal> dco_decode_list_sum_with_twin_normal(dynamic raw);

  @protected
  List<SumWithTwinRustAsync> dco_decode_list_sum_with_twin_rust_async(
      dynamic raw);

  @protected
  List<SumWithTwinRustAsyncSse> dco_decode_list_sum_with_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<SumWithTwinSse> dco_decode_list_sum_with_twin_sse(dynamic raw);

  @protected
  List<SumWithTwinSync> dco_decode_list_sum_with_twin_sync(dynamic raw);

  @protected
  List<SumWithTwinSyncSse> dco_decode_list_sum_with_twin_sync_sse(dynamic raw);

  @protected
  List<TestIdTwinNormal> dco_decode_list_test_id_twin_normal(dynamic raw);

  @protected
  List<TestIdTwinRustAsync> dco_decode_list_test_id_twin_rust_async(
      dynamic raw);

  @protected
  List<TestIdTwinRustAsyncSse> dco_decode_list_test_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<TestIdTwinSse> dco_decode_list_test_id_twin_sse(dynamic raw);

  @protected
  List<TestIdTwinSync> dco_decode_list_test_id_twin_sync(dynamic raw);

  @protected
  List<TestIdTwinSyncSse> dco_decode_list_test_id_twin_sync_sse(dynamic raw);

  @protected
  List<WeekdaysTwinNormal> dco_decode_list_weekdays_twin_normal(dynamic raw);

  @protected
  List<WeekdaysTwinRustAsync> dco_decode_list_weekdays_twin_rust_async(
      dynamic raw);

  @protected
  List<WeekdaysTwinRustAsyncSse> dco_decode_list_weekdays_twin_rust_async_sse(
      dynamic raw);

  @protected
  List<WeekdaysTwinSse> dco_decode_list_weekdays_twin_sse(dynamic raw);

  @protected
  List<WeekdaysTwinSync> dco_decode_list_weekdays_twin_sync(dynamic raw);

  @protected
  List<WeekdaysTwinSyncSse> dco_decode_list_weekdays_twin_sync_sse(dynamic raw);

  @protected
  Log2TwinNormal dco_decode_log_2_twin_normal(dynamic raw);

  @protected
  Log2TwinRustAsync dco_decode_log_2_twin_rust_async(dynamic raw);

  @protected
  Log2TwinRustAsyncSse dco_decode_log_2_twin_rust_async_sse(dynamic raw);

  @protected
  Log2TwinSse dco_decode_log_2_twin_sse(dynamic raw);

  @protected
  Log2TwinSync dco_decode_log_2_twin_sync(dynamic raw);

  @protected
  Log2TwinSyncSse dco_decode_log_2_twin_sync_sse(dynamic raw);

  @protected
  LogTwinNormal dco_decode_log_twin_normal(dynamic raw);

  @protected
  LogTwinRustAsync dco_decode_log_twin_rust_async(dynamic raw);

  @protected
  LogTwinRustAsyncSse dco_decode_log_twin_rust_async_sse(dynamic raw);

  @protected
  LogTwinSse dco_decode_log_twin_sse(dynamic raw);

  @protected
  MacroStruct dco_decode_macro_struct(dynamic raw);

  @protected
  MeasureTwinNormal dco_decode_measure_twin_normal(dynamic raw);

  @protected
  MeasureTwinRustAsync dco_decode_measure_twin_rust_async(dynamic raw);

  @protected
  MeasureTwinRustAsyncSse dco_decode_measure_twin_rust_async_sse(dynamic raw);

  @protected
  MeasureTwinSse dco_decode_measure_twin_sse(dynamic raw);

  @protected
  MeasureTwinSync dco_decode_measure_twin_sync(dynamic raw);

  @protected
  MeasureTwinSyncSse dco_decode_measure_twin_sync_sse(dynamic raw);

  @protected
  MessageIdTwinNormal dco_decode_message_id_twin_normal(dynamic raw);

  @protected
  MessageIdTwinRustAsync dco_decode_message_id_twin_rust_async(dynamic raw);

  @protected
  MessageIdTwinRustAsyncSse dco_decode_message_id_twin_rust_async_sse(
      dynamic raw);

  @protected
  MessageIdTwinSse dco_decode_message_id_twin_sse(dynamic raw);

  @protected
  MessageIdTwinSync dco_decode_message_id_twin_sync(dynamic raw);

  @protected
  MessageIdTwinSyncSse dco_decode_message_id_twin_sync_sse(dynamic raw);

  @protected
  MirrorStructTwinNormal dco_decode_mirror_struct_twin_normal(dynamic raw);

  @protected
  MirrorStructTwinRustAsync dco_decode_mirror_struct_twin_rust_async(
      dynamic raw);

  @protected
  MirrorStructTwinRustAsyncSse dco_decode_mirror_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  MirrorStructTwinSse dco_decode_mirror_struct_twin_sse(dynamic raw);

  @protected
  MirrorStructTwinSync dco_decode_mirror_struct_twin_sync(dynamic raw);

  @protected
  MirrorStructTwinSyncSse dco_decode_mirror_struct_twin_sync_sse(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinNormal
      dco_decode_more_than_just_one_raw_string_struct_twin_normal(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsync
      dco_decode_more_than_just_one_raw_string_struct_twin_rust_async(
          dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsyncSse
      dco_decode_more_than_just_one_raw_string_struct_twin_rust_async_sse(
          dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinSse
      dco_decode_more_than_just_one_raw_string_struct_twin_sse(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinSync
      dco_decode_more_than_just_one_raw_string_struct_twin_sync(dynamic raw);

  @protected
  MoreThanJustOneRawStringStructTwinSyncSse
      dco_decode_more_than_just_one_raw_string_struct_twin_sync_sse(
          dynamic raw);

  @protected
  MyEnum dco_decode_my_enum(dynamic raw);

  @protected
  MyNestedStructTwinNormal dco_decode_my_nested_struct_twin_normal(dynamic raw);

  @protected
  MyNestedStructTwinRustAsync dco_decode_my_nested_struct_twin_rust_async(
      dynamic raw);

  @protected
  MyNestedStructTwinRustAsyncSse
      dco_decode_my_nested_struct_twin_rust_async_sse(dynamic raw);

  @protected
  MyNestedStructTwinSse dco_decode_my_nested_struct_twin_sse(dynamic raw);

  @protected
  MyNestedStructTwinSync dco_decode_my_nested_struct_twin_sync(dynamic raw);

  @protected
  MyNestedStructTwinSyncSse dco_decode_my_nested_struct_twin_sync_sse(
      dynamic raw);

  @protected
  MySize dco_decode_my_size(dynamic raw);

  @protected
  MyStreamEntryTwinNormal dco_decode_my_stream_entry_twin_normal(dynamic raw);

  @protected
  MyStreamEntryTwinRustAsync dco_decode_my_stream_entry_twin_rust_async(
      dynamic raw);

  @protected
  MyStreamEntryTwinRustAsyncSse dco_decode_my_stream_entry_twin_rust_async_sse(
      dynamic raw);

  @protected
  MyStreamEntryTwinSse dco_decode_my_stream_entry_twin_sse(dynamic raw);

  @protected
  MyStruct dco_decode_my_struct(dynamic raw);

  @protected
  MyTreeNodeTwinNormal dco_decode_my_tree_node_twin_normal(dynamic raw);

  @protected
  MyTreeNodeTwinRustAsync dco_decode_my_tree_node_twin_rust_async(dynamic raw);

  @protected
  MyTreeNodeTwinRustAsyncSse dco_decode_my_tree_node_twin_rust_async_sse(
      dynamic raw);

  @protected
  MyTreeNodeTwinSse dco_decode_my_tree_node_twin_sse(dynamic raw);

  @protected
  MyTreeNodeTwinSync dco_decode_my_tree_node_twin_sync(dynamic raw);

  @protected
  MyTreeNodeTwinSyncSse dco_decode_my_tree_node_twin_sync_sse(dynamic raw);

  @protected
  NestedRawStringMirrored dco_decode_nested_raw_string_mirrored(dynamic raw);

  @protected
  NewSimpleStruct dco_decode_new_simple_struct(dynamic raw);

  @protected
  NewTypeIntTwinNormal dco_decode_new_type_int_twin_normal(dynamic raw);

  @protected
  NewTypeIntTwinRustAsync dco_decode_new_type_int_twin_rust_async(dynamic raw);

  @protected
  NewTypeIntTwinRustAsyncSse dco_decode_new_type_int_twin_rust_async_sse(
      dynamic raw);

  @protected
  NewTypeIntTwinSse dco_decode_new_type_int_twin_sse(dynamic raw);

  @protected
  NewTypeIntTwinSync dco_decode_new_type_int_twin_sync(dynamic raw);

  @protected
  NewTypeIntTwinSyncSse dco_decode_new_type_int_twin_sync_sse(dynamic raw);

  @protected
  NoteTwinNormal dco_decode_note_twin_normal(dynamic raw);

  @protected
  NoteTwinRustAsync dco_decode_note_twin_rust_async(dynamic raw);

  @protected
  NoteTwinRustAsyncSse dco_decode_note_twin_rust_async_sse(dynamic raw);

  @protected
  NoteTwinSse dco_decode_note_twin_sse(dynamic raw);

  @protected
  NoteTwinSync dco_decode_note_twin_sync(dynamic raw);

  @protected
  NoteTwinSyncSse dco_decode_note_twin_sync_sse(dynamic raw);

  @protected
  Numbers dco_decode_numbers(dynamic raw);

  @protected
  OldSimpleStruct dco_decode_old_simple_struct(dynamic raw);

  @protected
  OpaqueNestedTwinNormal dco_decode_opaque_nested_twin_normal(dynamic raw);

  @protected
  OpaqueNestedTwinRustAsync dco_decode_opaque_nested_twin_rust_async(
      dynamic raw);

  @protected
  OpaqueNestedTwinRustAsyncSse dco_decode_opaque_nested_twin_rust_async_sse(
      dynamic raw);

  @protected
  OpaqueNestedTwinSse dco_decode_opaque_nested_twin_sse(dynamic raw);

  @protected
  OpaqueNestedTwinSync dco_decode_opaque_nested_twin_sync(dynamic raw);

  @protected
  OpaqueNestedTwinSyncSse dco_decode_opaque_nested_twin_sync_sse(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  Duration? dco_decode_opt_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  DateTime? dco_decode_opt_box_autoadd_Chrono_Naive(dynamic raw);

  @protected
  DateTime? dco_decode_opt_box_autoadd_Chrono_Utc(dynamic raw);

  @protected
  Object? dco_decode_opt_box_autoadd_DartOpaque(dynamic raw);

  @protected
  HideData? dco_decode_opt_box_autoadd_RustOpaque_hide_data(dynamic raw);

  @protected
  ApplicationEnv? dco_decode_opt_box_autoadd_application_env(dynamic raw);

  @protected
  AttributeTwinNormal? dco_decode_opt_box_autoadd_attribute_twin_normal(
      dynamic raw);

  @protected
  AttributeTwinRustAsync? dco_decode_opt_box_autoadd_attribute_twin_rust_async(
      dynamic raw);

  @protected
  AttributeTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_attribute_twin_rust_async_sse(dynamic raw);

  @protected
  AttributeTwinSse? dco_decode_opt_box_autoadd_attribute_twin_sse(dynamic raw);

  @protected
  AttributeTwinSync? dco_decode_opt_box_autoadd_attribute_twin_sync(
      dynamic raw);

  @protected
  AttributeTwinSyncSse? dco_decode_opt_box_autoadd_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw);

  @protected
  ElementTwinNormal? dco_decode_opt_box_autoadd_element_twin_normal(
      dynamic raw);

  @protected
  ElementTwinRustAsync? dco_decode_opt_box_autoadd_element_twin_rust_async(
      dynamic raw);

  @protected
  ElementTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_element_twin_rust_async_sse(dynamic raw);

  @protected
  ElementTwinSse? dco_decode_opt_box_autoadd_element_twin_sse(dynamic raw);

  @protected
  ElementTwinSync? dco_decode_opt_box_autoadd_element_twin_sync(dynamic raw);

  @protected
  ElementTwinSyncSse? dco_decode_opt_box_autoadd_element_twin_sync_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinNormal?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_normal(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_rust_async(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_rust_async_sse(
          dynamic raw);

  @protected
  ExoticOptionalsTwinSse? dco_decode_opt_box_autoadd_exotic_optionals_twin_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSync?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_sync(dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse?
      dco_decode_opt_box_autoadd_exotic_optionals_twin_sync_sse(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_32(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_16(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_8(dynamic raw);

  @protected
  MeasureTwinNormal? dco_decode_opt_box_autoadd_measure_twin_normal(
      dynamic raw);

  @protected
  MeasureTwinRustAsync? dco_decode_opt_box_autoadd_measure_twin_rust_async(
      dynamic raw);

  @protected
  MeasureTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_measure_twin_rust_async_sse(dynamic raw);

  @protected
  MeasureTwinSse? dco_decode_opt_box_autoadd_measure_twin_sse(dynamic raw);

  @protected
  MeasureTwinSync? dco_decode_opt_box_autoadd_measure_twin_sync(dynamic raw);

  @protected
  MeasureTwinSyncSse? dco_decode_opt_box_autoadd_measure_twin_sync_sse(
      dynamic raw);

  @protected
  NewTypeIntTwinNormal? dco_decode_opt_box_autoadd_new_type_int_twin_normal(
      dynamic raw);

  @protected
  NewTypeIntTwinRustAsync?
      dco_decode_opt_box_autoadd_new_type_int_twin_rust_async(dynamic raw);

  @protected
  NewTypeIntTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_new_type_int_twin_rust_async_sse(dynamic raw);

  @protected
  NewTypeIntTwinSse? dco_decode_opt_box_autoadd_new_type_int_twin_sse(
      dynamic raw);

  @protected
  NewTypeIntTwinSync? dco_decode_opt_box_autoadd_new_type_int_twin_sync(
      dynamic raw);

  @protected
  NewTypeIntTwinSyncSse? dco_decode_opt_box_autoadd_new_type_int_twin_sync_sse(
      dynamic raw);

  @protected
  (String, int)? dco_decode_opt_box_autoadd_record_string_i_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_16(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_8(dynamic raw);

  @protected
  WeekdaysTwinNormal? dco_decode_opt_box_autoadd_weekdays_twin_normal(
      dynamic raw);

  @protected
  WeekdaysTwinRustAsync? dco_decode_opt_box_autoadd_weekdays_twin_rust_async(
      dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse?
      dco_decode_opt_box_autoadd_weekdays_twin_rust_async_sse(dynamic raw);

  @protected
  WeekdaysTwinSse? dco_decode_opt_box_autoadd_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync? dco_decode_opt_box_autoadd_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse? dco_decode_opt_box_autoadd_weekdays_twin_sync_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinNormal?
      dco_decode_opt_box_benchmark_binary_tree_twin_normal(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsync?
      dco_decode_opt_box_benchmark_binary_tree_twin_rust_async(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse?
      dco_decode_opt_box_benchmark_binary_tree_twin_rust_async_sse(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSse? dco_decode_opt_box_benchmark_binary_tree_twin_sse(
      dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSync?
      dco_decode_opt_box_benchmark_binary_tree_twin_sync(dynamic raw);

  @protected
  BenchmarkBinaryTreeTwinSyncSse?
      dco_decode_opt_box_benchmark_binary_tree_twin_sync_sse(dynamic raw);

  @protected
  bool? dco_decode_opt_box_bool(dynamic raw);

  @protected
  ExoticOptionalsTwinNormal? dco_decode_opt_box_exotic_optionals_twin_normal(
      dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsync?
      dco_decode_opt_box_exotic_optionals_twin_rust_async(dynamic raw);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      dco_decode_opt_box_exotic_optionals_twin_rust_async_sse(dynamic raw);

  @protected
  ExoticOptionalsTwinSse? dco_decode_opt_box_exotic_optionals_twin_sse(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSync? dco_decode_opt_box_exotic_optionals_twin_sync(
      dynamic raw);

  @protected
  ExoticOptionalsTwinSyncSse? dco_decode_opt_box_exotic_optionals_twin_sync_sse(
      dynamic raw);

  @protected
  double? dco_decode_opt_box_f_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_i_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_i_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_i_8(dynamic raw);

  @protected
  int? dco_decode_opt_box_u_8(dynamic raw);

  @protected
  List<AttributeTwinNormal>? dco_decode_opt_list_attribute_twin_normal(
      dynamic raw);

  @protected
  List<AttributeTwinRustAsync>? dco_decode_opt_list_attribute_twin_rust_async(
      dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse>?
      dco_decode_opt_list_attribute_twin_rust_async_sse(dynamic raw);

  @protected
  List<AttributeTwinSse>? dco_decode_opt_list_attribute_twin_sse(dynamic raw);

  @protected
  List<AttributeTwinSync>? dco_decode_opt_list_attribute_twin_sync(dynamic raw);

  @protected
  List<AttributeTwinSyncSse>? dco_decode_opt_list_attribute_twin_sync_sse(
      dynamic raw);

  @protected
  List<ElementTwinNormal>? dco_decode_opt_list_element_twin_normal(dynamic raw);

  @protected
  List<ElementTwinRustAsync>? dco_decode_opt_list_element_twin_rust_async(
      dynamic raw);

  @protected
  List<ElementTwinRustAsyncSse>?
      dco_decode_opt_list_element_twin_rust_async_sse(dynamic raw);

  @protected
  List<ElementTwinSse>? dco_decode_opt_list_element_twin_sse(dynamic raw);

  @protected
  List<ElementTwinSync>? dco_decode_opt_list_element_twin_sync(dynamic raw);

  @protected
  List<ElementTwinSyncSse>? dco_decode_opt_list_element_twin_sync_sse(
      dynamic raw);

  @protected
  List<AttributeTwinNormal?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_normal(dynamic raw);

  @protected
  List<AttributeTwinRustAsync?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
          dynamic raw);

  @protected
  List<AttributeTwinRustAsyncSse?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          dynamic raw);

  @protected
  List<AttributeTwinSse?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_sse(dynamic raw);

  @protected
  List<AttributeTwinSync?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_sync(dynamic raw);

  @protected
  List<AttributeTwinSyncSse?>?
      dco_decode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(dynamic raw);

  @protected
  Float32List? dco_decode_opt_list_prim_f_32(dynamic raw);

  @protected
  Float64List? dco_decode_opt_list_prim_f_64(dynamic raw);

  @protected
  Int32List? dco_decode_opt_list_prim_i_32(dynamic raw);

  @protected
  Int8List? dco_decode_opt_list_prim_i_8(dynamic raw);

  @protected
  Uint8List? dco_decode_opt_list_prim_u_8(dynamic raw);

  @protected
  OptVecsTwinNormal dco_decode_opt_vecs_twin_normal(dynamic raw);

  @protected
  OptVecsTwinRustAsync dco_decode_opt_vecs_twin_rust_async(dynamic raw);

  @protected
  OptVecsTwinRustAsyncSse dco_decode_opt_vecs_twin_rust_async_sse(dynamic raw);

  @protected
  OptVecsTwinSse dco_decode_opt_vecs_twin_sse(dynamic raw);

  @protected
  OptVecsTwinSync dco_decode_opt_vecs_twin_sync(dynamic raw);

  @protected
  OptVecsTwinSyncSse dco_decode_opt_vecs_twin_sync_sse(dynamic raw);

  @protected
  PointTwinNormal dco_decode_point_twin_normal(dynamic raw);

  @protected
  PointTwinNormalArray2 dco_decode_point_twin_normal_array_2(dynamic raw);

  @protected
  PointTwinRustAsync dco_decode_point_twin_rust_async(dynamic raw);

  @protected
  PointTwinRustAsyncArray2 dco_decode_point_twin_rust_async_array_2(
      dynamic raw);

  @protected
  PointTwinRustAsyncSse dco_decode_point_twin_rust_async_sse(dynamic raw);

  @protected
  PointTwinRustAsyncSseArray2 dco_decode_point_twin_rust_async_sse_array_2(
      dynamic raw);

  @protected
  PointTwinSse dco_decode_point_twin_sse(dynamic raw);

  @protected
  PointTwinSseArray2 dco_decode_point_twin_sse_array_2(dynamic raw);

  @protected
  PointTwinSync dco_decode_point_twin_sync(dynamic raw);

  @protected
  PointTwinSyncArray2 dco_decode_point_twin_sync_array_2(dynamic raw);

  @protected
  PointTwinSyncSse dco_decode_point_twin_sync_sse(dynamic raw);

  @protected
  PointTwinSyncSseArray2 dco_decode_point_twin_sync_sse_array_2(dynamic raw);

  @protected
  RawStringEnumMirrored dco_decode_raw_string_enum_mirrored(dynamic raw);

  @protected
  RawStringItemStructTwinNormal dco_decode_raw_string_item_struct_twin_normal(
      dynamic raw);

  @protected
  RawStringItemStructTwinRustAsync
      dco_decode_raw_string_item_struct_twin_rust_async(dynamic raw);

  @protected
  RawStringItemStructTwinRustAsyncSse
      dco_decode_raw_string_item_struct_twin_rust_async_sse(dynamic raw);

  @protected
  RawStringItemStructTwinSse dco_decode_raw_string_item_struct_twin_sse(
      dynamic raw);

  @protected
  RawStringItemStructTwinSync dco_decode_raw_string_item_struct_twin_sync(
      dynamic raw);

  @protected
  RawStringItemStructTwinSyncSse
      dco_decode_raw_string_item_struct_twin_sync_sse(dynamic raw);

  @protected
  RawStringMirrored dco_decode_raw_string_mirrored(dynamic raw);

  @protected
  (ApplicationSettings, RawStringEnumMirrored)
      dco_decode_record_application_settings_raw_string_enum_mirrored(
          dynamic raw);

  @protected
  (int, int) dco_decode_record_i_32_i_32(dynamic raw);

  @protected
  (String, EnumSimpleTwinNormal)
      dco_decode_record_string_enum_simple_twin_normal(dynamic raw);

  @protected
  (String, EnumSimpleTwinRustAsync)
      dco_decode_record_string_enum_simple_twin_rust_async(dynamic raw);

  @protected
  (String, EnumSimpleTwinRustAsyncSse)
      dco_decode_record_string_enum_simple_twin_rust_async_sse(dynamic raw);

  @protected
  (String, EnumSimpleTwinSse) dco_decode_record_string_enum_simple_twin_sse(
      dynamic raw);

  @protected
  (String, EnumSimpleTwinSync) dco_decode_record_string_enum_simple_twin_sync(
      dynamic raw);

  @protected
  (String, EnumSimpleTwinSyncSse)
      dco_decode_record_string_enum_simple_twin_sync_sse(dynamic raw);

  @protected
  (String, int) dco_decode_record_string_i_32(dynamic raw);

  @protected
  (String, KitchenSinkTwinNormal)
      dco_decode_record_string_kitchen_sink_twin_normal(dynamic raw);

  @protected
  (String, KitchenSinkTwinRustAsync)
      dco_decode_record_string_kitchen_sink_twin_rust_async(dynamic raw);

  @protected
  (String, KitchenSinkTwinRustAsyncSse)
      dco_decode_record_string_kitchen_sink_twin_rust_async_sse(dynamic raw);

  @protected
  (String, KitchenSinkTwinSse) dco_decode_record_string_kitchen_sink_twin_sse(
      dynamic raw);

  @protected
  (String, KitchenSinkTwinSync) dco_decode_record_string_kitchen_sink_twin_sync(
      dynamic raw);

  @protected
  (String, KitchenSinkTwinSyncSse)
      dco_decode_record_string_kitchen_sink_twin_sync_sse(dynamic raw);

  @protected
  (String, Uint8List) dco_decode_record_string_list_prim_u_8(dynamic raw);

  @protected
  (String, MySize) dco_decode_record_string_my_size(dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  Sequences dco_decode_sequences(dynamic raw);

  @protected
  SomeStructTwinNormal dco_decode_some_struct_twin_normal(dynamic raw);

  @protected
  SomeStructTwinRustAsync dco_decode_some_struct_twin_rust_async(dynamic raw);

  @protected
  SomeStructTwinRustAsyncSse dco_decode_some_struct_twin_rust_async_sse(
      dynamic raw);

  @protected
  SomeStructTwinSse dco_decode_some_struct_twin_sse(dynamic raw);

  @protected
  SomeStructTwinSync dco_decode_some_struct_twin_sync(dynamic raw);

  @protected
  SomeStructTwinSyncSse dco_decode_some_struct_twin_sync_sse(dynamic raw);

  @protected
  SpeedTwinNormal dco_decode_speed_twin_normal(dynamic raw);

  @protected
  SpeedTwinRustAsync dco_decode_speed_twin_rust_async(dynamic raw);

  @protected
  SpeedTwinRustAsyncSse dco_decode_speed_twin_rust_async_sse(dynamic raw);

  @protected
  SpeedTwinSse dco_decode_speed_twin_sse(dynamic raw);

  @protected
  SpeedTwinSync dco_decode_speed_twin_sync(dynamic raw);

  @protected
  SpeedTwinSyncSse dco_decode_speed_twin_sync_sse(dynamic raw);

  @protected
  StructWithCommentsTwinNormal dco_decode_struct_with_comments_twin_normal(
      dynamic raw);

  @protected
  StructWithCommentsTwinRustAsync
      dco_decode_struct_with_comments_twin_rust_async(dynamic raw);

  @protected
  StructWithCommentsTwinRustAsyncSse
      dco_decode_struct_with_comments_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithCommentsTwinSse dco_decode_struct_with_comments_twin_sse(
      dynamic raw);

  @protected
  StructWithCommentsTwinSync dco_decode_struct_with_comments_twin_sync(
      dynamic raw);

  @protected
  StructWithCommentsTwinSyncSse dco_decode_struct_with_comments_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithEnumTwinNormal dco_decode_struct_with_enum_twin_normal(dynamic raw);

  @protected
  StructWithEnumTwinRustAsync dco_decode_struct_with_enum_twin_rust_async(
      dynamic raw);

  @protected
  StructWithEnumTwinRustAsyncSse
      dco_decode_struct_with_enum_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithEnumTwinSse dco_decode_struct_with_enum_twin_sse(dynamic raw);

  @protected
  StructWithEnumTwinSync dco_decode_struct_with_enum_twin_sync(dynamic raw);

  @protected
  StructWithEnumTwinSyncSse dco_decode_struct_with_enum_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithOneFieldTwinNormal dco_decode_struct_with_one_field_twin_normal(
      dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsync
      dco_decode_struct_with_one_field_twin_rust_async(dynamic raw);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      dco_decode_struct_with_one_field_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithOneFieldTwinSse dco_decode_struct_with_one_field_twin_sse(
      dynamic raw);

  @protected
  StructWithOneFieldTwinSync dco_decode_struct_with_one_field_twin_sync(
      dynamic raw);

  @protected
  StructWithOneFieldTwinSyncSse dco_decode_struct_with_one_field_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinNormal dco_decode_struct_with_two_field_twin_normal(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsync
      dco_decode_struct_with_two_field_twin_rust_async(dynamic raw);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      dco_decode_struct_with_two_field_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithTwoFieldTwinSse dco_decode_struct_with_two_field_twin_sse(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinSync dco_decode_struct_with_two_field_twin_sync(
      dynamic raw);

  @protected
  StructWithTwoFieldTwinSyncSse dco_decode_struct_with_two_field_twin_sync_sse(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinNormal dco_decode_struct_with_zero_field_twin_normal(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsync
      dco_decode_struct_with_zero_field_twin_rust_async(dynamic raw);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      dco_decode_struct_with_zero_field_twin_rust_async_sse(dynamic raw);

  @protected
  StructWithZeroFieldTwinSse dco_decode_struct_with_zero_field_twin_sse(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinSync dco_decode_struct_with_zero_field_twin_sync(
      dynamic raw);

  @protected
  StructWithZeroFieldTwinSyncSse
      dco_decode_struct_with_zero_field_twin_sync_sse(dynamic raw);

  @protected
  SumWithTwinNormal dco_decode_sum_with_twin_normal(dynamic raw);

  @protected
  SumWithTwinNormalArray3 dco_decode_sum_with_twin_normal_array_3(dynamic raw);

  @protected
  SumWithTwinRustAsync dco_decode_sum_with_twin_rust_async(dynamic raw);

  @protected
  SumWithTwinRustAsyncArray3 dco_decode_sum_with_twin_rust_async_array_3(
      dynamic raw);

  @protected
  SumWithTwinRustAsyncSse dco_decode_sum_with_twin_rust_async_sse(dynamic raw);

  @protected
  SumWithTwinRustAsyncSseArray3 dco_decode_sum_with_twin_rust_async_sse_array_3(
      dynamic raw);

  @protected
  SumWithTwinSse dco_decode_sum_with_twin_sse(dynamic raw);

  @protected
  SumWithTwinSseArray3 dco_decode_sum_with_twin_sse_array_3(dynamic raw);

  @protected
  SumWithTwinSync dco_decode_sum_with_twin_sync(dynamic raw);

  @protected
  SumWithTwinSyncArray3 dco_decode_sum_with_twin_sync_array_3(dynamic raw);

  @protected
  SumWithTwinSyncSse dco_decode_sum_with_twin_sync_sse(dynamic raw);

  @protected
  SumWithTwinSyncSseArray3 dco_decode_sum_with_twin_sync_sse_array_3(
      dynamic raw);

  @protected
  TestChronoTwinNormal dco_decode_test_chrono_twin_normal(dynamic raw);

  @protected
  TestChronoTwinRustAsync dco_decode_test_chrono_twin_rust_async(dynamic raw);

  @protected
  TestChronoTwinSync dco_decode_test_chrono_twin_sync(dynamic raw);

  @protected
  TestIdTwinNormal dco_decode_test_id_twin_normal(dynamic raw);

  @protected
  TestIdTwinNormalArray2 dco_decode_test_id_twin_normal_array_2(dynamic raw);

  @protected
  TestIdTwinNormalArray4 dco_decode_test_id_twin_normal_array_4(dynamic raw);

  @protected
  TestIdTwinRustAsync dco_decode_test_id_twin_rust_async(dynamic raw);

  @protected
  TestIdTwinRustAsyncArray2 dco_decode_test_id_twin_rust_async_array_2(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncArray4 dco_decode_test_id_twin_rust_async_array_4(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncSse dco_decode_test_id_twin_rust_async_sse(dynamic raw);

  @protected
  TestIdTwinRustAsyncSseArray2 dco_decode_test_id_twin_rust_async_sse_array_2(
      dynamic raw);

  @protected
  TestIdTwinRustAsyncSseArray4 dco_decode_test_id_twin_rust_async_sse_array_4(
      dynamic raw);

  @protected
  TestIdTwinSse dco_decode_test_id_twin_sse(dynamic raw);

  @protected
  TestIdTwinSseArray2 dco_decode_test_id_twin_sse_array_2(dynamic raw);

  @protected
  TestIdTwinSseArray4 dco_decode_test_id_twin_sse_array_4(dynamic raw);

  @protected
  TestIdTwinSync dco_decode_test_id_twin_sync(dynamic raw);

  @protected
  TestIdTwinSyncArray2 dco_decode_test_id_twin_sync_array_2(dynamic raw);

  @protected
  TestIdTwinSyncArray4 dco_decode_test_id_twin_sync_array_4(dynamic raw);

  @protected
  TestIdTwinSyncSse dco_decode_test_id_twin_sync_sse(dynamic raw);

  @protected
  TestIdTwinSyncSseArray2 dco_decode_test_id_twin_sync_sse_array_2(dynamic raw);

  @protected
  TestIdTwinSyncSseArray4 dco_decode_test_id_twin_sync_sse_array_4(dynamic raw);

  @protected
  TestModelTwinNormal dco_decode_test_model_twin_normal(dynamic raw);

  @protected
  TestModelTwinRustAsync dco_decode_test_model_twin_rust_async(dynamic raw);

  @protected
  TestModelTwinRustAsyncSse dco_decode_test_model_twin_rust_async_sse(
      dynamic raw);

  @protected
  TestModelTwinSse dco_decode_test_model_twin_sse(dynamic raw);

  @protected
  TestModelTwinSync dco_decode_test_model_twin_sync(dynamic raw);

  @protected
  TestModelTwinSyncSse dco_decode_test_model_twin_sync_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinNormal
      dco_decode_tuple_struct_with_one_field_twin_normal(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      dco_decode_tuple_struct_with_one_field_twin_rust_async(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      dco_decode_tuple_struct_with_one_field_twin_rust_async_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSse
      dco_decode_tuple_struct_with_one_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSync
      dco_decode_tuple_struct_with_one_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      dco_decode_tuple_struct_with_one_field_twin_sync_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinNormal
      dco_decode_tuple_struct_with_two_field_twin_normal(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      dco_decode_tuple_struct_with_two_field_twin_rust_async(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      dco_decode_tuple_struct_with_two_field_twin_rust_async_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSse
      dco_decode_tuple_struct_with_two_field_twin_sse(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSync
      dco_decode_tuple_struct_with_two_field_twin_sync(dynamic raw);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      dco_decode_tuple_struct_with_two_field_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  U8Array1600 dco_decode_u_8_array_1600(dynamic raw);

  @protected
  U8Array32 dco_decode_u_8_array_32(dynamic raw);

  @protected
  U8Array5 dco_decode_u_8_array_5(dynamic raw);

  @protected
  U8Array8 dco_decode_u_8_array_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  UserIdTwinNormal dco_decode_user_id_twin_normal(dynamic raw);

  @protected
  UserIdTwinRustAsync dco_decode_user_id_twin_rust_async(dynamic raw);

  @protected
  UserIdTwinRustAsyncSse dco_decode_user_id_twin_rust_async_sse(dynamic raw);

  @protected
  UserIdTwinSse dco_decode_user_id_twin_sse(dynamic raw);

  @protected
  UserIdTwinSync dco_decode_user_id_twin_sync(dynamic raw);

  @protected
  UserIdTwinSyncSse dco_decode_user_id_twin_sync_sse(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  VecOfPrimitivePackTwinNormal dco_decode_vec_of_primitive_pack_twin_normal(
      dynamic raw);

  @protected
  VecOfPrimitivePackTwinRustAsync
      dco_decode_vec_of_primitive_pack_twin_rust_async(dynamic raw);

  @protected
  VecOfPrimitivePackTwinRustAsyncSse
      dco_decode_vec_of_primitive_pack_twin_rust_async_sse(dynamic raw);

  @protected
  VecOfPrimitivePackTwinSse dco_decode_vec_of_primitive_pack_twin_sse(
      dynamic raw);

  @protected
  VecOfPrimitivePackTwinSync dco_decode_vec_of_primitive_pack_twin_sync(
      dynamic raw);

  @protected
  VecOfPrimitivePackTwinSyncSse dco_decode_vec_of_primitive_pack_twin_sync_sse(
      dynamic raw);

  @protected
  WeekdaysTwinNormal dco_decode_weekdays_twin_normal(dynamic raw);

  @protected
  WeekdaysTwinRustAsync dco_decode_weekdays_twin_rust_async(dynamic raw);

  @protected
  WeekdaysTwinRustAsyncSse dco_decode_weekdays_twin_rust_async_sse(dynamic raw);

  @protected
  WeekdaysTwinSse dco_decode_weekdays_twin_sse(dynamic raw);

  @protected
  WeekdaysTwinSync dco_decode_weekdays_twin_sync(dynamic raw);

  @protected
  WeekdaysTwinSyncSse dco_decode_weekdays_twin_sync_sse(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  BoxFnStringString
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinNormal
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSse
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSync
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      sse_decode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      sse_decode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      sse_decode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  String sse_decode_Backtrace(SseDeserializer deserializer);

  @protected
  Duration sse_decode_Chrono_Duration(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Local(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Naive(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Utc(SseDeserializer deserializer);

  @protected
  Object sse_decode_DartOpaque(SseDeserializer deserializer);

  @protected
  ObjectArray1 sse_decode_DartOpaque_array_1(SseDeserializer deserializer);

  @protected
  Map<String, String> sse_decode_Map_String_String(
      SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinNormal>
      sse_decode_Map_String_enum_simple_twin_normal(
          SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinRustAsync>
      sse_decode_Map_String_enum_simple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinRustAsyncSse>
      sse_decode_Map_String_enum_simple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinSse> sse_decode_Map_String_enum_simple_twin_sse(
      SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinSync> sse_decode_Map_String_enum_simple_twin_sync(
      SseDeserializer deserializer);

  @protected
  Map<String, EnumSimpleTwinSyncSse>
      sse_decode_Map_String_enum_simple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinNormal>
      sse_decode_Map_String_kitchen_sink_twin_normal(
          SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinRustAsync>
      sse_decode_Map_String_kitchen_sink_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinRustAsyncSse>
      sse_decode_Map_String_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinSse> sse_decode_Map_String_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinSync> sse_decode_Map_String_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  Map<String, KitchenSinkTwinSyncSse>
      sse_decode_Map_String_kitchen_sink_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Map<String, Uint8List> sse_decode_Map_String_list_prim_u_8(
      SseDeserializer deserializer);

  @protected
  Map<String, MySize> sse_decode_Map_String_my_size(
      SseDeserializer deserializer);

  @protected
  Map<int, int> sse_decode_Map_i_32_i_32(SseDeserializer deserializer);

  @protected
  MutexHideData sse_decode_RustOpaque_MutexHideData(
      SseDeserializer deserializer);

  @protected
  RwLockHideData sse_decode_RustOpaque_RwLockHideData(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinNormal sse_decode_RustOpaque_box_dynDartDebugTwinNormal(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinRustAsync sse_decode_RustOpaque_box_dynDartDebugTwinRustAsync(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinRustAsyncSse
      sse_decode_RustOpaque_box_dynDartDebugTwinRustAsyncSse(
          SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSse sse_decode_RustOpaque_box_dynDartDebugTwinSse(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSync sse_decode_RustOpaque_box_dynDartDebugTwinSync(
      SseDeserializer deserializer);

  @protected
  BoxDartDebugTwinSyncSse sse_decode_RustOpaque_box_dynDartDebugTwinSyncSse(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueReturn sse_decode_RustOpaque_frb_opaque_return(
      SseDeserializer deserializer);

  @protected
  FrbOpaqueSyncReturn sse_decode_RustOpaque_frb_opaque_sync_return(
      SseDeserializer deserializer);

  @protected
  HideData sse_decode_RustOpaque_hide_data(SseDeserializer deserializer);

  @protected
  HideDataArray2 sse_decode_RustOpaque_hide_data_array_2(
      SseDeserializer deserializer);

  @protected
  I32 sse_decode_RustOpaque_i_32(SseDeserializer deserializer);

  @protected
  NonCloneData sse_decode_RustOpaque_non_clone_data(
      SseDeserializer deserializer);

  @protected
  NonSendHideData sse_decode_RustOpaque_non_send_hide_data(
      SseDeserializer deserializer);

  @protected
  BoxFnStringString
      sse_decode_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinNormal
      sse_decode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSse
      sse_decode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSync
      sse_decode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
          SseDeserializer deserializer);

  @protected
  BoxHelloTraitTwinSyncSse
      sse_decode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinNormal
      sse_decode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSse
      sse_decode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSync
      sse_decode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
          SseDeserializer deserializer);

  @protected
  BoxMyTraitTwinSyncSse
      sse_decode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinNormal
      sse_decode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSse
      sse_decode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSync
      sse_decode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
          SseDeserializer deserializer);

  @protected
  NonCloneSimpleTwinSyncSse
      sse_decode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinNormal
      sse_decode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSse
      sse_decode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSync
      sse_decode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          SseDeserializer deserializer);

  @protected
  StructWithGoodAndOpaqueFieldTwinSyncSse
      sse_decode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          SseDeserializer deserializer);

  @protected
  Set<String> sse_decode_Set_String(SseDeserializer deserializer);

  @protected
  Set<int> sse_decode_Set_i_32(SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  UuidValue sse_decode_Uuid(SseDeserializer deserializer);

  @protected
  ATwinNormal sse_decode_a_twin_normal(SseDeserializer deserializer);

  @protected
  ATwinRustAsync sse_decode_a_twin_rust_async(SseDeserializer deserializer);

  @protected
  ATwinRustAsyncSse sse_decode_a_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ATwinSse sse_decode_a_twin_sse(SseDeserializer deserializer);

  @protected
  ATwinSync sse_decode_a_twin_sync(SseDeserializer deserializer);

  @protected
  ATwinSyncSse sse_decode_a_twin_sync_sse(SseDeserializer deserializer);

  @protected
  AbcTwinNormal sse_decode_abc_twin_normal(SseDeserializer deserializer);

  @protected
  AbcTwinRustAsync sse_decode_abc_twin_rust_async(SseDeserializer deserializer);

  @protected
  AbcTwinRustAsyncSse sse_decode_abc_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AbcTwinSse sse_decode_abc_twin_sse(SseDeserializer deserializer);

  @protected
  AbcTwinSync sse_decode_abc_twin_sync(SseDeserializer deserializer);

  @protected
  AbcTwinSyncSse sse_decode_abc_twin_sync_sse(SseDeserializer deserializer);

  @protected
  AnotherMacroStructTwinNormal sse_decode_another_macro_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  AnotherTwinNormal sse_decode_another_twin_normal(
      SseDeserializer deserializer);

  @protected
  AnotherTwinRustAsync sse_decode_another_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AnotherTwinRustAsyncSse sse_decode_another_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AnotherTwinSse sse_decode_another_twin_sse(SseDeserializer deserializer);

  @protected
  AnotherTwinSync sse_decode_another_twin_sync(SseDeserializer deserializer);

  @protected
  AnotherTwinSyncSse sse_decode_another_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ApplicationEnv sse_decode_application_env(SseDeserializer deserializer);

  @protected
  ApplicationEnvVar sse_decode_application_env_var(
      SseDeserializer deserializer);

  @protected
  ApplicationMessage sse_decode_application_message(
      SseDeserializer deserializer);

  @protected
  ApplicationMode sse_decode_application_mode(SseDeserializer deserializer);

  @protected
  ApplicationSettings sse_decode_application_settings(
      SseDeserializer deserializer);

  @protected
  AttributeTwinNormal sse_decode_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsync sse_decode_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsyncSse sse_decode_attribute_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSse sse_decode_attribute_twin_sse(SseDeserializer deserializer);

  @protected
  AttributeTwinSync sse_decode_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSyncSse sse_decode_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BTwinNormal sse_decode_b_twin_normal(SseDeserializer deserializer);

  @protected
  BTwinRustAsync sse_decode_b_twin_rust_async(SseDeserializer deserializer);

  @protected
  BTwinRustAsyncSse sse_decode_b_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BTwinSse sse_decode_b_twin_sse(SseDeserializer deserializer);

  @protected
  BTwinSync sse_decode_b_twin_sync(SseDeserializer deserializer);

  @protected
  BTwinSyncSse sse_decode_b_twin_sync_sse(SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal sse_decode_benchmark_binary_tree_twin_normal(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      sse_decode_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      sse_decode_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse sse_decode_benchmark_binary_tree_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync sse_decode_benchmark_binary_tree_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse sse_decode_benchmark_binary_tree_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinNormal sse_decode_benchmark_blob_twin_normal(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsync sse_decode_benchmark_blob_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsyncSse sse_decode_benchmark_blob_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSse sse_decode_benchmark_blob_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSync sse_decode_benchmark_blob_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSyncSse sse_decode_benchmark_blob_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinNormal sse_decode_big_buffers_twin_normal(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinRustAsync sse_decode_big_buffers_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinRustAsyncSse sse_decode_big_buffers_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinSse sse_decode_big_buffers_twin_sse(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinSync sse_decode_big_buffers_twin_sync(
      SseDeserializer deserializer);

  @protected
  BigBuffersTwinSyncSse sse_decode_big_buffers_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BlobTwinNormal sse_decode_blob_twin_normal(SseDeserializer deserializer);

  @protected
  BlobTwinRustAsync sse_decode_blob_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BlobTwinRustAsyncSse sse_decode_blob_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BlobTwinSse sse_decode_blob_twin_sse(SseDeserializer deserializer);

  @protected
  BlobTwinSync sse_decode_blob_twin_sync(SseDeserializer deserializer);

  @protected
  BlobTwinSyncSse sse_decode_blob_twin_sync_sse(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  ApplicationEnv sse_decode_box_application_env(SseDeserializer deserializer);

  @protected
  Duration sse_decode_box_autoadd_Chrono_Duration(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_box_autoadd_Chrono_Naive(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_box_autoadd_Chrono_Utc(SseDeserializer deserializer);

  @protected
  Object sse_decode_box_autoadd_DartOpaque(SseDeserializer deserializer);

  @protected
  HideData sse_decode_box_autoadd_RustOpaque_hide_data(
      SseDeserializer deserializer);

  @protected
  ATwinNormal sse_decode_box_autoadd_a_twin_normal(
      SseDeserializer deserializer);

  @protected
  ATwinRustAsync sse_decode_box_autoadd_a_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ATwinRustAsyncSse sse_decode_box_autoadd_a_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ATwinSse sse_decode_box_autoadd_a_twin_sse(SseDeserializer deserializer);

  @protected
  ATwinSync sse_decode_box_autoadd_a_twin_sync(SseDeserializer deserializer);

  @protected
  ATwinSyncSse sse_decode_box_autoadd_a_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  AbcTwinNormal sse_decode_box_autoadd_abc_twin_normal(
      SseDeserializer deserializer);

  @protected
  AbcTwinRustAsync sse_decode_box_autoadd_abc_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AbcTwinRustAsyncSse sse_decode_box_autoadd_abc_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  AbcTwinSse sse_decode_box_autoadd_abc_twin_sse(SseDeserializer deserializer);

  @protected
  AbcTwinSync sse_decode_box_autoadd_abc_twin_sync(
      SseDeserializer deserializer);

  @protected
  AbcTwinSyncSse sse_decode_box_autoadd_abc_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ApplicationEnv sse_decode_box_autoadd_application_env(
      SseDeserializer deserializer);

  @protected
  ApplicationSettings sse_decode_box_autoadd_application_settings(
      SseDeserializer deserializer);

  @protected
  AttributeTwinNormal sse_decode_box_autoadd_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsync sse_decode_box_autoadd_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsyncSse
      sse_decode_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  AttributeTwinSse sse_decode_box_autoadd_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSync sse_decode_box_autoadd_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSyncSse sse_decode_box_autoadd_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BTwinNormal sse_decode_box_autoadd_b_twin_normal(
      SseDeserializer deserializer);

  @protected
  BTwinRustAsync sse_decode_box_autoadd_b_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BTwinRustAsyncSse sse_decode_box_autoadd_b_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BTwinSse sse_decode_box_autoadd_b_twin_sse(SseDeserializer deserializer);

  @protected
  BTwinSync sse_decode_box_autoadd_b_twin_sync(SseDeserializer deserializer);

  @protected
  BTwinSyncSse sse_decode_box_autoadd_b_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal
      sse_decode_box_autoadd_benchmark_binary_tree_twin_normal(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      sse_decode_box_autoadd_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      sse_decode_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse
      sse_decode_box_autoadd_benchmark_binary_tree_twin_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync
      sse_decode_box_autoadd_benchmark_binary_tree_twin_sync(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      sse_decode_box_autoadd_benchmark_binary_tree_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinNormal sse_decode_box_autoadd_benchmark_blob_twin_normal(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsync
      sse_decode_box_autoadd_benchmark_blob_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinRustAsyncSse
      sse_decode_box_autoadd_benchmark_blob_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSse sse_decode_box_autoadd_benchmark_blob_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSync sse_decode_box_autoadd_benchmark_blob_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBlobTwinSyncSse sse_decode_box_autoadd_benchmark_blob_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  CTwinNormal sse_decode_box_autoadd_c_twin_normal(
      SseDeserializer deserializer);

  @protected
  CTwinRustAsync sse_decode_box_autoadd_c_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CTwinRustAsyncSse sse_decode_box_autoadd_c_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CTwinSse sse_decode_box_autoadd_c_twin_sse(SseDeserializer deserializer);

  @protected
  CTwinSync sse_decode_box_autoadd_c_twin_sync(SseDeserializer deserializer);

  @protected
  CTwinSyncSse sse_decode_box_autoadd_c_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinNormal sse_decode_box_autoadd_concatenate_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsync
      sse_decode_box_autoadd_concatenate_with_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsyncSse
      sse_decode_box_autoadd_concatenate_with_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSse sse_decode_box_autoadd_concatenate_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSync sse_decode_box_autoadd_concatenate_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSyncSse
      sse_decode_box_autoadd_concatenate_with_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinNormal
      sse_decode_box_autoadd_custom_nested_error_2_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsync
      sse_decode_box_autoadd_custom_nested_error_2_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsyncSse
      sse_decode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSse
      sse_decode_box_autoadd_custom_nested_error_2_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSync
      sse_decode_box_autoadd_custom_nested_error_2_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSyncSse
      sse_decode_box_autoadd_custom_nested_error_2_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinNormal
      sse_decode_box_autoadd_custom_nested_error_inner_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      sse_decode_box_autoadd_custom_nested_error_inner_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      sse_decode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSse
      sse_decode_box_autoadd_custom_nested_error_inner_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSync
      sse_decode_box_autoadd_custom_nested_error_inner_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      sse_decode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinNormal
      sse_decode_box_autoadd_custom_nested_error_outer_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      sse_decode_box_autoadd_custom_nested_error_outer_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      sse_decode_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSse
      sse_decode_box_autoadd_custom_nested_error_outer_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSync
      sse_decode_box_autoadd_custom_nested_error_outer_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      sse_decode_box_autoadd_custom_nested_error_outer_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinNormal
      sse_decode_box_autoadd_custom_struct_error_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsync
      sse_decode_box_autoadd_custom_struct_error_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsyncSse
      sse_decode_box_autoadd_custom_struct_error_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSse sse_decode_box_autoadd_custom_struct_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSync
      sse_decode_box_autoadd_custom_struct_error_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSyncSse
      sse_decode_box_autoadd_custom_struct_error_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructTwinNormal sse_decode_box_autoadd_custom_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsync
      sse_decode_box_autoadd_custom_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsyncSse
      sse_decode_box_autoadd_custom_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructTwinSse sse_decode_box_autoadd_custom_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSync sse_decode_box_autoadd_custom_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSyncSse sse_decode_box_autoadd_custom_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinNormal sse_decode_box_autoadd_customized_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsync sse_decode_box_autoadd_customized_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsyncSse
      sse_decode_box_autoadd_customized_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomizedTwinSse sse_decode_box_autoadd_customized_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSync sse_decode_box_autoadd_customized_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSyncSse sse_decode_box_autoadd_customized_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinNormal
      sse_decode_box_autoadd_dart_opaque_nested_twin_normal(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsync
      sse_decode_box_autoadd_dart_opaque_nested_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      sse_decode_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSse sse_decode_box_autoadd_dart_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSync sse_decode_box_autoadd_dart_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSyncSse
      sse_decode_box_autoadd_dart_opaque_nested_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  ElementTwinNormal sse_decode_box_autoadd_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsync sse_decode_box_autoadd_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsyncSse sse_decode_box_autoadd_element_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSse sse_decode_box_autoadd_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSync sse_decode_box_autoadd_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  ElementTwinSyncSse sse_decode_box_autoadd_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinNormal sse_decode_box_autoadd_empty_twin_normal(
      SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsync sse_decode_box_autoadd_empty_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsyncSse sse_decode_box_autoadd_empty_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSse sse_decode_box_autoadd_empty_twin_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSync sse_decode_box_autoadd_empty_twin_sync(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSyncSse sse_decode_box_autoadd_empty_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinNormal sse_decode_box_autoadd_enum_dart_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsync
      sse_decode_box_autoadd_enum_dart_opaque_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      sse_decode_box_autoadd_enum_dart_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSse sse_decode_box_autoadd_enum_dart_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSync sse_decode_box_autoadd_enum_dart_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSyncSse
      sse_decode_box_autoadd_enum_dart_opaque_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinNormal sse_decode_box_autoadd_enum_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsync sse_decode_box_autoadd_enum_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSse
      sse_decode_box_autoadd_enum_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSse sse_decode_box_autoadd_enum_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSync sse_decode_box_autoadd_enum_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSse sse_decode_box_autoadd_enum_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinNormal
      sse_decode_box_autoadd_enum_with_item_mixed_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsync
      sse_decode_box_autoadd_enum_with_item_mixed_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSse sse_decode_box_autoadd_enum_with_item_mixed_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSync
      sse_decode_box_autoadd_enum_with_item_mixed_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSyncSse
      sse_decode_box_autoadd_enum_with_item_mixed_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinNormal
      sse_decode_box_autoadd_enum_with_item_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsync
      sse_decode_box_autoadd_enum_with_item_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSse
      sse_decode_box_autoadd_enum_with_item_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSync
      sse_decode_box_autoadd_enum_with_item_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSyncSse
      sse_decode_box_autoadd_enum_with_item_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinNormal
      sse_decode_box_autoadd_enum_with_item_tuple_twin_normal(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsync
      sse_decode_box_autoadd_enum_with_item_tuple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      sse_decode_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSse sse_decode_box_autoadd_enum_with_item_tuple_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSync
      sse_decode_box_autoadd_enum_with_item_tuple_twin_sync(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSyncSse
      sse_decode_box_autoadd_enum_with_item_tuple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  EventTwinNormal sse_decode_box_autoadd_event_twin_normal(
      SseDeserializer deserializer);

  @protected
  EventTwinRustAsync sse_decode_box_autoadd_event_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EventTwinRustAsyncSse sse_decode_box_autoadd_event_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EventTwinSse sse_decode_box_autoadd_event_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal sse_decode_box_autoadd_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync
      sse_decode_box_autoadd_exotic_optionals_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      sse_decode_box_autoadd_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse sse_decode_box_autoadd_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync sse_decode_box_autoadd_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse
      sse_decode_box_autoadd_exotic_optionals_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  FeatureChronoTwinNormal sse_decode_box_autoadd_feature_chrono_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinRustAsync
      sse_decode_box_autoadd_feature_chrono_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSync sse_decode_box_autoadd_feature_chrono_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinNormal sse_decode_box_autoadd_feature_uuid_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinRustAsync sse_decode_box_autoadd_feature_uuid_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSync sse_decode_box_autoadd_feature_uuid_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinNormal sse_decode_box_autoadd_feed_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsync sse_decode_box_autoadd_feed_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsyncSse sse_decode_box_autoadd_feed_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSse sse_decode_box_autoadd_feed_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSync sse_decode_box_autoadd_feed_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSyncSse sse_decode_box_autoadd_feed_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_16(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_8(SseDeserializer deserializer);

  @protected
  KitchenSinkTwinNormal sse_decode_box_autoadd_kitchen_sink_twin_normal(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsync sse_decode_box_autoadd_kitchen_sink_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsyncSse
      sse_decode_box_autoadd_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSse sse_decode_box_autoadd_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSync sse_decode_box_autoadd_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSyncSse sse_decode_box_autoadd_kitchen_sink_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ListOfNestedRawStringMirrored
      sse_decode_box_autoadd_list_of_nested_raw_string_mirrored(
          SseDeserializer deserializer);

  @protected
  MacroStruct sse_decode_box_autoadd_macro_struct(SseDeserializer deserializer);

  @protected
  MeasureTwinNormal sse_decode_box_autoadd_measure_twin_normal(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsync sse_decode_box_autoadd_measure_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsyncSse sse_decode_box_autoadd_measure_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSse sse_decode_box_autoadd_measure_twin_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSync sse_decode_box_autoadd_measure_twin_sync(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSyncSse sse_decode_box_autoadd_measure_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinNormal sse_decode_box_autoadd_message_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsync sse_decode_box_autoadd_message_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsyncSse
      sse_decode_box_autoadd_message_id_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MessageIdTwinSse sse_decode_box_autoadd_message_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSync sse_decode_box_autoadd_message_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSyncSse sse_decode_box_autoadd_message_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinNormal sse_decode_box_autoadd_my_nested_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsync
      sse_decode_box_autoadd_my_nested_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsyncSse
      sse_decode_box_autoadd_my_nested_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSse sse_decode_box_autoadd_my_nested_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSync sse_decode_box_autoadd_my_nested_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSyncSse
      sse_decode_box_autoadd_my_nested_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  MySize sse_decode_box_autoadd_my_size(SseDeserializer deserializer);

  @protected
  MyStruct sse_decode_box_autoadd_my_struct(SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinNormal sse_decode_box_autoadd_my_tree_node_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsync sse_decode_box_autoadd_my_tree_node_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsyncSse
      sse_decode_box_autoadd_my_tree_node_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSse sse_decode_box_autoadd_my_tree_node_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSync sse_decode_box_autoadd_my_tree_node_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSyncSse sse_decode_box_autoadd_my_tree_node_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NestedRawStringMirrored sse_decode_box_autoadd_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinNormal sse_decode_box_autoadd_new_type_int_twin_normal(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsync sse_decode_box_autoadd_new_type_int_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsyncSse
      sse_decode_box_autoadd_new_type_int_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSse sse_decode_box_autoadd_new_type_int_twin_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSync sse_decode_box_autoadd_new_type_int_twin_sync(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSyncSse sse_decode_box_autoadd_new_type_int_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinNormal sse_decode_box_autoadd_note_twin_normal(
      SseDeserializer deserializer);

  @protected
  NoteTwinRustAsync sse_decode_box_autoadd_note_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NoteTwinRustAsyncSse sse_decode_box_autoadd_note_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinSse sse_decode_box_autoadd_note_twin_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinSync sse_decode_box_autoadd_note_twin_sync(
      SseDeserializer deserializer);

  @protected
  NoteTwinSyncSse sse_decode_box_autoadd_note_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  Numbers sse_decode_box_autoadd_numbers(SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinNormal sse_decode_box_autoadd_opaque_nested_twin_normal(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsync
      sse_decode_box_autoadd_opaque_nested_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncSse
      sse_decode_box_autoadd_opaque_nested_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSse sse_decode_box_autoadd_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSync sse_decode_box_autoadd_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncSse sse_decode_box_autoadd_opaque_nested_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinNormal sse_decode_box_autoadd_opt_vecs_twin_normal(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsync sse_decode_box_autoadd_opt_vecs_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsyncSse sse_decode_box_autoadd_opt_vecs_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSse sse_decode_box_autoadd_opt_vecs_twin_sse(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSync sse_decode_box_autoadd_opt_vecs_twin_sync(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSyncSse sse_decode_box_autoadd_opt_vecs_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  RawStringMirrored sse_decode_box_autoadd_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  (String, int) sse_decode_box_autoadd_record_string_i_32(
      SseDeserializer deserializer);

  @protected
  Sequences sse_decode_box_autoadd_sequences(SseDeserializer deserializer);

  @protected
  SomeStructTwinNormal sse_decode_box_autoadd_some_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsync sse_decode_box_autoadd_some_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsyncSse
      sse_decode_box_autoadd_some_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  SomeStructTwinSse sse_decode_box_autoadd_some_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSync sse_decode_box_autoadd_some_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSyncSse sse_decode_box_autoadd_some_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinNormal
      sse_decode_box_autoadd_struct_with_comments_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsync
      sse_decode_box_autoadd_struct_with_comments_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_comments_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSse
      sse_decode_box_autoadd_struct_with_comments_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSync
      sse_decode_box_autoadd_struct_with_comments_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSyncSse
      sse_decode_box_autoadd_struct_with_comments_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinNormal sse_decode_box_autoadd_struct_with_enum_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsync
      sse_decode_box_autoadd_struct_with_enum_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSse sse_decode_box_autoadd_struct_with_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSync sse_decode_box_autoadd_struct_with_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSyncSse
      sse_decode_box_autoadd_struct_with_enum_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinNormal
      sse_decode_box_autoadd_struct_with_one_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSse
      sse_decode_box_autoadd_struct_with_one_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSync
      sse_decode_box_autoadd_struct_with_one_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_one_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinNormal
      sse_decode_box_autoadd_struct_with_two_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSse
      sse_decode_box_autoadd_struct_with_two_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSync
      sse_decode_box_autoadd_struct_with_two_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_two_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinNormal
      sse_decode_box_autoadd_struct_with_zero_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsync
      sse_decode_box_autoadd_struct_with_zero_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      sse_decode_box_autoadd_struct_with_zero_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSse
      sse_decode_box_autoadd_struct_with_zero_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSync
      sse_decode_box_autoadd_struct_with_zero_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSyncSse
      sse_decode_box_autoadd_struct_with_zero_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  SumWithTwinNormal sse_decode_box_autoadd_sum_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsync sse_decode_box_autoadd_sum_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncSse sse_decode_box_autoadd_sum_with_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSse sse_decode_box_autoadd_sum_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSync sse_decode_box_autoadd_sum_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSyncSse sse_decode_box_autoadd_sum_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinNormal sse_decode_box_autoadd_test_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsync sse_decode_box_autoadd_test_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSse sse_decode_box_autoadd_test_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSse sse_decode_box_autoadd_test_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSync sse_decode_box_autoadd_test_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSse sse_decode_box_autoadd_test_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinNormal
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSse
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSync
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      sse_decode_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinNormal
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSse
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSync
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      sse_decode_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  UserIdTwinNormal sse_decode_box_autoadd_user_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsync sse_decode_box_autoadd_user_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsyncSse sse_decode_box_autoadd_user_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSse sse_decode_box_autoadd_user_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSync sse_decode_box_autoadd_user_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSyncSse sse_decode_box_autoadd_user_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal sse_decode_box_autoadd_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync sse_decode_box_autoadd_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse sse_decode_box_autoadd_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse sse_decode_box_autoadd_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync sse_decode_box_autoadd_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse sse_decode_box_autoadd_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal
      sse_decode_box_benchmark_binary_tree_twin_normal(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync
      sse_decode_box_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse
      sse_decode_box_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse sse_decode_box_benchmark_binary_tree_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync sse_decode_box_benchmark_binary_tree_twin_sync(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse
      sse_decode_box_benchmark_binary_tree_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  BlobTwinNormal sse_decode_box_blob_twin_normal(SseDeserializer deserializer);

  @protected
  BlobTwinRustAsync sse_decode_box_blob_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  BlobTwinRustAsyncSse sse_decode_box_blob_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  BlobTwinSse sse_decode_box_blob_twin_sse(SseDeserializer deserializer);

  @protected
  BlobTwinSync sse_decode_box_blob_twin_sync(SseDeserializer deserializer);

  @protected
  BlobTwinSyncSse sse_decode_box_blob_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  bool sse_decode_box_bool(SseDeserializer deserializer);

  @protected
  DistanceTwinNormal sse_decode_box_distance_twin_normal(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsync sse_decode_box_distance_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsyncSse sse_decode_box_distance_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSse sse_decode_box_distance_twin_sse(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSync sse_decode_box_distance_twin_sync(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSyncSse sse_decode_box_distance_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal sse_decode_box_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync sse_decode_box_exotic_optionals_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      sse_decode_box_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse sse_decode_box_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync sse_decode_box_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse sse_decode_box_exotic_optionals_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  double sse_decode_box_f_64(SseDeserializer deserializer);

  @protected
  FeedIdTwinNormal sse_decode_box_feed_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsync sse_decode_box_feed_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsyncSse sse_decode_box_feed_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSse sse_decode_box_feed_id_twin_sse(SseDeserializer deserializer);

  @protected
  FeedIdTwinSync sse_decode_box_feed_id_twin_sync(SseDeserializer deserializer);

  @protected
  FeedIdTwinSyncSse sse_decode_box_feed_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_i_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_i_8(SseDeserializer deserializer);

  @protected
  KitchenSinkTwinNormal sse_decode_box_kitchen_sink_twin_normal(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsync sse_decode_box_kitchen_sink_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsyncSse sse_decode_box_kitchen_sink_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSse sse_decode_box_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSync sse_decode_box_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSyncSse sse_decode_box_kitchen_sink_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MySize sse_decode_box_my_size(SseDeserializer deserializer);

  @protected
  SpeedTwinNormal sse_decode_box_speed_twin_normal(
      SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsync sse_decode_box_speed_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsyncSse sse_decode_box_speed_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SpeedTwinSse sse_decode_box_speed_twin_sse(SseDeserializer deserializer);

  @protected
  SpeedTwinSync sse_decode_box_speed_twin_sync(SseDeserializer deserializer);

  @protected
  SpeedTwinSyncSse sse_decode_box_speed_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_u_8(SseDeserializer deserializer);

  @protected
  U8Array1600 sse_decode_box_u_8_array_1600(SseDeserializer deserializer);

  @protected
  U8Array8 sse_decode_box_u_8_array_8(SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal sse_decode_box_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync sse_decode_box_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse sse_decode_box_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse sse_decode_box_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync sse_decode_box_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse sse_decode_box_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CTwinNormal sse_decode_c_twin_normal(SseDeserializer deserializer);

  @protected
  CTwinRustAsync sse_decode_c_twin_rust_async(SseDeserializer deserializer);

  @protected
  CTwinRustAsyncSse sse_decode_c_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CTwinSse sse_decode_c_twin_sse(SseDeserializer deserializer);

  @protected
  CTwinSync sse_decode_c_twin_sync(SseDeserializer deserializer);

  @protected
  CTwinSyncSse sse_decode_c_twin_sync_sse(SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinNormal sse_decode_concatenate_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsync sse_decode_concatenate_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinRustAsyncSse
      sse_decode_concatenate_with_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSse sse_decode_concatenate_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSync sse_decode_concatenate_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  ConcatenateWithTwinSyncSse sse_decode_concatenate_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinNormal
      sse_decode_contains_mirrored_sub_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinRustAsync
      sse_decode_contains_mirrored_sub_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinRustAsyncSse
      sse_decode_contains_mirrored_sub_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinSse
      sse_decode_contains_mirrored_sub_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinSync
      sse_decode_contains_mirrored_sub_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  ContainsMirroredSubStructTwinSyncSse
      sse_decode_contains_mirrored_sub_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinNormal sse_decode_custom_enum_error_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinRustAsync sse_decode_custom_enum_error_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinRustAsyncSse
      sse_decode_custom_enum_error_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinSse sse_decode_custom_enum_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinSync sse_decode_custom_enum_error_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomEnumErrorTwinSyncSse sse_decode_custom_enum_error_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinNormal sse_decode_custom_error_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinRustAsync sse_decode_custom_error_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinRustAsyncSse sse_decode_custom_error_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinSse sse_decode_custom_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinSync sse_decode_custom_error_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomErrorTwinSyncSse sse_decode_custom_error_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinNormal sse_decode_custom_nested_error_1_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinRustAsync
      sse_decode_custom_nested_error_1_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinRustAsyncSse
      sse_decode_custom_nested_error_1_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinSse sse_decode_custom_nested_error_1_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinSync sse_decode_custom_nested_error_1_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedError1TwinSyncSse sse_decode_custom_nested_error_1_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinNormal sse_decode_custom_nested_error_2_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsync
      sse_decode_custom_nested_error_2_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinRustAsyncSse
      sse_decode_custom_nested_error_2_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSse sse_decode_custom_nested_error_2_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSync sse_decode_custom_nested_error_2_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedError2TwinSyncSse sse_decode_custom_nested_error_2_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinNormal
      sse_decode_custom_nested_error_inner_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsync
      sse_decode_custom_nested_error_inner_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinRustAsyncSse
      sse_decode_custom_nested_error_inner_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSse sse_decode_custom_nested_error_inner_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSync sse_decode_custom_nested_error_inner_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorInnerTwinSyncSse
      sse_decode_custom_nested_error_inner_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinNormal
      sse_decode_custom_nested_error_outer_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsync
      sse_decode_custom_nested_error_outer_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinRustAsyncSse
      sse_decode_custom_nested_error_outer_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSse sse_decode_custom_nested_error_outer_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSync sse_decode_custom_nested_error_outer_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomNestedErrorOuterTwinSyncSse
      sse_decode_custom_nested_error_outer_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinNormal
      sse_decode_custom_struct_error_another_twin_normal(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinRustAsync
      sse_decode_custom_struct_error_another_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinRustAsyncSse
      sse_decode_custom_struct_error_another_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinSse
      sse_decode_custom_struct_error_another_twin_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinSync
      sse_decode_custom_struct_error_another_twin_sync(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorAnotherTwinSyncSse
      sse_decode_custom_struct_error_another_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinNormal sse_decode_custom_struct_error_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsync sse_decode_custom_struct_error_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinRustAsyncSse
      sse_decode_custom_struct_error_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSse sse_decode_custom_struct_error_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSync sse_decode_custom_struct_error_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomStructErrorTwinSyncSse sse_decode_custom_struct_error_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinNormal sse_decode_custom_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsync sse_decode_custom_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinRustAsyncSse sse_decode_custom_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSse sse_decode_custom_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSync sse_decode_custom_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomStructTwinSyncSse sse_decode_custom_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinNormal sse_decode_customized_twin_normal(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsync sse_decode_customized_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinRustAsyncSse sse_decode_customized_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSse sse_decode_customized_twin_sse(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSync sse_decode_customized_twin_sync(
      SseDeserializer deserializer);

  @protected
  CustomizedTwinSyncSse sse_decode_customized_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinNormal sse_decode_dart_opaque_nested_twin_normal(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsync sse_decode_dart_opaque_nested_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinRustAsyncSse
      sse_decode_dart_opaque_nested_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSse sse_decode_dart_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSync sse_decode_dart_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  DartOpaqueNestedTwinSyncSse sse_decode_dart_opaque_nested_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  dynamic sse_decode_dartabi(SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinNormal
      sse_decode_demo_struct_for_rust_call_dart_twin_normal(
          SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinRustAsync
      sse_decode_demo_struct_for_rust_call_dart_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinRustAsyncSse
      sse_decode_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  DemoStructForRustCallDartTwinSse
      sse_decode_demo_struct_for_rust_call_dart_twin_sse(
          SseDeserializer deserializer);

  @protected
  DistanceTwinNormal sse_decode_distance_twin_normal(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsync sse_decode_distance_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  DistanceTwinRustAsyncSse sse_decode_distance_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  DistanceTwinSse sse_decode_distance_twin_sse(SseDeserializer deserializer);

  @protected
  DistanceTwinSync sse_decode_distance_twin_sync(SseDeserializer deserializer);

  @protected
  DistanceTwinSyncSse sse_decode_distance_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinNormal sse_decode_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsync sse_decode_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsyncSse sse_decode_element_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSse sse_decode_element_twin_sse(SseDeserializer deserializer);

  @protected
  ElementTwinSync sse_decode_element_twin_sync(SseDeserializer deserializer);

  @protected
  ElementTwinSyncSse sse_decode_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinNormal sse_decode_empty_twin_normal(SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsync sse_decode_empty_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EmptyTwinRustAsyncSse sse_decode_empty_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EmptyTwinSse sse_decode_empty_twin_sse(SseDeserializer deserializer);

  @protected
  EmptyTwinSync sse_decode_empty_twin_sync(SseDeserializer deserializer);

  @protected
  EmptyTwinSyncSse sse_decode_empty_twin_sync_sse(SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinNormal sse_decode_enum_dart_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsync sse_decode_enum_dart_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinRustAsyncSse
      sse_decode_enum_dart_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSse sse_decode_enum_dart_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSync sse_decode_enum_dart_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumDartOpaqueTwinSyncSse sse_decode_enum_dart_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinNormal sse_decode_enum_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinNormalArray5 sse_decode_enum_opaque_twin_normal_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsync sse_decode_enum_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncArray5 sse_decode_enum_opaque_twin_rust_async_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSse sse_decode_enum_opaque_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinRustAsyncSseArray5
      sse_decode_enum_opaque_twin_rust_async_sse_array_5(
          SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSse sse_decode_enum_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSseArray5 sse_decode_enum_opaque_twin_sse_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSync sse_decode_enum_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncArray5 sse_decode_enum_opaque_twin_sync_array_5(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSse sse_decode_enum_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumOpaqueTwinSyncSseArray5 sse_decode_enum_opaque_twin_sync_sse_array_5(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinNormal sse_decode_enum_simple_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinRustAsync sse_decode_enum_simple_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinRustAsyncSse sse_decode_enum_simple_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinSse sse_decode_enum_simple_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinSync sse_decode_enum_simple_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumSimpleTwinSyncSse sse_decode_enum_simple_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinNormal sse_decode_enum_with_item_mixed_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsync
      sse_decode_enum_with_item_mixed_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinRustAsyncSse
      sse_decode_enum_with_item_mixed_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSse sse_decode_enum_with_item_mixed_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSync sse_decode_enum_with_item_mixed_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithItemMixedTwinSyncSse sse_decode_enum_with_item_mixed_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinNormal sse_decode_enum_with_item_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsync
      sse_decode_enum_with_item_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinRustAsyncSse
      sse_decode_enum_with_item_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSse sse_decode_enum_with_item_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSync sse_decode_enum_with_item_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithItemStructTwinSyncSse sse_decode_enum_with_item_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinNormal sse_decode_enum_with_item_tuple_twin_normal(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsync
      sse_decode_enum_with_item_tuple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinRustAsyncSse
      sse_decode_enum_with_item_tuple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSse sse_decode_enum_with_item_tuple_twin_sse(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSync sse_decode_enum_with_item_tuple_twin_sync(
      SseDeserializer deserializer);

  @protected
  EnumWithItemTupleTwinSyncSse sse_decode_enum_with_item_tuple_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  EventTwinNormal sse_decode_event_twin_normal(SseDeserializer deserializer);

  @protected
  EventTwinRustAsync sse_decode_event_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  EventTwinRustAsyncSse sse_decode_event_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  EventTwinSse sse_decode_event_twin_sse(SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal sse_decode_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync sse_decode_exotic_optionals_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse
      sse_decode_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse sse_decode_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync sse_decode_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse sse_decode_exotic_optionals_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  double sse_decode_f_32(SseDeserializer deserializer);

  @protected
  double sse_decode_f_64(SseDeserializer deserializer);

  @protected
  F64Array16 sse_decode_f_64_array_16(SseDeserializer deserializer);

  @protected
  FeatureChronoTwinNormal sse_decode_feature_chrono_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinRustAsync sse_decode_feature_chrono_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeatureChronoTwinSync sse_decode_feature_chrono_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinNormal sse_decode_feature_uuid_twin_normal(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinRustAsync sse_decode_feature_uuid_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeatureUuidTwinSync sse_decode_feature_uuid_twin_sync(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinNormal sse_decode_feed_id_twin_normal(SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsync sse_decode_feed_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinRustAsyncSse sse_decode_feed_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  FeedIdTwinSse sse_decode_feed_id_twin_sse(SseDeserializer deserializer);

  @protected
  FeedIdTwinSync sse_decode_feed_id_twin_sync(SseDeserializer deserializer);

  @protected
  FeedIdTwinSyncSse sse_decode_feed_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_i_16(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  I32Array2 sse_decode_i_32_array_2(SseDeserializer deserializer);

  @protected
  int sse_decode_i_64(SseDeserializer deserializer);

  @protected
  int sse_decode_i_8(SseDeserializer deserializer);

  @protected
  int sse_decode_isize(SseDeserializer deserializer);

  @protected
  KitchenSinkTwinNormal sse_decode_kitchen_sink_twin_normal(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsync sse_decode_kitchen_sink_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinRustAsyncSse sse_decode_kitchen_sink_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSse sse_decode_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSync sse_decode_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  KitchenSinkTwinSyncSse sse_decode_kitchen_sink_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<Duration> sse_decode_list_Chrono_Duration(SseDeserializer deserializer);

  @protected
  List<DateTime> sse_decode_list_Chrono_Local(SseDeserializer deserializer);

  @protected
  List<DateTime> sse_decode_list_Chrono_Naive(SseDeserializer deserializer);

  @protected
  List<Object> sse_decode_list_DartOpaque(SseDeserializer deserializer);

  @protected
  List<HideData> sse_decode_list_RustOpaque_hide_data(
      SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<ApplicationEnvVar> sse_decode_list_application_env_var(
      SseDeserializer deserializer);

  @protected
  List<ApplicationSettings> sse_decode_list_application_settings(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal> sse_decode_list_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync> sse_decode_list_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse> sse_decode_list_attribute_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse> sse_decode_list_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync> sse_decode_list_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse> sse_decode_list_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<bool> sse_decode_list_bool(SseDeserializer deserializer);

  @protected
  List<ElementTwinNormal> sse_decode_list_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsync> sse_decode_list_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsyncSse> sse_decode_list_element_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSse> sse_decode_list_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSync> sse_decode_list_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSyncSse> sse_decode_list_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinNormal> sse_decode_list_enum_opaque_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinRustAsync> sse_decode_list_enum_opaque_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinRustAsyncSse>
      sse_decode_list_enum_opaque_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSse> sse_decode_list_enum_opaque_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSync> sse_decode_list_enum_opaque_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<EnumOpaqueTwinSyncSse> sse_decode_list_enum_opaque_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<MyEnum> sse_decode_list_my_enum(SseDeserializer deserializer);

  @protected
  List<MySize> sse_decode_list_my_size(SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinNormal> sse_decode_list_my_tree_node_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinRustAsync> sse_decode_list_my_tree_node_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinRustAsyncSse>
      sse_decode_list_my_tree_node_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinSse> sse_decode_list_my_tree_node_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinSync> sse_decode_list_my_tree_node_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<MyTreeNodeTwinSyncSse> sse_decode_list_my_tree_node_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<NestedRawStringMirrored> sse_decode_list_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  ListOfNestedRawStringMirrored sse_decode_list_of_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  List<String?> sse_decode_list_opt_String(SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal?>
      sse_decode_list_opt_box_autoadd_attribute_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync?>
      sse_decode_list_opt_box_autoadd_attribute_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse?>
      sse_decode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse?> sse_decode_list_opt_box_autoadd_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync?> sse_decode_list_opt_box_autoadd_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse?>
      sse_decode_list_opt_box_autoadd_attribute_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<int?> sse_decode_list_opt_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinNormal?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsync?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsyncSse?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSse?> sse_decode_list_opt_box_autoadd_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSync?> sse_decode_list_opt_box_autoadd_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSyncSse?>
      sse_decode_list_opt_box_autoadd_weekdays_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<Int32List?> sse_decode_list_opt_list_prim_i_32(
      SseDeserializer deserializer);

  @protected
  List<PointTwinNormal> sse_decode_list_point_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<PointTwinRustAsync> sse_decode_list_point_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<PointTwinRustAsyncSse> sse_decode_list_point_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<PointTwinSse> sse_decode_list_point_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<PointTwinSync> sse_decode_list_point_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<PointTwinSyncSse> sse_decode_list_point_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  Float32List sse_decode_list_prim_f_32(SseDeserializer deserializer);

  @protected
  Float64List sse_decode_list_prim_f_64(SseDeserializer deserializer);

  @protected
  Int16List sse_decode_list_prim_i_16(SseDeserializer deserializer);

  @protected
  Int32List sse_decode_list_prim_i_32(SseDeserializer deserializer);

  @protected
  Int64List sse_decode_list_prim_i_64(SseDeserializer deserializer);

  @protected
  Int8List sse_decode_list_prim_i_8(SseDeserializer deserializer);

  @protected
  Uint16List sse_decode_list_prim_u_16(SseDeserializer deserializer);

  @protected
  Uint32List sse_decode_list_prim_u_32(SseDeserializer deserializer);

  @protected
  Uint64List sse_decode_list_prim_u_64(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8(SseDeserializer deserializer);

  @protected
  List<RawStringEnumMirrored> sse_decode_list_raw_string_enum_mirrored(
      SseDeserializer deserializer);

  @protected
  List<RawStringMirrored> sse_decode_list_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  List<(int, int)> sse_decode_list_record_i_32_i_32(
      SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinNormal)>
      sse_decode_list_record_string_enum_simple_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinRustAsync)>
      sse_decode_list_record_string_enum_simple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinRustAsyncSse)>
      sse_decode_list_record_string_enum_simple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinSse)>
      sse_decode_list_record_string_enum_simple_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinSync)>
      sse_decode_list_record_string_enum_simple_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(String, EnumSimpleTwinSyncSse)>
      sse_decode_list_record_string_enum_simple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, int)> sse_decode_list_record_string_i_32(
      SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinNormal)>
      sse_decode_list_record_string_kitchen_sink_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinRustAsync)>
      sse_decode_list_record_string_kitchen_sink_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinRustAsyncSse)>
      sse_decode_list_record_string_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinSse)>
      sse_decode_list_record_string_kitchen_sink_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinSync)>
      sse_decode_list_record_string_kitchen_sink_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<(String, KitchenSinkTwinSyncSse)>
      sse_decode_list_record_string_kitchen_sink_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  List<(String, Uint8List)> sse_decode_list_record_string_list_prim_u_8(
      SseDeserializer deserializer);

  @protected
  List<(String, MySize)> sse_decode_list_record_string_my_size(
      SseDeserializer deserializer);

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinNormal> sse_decode_list_sum_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinRustAsync> sse_decode_list_sum_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinRustAsyncSse> sse_decode_list_sum_with_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinSse> sse_decode_list_sum_with_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinSync> sse_decode_list_sum_with_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<SumWithTwinSyncSse> sse_decode_list_sum_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinNormal> sse_decode_list_test_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinRustAsync> sse_decode_list_test_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinRustAsyncSse> sse_decode_list_test_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinSse> sse_decode_list_test_id_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinSync> sse_decode_list_test_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<TestIdTwinSyncSse> sse_decode_list_test_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinNormal> sse_decode_list_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsync> sse_decode_list_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinRustAsyncSse> sse_decode_list_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSse> sse_decode_list_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSync> sse_decode_list_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<WeekdaysTwinSyncSse> sse_decode_list_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  Log2TwinNormal sse_decode_log_2_twin_normal(SseDeserializer deserializer);

  @protected
  Log2TwinRustAsync sse_decode_log_2_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  Log2TwinRustAsyncSse sse_decode_log_2_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  Log2TwinSse sse_decode_log_2_twin_sse(SseDeserializer deserializer);

  @protected
  Log2TwinSync sse_decode_log_2_twin_sync(SseDeserializer deserializer);

  @protected
  Log2TwinSyncSse sse_decode_log_2_twin_sync_sse(SseDeserializer deserializer);

  @protected
  LogTwinNormal sse_decode_log_twin_normal(SseDeserializer deserializer);

  @protected
  LogTwinRustAsync sse_decode_log_twin_rust_async(SseDeserializer deserializer);

  @protected
  LogTwinRustAsyncSse sse_decode_log_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  LogTwinSse sse_decode_log_twin_sse(SseDeserializer deserializer);

  @protected
  MacroStruct sse_decode_macro_struct(SseDeserializer deserializer);

  @protected
  MeasureTwinNormal sse_decode_measure_twin_normal(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsync sse_decode_measure_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsyncSse sse_decode_measure_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSse sse_decode_measure_twin_sse(SseDeserializer deserializer);

  @protected
  MeasureTwinSync sse_decode_measure_twin_sync(SseDeserializer deserializer);

  @protected
  MeasureTwinSyncSse sse_decode_measure_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinNormal sse_decode_message_id_twin_normal(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsync sse_decode_message_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinRustAsyncSse sse_decode_message_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSse sse_decode_message_id_twin_sse(SseDeserializer deserializer);

  @protected
  MessageIdTwinSync sse_decode_message_id_twin_sync(
      SseDeserializer deserializer);

  @protected
  MessageIdTwinSyncSse sse_decode_message_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinNormal sse_decode_mirror_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinRustAsync sse_decode_mirror_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinRustAsyncSse sse_decode_mirror_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinSse sse_decode_mirror_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinSync sse_decode_mirror_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  MirrorStructTwinSyncSse sse_decode_mirror_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinNormal
      sse_decode_more_than_just_one_raw_string_struct_twin_normal(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsync
      sse_decode_more_than_just_one_raw_string_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinRustAsyncSse
      sse_decode_more_than_just_one_raw_string_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinSse
      sse_decode_more_than_just_one_raw_string_struct_twin_sse(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinSync
      sse_decode_more_than_just_one_raw_string_struct_twin_sync(
          SseDeserializer deserializer);

  @protected
  MoreThanJustOneRawStringStructTwinSyncSse
      sse_decode_more_than_just_one_raw_string_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  MyEnum sse_decode_my_enum(SseDeserializer deserializer);

  @protected
  MyNestedStructTwinNormal sse_decode_my_nested_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsync sse_decode_my_nested_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinRustAsyncSse
      sse_decode_my_nested_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSse sse_decode_my_nested_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSync sse_decode_my_nested_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyNestedStructTwinSyncSse sse_decode_my_nested_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  MySize sse_decode_my_size(SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinNormal sse_decode_my_stream_entry_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinRustAsync sse_decode_my_stream_entry_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinRustAsyncSse sse_decode_my_stream_entry_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MyStreamEntryTwinSse sse_decode_my_stream_entry_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyStruct sse_decode_my_struct(SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinNormal sse_decode_my_tree_node_twin_normal(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsync sse_decode_my_tree_node_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinRustAsyncSse sse_decode_my_tree_node_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSse sse_decode_my_tree_node_twin_sse(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSync sse_decode_my_tree_node_twin_sync(
      SseDeserializer deserializer);

  @protected
  MyTreeNodeTwinSyncSse sse_decode_my_tree_node_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NestedRawStringMirrored sse_decode_nested_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  NewSimpleStruct sse_decode_new_simple_struct(SseDeserializer deserializer);

  @protected
  NewTypeIntTwinNormal sse_decode_new_type_int_twin_normal(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsync sse_decode_new_type_int_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsyncSse sse_decode_new_type_int_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSse sse_decode_new_type_int_twin_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSync sse_decode_new_type_int_twin_sync(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSyncSse sse_decode_new_type_int_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinNormal sse_decode_note_twin_normal(SseDeserializer deserializer);

  @protected
  NoteTwinRustAsync sse_decode_note_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  NoteTwinRustAsyncSse sse_decode_note_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  NoteTwinSse sse_decode_note_twin_sse(SseDeserializer deserializer);

  @protected
  NoteTwinSync sse_decode_note_twin_sync(SseDeserializer deserializer);

  @protected
  NoteTwinSyncSse sse_decode_note_twin_sync_sse(SseDeserializer deserializer);

  @protected
  Numbers sse_decode_numbers(SseDeserializer deserializer);

  @protected
  OldSimpleStruct sse_decode_old_simple_struct(SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinNormal sse_decode_opaque_nested_twin_normal(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsync sse_decode_opaque_nested_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinRustAsyncSse sse_decode_opaque_nested_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSse sse_decode_opaque_nested_twin_sse(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSync sse_decode_opaque_nested_twin_sync(
      SseDeserializer deserializer);

  @protected
  OpaqueNestedTwinSyncSse sse_decode_opaque_nested_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  Duration? sse_decode_opt_box_autoadd_Chrono_Duration(
      SseDeserializer deserializer);

  @protected
  DateTime? sse_decode_opt_box_autoadd_Chrono_Naive(
      SseDeserializer deserializer);

  @protected
  DateTime? sse_decode_opt_box_autoadd_Chrono_Utc(SseDeserializer deserializer);

  @protected
  Object? sse_decode_opt_box_autoadd_DartOpaque(SseDeserializer deserializer);

  @protected
  HideData? sse_decode_opt_box_autoadd_RustOpaque_hide_data(
      SseDeserializer deserializer);

  @protected
  ApplicationEnv? sse_decode_opt_box_autoadd_application_env(
      SseDeserializer deserializer);

  @protected
  AttributeTwinNormal? sse_decode_opt_box_autoadd_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsync? sse_decode_opt_box_autoadd_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  AttributeTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  AttributeTwinSse? sse_decode_opt_box_autoadd_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSync? sse_decode_opt_box_autoadd_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  AttributeTwinSyncSse? sse_decode_opt_box_autoadd_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  ElementTwinNormal? sse_decode_opt_box_autoadd_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsync? sse_decode_opt_box_autoadd_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  ElementTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_element_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ElementTwinSse? sse_decode_opt_box_autoadd_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  ElementTwinSync? sse_decode_opt_box_autoadd_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  ElementTwinSyncSse? sse_decode_opt_box_autoadd_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_normal(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse? sse_decode_opt_box_autoadd_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_sync(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse?
      sse_decode_opt_box_autoadd_exotic_optionals_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_16(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_8(SseDeserializer deserializer);

  @protected
  MeasureTwinNormal? sse_decode_opt_box_autoadd_measure_twin_normal(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsync? sse_decode_opt_box_autoadd_measure_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  MeasureTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_measure_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  MeasureTwinSse? sse_decode_opt_box_autoadd_measure_twin_sse(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSync? sse_decode_opt_box_autoadd_measure_twin_sync(
      SseDeserializer deserializer);

  @protected
  MeasureTwinSyncSse? sse_decode_opt_box_autoadd_measure_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinNormal? sse_decode_opt_box_autoadd_new_type_int_twin_normal(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsync?
      sse_decode_opt_box_autoadd_new_type_int_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  NewTypeIntTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_new_type_int_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSse? sse_decode_opt_box_autoadd_new_type_int_twin_sse(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSync? sse_decode_opt_box_autoadd_new_type_int_twin_sync(
      SseDeserializer deserializer);

  @protected
  NewTypeIntTwinSyncSse? sse_decode_opt_box_autoadd_new_type_int_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  (String, int)? sse_decode_opt_box_autoadd_record_string_i_32(
      SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_16(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal? sse_decode_opt_box_autoadd_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync? sse_decode_opt_box_autoadd_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse?
      sse_decode_opt_box_autoadd_weekdays_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse? sse_decode_opt_box_autoadd_weekdays_twin_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync? sse_decode_opt_box_autoadd_weekdays_twin_sync(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse? sse_decode_opt_box_autoadd_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinNormal?
      sse_decode_opt_box_benchmark_binary_tree_twin_normal(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsync?
      sse_decode_opt_box_benchmark_binary_tree_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinRustAsyncSse?
      sse_decode_opt_box_benchmark_binary_tree_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSse? sse_decode_opt_box_benchmark_binary_tree_twin_sse(
      SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSync?
      sse_decode_opt_box_benchmark_binary_tree_twin_sync(
          SseDeserializer deserializer);

  @protected
  BenchmarkBinaryTreeTwinSyncSse?
      sse_decode_opt_box_benchmark_binary_tree_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_bool(SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinNormal? sse_decode_opt_box_exotic_optionals_twin_normal(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsync?
      sse_decode_opt_box_exotic_optionals_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinRustAsyncSse?
      sse_decode_opt_box_exotic_optionals_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSse? sse_decode_opt_box_exotic_optionals_twin_sse(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSync? sse_decode_opt_box_exotic_optionals_twin_sync(
      SseDeserializer deserializer);

  @protected
  ExoticOptionalsTwinSyncSse? sse_decode_opt_box_exotic_optionals_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_f_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_i_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_i_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_i_8(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_u_8(SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal>? sse_decode_opt_list_attribute_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync>? sse_decode_opt_list_attribute_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse>?
      sse_decode_opt_list_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse>? sse_decode_opt_list_attribute_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync>? sse_decode_opt_list_attribute_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse>? sse_decode_opt_list_attribute_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinNormal>? sse_decode_opt_list_element_twin_normal(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsync>? sse_decode_opt_list_element_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinRustAsyncSse>?
      sse_decode_opt_list_element_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<ElementTwinSse>? sse_decode_opt_list_element_twin_sse(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSync>? sse_decode_opt_list_element_twin_sync(
      SseDeserializer deserializer);

  @protected
  List<ElementTwinSyncSse>? sse_decode_opt_list_element_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  List<AttributeTwinNormal?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_normal(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsync?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinRustAsyncSse?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSse?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_sse(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSync?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_sync(
          SseDeserializer deserializer);

  @protected
  List<AttributeTwinSyncSse?>?
      sse_decode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  Float32List? sse_decode_opt_list_prim_f_32(SseDeserializer deserializer);

  @protected
  Float64List? sse_decode_opt_list_prim_f_64(SseDeserializer deserializer);

  @protected
  Int32List? sse_decode_opt_list_prim_i_32(SseDeserializer deserializer);

  @protected
  Int8List? sse_decode_opt_list_prim_i_8(SseDeserializer deserializer);

  @protected
  Uint8List? sse_decode_opt_list_prim_u_8(SseDeserializer deserializer);

  @protected
  OptVecsTwinNormal sse_decode_opt_vecs_twin_normal(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsync sse_decode_opt_vecs_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinRustAsyncSse sse_decode_opt_vecs_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  OptVecsTwinSse sse_decode_opt_vecs_twin_sse(SseDeserializer deserializer);

  @protected
  OptVecsTwinSync sse_decode_opt_vecs_twin_sync(SseDeserializer deserializer);

  @protected
  OptVecsTwinSyncSse sse_decode_opt_vecs_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  PointTwinNormal sse_decode_point_twin_normal(SseDeserializer deserializer);

  @protected
  PointTwinNormalArray2 sse_decode_point_twin_normal_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsync sse_decode_point_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsyncArray2 sse_decode_point_twin_rust_async_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsyncSse sse_decode_point_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  PointTwinRustAsyncSseArray2 sse_decode_point_twin_rust_async_sse_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinSse sse_decode_point_twin_sse(SseDeserializer deserializer);

  @protected
  PointTwinSseArray2 sse_decode_point_twin_sse_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinSync sse_decode_point_twin_sync(SseDeserializer deserializer);

  @protected
  PointTwinSyncArray2 sse_decode_point_twin_sync_array_2(
      SseDeserializer deserializer);

  @protected
  PointTwinSyncSse sse_decode_point_twin_sync_sse(SseDeserializer deserializer);

  @protected
  PointTwinSyncSseArray2 sse_decode_point_twin_sync_sse_array_2(
      SseDeserializer deserializer);

  @protected
  RawStringEnumMirrored sse_decode_raw_string_enum_mirrored(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinNormal sse_decode_raw_string_item_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinRustAsync
      sse_decode_raw_string_item_struct_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinRustAsyncSse
      sse_decode_raw_string_item_struct_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinSse sse_decode_raw_string_item_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinSync sse_decode_raw_string_item_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  RawStringItemStructTwinSyncSse
      sse_decode_raw_string_item_struct_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  RawStringMirrored sse_decode_raw_string_mirrored(
      SseDeserializer deserializer);

  @protected
  (ApplicationSettings, RawStringEnumMirrored)
      sse_decode_record_application_settings_raw_string_enum_mirrored(
          SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_i_32_i_32(SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinNormal)
      sse_decode_record_string_enum_simple_twin_normal(
          SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinRustAsync)
      sse_decode_record_string_enum_simple_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinRustAsyncSse)
      sse_decode_record_string_enum_simple_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinSse) sse_decode_record_string_enum_simple_twin_sse(
      SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinSync) sse_decode_record_string_enum_simple_twin_sync(
      SseDeserializer deserializer);

  @protected
  (String, EnumSimpleTwinSyncSse)
      sse_decode_record_string_enum_simple_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (String, int) sse_decode_record_string_i_32(SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinNormal)
      sse_decode_record_string_kitchen_sink_twin_normal(
          SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinRustAsync)
      sse_decode_record_string_kitchen_sink_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinRustAsyncSse)
      sse_decode_record_string_kitchen_sink_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinSse) sse_decode_record_string_kitchen_sink_twin_sse(
      SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinSync) sse_decode_record_string_kitchen_sink_twin_sync(
      SseDeserializer deserializer);

  @protected
  (String, KitchenSinkTwinSyncSse)
      sse_decode_record_string_kitchen_sink_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  (String, Uint8List) sse_decode_record_string_list_prim_u_8(
      SseDeserializer deserializer);

  @protected
  (String, MySize) sse_decode_record_string_my_size(
      SseDeserializer deserializer);

  @protected
  (String, String) sse_decode_record_string_string(
      SseDeserializer deserializer);

  @protected
  Sequences sse_decode_sequences(SseDeserializer deserializer);

  @protected
  SomeStructTwinNormal sse_decode_some_struct_twin_normal(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsync sse_decode_some_struct_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinRustAsyncSse sse_decode_some_struct_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSse sse_decode_some_struct_twin_sse(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSync sse_decode_some_struct_twin_sync(
      SseDeserializer deserializer);

  @protected
  SomeStructTwinSyncSse sse_decode_some_struct_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  SpeedTwinNormal sse_decode_speed_twin_normal(SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsync sse_decode_speed_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SpeedTwinRustAsyncSse sse_decode_speed_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SpeedTwinSse sse_decode_speed_twin_sse(SseDeserializer deserializer);

  @protected
  SpeedTwinSync sse_decode_speed_twin_sync(SseDeserializer deserializer);

  @protected
  SpeedTwinSyncSse sse_decode_speed_twin_sync_sse(SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinNormal sse_decode_struct_with_comments_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsync
      sse_decode_struct_with_comments_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinRustAsyncSse
      sse_decode_struct_with_comments_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSse sse_decode_struct_with_comments_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSync sse_decode_struct_with_comments_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithCommentsTwinSyncSse sse_decode_struct_with_comments_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinNormal sse_decode_struct_with_enum_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsync sse_decode_struct_with_enum_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinRustAsyncSse
      sse_decode_struct_with_enum_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSse sse_decode_struct_with_enum_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSync sse_decode_struct_with_enum_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithEnumTwinSyncSse sse_decode_struct_with_enum_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinNormal sse_decode_struct_with_one_field_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsync
      sse_decode_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinRustAsyncSse
      sse_decode_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSse sse_decode_struct_with_one_field_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSync sse_decode_struct_with_one_field_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithOneFieldTwinSyncSse sse_decode_struct_with_one_field_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinNormal sse_decode_struct_with_two_field_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsync
      sse_decode_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinRustAsyncSse
      sse_decode_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSse sse_decode_struct_with_two_field_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSync sse_decode_struct_with_two_field_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithTwoFieldTwinSyncSse sse_decode_struct_with_two_field_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinNormal sse_decode_struct_with_zero_field_twin_normal(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsync
      sse_decode_struct_with_zero_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinRustAsyncSse
      sse_decode_struct_with_zero_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSse sse_decode_struct_with_zero_field_twin_sse(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSync sse_decode_struct_with_zero_field_twin_sync(
      SseDeserializer deserializer);

  @protected
  StructWithZeroFieldTwinSyncSse
      sse_decode_struct_with_zero_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  SumWithTwinNormal sse_decode_sum_with_twin_normal(
      SseDeserializer deserializer);

  @protected
  SumWithTwinNormalArray3 sse_decode_sum_with_twin_normal_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsync sse_decode_sum_with_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncArray3 sse_decode_sum_with_twin_rust_async_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncSse sse_decode_sum_with_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinRustAsyncSseArray3 sse_decode_sum_with_twin_rust_async_sse_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSse sse_decode_sum_with_twin_sse(SseDeserializer deserializer);

  @protected
  SumWithTwinSseArray3 sse_decode_sum_with_twin_sse_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSync sse_decode_sum_with_twin_sync(SseDeserializer deserializer);

  @protected
  SumWithTwinSyncArray3 sse_decode_sum_with_twin_sync_array_3(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSyncSse sse_decode_sum_with_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  SumWithTwinSyncSseArray3 sse_decode_sum_with_twin_sync_sse_array_3(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinNormal sse_decode_test_chrono_twin_normal(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinRustAsync sse_decode_test_chrono_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestChronoTwinSync sse_decode_test_chrono_twin_sync(
      SseDeserializer deserializer);

  @protected
  TestIdTwinNormal sse_decode_test_id_twin_normal(SseDeserializer deserializer);

  @protected
  TestIdTwinNormalArray2 sse_decode_test_id_twin_normal_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinNormalArray4 sse_decode_test_id_twin_normal_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsync sse_decode_test_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncArray2 sse_decode_test_id_twin_rust_async_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncArray4 sse_decode_test_id_twin_rust_async_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSse sse_decode_test_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSseArray2 sse_decode_test_id_twin_rust_async_sse_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinRustAsyncSseArray4 sse_decode_test_id_twin_rust_async_sse_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSse sse_decode_test_id_twin_sse(SseDeserializer deserializer);

  @protected
  TestIdTwinSseArray2 sse_decode_test_id_twin_sse_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSseArray4 sse_decode_test_id_twin_sse_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSync sse_decode_test_id_twin_sync(SseDeserializer deserializer);

  @protected
  TestIdTwinSyncArray2 sse_decode_test_id_twin_sync_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncArray4 sse_decode_test_id_twin_sync_array_4(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSse sse_decode_test_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSseArray2 sse_decode_test_id_twin_sync_sse_array_2(
      SseDeserializer deserializer);

  @protected
  TestIdTwinSyncSseArray4 sse_decode_test_id_twin_sync_sse_array_4(
      SseDeserializer deserializer);

  @protected
  TestModelTwinNormal sse_decode_test_model_twin_normal(
      SseDeserializer deserializer);

  @protected
  TestModelTwinRustAsync sse_decode_test_model_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  TestModelTwinRustAsyncSse sse_decode_test_model_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  TestModelTwinSse sse_decode_test_model_twin_sse(SseDeserializer deserializer);

  @protected
  TestModelTwinSync sse_decode_test_model_twin_sync(
      SseDeserializer deserializer);

  @protected
  TestModelTwinSyncSse sse_decode_test_model_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinNormal
      sse_decode_tuple_struct_with_one_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsync
      sse_decode_tuple_struct_with_one_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinRustAsyncSse
      sse_decode_tuple_struct_with_one_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSse
      sse_decode_tuple_struct_with_one_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSync
      sse_decode_tuple_struct_with_one_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithOneFieldTwinSyncSse
      sse_decode_tuple_struct_with_one_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinNormal
      sse_decode_tuple_struct_with_two_field_twin_normal(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsync
      sse_decode_tuple_struct_with_two_field_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinRustAsyncSse
      sse_decode_tuple_struct_with_two_field_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSse
      sse_decode_tuple_struct_with_two_field_twin_sse(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSync
      sse_decode_tuple_struct_with_two_field_twin_sync(
          SseDeserializer deserializer);

  @protected
  TupleStructWithTwoFieldTwinSyncSse
      sse_decode_tuple_struct_with_two_field_twin_sync_sse(
          SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  U8Array1600 sse_decode_u_8_array_1600(SseDeserializer deserializer);

  @protected
  U8Array32 sse_decode_u_8_array_32(SseDeserializer deserializer);

  @protected
  U8Array5 sse_decode_u_8_array_5(SseDeserializer deserializer);

  @protected
  U8Array8 sse_decode_u_8_array_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  UserIdTwinNormal sse_decode_user_id_twin_normal(SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsync sse_decode_user_id_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  UserIdTwinRustAsyncSse sse_decode_user_id_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  UserIdTwinSse sse_decode_user_id_twin_sse(SseDeserializer deserializer);

  @protected
  UserIdTwinSync sse_decode_user_id_twin_sync(SseDeserializer deserializer);

  @protected
  UserIdTwinSyncSse sse_decode_user_id_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinNormal sse_decode_vec_of_primitive_pack_twin_normal(
      SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinRustAsync
      sse_decode_vec_of_primitive_pack_twin_rust_async(
          SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinRustAsyncSse
      sse_decode_vec_of_primitive_pack_twin_rust_async_sse(
          SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinSse sse_decode_vec_of_primitive_pack_twin_sse(
      SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinSync sse_decode_vec_of_primitive_pack_twin_sync(
      SseDeserializer deserializer);

  @protected
  VecOfPrimitivePackTwinSyncSse sse_decode_vec_of_primitive_pack_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinNormal sse_decode_weekdays_twin_normal(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsync sse_decode_weekdays_twin_rust_async(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinRustAsyncSse sse_decode_weekdays_twin_rust_async_sse(
      SseDeserializer deserializer);

  @protected
  WeekdaysTwinSse sse_decode_weekdays_twin_sse(SseDeserializer deserializer);

  @protected
  WeekdaysTwinSync sse_decode_weekdays_twin_sync(SseDeserializer deserializer);

  @protected
  WeekdaysTwinSyncSse sse_decode_weekdays_twin_sync_sse(
      SseDeserializer deserializer);

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_AnyhowException(
      AnyhowException raw) {
    throw UnimplementedError();
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_Backtrace(String raw) {
    throw UnimplementedError();
  }

  @protected
  int cst_encode_Chrono_Duration(Duration raw) {
    return cst_encode_i_64(raw.inMicroseconds);
  }

  @protected
  int cst_encode_Chrono_Local(DateTime raw) {
    return cst_encode_i_64(raw.microsecondsSinceEpoch);
  }

  @protected
  int cst_encode_Chrono_Naive(DateTime raw) {
    return cst_encode_i_64(raw.microsecondsSinceEpoch);
  }

  @protected
  int cst_encode_Chrono_Utc(DateTime raw) {
    return cst_encode_i_64(raw.microsecondsSinceEpoch);
  }

  @protected
  ffi.Pointer<wire_cst_list_DartOpaque> cst_encode_DartOpaque_array_1(
      ObjectArray1 raw) {
    return cst_encode_list_DartOpaque(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_string> cst_encode_Map_String_String(
      Map<String, String> raw) {
    return cst_encode_list_record_string_string(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal>
      cst_encode_Map_String_enum_simple_twin_normal(
          Map<String, EnumSimpleTwinNormal> raw) {
    return cst_encode_list_record_string_enum_simple_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async>
      cst_encode_Map_String_enum_simple_twin_rust_async(
          Map<String, EnumSimpleTwinRustAsync> raw) {
    return cst_encode_list_record_string_enum_simple_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async_sse>
      cst_encode_Map_String_enum_simple_twin_rust_async_sse(
          Map<String, EnumSimpleTwinRustAsyncSse> raw) {
    return cst_encode_list_record_string_enum_simple_twin_rust_async_sse(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sse>
      cst_encode_Map_String_enum_simple_twin_sse(
          Map<String, EnumSimpleTwinSse> raw) {
    return cst_encode_list_record_string_enum_simple_twin_sse(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync>
      cst_encode_Map_String_enum_simple_twin_sync(
          Map<String, EnumSimpleTwinSync> raw) {
    return cst_encode_list_record_string_enum_simple_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync_sse>
      cst_encode_Map_String_enum_simple_twin_sync_sse(
          Map<String, EnumSimpleTwinSyncSse> raw) {
    return cst_encode_list_record_string_enum_simple_twin_sync_sse(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal>
      cst_encode_Map_String_kitchen_sink_twin_normal(
          Map<String, KitchenSinkTwinNormal> raw) {
    return cst_encode_list_record_string_kitchen_sink_twin_normal(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async>
      cst_encode_Map_String_kitchen_sink_twin_rust_async(
          Map<String, KitchenSinkTwinRustAsync> raw) {
    return cst_encode_list_record_string_kitchen_sink_twin_rust_async(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async_sse>
      cst_encode_Map_String_kitchen_sink_twin_rust_async_sse(
          Map<String, KitchenSinkTwinRustAsyncSse> raw) {
    return cst_encode_list_record_string_kitchen_sink_twin_rust_async_sse(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sse>
      cst_encode_Map_String_kitchen_sink_twin_sse(
          Map<String, KitchenSinkTwinSse> raw) {
    return cst_encode_list_record_string_kitchen_sink_twin_sse(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync>
      cst_encode_Map_String_kitchen_sink_twin_sync(
          Map<String, KitchenSinkTwinSync> raw) {
    return cst_encode_list_record_string_kitchen_sink_twin_sync(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync_sse>
      cst_encode_Map_String_kitchen_sink_twin_sync_sse(
          Map<String, KitchenSinkTwinSyncSse> raw) {
    return cst_encode_list_record_string_kitchen_sink_twin_sync_sse(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_list_prim_u_8>
      cst_encode_Map_String_list_prim_u_8(Map<String, Uint8List> raw) {
    return cst_encode_list_record_string_list_prim_u_8(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_my_size>
      cst_encode_Map_String_my_size(Map<String, MySize> raw) {
    return cst_encode_list_record_string_my_size(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_i_32> cst_encode_Map_i_32_i_32(
      Map<int, int> raw) {
    return cst_encode_list_record_i_32_i_32(
        raw.entries.map((e) => (e.key, e.value)).toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_hide_data>
      cst_encode_RustOpaque_hide_data_array_2(HideDataArray2 raw) {
    return cst_encode_list_RustOpaque_hide_data(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_String> cst_encode_Set_String(Set<String> raw) {
    return cst_encode_list_String(raw.toList());
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_32> cst_encode_Set_i_32(Set<int> raw) {
    return cst_encode_list_prim_i_32(Int32List.fromList(raw.toList()));
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_String(String raw) {
    return cst_encode_list_prim_u_8(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_Uuid(UuidValue raw) {
    return cst_encode_list_prim_u_8(raw.toBytes());
  }

  @protected
  ffi.Pointer<wire_cst_application_env> cst_encode_box_application_env(
      ApplicationEnv raw) {
    final ptr = wire.cst_new_box_application_env();
    cst_api_fill_to_wire_application_env(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_autoadd_Chrono_Duration(Duration raw) {
    return wire
        .cst_new_box_autoadd_Chrono_Duration(cst_encode_Chrono_Duration(raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_autoadd_Chrono_Naive(DateTime raw) {
    return wire.cst_new_box_autoadd_Chrono_Naive(cst_encode_Chrono_Naive(raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_autoadd_Chrono_Utc(DateTime raw) {
    return wire.cst_new_box_autoadd_Chrono_Utc(cst_encode_Chrono_Utc(raw));
  }

  @protected
  ffi.Pointer<PlatformPointer> cst_encode_box_autoadd_DartOpaque(Object raw) {
    return wire.cst_new_box_autoadd_DartOpaque(cst_encode_DartOpaque(raw));
  }

  @protected
  ffi.Pointer<PlatformPointer> cst_encode_box_autoadd_RustOpaque_hide_data(
      HideData raw) {
    return wire.cst_new_box_autoadd_RustOpaque_hide_data(
        cst_encode_RustOpaque_hide_data(raw));
  }

  @protected
  ffi.Pointer<wire_cst_a_twin_normal> cst_encode_box_autoadd_a_twin_normal(
      ATwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_a_twin_normal();
    cst_api_fill_to_wire_a_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_a_twin_rust_async>
      cst_encode_box_autoadd_a_twin_rust_async(ATwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_a_twin_rust_async();
    cst_api_fill_to_wire_a_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_a_twin_rust_async_sse>
      cst_encode_box_autoadd_a_twin_rust_async_sse(ATwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_a_twin_rust_async_sse();
    cst_api_fill_to_wire_a_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_a_twin_sse> cst_encode_box_autoadd_a_twin_sse(
      ATwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_a_twin_sse();
    cst_api_fill_to_wire_a_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_a_twin_sync> cst_encode_box_autoadd_a_twin_sync(
      ATwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_a_twin_sync();
    cst_api_fill_to_wire_a_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_a_twin_sync_sse> cst_encode_box_autoadd_a_twin_sync_sse(
      ATwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_a_twin_sync_sse();
    cst_api_fill_to_wire_a_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_abc_twin_normal> cst_encode_box_autoadd_abc_twin_normal(
      AbcTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_abc_twin_normal();
    cst_api_fill_to_wire_abc_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_abc_twin_rust_async>
      cst_encode_box_autoadd_abc_twin_rust_async(AbcTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_abc_twin_rust_async();
    cst_api_fill_to_wire_abc_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_abc_twin_rust_async_sse>
      cst_encode_box_autoadd_abc_twin_rust_async_sse(AbcTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_abc_twin_rust_async_sse();
    cst_api_fill_to_wire_abc_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_abc_twin_sse> cst_encode_box_autoadd_abc_twin_sse(
      AbcTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_abc_twin_sse();
    cst_api_fill_to_wire_abc_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_abc_twin_sync> cst_encode_box_autoadd_abc_twin_sync(
      AbcTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_abc_twin_sync();
    cst_api_fill_to_wire_abc_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_abc_twin_sync_sse>
      cst_encode_box_autoadd_abc_twin_sync_sse(AbcTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_abc_twin_sync_sse();
    cst_api_fill_to_wire_abc_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_application_env> cst_encode_box_autoadd_application_env(
      ApplicationEnv raw) {
    final ptr = wire.cst_new_box_autoadd_application_env();
    cst_api_fill_to_wire_application_env(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_application_settings>
      cst_encode_box_autoadd_application_settings(ApplicationSettings raw) {
    final ptr = wire.cst_new_box_autoadd_application_settings();
    cst_api_fill_to_wire_application_settings(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_normal>
      cst_encode_box_autoadd_attribute_twin_normal(AttributeTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_attribute_twin_normal();
    cst_api_fill_to_wire_attribute_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_rust_async>
      cst_encode_box_autoadd_attribute_twin_rust_async(
          AttributeTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_attribute_twin_rust_async();
    cst_api_fill_to_wire_attribute_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_rust_async_sse>
      cst_encode_box_autoadd_attribute_twin_rust_async_sse(
          AttributeTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_attribute_twin_rust_async_sse();
    cst_api_fill_to_wire_attribute_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_sse>
      cst_encode_box_autoadd_attribute_twin_sse(AttributeTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_attribute_twin_sse();
    cst_api_fill_to_wire_attribute_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_sync>
      cst_encode_box_autoadd_attribute_twin_sync(AttributeTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_attribute_twin_sync();
    cst_api_fill_to_wire_attribute_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_sync_sse>
      cst_encode_box_autoadd_attribute_twin_sync_sse(AttributeTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_attribute_twin_sync_sse();
    cst_api_fill_to_wire_attribute_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_b_twin_normal> cst_encode_box_autoadd_b_twin_normal(
      BTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_b_twin_normal();
    cst_api_fill_to_wire_b_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_b_twin_rust_async>
      cst_encode_box_autoadd_b_twin_rust_async(BTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_b_twin_rust_async();
    cst_api_fill_to_wire_b_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_b_twin_rust_async_sse>
      cst_encode_box_autoadd_b_twin_rust_async_sse(BTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_b_twin_rust_async_sse();
    cst_api_fill_to_wire_b_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_b_twin_sse> cst_encode_box_autoadd_b_twin_sse(
      BTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_b_twin_sse();
    cst_api_fill_to_wire_b_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_b_twin_sync> cst_encode_box_autoadd_b_twin_sync(
      BTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_b_twin_sync();
    cst_api_fill_to_wire_b_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_b_twin_sync_sse> cst_encode_box_autoadd_b_twin_sync_sse(
      BTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_b_twin_sync_sse();
    cst_api_fill_to_wire_b_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
      cst_encode_box_autoadd_benchmark_binary_tree_twin_normal(
          BenchmarkBinaryTreeTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_benchmark_binary_tree_twin_normal();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
      cst_encode_box_autoadd_benchmark_binary_tree_twin_rust_async(
          BenchmarkBinaryTreeTwinRustAsync raw) {
    final ptr =
        wire.cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse>
      cst_encode_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
          BenchmarkBinaryTreeTwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async_sse();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse>
      cst_encode_box_autoadd_benchmark_binary_tree_twin_sse(
          BenchmarkBinaryTreeTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_benchmark_binary_tree_twin_sse();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
      cst_encode_box_autoadd_benchmark_binary_tree_twin_sync(
          BenchmarkBinaryTreeTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_benchmark_binary_tree_twin_sync();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse>
      cst_encode_box_autoadd_benchmark_binary_tree_twin_sync_sse(
          BenchmarkBinaryTreeTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_benchmark_binary_tree_twin_sync_sse();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_blob_twin_normal>
      cst_encode_box_autoadd_benchmark_blob_twin_normal(
          BenchmarkBlobTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_benchmark_blob_twin_normal();
    cst_api_fill_to_wire_benchmark_blob_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async>
      cst_encode_box_autoadd_benchmark_blob_twin_rust_async(
          BenchmarkBlobTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_benchmark_blob_twin_rust_async();
    cst_api_fill_to_wire_benchmark_blob_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async_sse>
      cst_encode_box_autoadd_benchmark_blob_twin_rust_async_sse(
          BenchmarkBlobTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_benchmark_blob_twin_rust_async_sse();
    cst_api_fill_to_wire_benchmark_blob_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_blob_twin_sse>
      cst_encode_box_autoadd_benchmark_blob_twin_sse(BenchmarkBlobTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_benchmark_blob_twin_sse();
    cst_api_fill_to_wire_benchmark_blob_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_blob_twin_sync>
      cst_encode_box_autoadd_benchmark_blob_twin_sync(
          BenchmarkBlobTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_benchmark_blob_twin_sync();
    cst_api_fill_to_wire_benchmark_blob_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_blob_twin_sync_sse>
      cst_encode_box_autoadd_benchmark_blob_twin_sync_sse(
          BenchmarkBlobTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_benchmark_blob_twin_sync_sse();
    cst_api_fill_to_wire_benchmark_blob_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_box_autoadd_bool(bool raw) {
    return wire.cst_new_box_autoadd_bool(cst_encode_bool(raw));
  }

  @protected
  ffi.Pointer<wire_cst_c_twin_normal> cst_encode_box_autoadd_c_twin_normal(
      CTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_c_twin_normal();
    cst_api_fill_to_wire_c_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_c_twin_rust_async>
      cst_encode_box_autoadd_c_twin_rust_async(CTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_c_twin_rust_async();
    cst_api_fill_to_wire_c_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_c_twin_rust_async_sse>
      cst_encode_box_autoadd_c_twin_rust_async_sse(CTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_c_twin_rust_async_sse();
    cst_api_fill_to_wire_c_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_c_twin_sse> cst_encode_box_autoadd_c_twin_sse(
      CTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_c_twin_sse();
    cst_api_fill_to_wire_c_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_c_twin_sync> cst_encode_box_autoadd_c_twin_sync(
      CTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_c_twin_sync();
    cst_api_fill_to_wire_c_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_c_twin_sync_sse> cst_encode_box_autoadd_c_twin_sync_sse(
      CTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_c_twin_sync_sse();
    cst_api_fill_to_wire_c_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_concatenate_with_twin_normal>
      cst_encode_box_autoadd_concatenate_with_twin_normal(
          ConcatenateWithTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_concatenate_with_twin_normal();
    cst_api_fill_to_wire_concatenate_with_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>
      cst_encode_box_autoadd_concatenate_with_twin_rust_async(
          ConcatenateWithTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_concatenate_with_twin_rust_async();
    cst_api_fill_to_wire_concatenate_with_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async_sse>
      cst_encode_box_autoadd_concatenate_with_twin_rust_async_sse(
          ConcatenateWithTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_concatenate_with_twin_rust_async_sse();
    cst_api_fill_to_wire_concatenate_with_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_concatenate_with_twin_sse>
      cst_encode_box_autoadd_concatenate_with_twin_sse(
          ConcatenateWithTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_concatenate_with_twin_sse();
    cst_api_fill_to_wire_concatenate_with_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_concatenate_with_twin_sync>
      cst_encode_box_autoadd_concatenate_with_twin_sync(
          ConcatenateWithTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_concatenate_with_twin_sync();
    cst_api_fill_to_wire_concatenate_with_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_concatenate_with_twin_sync_sse>
      cst_encode_box_autoadd_concatenate_with_twin_sync_sse(
          ConcatenateWithTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_concatenate_with_twin_sync_sse();
    cst_api_fill_to_wire_concatenate_with_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal>
      cst_encode_box_autoadd_custom_nested_error_2_twin_normal(
          CustomNestedError2TwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_2_twin_normal();
    cst_api_fill_to_wire_custom_nested_error_2_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async>
      cst_encode_box_autoadd_custom_nested_error_2_twin_rust_async(
          CustomNestedError2TwinRustAsync raw) {
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_2_twin_rust_async();
    cst_api_fill_to_wire_custom_nested_error_2_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async_sse>
      cst_encode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
          CustomNestedError2TwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_2_twin_rust_async_sse();
    cst_api_fill_to_wire_custom_nested_error_2_twin_rust_async_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_2_twin_sse>
      cst_encode_box_autoadd_custom_nested_error_2_twin_sse(
          CustomNestedError2TwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_2_twin_sse();
    cst_api_fill_to_wire_custom_nested_error_2_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync>
      cst_encode_box_autoadd_custom_nested_error_2_twin_sync(
          CustomNestedError2TwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_2_twin_sync();
    cst_api_fill_to_wire_custom_nested_error_2_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync_sse>
      cst_encode_box_autoadd_custom_nested_error_2_twin_sync_sse(
          CustomNestedError2TwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_2_twin_sync_sse();
    cst_api_fill_to_wire_custom_nested_error_2_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal>
      cst_encode_box_autoadd_custom_nested_error_inner_twin_normal(
          CustomNestedErrorInnerTwinNormal raw) {
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_inner_twin_normal();
    cst_api_fill_to_wire_custom_nested_error_inner_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async>
      cst_encode_box_autoadd_custom_nested_error_inner_twin_rust_async(
          CustomNestedErrorInnerTwinRustAsync raw) {
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async();
    cst_api_fill_to_wire_custom_nested_error_inner_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async_sse>
      cst_encode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
          CustomNestedErrorInnerTwinRustAsyncSse raw) {
    final ptr = wire
        .cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async_sse();
    cst_api_fill_to_wire_custom_nested_error_inner_twin_rust_async_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sse>
      cst_encode_box_autoadd_custom_nested_error_inner_twin_sse(
          CustomNestedErrorInnerTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_inner_twin_sse();
    cst_api_fill_to_wire_custom_nested_error_inner_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync>
      cst_encode_box_autoadd_custom_nested_error_inner_twin_sync(
          CustomNestedErrorInnerTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_inner_twin_sync();
    cst_api_fill_to_wire_custom_nested_error_inner_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync_sse>
      cst_encode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
          CustomNestedErrorInnerTwinSyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_inner_twin_sync_sse();
    cst_api_fill_to_wire_custom_nested_error_inner_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal>
      cst_encode_box_autoadd_custom_nested_error_outer_twin_normal(
          CustomNestedErrorOuterTwinNormal raw) {
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_outer_twin_normal();
    cst_api_fill_to_wire_custom_nested_error_outer_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async>
      cst_encode_box_autoadd_custom_nested_error_outer_twin_rust_async(
          CustomNestedErrorOuterTwinRustAsync raw) {
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async();
    cst_api_fill_to_wire_custom_nested_error_outer_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async_sse>
      cst_encode_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
          CustomNestedErrorOuterTwinRustAsyncSse raw) {
    final ptr = wire
        .cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async_sse();
    cst_api_fill_to_wire_custom_nested_error_outer_twin_rust_async_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sse>
      cst_encode_box_autoadd_custom_nested_error_outer_twin_sse(
          CustomNestedErrorOuterTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_outer_twin_sse();
    cst_api_fill_to_wire_custom_nested_error_outer_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>
      cst_encode_box_autoadd_custom_nested_error_outer_twin_sync(
          CustomNestedErrorOuterTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_custom_nested_error_outer_twin_sync();
    cst_api_fill_to_wire_custom_nested_error_outer_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync_sse>
      cst_encode_box_autoadd_custom_nested_error_outer_twin_sync_sse(
          CustomNestedErrorOuterTwinSyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_custom_nested_error_outer_twin_sync_sse();
    cst_api_fill_to_wire_custom_nested_error_outer_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_error_twin_normal>
      cst_encode_box_autoadd_custom_struct_error_twin_normal(
          CustomStructErrorTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_error_twin_normal();
    cst_api_fill_to_wire_custom_struct_error_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>
      cst_encode_box_autoadd_custom_struct_error_twin_rust_async(
          CustomStructErrorTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_error_twin_rust_async();
    cst_api_fill_to_wire_custom_struct_error_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async_sse>
      cst_encode_box_autoadd_custom_struct_error_twin_rust_async_sse(
          CustomStructErrorTwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_custom_struct_error_twin_rust_async_sse();
    cst_api_fill_to_wire_custom_struct_error_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_error_twin_sse>
      cst_encode_box_autoadd_custom_struct_error_twin_sse(
          CustomStructErrorTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_error_twin_sse();
    cst_api_fill_to_wire_custom_struct_error_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_error_twin_sync>
      cst_encode_box_autoadd_custom_struct_error_twin_sync(
          CustomStructErrorTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_error_twin_sync();
    cst_api_fill_to_wire_custom_struct_error_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_error_twin_sync_sse>
      cst_encode_box_autoadd_custom_struct_error_twin_sync_sse(
          CustomStructErrorTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_error_twin_sync_sse();
    cst_api_fill_to_wire_custom_struct_error_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_twin_normal>
      cst_encode_box_autoadd_custom_struct_twin_normal(
          CustomStructTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_twin_normal();
    cst_api_fill_to_wire_custom_struct_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_twin_rust_async>
      cst_encode_box_autoadd_custom_struct_twin_rust_async(
          CustomStructTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_twin_rust_async();
    cst_api_fill_to_wire_custom_struct_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_twin_rust_async_sse>
      cst_encode_box_autoadd_custom_struct_twin_rust_async_sse(
          CustomStructTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_twin_rust_async_sse();
    cst_api_fill_to_wire_custom_struct_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_twin_sse>
      cst_encode_box_autoadd_custom_struct_twin_sse(CustomStructTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_twin_sse();
    cst_api_fill_to_wire_custom_struct_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_twin_sync>
      cst_encode_box_autoadd_custom_struct_twin_sync(CustomStructTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_twin_sync();
    cst_api_fill_to_wire_custom_struct_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_custom_struct_twin_sync_sse>
      cst_encode_box_autoadd_custom_struct_twin_sync_sse(
          CustomStructTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_custom_struct_twin_sync_sse();
    cst_api_fill_to_wire_custom_struct_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_customized_twin_normal>
      cst_encode_box_autoadd_customized_twin_normal(CustomizedTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_customized_twin_normal();
    cst_api_fill_to_wire_customized_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_customized_twin_rust_async>
      cst_encode_box_autoadd_customized_twin_rust_async(
          CustomizedTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_customized_twin_rust_async();
    cst_api_fill_to_wire_customized_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_customized_twin_rust_async_sse>
      cst_encode_box_autoadd_customized_twin_rust_async_sse(
          CustomizedTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_customized_twin_rust_async_sse();
    cst_api_fill_to_wire_customized_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_customized_twin_sse>
      cst_encode_box_autoadd_customized_twin_sse(CustomizedTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_customized_twin_sse();
    cst_api_fill_to_wire_customized_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_customized_twin_sync>
      cst_encode_box_autoadd_customized_twin_sync(CustomizedTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_customized_twin_sync();
    cst_api_fill_to_wire_customized_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_customized_twin_sync_sse>
      cst_encode_box_autoadd_customized_twin_sync_sse(
          CustomizedTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_customized_twin_sync_sse();
    cst_api_fill_to_wire_customized_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal>
      cst_encode_box_autoadd_dart_opaque_nested_twin_normal(
          DartOpaqueNestedTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_dart_opaque_nested_twin_normal();
    cst_api_fill_to_wire_dart_opaque_nested_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>
      cst_encode_box_autoadd_dart_opaque_nested_twin_rust_async(
          DartOpaqueNestedTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_dart_opaque_nested_twin_rust_async();
    cst_api_fill_to_wire_dart_opaque_nested_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async_sse>
      cst_encode_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
          DartOpaqueNestedTwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_dart_opaque_nested_twin_rust_async_sse();
    cst_api_fill_to_wire_dart_opaque_nested_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_dart_opaque_nested_twin_sse>
      cst_encode_box_autoadd_dart_opaque_nested_twin_sse(
          DartOpaqueNestedTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_dart_opaque_nested_twin_sse();
    cst_api_fill_to_wire_dart_opaque_nested_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync>
      cst_encode_box_autoadd_dart_opaque_nested_twin_sync(
          DartOpaqueNestedTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_dart_opaque_nested_twin_sync();
    cst_api_fill_to_wire_dart_opaque_nested_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync_sse>
      cst_encode_box_autoadd_dart_opaque_nested_twin_sync_sse(
          DartOpaqueNestedTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_dart_opaque_nested_twin_sync_sse();
    cst_api_fill_to_wire_dart_opaque_nested_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_normal>
      cst_encode_box_autoadd_element_twin_normal(ElementTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_element_twin_normal();
    cst_api_fill_to_wire_element_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_rust_async>
      cst_encode_box_autoadd_element_twin_rust_async(ElementTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_element_twin_rust_async();
    cst_api_fill_to_wire_element_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_rust_async_sse>
      cst_encode_box_autoadd_element_twin_rust_async_sse(
          ElementTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_element_twin_rust_async_sse();
    cst_api_fill_to_wire_element_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_sse>
      cst_encode_box_autoadd_element_twin_sse(ElementTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_element_twin_sse();
    cst_api_fill_to_wire_element_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_sync>
      cst_encode_box_autoadd_element_twin_sync(ElementTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_element_twin_sync();
    cst_api_fill_to_wire_element_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_sync_sse>
      cst_encode_box_autoadd_element_twin_sync_sse(ElementTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_element_twin_sync_sse();
    cst_api_fill_to_wire_element_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_empty_twin_normal>
      cst_encode_box_autoadd_empty_twin_normal(EmptyTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_empty_twin_normal();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_empty_twin_rust_async>
      cst_encode_box_autoadd_empty_twin_rust_async(EmptyTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_empty_twin_rust_async();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_empty_twin_rust_async_sse>
      cst_encode_box_autoadd_empty_twin_rust_async_sse(
          EmptyTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_empty_twin_rust_async_sse();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_empty_twin_sse> cst_encode_box_autoadd_empty_twin_sse(
      EmptyTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_empty_twin_sse();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_empty_twin_sync> cst_encode_box_autoadd_empty_twin_sync(
      EmptyTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_empty_twin_sync();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_empty_twin_sync_sse>
      cst_encode_box_autoadd_empty_twin_sync_sse(EmptyTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_empty_twin_sync_sse();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal>
      cst_encode_box_autoadd_enum_dart_opaque_twin_normal(
          EnumDartOpaqueTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_enum_dart_opaque_twin_normal();
    cst_api_fill_to_wire_enum_dart_opaque_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async>
      cst_encode_box_autoadd_enum_dart_opaque_twin_rust_async(
          EnumDartOpaqueTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_enum_dart_opaque_twin_rust_async();
    cst_api_fill_to_wire_enum_dart_opaque_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async_sse>
      cst_encode_box_autoadd_enum_dart_opaque_twin_rust_async_sse(
          EnumDartOpaqueTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_dart_opaque_twin_rust_async_sse();
    cst_api_fill_to_wire_enum_dart_opaque_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_dart_opaque_twin_sse>
      cst_encode_box_autoadd_enum_dart_opaque_twin_sse(
          EnumDartOpaqueTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_dart_opaque_twin_sse();
    cst_api_fill_to_wire_enum_dart_opaque_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync>
      cst_encode_box_autoadd_enum_dart_opaque_twin_sync(
          EnumDartOpaqueTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_enum_dart_opaque_twin_sync();
    cst_api_fill_to_wire_enum_dart_opaque_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync_sse>
      cst_encode_box_autoadd_enum_dart_opaque_twin_sync_sse(
          EnumDartOpaqueTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_dart_opaque_twin_sync_sse();
    cst_api_fill_to_wire_enum_dart_opaque_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_normal>
      cst_encode_box_autoadd_enum_opaque_twin_normal(EnumOpaqueTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_normal();
    cst_api_fill_to_wire_enum_opaque_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async>
      cst_encode_box_autoadd_enum_opaque_twin_rust_async(
          EnumOpaqueTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_rust_async();
    cst_api_fill_to_wire_enum_opaque_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_sse>
      cst_encode_box_autoadd_enum_opaque_twin_rust_async_sse(
          EnumOpaqueTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_rust_async_sse();
    cst_api_fill_to_wire_enum_opaque_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_sse>
      cst_encode_box_autoadd_enum_opaque_twin_sse(EnumOpaqueTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_sse();
    cst_api_fill_to_wire_enum_opaque_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_sync>
      cst_encode_box_autoadd_enum_opaque_twin_sync(EnumOpaqueTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_sync();
    cst_api_fill_to_wire_enum_opaque_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_opaque_twin_sync_sse>
      cst_encode_box_autoadd_enum_opaque_twin_sync_sse(
          EnumOpaqueTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_opaque_twin_sync_sse();
    cst_api_fill_to_wire_enum_opaque_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal>
      cst_encode_box_autoadd_enum_with_item_mixed_twin_normal(
          EnumWithItemMixedTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_mixed_twin_normal();
    cst_api_fill_to_wire_enum_with_item_mixed_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>
      cst_encode_box_autoadd_enum_with_item_mixed_twin_rust_async(
          EnumWithItemMixedTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async();
    cst_api_fill_to_wire_enum_with_item_mixed_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async_sse>
      cst_encode_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
          EnumWithItemMixedTwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async_sse();
    cst_api_fill_to_wire_enum_with_item_mixed_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sse>
      cst_encode_box_autoadd_enum_with_item_mixed_twin_sse(
          EnumWithItemMixedTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_mixed_twin_sse();
    cst_api_fill_to_wire_enum_with_item_mixed_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync>
      cst_encode_box_autoadd_enum_with_item_mixed_twin_sync(
          EnumWithItemMixedTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_mixed_twin_sync();
    cst_api_fill_to_wire_enum_with_item_mixed_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync_sse>
      cst_encode_box_autoadd_enum_with_item_mixed_twin_sync_sse(
          EnumWithItemMixedTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_mixed_twin_sync_sse();
    cst_api_fill_to_wire_enum_with_item_mixed_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal>
      cst_encode_box_autoadd_enum_with_item_struct_twin_normal(
          EnumWithItemStructTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_struct_twin_normal();
    cst_api_fill_to_wire_enum_with_item_struct_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async>
      cst_encode_box_autoadd_enum_with_item_struct_twin_rust_async(
          EnumWithItemStructTwinRustAsync raw) {
    final ptr =
        wire.cst_new_box_autoadd_enum_with_item_struct_twin_rust_async();
    cst_api_fill_to_wire_enum_with_item_struct_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async_sse>
      cst_encode_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
          EnumWithItemStructTwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_enum_with_item_struct_twin_rust_async_sse();
    cst_api_fill_to_wire_enum_with_item_struct_twin_rust_async_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_struct_twin_sse>
      cst_encode_box_autoadd_enum_with_item_struct_twin_sse(
          EnumWithItemStructTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_struct_twin_sse();
    cst_api_fill_to_wire_enum_with_item_struct_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync>
      cst_encode_box_autoadd_enum_with_item_struct_twin_sync(
          EnumWithItemStructTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_struct_twin_sync();
    cst_api_fill_to_wire_enum_with_item_struct_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync_sse>
      cst_encode_box_autoadd_enum_with_item_struct_twin_sync_sse(
          EnumWithItemStructTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_struct_twin_sync_sse();
    cst_api_fill_to_wire_enum_with_item_struct_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal>
      cst_encode_box_autoadd_enum_with_item_tuple_twin_normal(
          EnumWithItemTupleTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_tuple_twin_normal();
    cst_api_fill_to_wire_enum_with_item_tuple_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>
      cst_encode_box_autoadd_enum_with_item_tuple_twin_rust_async(
          EnumWithItemTupleTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async();
    cst_api_fill_to_wire_enum_with_item_tuple_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async_sse>
      cst_encode_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
          EnumWithItemTupleTwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async_sse();
    cst_api_fill_to_wire_enum_with_item_tuple_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sse>
      cst_encode_box_autoadd_enum_with_item_tuple_twin_sse(
          EnumWithItemTupleTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_tuple_twin_sse();
    cst_api_fill_to_wire_enum_with_item_tuple_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync>
      cst_encode_box_autoadd_enum_with_item_tuple_twin_sync(
          EnumWithItemTupleTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_tuple_twin_sync();
    cst_api_fill_to_wire_enum_with_item_tuple_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync_sse>
      cst_encode_box_autoadd_enum_with_item_tuple_twin_sync_sse(
          EnumWithItemTupleTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_enum_with_item_tuple_twin_sync_sse();
    cst_api_fill_to_wire_enum_with_item_tuple_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_event_twin_normal>
      cst_encode_box_autoadd_event_twin_normal(EventTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_event_twin_normal();
    cst_api_fill_to_wire_event_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_event_twin_rust_async>
      cst_encode_box_autoadd_event_twin_rust_async(EventTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_event_twin_rust_async();
    cst_api_fill_to_wire_event_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_event_twin_rust_async_sse>
      cst_encode_box_autoadd_event_twin_rust_async_sse(
          EventTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_event_twin_rust_async_sse();
    cst_api_fill_to_wire_event_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_event_twin_sse> cst_encode_box_autoadd_event_twin_sse(
      EventTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_event_twin_sse();
    cst_api_fill_to_wire_event_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_encode_box_autoadd_exotic_optionals_twin_normal(
          ExoticOptionalsTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_exotic_optionals_twin_normal();
    cst_api_fill_to_wire_exotic_optionals_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_encode_box_autoadd_exotic_optionals_twin_rust_async(
          ExoticOptionalsTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_exotic_optionals_twin_rust_async();
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse>
      cst_encode_box_autoadd_exotic_optionals_twin_rust_async_sse(
          ExoticOptionalsTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_exotic_optionals_twin_rust_async_sse();
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sse>
      cst_encode_box_autoadd_exotic_optionals_twin_sse(
          ExoticOptionalsTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_exotic_optionals_twin_sse();
    cst_api_fill_to_wire_exotic_optionals_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_encode_box_autoadd_exotic_optionals_twin_sync(
          ExoticOptionalsTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_exotic_optionals_twin_sync();
    cst_api_fill_to_wire_exotic_optionals_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse>
      cst_encode_box_autoadd_exotic_optionals_twin_sync_sse(
          ExoticOptionalsTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_exotic_optionals_twin_sync_sse();
    cst_api_fill_to_wire_exotic_optionals_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Float> cst_encode_box_autoadd_f_32(double raw) {
    return wire.cst_new_box_autoadd_f_32(cst_encode_f_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Double> cst_encode_box_autoadd_f_64(double raw) {
    return wire.cst_new_box_autoadd_f_64(cst_encode_f_64(raw));
  }

  @protected
  ffi.Pointer<wire_cst_feature_chrono_twin_normal>
      cst_encode_box_autoadd_feature_chrono_twin_normal(
          FeatureChronoTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_feature_chrono_twin_normal();
    cst_api_fill_to_wire_feature_chrono_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feature_chrono_twin_rust_async>
      cst_encode_box_autoadd_feature_chrono_twin_rust_async(
          FeatureChronoTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_feature_chrono_twin_rust_async();
    cst_api_fill_to_wire_feature_chrono_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feature_chrono_twin_sync>
      cst_encode_box_autoadd_feature_chrono_twin_sync(
          FeatureChronoTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_feature_chrono_twin_sync();
    cst_api_fill_to_wire_feature_chrono_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feature_uuid_twin_normal>
      cst_encode_box_autoadd_feature_uuid_twin_normal(
          FeatureUuidTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_feature_uuid_twin_normal();
    cst_api_fill_to_wire_feature_uuid_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feature_uuid_twin_rust_async>
      cst_encode_box_autoadd_feature_uuid_twin_rust_async(
          FeatureUuidTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_feature_uuid_twin_rust_async();
    cst_api_fill_to_wire_feature_uuid_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feature_uuid_twin_sync>
      cst_encode_box_autoadd_feature_uuid_twin_sync(FeatureUuidTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_feature_uuid_twin_sync();
    cst_api_fill_to_wire_feature_uuid_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_normal>
      cst_encode_box_autoadd_feed_id_twin_normal(FeedIdTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_feed_id_twin_normal();
    cst_api_fill_to_wire_feed_id_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_rust_async>
      cst_encode_box_autoadd_feed_id_twin_rust_async(FeedIdTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_feed_id_twin_rust_async();
    cst_api_fill_to_wire_feed_id_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_rust_async_sse>
      cst_encode_box_autoadd_feed_id_twin_rust_async_sse(
          FeedIdTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_feed_id_twin_rust_async_sse();
    cst_api_fill_to_wire_feed_id_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_sse>
      cst_encode_box_autoadd_feed_id_twin_sse(FeedIdTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_feed_id_twin_sse();
    cst_api_fill_to_wire_feed_id_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_sync>
      cst_encode_box_autoadd_feed_id_twin_sync(FeedIdTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_feed_id_twin_sync();
    cst_api_fill_to_wire_feed_id_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_sync_sse>
      cst_encode_box_autoadd_feed_id_twin_sync_sse(FeedIdTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_feed_id_twin_sync_sse();
    cst_api_fill_to_wire_feed_id_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int16> cst_encode_box_autoadd_i_16(int raw) {
    return wire.cst_new_box_autoadd_i_16(cst_encode_i_16(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_i_32(int raw) {
    return wire.cst_new_box_autoadd_i_32(cst_encode_i_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_autoadd_i_64(int raw) {
    return wire.cst_new_box_autoadd_i_64(cst_encode_i_64(raw));
  }

  @protected
  ffi.Pointer<ffi.Int8> cst_encode_box_autoadd_i_8(int raw) {
    return wire.cst_new_box_autoadd_i_8(cst_encode_i_8(raw));
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_normal>
      cst_encode_box_autoadd_kitchen_sink_twin_normal(
          KitchenSinkTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_kitchen_sink_twin_normal();
    cst_api_fill_to_wire_kitchen_sink_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>
      cst_encode_box_autoadd_kitchen_sink_twin_rust_async(
          KitchenSinkTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_kitchen_sink_twin_rust_async();
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse>
      cst_encode_box_autoadd_kitchen_sink_twin_rust_async_sse(
          KitchenSinkTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_kitchen_sink_twin_rust_async_sse();
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_sse>
      cst_encode_box_autoadd_kitchen_sink_twin_sse(KitchenSinkTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_kitchen_sink_twin_sse();
    cst_api_fill_to_wire_kitchen_sink_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_sync>
      cst_encode_box_autoadd_kitchen_sink_twin_sync(KitchenSinkTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_kitchen_sink_twin_sync();
    cst_api_fill_to_wire_kitchen_sink_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse>
      cst_encode_box_autoadd_kitchen_sink_twin_sync_sse(
          KitchenSinkTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_kitchen_sink_twin_sync_sse();
    cst_api_fill_to_wire_kitchen_sink_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored>
      cst_encode_box_autoadd_list_of_nested_raw_string_mirrored(
          ListOfNestedRawStringMirrored raw) {
    final ptr = wire.cst_new_box_autoadd_list_of_nested_raw_string_mirrored();
    cst_api_fill_to_wire_list_of_nested_raw_string_mirrored(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_macro_struct> cst_encode_box_autoadd_macro_struct(
      MacroStruct raw) {
    final ptr = wire.cst_new_box_autoadd_macro_struct();
    cst_api_fill_to_wire_macro_struct(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_normal>
      cst_encode_box_autoadd_measure_twin_normal(MeasureTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_measure_twin_normal();
    cst_api_fill_to_wire_measure_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_rust_async>
      cst_encode_box_autoadd_measure_twin_rust_async(MeasureTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_measure_twin_rust_async();
    cst_api_fill_to_wire_measure_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_rust_async_sse>
      cst_encode_box_autoadd_measure_twin_rust_async_sse(
          MeasureTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_measure_twin_rust_async_sse();
    cst_api_fill_to_wire_measure_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_sse>
      cst_encode_box_autoadd_measure_twin_sse(MeasureTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_measure_twin_sse();
    cst_api_fill_to_wire_measure_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_sync>
      cst_encode_box_autoadd_measure_twin_sync(MeasureTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_measure_twin_sync();
    cst_api_fill_to_wire_measure_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_sync_sse>
      cst_encode_box_autoadd_measure_twin_sync_sse(MeasureTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_measure_twin_sync_sse();
    cst_api_fill_to_wire_measure_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_message_id_twin_normal>
      cst_encode_box_autoadd_message_id_twin_normal(MessageIdTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_message_id_twin_normal();
    cst_api_fill_to_wire_message_id_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_message_id_twin_rust_async>
      cst_encode_box_autoadd_message_id_twin_rust_async(
          MessageIdTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_message_id_twin_rust_async();
    cst_api_fill_to_wire_message_id_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_message_id_twin_rust_async_sse>
      cst_encode_box_autoadd_message_id_twin_rust_async_sse(
          MessageIdTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_message_id_twin_rust_async_sse();
    cst_api_fill_to_wire_message_id_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_message_id_twin_sse>
      cst_encode_box_autoadd_message_id_twin_sse(MessageIdTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_message_id_twin_sse();
    cst_api_fill_to_wire_message_id_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_message_id_twin_sync>
      cst_encode_box_autoadd_message_id_twin_sync(MessageIdTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_message_id_twin_sync();
    cst_api_fill_to_wire_message_id_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_message_id_twin_sync_sse>
      cst_encode_box_autoadd_message_id_twin_sync_sse(
          MessageIdTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_message_id_twin_sync_sse();
    cst_api_fill_to_wire_message_id_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_nested_struct_twin_normal>
      cst_encode_box_autoadd_my_nested_struct_twin_normal(
          MyNestedStructTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_my_nested_struct_twin_normal();
    cst_api_fill_to_wire_my_nested_struct_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async>
      cst_encode_box_autoadd_my_nested_struct_twin_rust_async(
          MyNestedStructTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_my_nested_struct_twin_rust_async();
    cst_api_fill_to_wire_my_nested_struct_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async_sse>
      cst_encode_box_autoadd_my_nested_struct_twin_rust_async_sse(
          MyNestedStructTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_my_nested_struct_twin_rust_async_sse();
    cst_api_fill_to_wire_my_nested_struct_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_nested_struct_twin_sse>
      cst_encode_box_autoadd_my_nested_struct_twin_sse(
          MyNestedStructTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_my_nested_struct_twin_sse();
    cst_api_fill_to_wire_my_nested_struct_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_nested_struct_twin_sync>
      cst_encode_box_autoadd_my_nested_struct_twin_sync(
          MyNestedStructTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_my_nested_struct_twin_sync();
    cst_api_fill_to_wire_my_nested_struct_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_nested_struct_twin_sync_sse>
      cst_encode_box_autoadd_my_nested_struct_twin_sync_sse(
          MyNestedStructTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_my_nested_struct_twin_sync_sse();
    cst_api_fill_to_wire_my_nested_struct_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_size> cst_encode_box_autoadd_my_size(MySize raw) {
    final ptr = wire.cst_new_box_autoadd_my_size();
    cst_api_fill_to_wire_my_size(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_struct> cst_encode_box_autoadd_my_struct(
      MyStruct raw) {
    final ptr = wire.cst_new_box_autoadd_my_struct();
    cst_api_fill_to_wire_my_struct(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_tree_node_twin_normal>
      cst_encode_box_autoadd_my_tree_node_twin_normal(
          MyTreeNodeTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_my_tree_node_twin_normal();
    cst_api_fill_to_wire_my_tree_node_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_tree_node_twin_rust_async>
      cst_encode_box_autoadd_my_tree_node_twin_rust_async(
          MyTreeNodeTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_my_tree_node_twin_rust_async();
    cst_api_fill_to_wire_my_tree_node_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_tree_node_twin_rust_async_sse>
      cst_encode_box_autoadd_my_tree_node_twin_rust_async_sse(
          MyTreeNodeTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_my_tree_node_twin_rust_async_sse();
    cst_api_fill_to_wire_my_tree_node_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_tree_node_twin_sse>
      cst_encode_box_autoadd_my_tree_node_twin_sse(MyTreeNodeTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_my_tree_node_twin_sse();
    cst_api_fill_to_wire_my_tree_node_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_tree_node_twin_sync>
      cst_encode_box_autoadd_my_tree_node_twin_sync(MyTreeNodeTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_my_tree_node_twin_sync();
    cst_api_fill_to_wire_my_tree_node_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_tree_node_twin_sync_sse>
      cst_encode_box_autoadd_my_tree_node_twin_sync_sse(
          MyTreeNodeTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_my_tree_node_twin_sync_sse();
    cst_api_fill_to_wire_my_tree_node_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_nested_raw_string_mirrored>
      cst_encode_box_autoadd_nested_raw_string_mirrored(
          NestedRawStringMirrored raw) {
    final ptr = wire.cst_new_box_autoadd_nested_raw_string_mirrored();
    cst_api_fill_to_wire_nested_raw_string_mirrored(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_normal>
      cst_encode_box_autoadd_new_type_int_twin_normal(
          NewTypeIntTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_new_type_int_twin_normal();
    cst_api_fill_to_wire_new_type_int_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_rust_async>
      cst_encode_box_autoadd_new_type_int_twin_rust_async(
          NewTypeIntTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_new_type_int_twin_rust_async();
    cst_api_fill_to_wire_new_type_int_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_rust_async_sse>
      cst_encode_box_autoadd_new_type_int_twin_rust_async_sse(
          NewTypeIntTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_new_type_int_twin_rust_async_sse();
    cst_api_fill_to_wire_new_type_int_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_sse>
      cst_encode_box_autoadd_new_type_int_twin_sse(NewTypeIntTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_new_type_int_twin_sse();
    cst_api_fill_to_wire_new_type_int_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_sync>
      cst_encode_box_autoadd_new_type_int_twin_sync(NewTypeIntTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_new_type_int_twin_sync();
    cst_api_fill_to_wire_new_type_int_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_sync_sse>
      cst_encode_box_autoadd_new_type_int_twin_sync_sse(
          NewTypeIntTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_new_type_int_twin_sync_sse();
    cst_api_fill_to_wire_new_type_int_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_note_twin_normal>
      cst_encode_box_autoadd_note_twin_normal(NoteTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_note_twin_normal();
    cst_api_fill_to_wire_note_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_note_twin_rust_async>
      cst_encode_box_autoadd_note_twin_rust_async(NoteTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_note_twin_rust_async();
    cst_api_fill_to_wire_note_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_note_twin_rust_async_sse>
      cst_encode_box_autoadd_note_twin_rust_async_sse(
          NoteTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_note_twin_rust_async_sse();
    cst_api_fill_to_wire_note_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_note_twin_sse> cst_encode_box_autoadd_note_twin_sse(
      NoteTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_note_twin_sse();
    cst_api_fill_to_wire_note_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_note_twin_sync> cst_encode_box_autoadd_note_twin_sync(
      NoteTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_note_twin_sync();
    cst_api_fill_to_wire_note_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_note_twin_sync_sse>
      cst_encode_box_autoadd_note_twin_sync_sse(NoteTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_note_twin_sync_sse();
    cst_api_fill_to_wire_note_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_numbers> cst_encode_box_autoadd_numbers(Numbers raw) {
    final ptr = wire.cst_new_box_autoadd_numbers();
    cst_api_fill_to_wire_numbers(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_normal>
      cst_encode_box_autoadd_opaque_nested_twin_normal(
          OpaqueNestedTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_normal();
    cst_api_fill_to_wire_opaque_nested_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async>
      cst_encode_box_autoadd_opaque_nested_twin_rust_async(
          OpaqueNestedTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_rust_async();
    cst_api_fill_to_wire_opaque_nested_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_sse>
      cst_encode_box_autoadd_opaque_nested_twin_rust_async_sse(
          OpaqueNestedTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_rust_async_sse();
    cst_api_fill_to_wire_opaque_nested_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_sse>
      cst_encode_box_autoadd_opaque_nested_twin_sse(OpaqueNestedTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_sse();
    cst_api_fill_to_wire_opaque_nested_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_sync>
      cst_encode_box_autoadd_opaque_nested_twin_sync(OpaqueNestedTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_sync();
    cst_api_fill_to_wire_opaque_nested_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opaque_nested_twin_sync_sse>
      cst_encode_box_autoadd_opaque_nested_twin_sync_sse(
          OpaqueNestedTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_opaque_nested_twin_sync_sse();
    cst_api_fill_to_wire_opaque_nested_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opt_vecs_twin_normal>
      cst_encode_box_autoadd_opt_vecs_twin_normal(OptVecsTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_opt_vecs_twin_normal();
    cst_api_fill_to_wire_opt_vecs_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opt_vecs_twin_rust_async>
      cst_encode_box_autoadd_opt_vecs_twin_rust_async(
          OptVecsTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_opt_vecs_twin_rust_async();
    cst_api_fill_to_wire_opt_vecs_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opt_vecs_twin_rust_async_sse>
      cst_encode_box_autoadd_opt_vecs_twin_rust_async_sse(
          OptVecsTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_opt_vecs_twin_rust_async_sse();
    cst_api_fill_to_wire_opt_vecs_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opt_vecs_twin_sse>
      cst_encode_box_autoadd_opt_vecs_twin_sse(OptVecsTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_opt_vecs_twin_sse();
    cst_api_fill_to_wire_opt_vecs_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opt_vecs_twin_sync>
      cst_encode_box_autoadd_opt_vecs_twin_sync(OptVecsTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_opt_vecs_twin_sync();
    cst_api_fill_to_wire_opt_vecs_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_opt_vecs_twin_sync_sse>
      cst_encode_box_autoadd_opt_vecs_twin_sync_sse(OptVecsTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_opt_vecs_twin_sync_sse();
    cst_api_fill_to_wire_opt_vecs_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_raw_string_mirrored>
      cst_encode_box_autoadd_raw_string_mirrored(RawStringMirrored raw) {
    final ptr = wire.cst_new_box_autoadd_raw_string_mirrored();
    cst_api_fill_to_wire_raw_string_mirrored(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_record_string_i_32>
      cst_encode_box_autoadd_record_string_i_32((String, int) raw) {
    final ptr = wire.cst_new_box_autoadd_record_string_i_32();
    cst_api_fill_to_wire_record_string_i_32(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sequences> cst_encode_box_autoadd_sequences(
      Sequences raw) {
    final ptr = wire.cst_new_box_autoadd_sequences();
    cst_api_fill_to_wire_sequences(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_some_struct_twin_normal>
      cst_encode_box_autoadd_some_struct_twin_normal(SomeStructTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_some_struct_twin_normal();
    cst_api_fill_to_wire_some_struct_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_some_struct_twin_rust_async>
      cst_encode_box_autoadd_some_struct_twin_rust_async(
          SomeStructTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_some_struct_twin_rust_async();
    cst_api_fill_to_wire_some_struct_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_some_struct_twin_rust_async_sse>
      cst_encode_box_autoadd_some_struct_twin_rust_async_sse(
          SomeStructTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_some_struct_twin_rust_async_sse();
    cst_api_fill_to_wire_some_struct_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_some_struct_twin_sse>
      cst_encode_box_autoadd_some_struct_twin_sse(SomeStructTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_some_struct_twin_sse();
    cst_api_fill_to_wire_some_struct_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_some_struct_twin_sync>
      cst_encode_box_autoadd_some_struct_twin_sync(SomeStructTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_some_struct_twin_sync();
    cst_api_fill_to_wire_some_struct_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_some_struct_twin_sync_sse>
      cst_encode_box_autoadd_some_struct_twin_sync_sse(
          SomeStructTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_some_struct_twin_sync_sse();
    cst_api_fill_to_wire_some_struct_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_comments_twin_normal>
      cst_encode_box_autoadd_struct_with_comments_twin_normal(
          StructWithCommentsTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_comments_twin_normal();
    cst_api_fill_to_wire_struct_with_comments_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async>
      cst_encode_box_autoadd_struct_with_comments_twin_rust_async(
          StructWithCommentsTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_comments_twin_rust_async();
    cst_api_fill_to_wire_struct_with_comments_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async_sse>
      cst_encode_box_autoadd_struct_with_comments_twin_rust_async_sse(
          StructWithCommentsTwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_struct_with_comments_twin_rust_async_sse();
    cst_api_fill_to_wire_struct_with_comments_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_comments_twin_sse>
      cst_encode_box_autoadd_struct_with_comments_twin_sse(
          StructWithCommentsTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_comments_twin_sse();
    cst_api_fill_to_wire_struct_with_comments_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_comments_twin_sync>
      cst_encode_box_autoadd_struct_with_comments_twin_sync(
          StructWithCommentsTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_comments_twin_sync();
    cst_api_fill_to_wire_struct_with_comments_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_comments_twin_sync_sse>
      cst_encode_box_autoadd_struct_with_comments_twin_sync_sse(
          StructWithCommentsTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_comments_twin_sync_sse();
    cst_api_fill_to_wire_struct_with_comments_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_enum_twin_normal>
      cst_encode_box_autoadd_struct_with_enum_twin_normal(
          StructWithEnumTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_enum_twin_normal();
    cst_api_fill_to_wire_struct_with_enum_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async>
      cst_encode_box_autoadd_struct_with_enum_twin_rust_async(
          StructWithEnumTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_enum_twin_rust_async();
    cst_api_fill_to_wire_struct_with_enum_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async_sse>
      cst_encode_box_autoadd_struct_with_enum_twin_rust_async_sse(
          StructWithEnumTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_enum_twin_rust_async_sse();
    cst_api_fill_to_wire_struct_with_enum_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_enum_twin_sse>
      cst_encode_box_autoadd_struct_with_enum_twin_sse(
          StructWithEnumTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_enum_twin_sse();
    cst_api_fill_to_wire_struct_with_enum_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_enum_twin_sync>
      cst_encode_box_autoadd_struct_with_enum_twin_sync(
          StructWithEnumTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_enum_twin_sync();
    cst_api_fill_to_wire_struct_with_enum_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_enum_twin_sync_sse>
      cst_encode_box_autoadd_struct_with_enum_twin_sync_sse(
          StructWithEnumTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_enum_twin_sync_sse();
    cst_api_fill_to_wire_struct_with_enum_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_one_field_twin_normal>
      cst_encode_box_autoadd_struct_with_one_field_twin_normal(
          StructWithOneFieldTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_one_field_twin_normal();
    cst_api_fill_to_wire_struct_with_one_field_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async>
      cst_encode_box_autoadd_struct_with_one_field_twin_rust_async(
          StructWithOneFieldTwinRustAsync raw) {
    final ptr =
        wire.cst_new_box_autoadd_struct_with_one_field_twin_rust_async();
    cst_api_fill_to_wire_struct_with_one_field_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async_sse>
      cst_encode_box_autoadd_struct_with_one_field_twin_rust_async_sse(
          StructWithOneFieldTwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_struct_with_one_field_twin_rust_async_sse();
    cst_api_fill_to_wire_struct_with_one_field_twin_rust_async_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_one_field_twin_sse>
      cst_encode_box_autoadd_struct_with_one_field_twin_sse(
          StructWithOneFieldTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_one_field_twin_sse();
    cst_api_fill_to_wire_struct_with_one_field_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_one_field_twin_sync>
      cst_encode_box_autoadd_struct_with_one_field_twin_sync(
          StructWithOneFieldTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_one_field_twin_sync();
    cst_api_fill_to_wire_struct_with_one_field_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_one_field_twin_sync_sse>
      cst_encode_box_autoadd_struct_with_one_field_twin_sync_sse(
          StructWithOneFieldTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_one_field_twin_sync_sse();
    cst_api_fill_to_wire_struct_with_one_field_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_two_field_twin_normal>
      cst_encode_box_autoadd_struct_with_two_field_twin_normal(
          StructWithTwoFieldTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_two_field_twin_normal();
    cst_api_fill_to_wire_struct_with_two_field_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async>
      cst_encode_box_autoadd_struct_with_two_field_twin_rust_async(
          StructWithTwoFieldTwinRustAsync raw) {
    final ptr =
        wire.cst_new_box_autoadd_struct_with_two_field_twin_rust_async();
    cst_api_fill_to_wire_struct_with_two_field_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async_sse>
      cst_encode_box_autoadd_struct_with_two_field_twin_rust_async_sse(
          StructWithTwoFieldTwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_struct_with_two_field_twin_rust_async_sse();
    cst_api_fill_to_wire_struct_with_two_field_twin_rust_async_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_two_field_twin_sse>
      cst_encode_box_autoadd_struct_with_two_field_twin_sse(
          StructWithTwoFieldTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_two_field_twin_sse();
    cst_api_fill_to_wire_struct_with_two_field_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_two_field_twin_sync>
      cst_encode_box_autoadd_struct_with_two_field_twin_sync(
          StructWithTwoFieldTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_two_field_twin_sync();
    cst_api_fill_to_wire_struct_with_two_field_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_two_field_twin_sync_sse>
      cst_encode_box_autoadd_struct_with_two_field_twin_sync_sse(
          StructWithTwoFieldTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_two_field_twin_sync_sse();
    cst_api_fill_to_wire_struct_with_two_field_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>
      cst_encode_box_autoadd_struct_with_zero_field_twin_normal(
          StructWithZeroFieldTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_zero_field_twin_normal();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async>
      cst_encode_box_autoadd_struct_with_zero_field_twin_rust_async(
          StructWithZeroFieldTwinRustAsync raw) {
    final ptr =
        wire.cst_new_box_autoadd_struct_with_zero_field_twin_rust_async();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async_sse>
      cst_encode_box_autoadd_struct_with_zero_field_twin_rust_async_sse(
          StructWithZeroFieldTwinRustAsyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_struct_with_zero_field_twin_rust_async_sse();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_zero_field_twin_sse>
      cst_encode_box_autoadd_struct_with_zero_field_twin_sse(
          StructWithZeroFieldTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_zero_field_twin_sse();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync>
      cst_encode_box_autoadd_struct_with_zero_field_twin_sync(
          StructWithZeroFieldTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_zero_field_twin_sync();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync_sse>
      cst_encode_box_autoadd_struct_with_zero_field_twin_sync_sse(
          StructWithZeroFieldTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_struct_with_zero_field_twin_sync_sse();

    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sum_with_twin_normal>
      cst_encode_box_autoadd_sum_with_twin_normal(SumWithTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_sum_with_twin_normal();
    cst_api_fill_to_wire_sum_with_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sum_with_twin_rust_async>
      cst_encode_box_autoadd_sum_with_twin_rust_async(
          SumWithTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_sum_with_twin_rust_async();
    cst_api_fill_to_wire_sum_with_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sum_with_twin_rust_async_sse>
      cst_encode_box_autoadd_sum_with_twin_rust_async_sse(
          SumWithTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_sum_with_twin_rust_async_sse();
    cst_api_fill_to_wire_sum_with_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sum_with_twin_sse>
      cst_encode_box_autoadd_sum_with_twin_sse(SumWithTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_sum_with_twin_sse();
    cst_api_fill_to_wire_sum_with_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sum_with_twin_sync>
      cst_encode_box_autoadd_sum_with_twin_sync(SumWithTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_sum_with_twin_sync();
    cst_api_fill_to_wire_sum_with_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sum_with_twin_sync_sse>
      cst_encode_box_autoadd_sum_with_twin_sync_sse(SumWithTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_sum_with_twin_sync_sse();
    cst_api_fill_to_wire_sum_with_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_test_id_twin_normal>
      cst_encode_box_autoadd_test_id_twin_normal(TestIdTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_test_id_twin_normal();
    cst_api_fill_to_wire_test_id_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_test_id_twin_rust_async>
      cst_encode_box_autoadd_test_id_twin_rust_async(TestIdTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_test_id_twin_rust_async();
    cst_api_fill_to_wire_test_id_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_test_id_twin_rust_async_sse>
      cst_encode_box_autoadd_test_id_twin_rust_async_sse(
          TestIdTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_test_id_twin_rust_async_sse();
    cst_api_fill_to_wire_test_id_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_test_id_twin_sse>
      cst_encode_box_autoadd_test_id_twin_sse(TestIdTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_test_id_twin_sse();
    cst_api_fill_to_wire_test_id_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_test_id_twin_sync>
      cst_encode_box_autoadd_test_id_twin_sync(TestIdTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_test_id_twin_sync();
    cst_api_fill_to_wire_test_id_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_test_id_twin_sync_sse>
      cst_encode_box_autoadd_test_id_twin_sync_sse(TestIdTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_test_id_twin_sync_sse();
    cst_api_fill_to_wire_test_id_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal>
      cst_encode_box_autoadd_tuple_struct_with_one_field_twin_normal(
          TupleStructWithOneFieldTwinNormal raw) {
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_one_field_twin_normal();
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async>
      cst_encode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          TupleStructWithOneFieldTwinRustAsync raw) {
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async();
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async_sse>
      cst_encode_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
          TupleStructWithOneFieldTwinRustAsyncSse raw) {
    final ptr = wire
        .cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse();
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_rust_async_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sse>
      cst_encode_box_autoadd_tuple_struct_with_one_field_twin_sse(
          TupleStructWithOneFieldTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_tuple_struct_with_one_field_twin_sse();
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync>
      cst_encode_box_autoadd_tuple_struct_with_one_field_twin_sync(
          TupleStructWithOneFieldTwinSync raw) {
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync();
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync_sse>
      cst_encode_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
          TupleStructWithOneFieldTwinSyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync_sse();
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sync_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal>
      cst_encode_box_autoadd_tuple_struct_with_two_field_twin_normal(
          TupleStructWithTwoFieldTwinNormal raw) {
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_two_field_twin_normal();
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async>
      cst_encode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          TupleStructWithTwoFieldTwinRustAsync raw) {
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async();
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_rust_async(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async_sse>
      cst_encode_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
          TupleStructWithTwoFieldTwinRustAsyncSse raw) {
    final ptr = wire
        .cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse();
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_rust_async_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sse>
      cst_encode_box_autoadd_tuple_struct_with_two_field_twin_sse(
          TupleStructWithTwoFieldTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_tuple_struct_with_two_field_twin_sse();
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync>
      cst_encode_box_autoadd_tuple_struct_with_two_field_twin_sync(
          TupleStructWithTwoFieldTwinSync raw) {
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync();
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync_sse>
      cst_encode_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
          TupleStructWithTwoFieldTwinSyncSse raw) {
    final ptr =
        wire.cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync_sse();
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sync_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Uint16> cst_encode_box_autoadd_u_16(int raw) {
    return wire.cst_new_box_autoadd_u_16(cst_encode_u_16(raw));
  }

  @protected
  ffi.Pointer<ffi.Uint32> cst_encode_box_autoadd_u_32(int raw) {
    return wire.cst_new_box_autoadd_u_32(cst_encode_u_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Uint64> cst_encode_box_autoadd_u_64(int raw) {
    return wire.cst_new_box_autoadd_u_64(cst_encode_u_64(raw));
  }

  @protected
  ffi.Pointer<ffi.Uint8> cst_encode_box_autoadd_u_8(int raw) {
    return wire.cst_new_box_autoadd_u_8(cst_encode_u_8(raw));
  }

  @protected
  ffi.Pointer<wire_cst_user_id_twin_normal>
      cst_encode_box_autoadd_user_id_twin_normal(UserIdTwinNormal raw) {
    final ptr = wire.cst_new_box_autoadd_user_id_twin_normal();
    cst_api_fill_to_wire_user_id_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_user_id_twin_rust_async>
      cst_encode_box_autoadd_user_id_twin_rust_async(UserIdTwinRustAsync raw) {
    final ptr = wire.cst_new_box_autoadd_user_id_twin_rust_async();
    cst_api_fill_to_wire_user_id_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_user_id_twin_rust_async_sse>
      cst_encode_box_autoadd_user_id_twin_rust_async_sse(
          UserIdTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_user_id_twin_rust_async_sse();
    cst_api_fill_to_wire_user_id_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_user_id_twin_sse>
      cst_encode_box_autoadd_user_id_twin_sse(UserIdTwinSse raw) {
    final ptr = wire.cst_new_box_autoadd_user_id_twin_sse();
    cst_api_fill_to_wire_user_id_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_user_id_twin_sync>
      cst_encode_box_autoadd_user_id_twin_sync(UserIdTwinSync raw) {
    final ptr = wire.cst_new_box_autoadd_user_id_twin_sync();
    cst_api_fill_to_wire_user_id_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_user_id_twin_sync_sse>
      cst_encode_box_autoadd_user_id_twin_sync_sse(UserIdTwinSyncSse raw) {
    final ptr = wire.cst_new_box_autoadd_user_id_twin_sync_sse();
    cst_api_fill_to_wire_user_id_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal raw) {
    return wire.cst_new_box_autoadd_weekdays_twin_normal(
        cst_encode_weekdays_twin_normal(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync raw) {
    return wire.cst_new_box_autoadd_weekdays_twin_rust_async(
        cst_encode_weekdays_twin_rust_async(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse raw) {
    return wire.cst_new_box_autoadd_weekdays_twin_rust_async_sse(
        cst_encode_weekdays_twin_rust_async_sse(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_weekdays_twin_sse(
      WeekdaysTwinSse raw) {
    return wire.cst_new_box_autoadd_weekdays_twin_sse(
        cst_encode_weekdays_twin_sse(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_weekdays_twin_sync(
      WeekdaysTwinSync raw) {
    return wire.cst_new_box_autoadd_weekdays_twin_sync(
        cst_encode_weekdays_twin_sync(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse raw) {
    return wire.cst_new_box_autoadd_weekdays_twin_sync_sse(
        cst_encode_weekdays_twin_sync_sse(raw));
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
      cst_encode_box_benchmark_binary_tree_twin_normal(
          BenchmarkBinaryTreeTwinNormal raw) {
    final ptr = wire.cst_new_box_benchmark_binary_tree_twin_normal();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
      cst_encode_box_benchmark_binary_tree_twin_rust_async(
          BenchmarkBinaryTreeTwinRustAsync raw) {
    final ptr = wire.cst_new_box_benchmark_binary_tree_twin_rust_async();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse>
      cst_encode_box_benchmark_binary_tree_twin_rust_async_sse(
          BenchmarkBinaryTreeTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_benchmark_binary_tree_twin_rust_async_sse();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async_sse(
        raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse>
      cst_encode_box_benchmark_binary_tree_twin_sse(
          BenchmarkBinaryTreeTwinSse raw) {
    final ptr = wire.cst_new_box_benchmark_binary_tree_twin_sse();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
      cst_encode_box_benchmark_binary_tree_twin_sync(
          BenchmarkBinaryTreeTwinSync raw) {
    final ptr = wire.cst_new_box_benchmark_binary_tree_twin_sync();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse>
      cst_encode_box_benchmark_binary_tree_twin_sync_sse(
          BenchmarkBinaryTreeTwinSyncSse raw) {
    final ptr = wire.cst_new_box_benchmark_binary_tree_twin_sync_sse();
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_blob_twin_normal> cst_encode_box_blob_twin_normal(
      BlobTwinNormal raw) {
    final ptr = wire.cst_new_box_blob_twin_normal();
    cst_api_fill_to_wire_blob_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_blob_twin_rust_async>
      cst_encode_box_blob_twin_rust_async(BlobTwinRustAsync raw) {
    final ptr = wire.cst_new_box_blob_twin_rust_async();
    cst_api_fill_to_wire_blob_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_blob_twin_rust_async_sse>
      cst_encode_box_blob_twin_rust_async_sse(BlobTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_blob_twin_rust_async_sse();
    cst_api_fill_to_wire_blob_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_blob_twin_sse> cst_encode_box_blob_twin_sse(
      BlobTwinSse raw) {
    final ptr = wire.cst_new_box_blob_twin_sse();
    cst_api_fill_to_wire_blob_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_blob_twin_sync> cst_encode_box_blob_twin_sync(
      BlobTwinSync raw) {
    final ptr = wire.cst_new_box_blob_twin_sync();
    cst_api_fill_to_wire_blob_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_blob_twin_sync_sse> cst_encode_box_blob_twin_sync_sse(
      BlobTwinSyncSse raw) {
    final ptr = wire.cst_new_box_blob_twin_sync_sse();
    cst_api_fill_to_wire_blob_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_box_bool(bool raw) {
    return wire.cst_new_box_bool(cst_encode_bool(raw));
  }

  @protected
  ffi.Pointer<wire_cst_distance_twin_normal>
      cst_encode_box_distance_twin_normal(DistanceTwinNormal raw) {
    final ptr = wire.cst_new_box_distance_twin_normal();
    cst_api_fill_to_wire_distance_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_distance_twin_rust_async>
      cst_encode_box_distance_twin_rust_async(DistanceTwinRustAsync raw) {
    final ptr = wire.cst_new_box_distance_twin_rust_async();
    cst_api_fill_to_wire_distance_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_distance_twin_rust_async_sse>
      cst_encode_box_distance_twin_rust_async_sse(
          DistanceTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_distance_twin_rust_async_sse();
    cst_api_fill_to_wire_distance_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_distance_twin_sse> cst_encode_box_distance_twin_sse(
      DistanceTwinSse raw) {
    final ptr = wire.cst_new_box_distance_twin_sse();
    cst_api_fill_to_wire_distance_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_distance_twin_sync> cst_encode_box_distance_twin_sync(
      DistanceTwinSync raw) {
    final ptr = wire.cst_new_box_distance_twin_sync();
    cst_api_fill_to_wire_distance_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_distance_twin_sync_sse>
      cst_encode_box_distance_twin_sync_sse(DistanceTwinSyncSse raw) {
    final ptr = wire.cst_new_box_distance_twin_sync_sse();
    cst_api_fill_to_wire_distance_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_encode_box_exotic_optionals_twin_normal(
          ExoticOptionalsTwinNormal raw) {
    final ptr = wire.cst_new_box_exotic_optionals_twin_normal();
    cst_api_fill_to_wire_exotic_optionals_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_encode_box_exotic_optionals_twin_rust_async(
          ExoticOptionalsTwinRustAsync raw) {
    final ptr = wire.cst_new_box_exotic_optionals_twin_rust_async();
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse>
      cst_encode_box_exotic_optionals_twin_rust_async_sse(
          ExoticOptionalsTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_exotic_optionals_twin_rust_async_sse();
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sse>
      cst_encode_box_exotic_optionals_twin_sse(ExoticOptionalsTwinSse raw) {
    final ptr = wire.cst_new_box_exotic_optionals_twin_sse();
    cst_api_fill_to_wire_exotic_optionals_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_encode_box_exotic_optionals_twin_sync(ExoticOptionalsTwinSync raw) {
    final ptr = wire.cst_new_box_exotic_optionals_twin_sync();
    cst_api_fill_to_wire_exotic_optionals_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse>
      cst_encode_box_exotic_optionals_twin_sync_sse(
          ExoticOptionalsTwinSyncSse raw) {
    final ptr = wire.cst_new_box_exotic_optionals_twin_sync_sse();
    cst_api_fill_to_wire_exotic_optionals_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Double> cst_encode_box_f_64(double raw) {
    return wire.cst_new_box_f_64(cst_encode_f_64(raw));
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_normal> cst_encode_box_feed_id_twin_normal(
      FeedIdTwinNormal raw) {
    final ptr = wire.cst_new_box_feed_id_twin_normal();
    cst_api_fill_to_wire_feed_id_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_rust_async>
      cst_encode_box_feed_id_twin_rust_async(FeedIdTwinRustAsync raw) {
    final ptr = wire.cst_new_box_feed_id_twin_rust_async();
    cst_api_fill_to_wire_feed_id_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_rust_async_sse>
      cst_encode_box_feed_id_twin_rust_async_sse(FeedIdTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_feed_id_twin_rust_async_sse();
    cst_api_fill_to_wire_feed_id_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_sse> cst_encode_box_feed_id_twin_sse(
      FeedIdTwinSse raw) {
    final ptr = wire.cst_new_box_feed_id_twin_sse();
    cst_api_fill_to_wire_feed_id_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_sync> cst_encode_box_feed_id_twin_sync(
      FeedIdTwinSync raw) {
    final ptr = wire.cst_new_box_feed_id_twin_sync();
    cst_api_fill_to_wire_feed_id_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_feed_id_twin_sync_sse>
      cst_encode_box_feed_id_twin_sync_sse(FeedIdTwinSyncSse raw) {
    final ptr = wire.cst_new_box_feed_id_twin_sync_sse();
    cst_api_fill_to_wire_feed_id_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_i_32(int raw) {
    return wire.cst_new_box_i_32(cst_encode_i_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_i_64(int raw) {
    return wire.cst_new_box_i_64(cst_encode_i_64(raw));
  }

  @protected
  ffi.Pointer<ffi.Int8> cst_encode_box_i_8(int raw) {
    return wire.cst_new_box_i_8(cst_encode_i_8(raw));
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_normal>
      cst_encode_box_kitchen_sink_twin_normal(KitchenSinkTwinNormal raw) {
    final ptr = wire.cst_new_box_kitchen_sink_twin_normal();
    cst_api_fill_to_wire_kitchen_sink_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>
      cst_encode_box_kitchen_sink_twin_rust_async(
          KitchenSinkTwinRustAsync raw) {
    final ptr = wire.cst_new_box_kitchen_sink_twin_rust_async();
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse>
      cst_encode_box_kitchen_sink_twin_rust_async_sse(
          KitchenSinkTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_kitchen_sink_twin_rust_async_sse();
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_sse>
      cst_encode_box_kitchen_sink_twin_sse(KitchenSinkTwinSse raw) {
    final ptr = wire.cst_new_box_kitchen_sink_twin_sse();
    cst_api_fill_to_wire_kitchen_sink_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_sync>
      cst_encode_box_kitchen_sink_twin_sync(KitchenSinkTwinSync raw) {
    final ptr = wire.cst_new_box_kitchen_sink_twin_sync();
    cst_api_fill_to_wire_kitchen_sink_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse>
      cst_encode_box_kitchen_sink_twin_sync_sse(KitchenSinkTwinSyncSse raw) {
    final ptr = wire.cst_new_box_kitchen_sink_twin_sync_sse();
    cst_api_fill_to_wire_kitchen_sink_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_my_size> cst_encode_box_my_size(MySize raw) {
    final ptr = wire.cst_new_box_my_size();
    cst_api_fill_to_wire_my_size(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_speed_twin_normal> cst_encode_box_speed_twin_normal(
      SpeedTwinNormal raw) {
    final ptr = wire.cst_new_box_speed_twin_normal();
    cst_api_fill_to_wire_speed_twin_normal(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_speed_twin_rust_async>
      cst_encode_box_speed_twin_rust_async(SpeedTwinRustAsync raw) {
    final ptr = wire.cst_new_box_speed_twin_rust_async();
    cst_api_fill_to_wire_speed_twin_rust_async(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_speed_twin_rust_async_sse>
      cst_encode_box_speed_twin_rust_async_sse(SpeedTwinRustAsyncSse raw) {
    final ptr = wire.cst_new_box_speed_twin_rust_async_sse();
    cst_api_fill_to_wire_speed_twin_rust_async_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_speed_twin_sse> cst_encode_box_speed_twin_sse(
      SpeedTwinSse raw) {
    final ptr = wire.cst_new_box_speed_twin_sse();
    cst_api_fill_to_wire_speed_twin_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_speed_twin_sync> cst_encode_box_speed_twin_sync(
      SpeedTwinSync raw) {
    final ptr = wire.cst_new_box_speed_twin_sync();
    cst_api_fill_to_wire_speed_twin_sync(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_speed_twin_sync_sse> cst_encode_box_speed_twin_sync_sse(
      SpeedTwinSyncSse raw) {
    final ptr = wire.cst_new_box_speed_twin_sync_sse();
    cst_api_fill_to_wire_speed_twin_sync_sse(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Uint8> cst_encode_box_u_8(int raw) {
    return wire.cst_new_box_u_8(cst_encode_u_8(raw));
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_box_u_8_array_1600(
      U8Array1600 raw) {
    return cst_encode_u_8_array_1600(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_box_u_8_array_8(U8Array8 raw) {
    return cst_encode_u_8_array_8(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_weekdays_twin_normal(
      WeekdaysTwinNormal raw) {
    return wire
        .cst_new_box_weekdays_twin_normal(cst_encode_weekdays_twin_normal(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync raw) {
    return wire.cst_new_box_weekdays_twin_rust_async(
        cst_encode_weekdays_twin_rust_async(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse raw) {
    return wire.cst_new_box_weekdays_twin_rust_async_sse(
        cst_encode_weekdays_twin_rust_async_sse(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_weekdays_twin_sse(WeekdaysTwinSse raw) {
    return wire
        .cst_new_box_weekdays_twin_sse(cst_encode_weekdays_twin_sse(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_weekdays_twin_sync(
      WeekdaysTwinSync raw) {
    return wire
        .cst_new_box_weekdays_twin_sync(cst_encode_weekdays_twin_sync(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse raw) {
    return wire.cst_new_box_weekdays_twin_sync_sse(
        cst_encode_weekdays_twin_sync_sse(raw));
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_normal>
      cst_encode_enum_opaque_twin_normal_array_5(
          EnumOpaqueTwinNormalArray5 raw) {
    return cst_encode_list_enum_opaque_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async>
      cst_encode_enum_opaque_twin_rust_async_array_5(
          EnumOpaqueTwinRustAsyncArray5 raw) {
    return cst_encode_list_enum_opaque_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async_sse>
      cst_encode_enum_opaque_twin_rust_async_sse_array_5(
          EnumOpaqueTwinRustAsyncSseArray5 raw) {
    return cst_encode_list_enum_opaque_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_sse>
      cst_encode_enum_opaque_twin_sse_array_5(EnumOpaqueTwinSseArray5 raw) {
    return cst_encode_list_enum_opaque_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync>
      cst_encode_enum_opaque_twin_sync_array_5(EnumOpaqueTwinSyncArray5 raw) {
    return cst_encode_list_enum_opaque_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync_sse>
      cst_encode_enum_opaque_twin_sync_sse_array_5(
          EnumOpaqueTwinSyncSseArray5 raw) {
    return cst_encode_list_enum_opaque_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_64> cst_encode_f_64_array_16(
      F64Array16 raw) {
    final ans = wire.cst_new_list_prim_f_64(16);
    ans.ref.ptr.asTypedList(16).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_32> cst_encode_i_32_array_2(I32Array2 raw) {
    final ans = wire.cst_new_list_prim_i_32(2);
    ans.ref.ptr.asTypedList(2).setAll(0, raw);
    return ans;
  }

  @protected
  int cst_encode_i_64(int raw) {
    return raw.toInt();
  }

  @protected
  ffi.Pointer<wire_cst_list_Chrono_Duration> cst_encode_list_Chrono_Duration(
      List<Duration> raw) {
    final ans = wire.cst_new_list_Chrono_Duration(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_Chrono_Duration(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_Chrono_Local> cst_encode_list_Chrono_Local(
      List<DateTime> raw) {
    final ans = wire.cst_new_list_Chrono_Local(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_Chrono_Local(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_Chrono_Naive> cst_encode_list_Chrono_Naive(
      List<DateTime> raw) {
    final ans = wire.cst_new_list_Chrono_Naive(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_Chrono_Naive(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_DartOpaque> cst_encode_list_DartOpaque(
      List<Object> raw) {
    final ans = wire.cst_new_list_DartOpaque(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_DartOpaque(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_RustOpaque_hide_data>
      cst_encode_list_RustOpaque_hide_data(List<HideData> raw) {
    final ans = wire.cst_new_list_RustOpaque_hide_data(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_RustOpaque_hide_data(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_String> cst_encode_list_String(List<String> raw) {
    final ans = wire.cst_new_list_String(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_application_env_var>
      cst_encode_list_application_env_var(List<ApplicationEnvVar> raw) {
    final ans = wire.cst_new_list_application_env_var(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_application_env_var(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_application_settings>
      cst_encode_list_application_settings(List<ApplicationSettings> raw) {
    final ans = wire.cst_new_list_application_settings(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_application_settings(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_normal>
      cst_encode_list_attribute_twin_normal(List<AttributeTwinNormal> raw) {
    final ans = wire.cst_new_list_attribute_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_attribute_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_rust_async>
      cst_encode_list_attribute_twin_rust_async(
          List<AttributeTwinRustAsync> raw) {
    final ans = wire.cst_new_list_attribute_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_attribute_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_rust_async_sse>
      cst_encode_list_attribute_twin_rust_async_sse(
          List<AttributeTwinRustAsyncSse> raw) {
    final ans = wire.cst_new_list_attribute_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_attribute_twin_rust_async_sse(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_sse>
      cst_encode_list_attribute_twin_sse(List<AttributeTwinSse> raw) {
    final ans = wire.cst_new_list_attribute_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_attribute_twin_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_sync>
      cst_encode_list_attribute_twin_sync(List<AttributeTwinSync> raw) {
    final ans = wire.cst_new_list_attribute_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_attribute_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_sync_sse>
      cst_encode_list_attribute_twin_sync_sse(List<AttributeTwinSyncSse> raw) {
    final ans = wire.cst_new_list_attribute_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_attribute_twin_sync_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_bool> cst_encode_list_bool(List<bool> raw) {
    final ans = wire.cst_new_list_bool(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_bool(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_normal>
      cst_encode_list_element_twin_normal(List<ElementTwinNormal> raw) {
    final ans = wire.cst_new_list_element_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_element_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_rust_async>
      cst_encode_list_element_twin_rust_async(List<ElementTwinRustAsync> raw) {
    final ans = wire.cst_new_list_element_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_element_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_rust_async_sse>
      cst_encode_list_element_twin_rust_async_sse(
          List<ElementTwinRustAsyncSse> raw) {
    final ans = wire.cst_new_list_element_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_element_twin_rust_async_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_sse> cst_encode_list_element_twin_sse(
      List<ElementTwinSse> raw) {
    final ans = wire.cst_new_list_element_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_element_twin_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_sync>
      cst_encode_list_element_twin_sync(List<ElementTwinSync> raw) {
    final ans = wire.cst_new_list_element_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_element_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_sync_sse>
      cst_encode_list_element_twin_sync_sse(List<ElementTwinSyncSse> raw) {
    final ans = wire.cst_new_list_element_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_element_twin_sync_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_normal>
      cst_encode_list_enum_opaque_twin_normal(List<EnumOpaqueTwinNormal> raw) {
    final ans = wire.cst_new_list_enum_opaque_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async>
      cst_encode_list_enum_opaque_twin_rust_async(
          List<EnumOpaqueTwinRustAsync> raw) {
    final ans = wire.cst_new_list_enum_opaque_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async_sse>
      cst_encode_list_enum_opaque_twin_rust_async_sse(
          List<EnumOpaqueTwinRustAsyncSse> raw) {
    final ans = wire.cst_new_list_enum_opaque_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_rust_async_sse(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_sse>
      cst_encode_list_enum_opaque_twin_sse(List<EnumOpaqueTwinSse> raw) {
    final ans = wire.cst_new_list_enum_opaque_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync>
      cst_encode_list_enum_opaque_twin_sync(List<EnumOpaqueTwinSync> raw) {
    final ans = wire.cst_new_list_enum_opaque_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync_sse>
      cst_encode_list_enum_opaque_twin_sync_sse(
          List<EnumOpaqueTwinSyncSse> raw) {
    final ans = wire.cst_new_list_enum_opaque_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_enum_opaque_twin_sync_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_enum> cst_encode_list_my_enum(List<MyEnum> raw) {
    final ans = wire.cst_new_list_my_enum(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_my_enum(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_size> cst_encode_list_my_size(List<MySize> raw) {
    final ans = wire.cst_new_list_my_size(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_size(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_tree_node_twin_normal>
      cst_encode_list_my_tree_node_twin_normal(List<MyTreeNodeTwinNormal> raw) {
    final ans = wire.cst_new_list_my_tree_node_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_tree_node_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async>
      cst_encode_list_my_tree_node_twin_rust_async(
          List<MyTreeNodeTwinRustAsync> raw) {
    final ans = wire.cst_new_list_my_tree_node_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_tree_node_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async_sse>
      cst_encode_list_my_tree_node_twin_rust_async_sse(
          List<MyTreeNodeTwinRustAsyncSse> raw) {
    final ans = wire.cst_new_list_my_tree_node_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_tree_node_twin_rust_async_sse(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_tree_node_twin_sse>
      cst_encode_list_my_tree_node_twin_sse(List<MyTreeNodeTwinSse> raw) {
    final ans = wire.cst_new_list_my_tree_node_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_tree_node_twin_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_tree_node_twin_sync>
      cst_encode_list_my_tree_node_twin_sync(List<MyTreeNodeTwinSync> raw) {
    final ans = wire.cst_new_list_my_tree_node_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_tree_node_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_my_tree_node_twin_sync_sse>
      cst_encode_list_my_tree_node_twin_sync_sse(
          List<MyTreeNodeTwinSyncSse> raw) {
    final ans = wire.cst_new_list_my_tree_node_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_my_tree_node_twin_sync_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_nested_raw_string_mirrored>
      cst_encode_list_nested_raw_string_mirrored(
          List<NestedRawStringMirrored> raw) {
    final ans = wire.cst_new_list_nested_raw_string_mirrored(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_nested_raw_string_mirrored(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_String> cst_encode_list_opt_String(
      List<String?> raw) {
    final ans = wire.cst_new_list_opt_String(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
      cst_encode_list_opt_box_autoadd_attribute_twin_normal(
          List<AttributeTwinNormal?> raw) {
    final ans =
        wire.cst_new_list_opt_box_autoadd_attribute_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_attribute_twin_normal(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
      cst_encode_list_opt_box_autoadd_attribute_twin_rust_async(
          List<AttributeTwinRustAsync?> raw) {
    final ans =
        wire.cst_new_list_opt_box_autoadd_attribute_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_opt_box_autoadd_attribute_twin_rust_async(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async_sse>
      cst_encode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          List<AttributeTwinRustAsyncSse?> raw) {
    final ans = wire
        .cst_new_list_opt_box_autoadd_attribute_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_opt_box_autoadd_attribute_twin_rust_async_sse(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sse>
      cst_encode_list_opt_box_autoadd_attribute_twin_sse(
          List<AttributeTwinSse?> raw) {
    final ans =
        wire.cst_new_list_opt_box_autoadd_attribute_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_attribute_twin_sse(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
      cst_encode_list_opt_box_autoadd_attribute_twin_sync(
          List<AttributeTwinSync?> raw) {
    final ans =
        wire.cst_new_list_opt_box_autoadd_attribute_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_attribute_twin_sync(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync_sse>
      cst_encode_list_opt_box_autoadd_attribute_twin_sync_sse(
          List<AttributeTwinSyncSse?> raw) {
    final ans =
        wire.cst_new_list_opt_box_autoadd_attribute_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_opt_box_autoadd_attribute_twin_sync_sse(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32>
      cst_encode_list_opt_box_autoadd_i_32(List<int?> raw) {
    final ans = wire.cst_new_list_opt_box_autoadd_i_32(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_i_32(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_normal>
      cst_encode_list_opt_box_autoadd_weekdays_twin_normal(
          List<WeekdaysTwinNormal?> raw) {
    final ans =
        wire.cst_new_list_opt_box_autoadd_weekdays_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_weekdays_twin_normal(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async>
      cst_encode_list_opt_box_autoadd_weekdays_twin_rust_async(
          List<WeekdaysTwinRustAsync?> raw) {
    final ans =
        wire.cst_new_list_opt_box_autoadd_weekdays_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_opt_box_autoadd_weekdays_twin_rust_async(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async_sse>
      cst_encode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(
          List<WeekdaysTwinRustAsyncSse?> raw) {
    final ans = wire
        .cst_new_list_opt_box_autoadd_weekdays_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_opt_box_autoadd_weekdays_twin_rust_async_sse(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sse>
      cst_encode_list_opt_box_autoadd_weekdays_twin_sse(
          List<WeekdaysTwinSse?> raw) {
    final ans = wire.cst_new_list_opt_box_autoadd_weekdays_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_weekdays_twin_sse(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync>
      cst_encode_list_opt_box_autoadd_weekdays_twin_sync(
          List<WeekdaysTwinSync?> raw) {
    final ans =
        wire.cst_new_list_opt_box_autoadd_weekdays_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_weekdays_twin_sync(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync_sse>
      cst_encode_list_opt_box_autoadd_weekdays_twin_sync_sse(
          List<WeekdaysTwinSyncSse?> raw) {
    final ans =
        wire.cst_new_list_opt_box_autoadd_weekdays_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] =
          cst_encode_opt_box_autoadd_weekdays_twin_sync_sse(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_list_prim_i_32>
      cst_encode_list_opt_list_prim_i_32(List<Int32List?> raw) {
    final ans = wire.cst_new_list_opt_list_prim_i_32(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_list_prim_i_32(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_normal>
      cst_encode_list_point_twin_normal(List<PointTwinNormal> raw) {
    final ans = wire.cst_new_list_point_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_point_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_rust_async>
      cst_encode_list_point_twin_rust_async(List<PointTwinRustAsync> raw) {
    final ans = wire.cst_new_list_point_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_point_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_rust_async_sse>
      cst_encode_list_point_twin_rust_async_sse(
          List<PointTwinRustAsyncSse> raw) {
    final ans = wire.cst_new_list_point_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_point_twin_rust_async_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_sse> cst_encode_list_point_twin_sse(
      List<PointTwinSse> raw) {
    final ans = wire.cst_new_list_point_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_point_twin_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_sync> cst_encode_list_point_twin_sync(
      List<PointTwinSync> raw) {
    final ans = wire.cst_new_list_point_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_point_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_sync_sse>
      cst_encode_list_point_twin_sync_sse(List<PointTwinSyncSse> raw) {
    final ans = wire.cst_new_list_point_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_point_twin_sync_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_32> cst_encode_list_prim_f_32(
      Float32List raw) {
    final ans = wire.cst_new_list_prim_f_32(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_64> cst_encode_list_prim_f_64(
      Float64List raw) {
    final ans = wire.cst_new_list_prim_f_64(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_16> cst_encode_list_prim_i_16(
      Int16List raw) {
    final ans = wire.cst_new_list_prim_i_16(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_32> cst_encode_list_prim_i_32(
      Int32List raw) {
    final ans = wire.cst_new_list_prim_i_32(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_64> cst_encode_list_prim_i_64(
      Int64List raw) {
    final ans = wire.cst_new_list_prim_i_64(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw.inner);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_8> cst_encode_list_prim_i_8(Int8List raw) {
    final ans = wire.cst_new_list_prim_i_8(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_16> cst_encode_list_prim_u_16(
      Uint16List raw) {
    final ans = wire.cst_new_list_prim_u_16(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_32> cst_encode_list_prim_u_32(
      Uint32List raw) {
    final ans = wire.cst_new_list_prim_u_32(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_64> cst_encode_list_prim_u_64(
      Uint64List raw) {
    final ans = wire.cst_new_list_prim_u_64(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw.inner);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_list_prim_u_8(Uint8List raw) {
    final ans = wire.cst_new_list_prim_u_8(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_raw_string_enum_mirrored>
      cst_encode_list_raw_string_enum_mirrored(
          List<RawStringEnumMirrored> raw) {
    final ans = wire.cst_new_list_raw_string_enum_mirrored(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_raw_string_enum_mirrored(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_raw_string_mirrored>
      cst_encode_list_raw_string_mirrored(List<RawStringMirrored> raw) {
    final ans = wire.cst_new_list_raw_string_mirrored(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_raw_string_mirrored(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_i_32_i_32> cst_encode_list_record_i_32_i_32(
      List<(int, int)> raw) {
    final ans = wire.cst_new_list_record_i_32_i_32(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_i_32_i_32(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal>
      cst_encode_list_record_string_enum_simple_twin_normal(
          List<(String, EnumSimpleTwinNormal)> raw) {
    final ans =
        wire.cst_new_list_record_string_enum_simple_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_enum_simple_twin_normal(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async>
      cst_encode_list_record_string_enum_simple_twin_rust_async(
          List<(String, EnumSimpleTwinRustAsync)> raw) {
    final ans =
        wire.cst_new_list_record_string_enum_simple_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_enum_simple_twin_rust_async(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async_sse>
      cst_encode_list_record_string_enum_simple_twin_rust_async_sse(
          List<(String, EnumSimpleTwinRustAsyncSse)> raw) {
    final ans = wire
        .cst_new_list_record_string_enum_simple_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_enum_simple_twin_rust_async_sse(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sse>
      cst_encode_list_record_string_enum_simple_twin_sse(
          List<(String, EnumSimpleTwinSse)> raw) {
    final ans =
        wire.cst_new_list_record_string_enum_simple_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_enum_simple_twin_sse(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync>
      cst_encode_list_record_string_enum_simple_twin_sync(
          List<(String, EnumSimpleTwinSync)> raw) {
    final ans =
        wire.cst_new_list_record_string_enum_simple_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_enum_simple_twin_sync(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync_sse>
      cst_encode_list_record_string_enum_simple_twin_sync_sse(
          List<(String, EnumSimpleTwinSyncSse)> raw) {
    final ans =
        wire.cst_new_list_record_string_enum_simple_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_enum_simple_twin_sync_sse(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_i_32>
      cst_encode_list_record_string_i_32(List<(String, int)> raw) {
    final ans = wire.cst_new_list_record_string_i_32(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_i_32(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal>
      cst_encode_list_record_string_kitchen_sink_twin_normal(
          List<(String, KitchenSinkTwinNormal)> raw) {
    final ans =
        wire.cst_new_list_record_string_kitchen_sink_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_kitchen_sink_twin_normal(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async>
      cst_encode_list_record_string_kitchen_sink_twin_rust_async(
          List<(String, KitchenSinkTwinRustAsync)> raw) {
    final ans = wire
        .cst_new_list_record_string_kitchen_sink_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_kitchen_sink_twin_rust_async(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async_sse>
      cst_encode_list_record_string_kitchen_sink_twin_rust_async_sse(
          List<(String, KitchenSinkTwinRustAsyncSse)> raw) {
    final ans =
        wire.cst_new_list_record_string_kitchen_sink_twin_rust_async_sse(
            raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_kitchen_sink_twin_rust_async_sse(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sse>
      cst_encode_list_record_string_kitchen_sink_twin_sse(
          List<(String, KitchenSinkTwinSse)> raw) {
    final ans =
        wire.cst_new_list_record_string_kitchen_sink_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_kitchen_sink_twin_sse(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync>
      cst_encode_list_record_string_kitchen_sink_twin_sync(
          List<(String, KitchenSinkTwinSync)> raw) {
    final ans =
        wire.cst_new_list_record_string_kitchen_sink_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_kitchen_sink_twin_sync(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync_sse>
      cst_encode_list_record_string_kitchen_sink_twin_sync_sse(
          List<(String, KitchenSinkTwinSyncSse)> raw) {
    final ans =
        wire.cst_new_list_record_string_kitchen_sink_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_kitchen_sink_twin_sync_sse(
          raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_list_prim_u_8>
      cst_encode_list_record_string_list_prim_u_8(
          List<(String, Uint8List)> raw) {
    final ans = wire.cst_new_list_record_string_list_prim_u_8(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_list_prim_u_8(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_my_size>
      cst_encode_list_record_string_my_size(List<(String, MySize)> raw) {
    final ans = wire.cst_new_list_record_string_my_size(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_my_size(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_string>
      cst_encode_list_record_string_string(List<(String, String)> raw) {
    final ans = wire.cst_new_list_record_string_string(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_string(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_normal>
      cst_encode_list_sum_with_twin_normal(List<SumWithTwinNormal> raw) {
    final ans = wire.cst_new_list_sum_with_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_sum_with_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_rust_async>
      cst_encode_list_sum_with_twin_rust_async(List<SumWithTwinRustAsync> raw) {
    final ans = wire.cst_new_list_sum_with_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_sum_with_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_rust_async_sse>
      cst_encode_list_sum_with_twin_rust_async_sse(
          List<SumWithTwinRustAsyncSse> raw) {
    final ans = wire.cst_new_list_sum_with_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_sum_with_twin_rust_async_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_sse>
      cst_encode_list_sum_with_twin_sse(List<SumWithTwinSse> raw) {
    final ans = wire.cst_new_list_sum_with_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_sum_with_twin_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_sync>
      cst_encode_list_sum_with_twin_sync(List<SumWithTwinSync> raw) {
    final ans = wire.cst_new_list_sum_with_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_sum_with_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_sync_sse>
      cst_encode_list_sum_with_twin_sync_sse(List<SumWithTwinSyncSse> raw) {
    final ans = wire.cst_new_list_sum_with_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_sum_with_twin_sync_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_normal>
      cst_encode_list_test_id_twin_normal(List<TestIdTwinNormal> raw) {
    final ans = wire.cst_new_list_test_id_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_test_id_twin_normal(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_rust_async>
      cst_encode_list_test_id_twin_rust_async(List<TestIdTwinRustAsync> raw) {
    final ans = wire.cst_new_list_test_id_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_test_id_twin_rust_async(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_rust_async_sse>
      cst_encode_list_test_id_twin_rust_async_sse(
          List<TestIdTwinRustAsyncSse> raw) {
    final ans = wire.cst_new_list_test_id_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_test_id_twin_rust_async_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sse> cst_encode_list_test_id_twin_sse(
      List<TestIdTwinSse> raw) {
    final ans = wire.cst_new_list_test_id_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_test_id_twin_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sync>
      cst_encode_list_test_id_twin_sync(List<TestIdTwinSync> raw) {
    final ans = wire.cst_new_list_test_id_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_test_id_twin_sync(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sync_sse>
      cst_encode_list_test_id_twin_sync_sse(List<TestIdTwinSyncSse> raw) {
    final ans = wire.cst_new_list_test_id_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_test_id_twin_sync_sse(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_weekdays_twin_normal>
      cst_encode_list_weekdays_twin_normal(List<WeekdaysTwinNormal> raw) {
    final ans = wire.cst_new_list_weekdays_twin_normal(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_weekdays_twin_normal(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_weekdays_twin_rust_async>
      cst_encode_list_weekdays_twin_rust_async(
          List<WeekdaysTwinRustAsync> raw) {
    final ans = wire.cst_new_list_weekdays_twin_rust_async(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_weekdays_twin_rust_async(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_weekdays_twin_rust_async_sse>
      cst_encode_list_weekdays_twin_rust_async_sse(
          List<WeekdaysTwinRustAsyncSse> raw) {
    final ans = wire.cst_new_list_weekdays_twin_rust_async_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_weekdays_twin_rust_async_sse(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_weekdays_twin_sse>
      cst_encode_list_weekdays_twin_sse(List<WeekdaysTwinSse> raw) {
    final ans = wire.cst_new_list_weekdays_twin_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_weekdays_twin_sse(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_weekdays_twin_sync>
      cst_encode_list_weekdays_twin_sync(List<WeekdaysTwinSync> raw) {
    final ans = wire.cst_new_list_weekdays_twin_sync(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_weekdays_twin_sync(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_weekdays_twin_sync_sse>
      cst_encode_list_weekdays_twin_sync_sse(List<WeekdaysTwinSyncSse> raw) {
    final ans = wire.cst_new_list_weekdays_twin_sync_sse(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_weekdays_twin_sync_sse(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_opt_String(String? raw) {
    return raw == null ? ffi.nullptr : cst_encode_String(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_autoadd_Chrono_Duration(
      Duration? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_Chrono_Duration(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_autoadd_Chrono_Naive(
      DateTime? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_Chrono_Naive(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_autoadd_Chrono_Utc(DateTime? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_Chrono_Utc(raw);
  }

  @protected
  ffi.Pointer<PlatformPointer> cst_encode_opt_box_autoadd_DartOpaque(
      Object? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_DartOpaque(raw);
  }

  @protected
  ffi.Pointer<PlatformPointer> cst_encode_opt_box_autoadd_RustOpaque_hide_data(
      HideData? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_RustOpaque_hide_data(raw);
  }

  @protected
  ffi.Pointer<wire_cst_application_env>
      cst_encode_opt_box_autoadd_application_env(ApplicationEnv? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_application_env(raw);
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_normal>
      cst_encode_opt_box_autoadd_attribute_twin_normal(
          AttributeTwinNormal? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_attribute_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_rust_async>
      cst_encode_opt_box_autoadd_attribute_twin_rust_async(
          AttributeTwinRustAsync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_attribute_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_rust_async_sse>
      cst_encode_opt_box_autoadd_attribute_twin_rust_async_sse(
          AttributeTwinRustAsyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_attribute_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_sse>
      cst_encode_opt_box_autoadd_attribute_twin_sse(AttributeTwinSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_attribute_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_sync>
      cst_encode_opt_box_autoadd_attribute_twin_sync(AttributeTwinSync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_attribute_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_attribute_twin_sync_sse>
      cst_encode_opt_box_autoadd_attribute_twin_sync_sse(
          AttributeTwinSyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_attribute_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_opt_box_autoadd_bool(bool? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_bool(raw);
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_normal>
      cst_encode_opt_box_autoadd_element_twin_normal(ElementTwinNormal? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_element_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_rust_async>
      cst_encode_opt_box_autoadd_element_twin_rust_async(
          ElementTwinRustAsync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_element_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_rust_async_sse>
      cst_encode_opt_box_autoadd_element_twin_rust_async_sse(
          ElementTwinRustAsyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_element_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_sse>
      cst_encode_opt_box_autoadd_element_twin_sse(ElementTwinSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_element_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_sync>
      cst_encode_opt_box_autoadd_element_twin_sync(ElementTwinSync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_element_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_element_twin_sync_sse>
      cst_encode_opt_box_autoadd_element_twin_sync_sse(
          ElementTwinSyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_element_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_encode_opt_box_autoadd_exotic_optionals_twin_normal(
          ExoticOptionalsTwinNormal? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_exotic_optionals_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_encode_opt_box_autoadd_exotic_optionals_twin_rust_async(
          ExoticOptionalsTwinRustAsync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_exotic_optionals_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse>
      cst_encode_opt_box_autoadd_exotic_optionals_twin_rust_async_sse(
          ExoticOptionalsTwinRustAsyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_exotic_optionals_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sse>
      cst_encode_opt_box_autoadd_exotic_optionals_twin_sse(
          ExoticOptionalsTwinSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_exotic_optionals_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_encode_opt_box_autoadd_exotic_optionals_twin_sync(
          ExoticOptionalsTwinSync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_exotic_optionals_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse>
      cst_encode_opt_box_autoadd_exotic_optionals_twin_sync_sse(
          ExoticOptionalsTwinSyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_exotic_optionals_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<ffi.Float> cst_encode_opt_box_autoadd_f_32(double? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_f_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Double> cst_encode_opt_box_autoadd_f_64(double? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_f_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Int16> cst_encode_opt_box_autoadd_i_16(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_16(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_i_32(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_autoadd_i_64(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Int8> cst_encode_opt_box_autoadd_i_8(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_8(raw);
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_normal>
      cst_encode_opt_box_autoadd_measure_twin_normal(MeasureTwinNormal? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_measure_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_rust_async>
      cst_encode_opt_box_autoadd_measure_twin_rust_async(
          MeasureTwinRustAsync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_measure_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_rust_async_sse>
      cst_encode_opt_box_autoadd_measure_twin_rust_async_sse(
          MeasureTwinRustAsyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_measure_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_sse>
      cst_encode_opt_box_autoadd_measure_twin_sse(MeasureTwinSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_measure_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_sync>
      cst_encode_opt_box_autoadd_measure_twin_sync(MeasureTwinSync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_measure_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_measure_twin_sync_sse>
      cst_encode_opt_box_autoadd_measure_twin_sync_sse(
          MeasureTwinSyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_measure_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_normal>
      cst_encode_opt_box_autoadd_new_type_int_twin_normal(
          NewTypeIntTwinNormal? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_new_type_int_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_rust_async>
      cst_encode_opt_box_autoadd_new_type_int_twin_rust_async(
          NewTypeIntTwinRustAsync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_new_type_int_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_rust_async_sse>
      cst_encode_opt_box_autoadd_new_type_int_twin_rust_async_sse(
          NewTypeIntTwinRustAsyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_new_type_int_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_sse>
      cst_encode_opt_box_autoadd_new_type_int_twin_sse(NewTypeIntTwinSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_new_type_int_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_sync>
      cst_encode_opt_box_autoadd_new_type_int_twin_sync(
          NewTypeIntTwinSync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_new_type_int_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_new_type_int_twin_sync_sse>
      cst_encode_opt_box_autoadd_new_type_int_twin_sync_sse(
          NewTypeIntTwinSyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_new_type_int_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_record_string_i_32>
      cst_encode_opt_box_autoadd_record_string_i_32((String, int)? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_record_string_i_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint16> cst_encode_opt_box_autoadd_u_16(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_16(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint32> cst_encode_opt_box_autoadd_u_32(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint64> cst_encode_opt_box_autoadd_u_64(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint8> cst_encode_opt_box_autoadd_u_8(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_8(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_weekdays_twin_normal(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_weekdays_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32>
      cst_encode_opt_box_autoadd_weekdays_twin_rust_async_sse(
          WeekdaysTwinRustAsyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_weekdays_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_weekdays_twin_sse(
      WeekdaysTwinSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_weekdays_twin_sse(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_weekdays_twin_sync(
      WeekdaysTwinSync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_weekdays_twin_sync(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_weekdays_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
      cst_encode_opt_box_benchmark_binary_tree_twin_normal(
          BenchmarkBinaryTreeTwinNormal? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_benchmark_binary_tree_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
      cst_encode_opt_box_benchmark_binary_tree_twin_rust_async(
          BenchmarkBinaryTreeTwinRustAsync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_benchmark_binary_tree_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse>
      cst_encode_opt_box_benchmark_binary_tree_twin_rust_async_sse(
          BenchmarkBinaryTreeTwinRustAsyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_benchmark_binary_tree_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse>
      cst_encode_opt_box_benchmark_binary_tree_twin_sse(
          BenchmarkBinaryTreeTwinSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_benchmark_binary_tree_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
      cst_encode_opt_box_benchmark_binary_tree_twin_sync(
          BenchmarkBinaryTreeTwinSync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_benchmark_binary_tree_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse>
      cst_encode_opt_box_benchmark_binary_tree_twin_sync_sse(
          BenchmarkBinaryTreeTwinSyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_benchmark_binary_tree_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_opt_box_bool(bool? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_bool(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_encode_opt_box_exotic_optionals_twin_normal(
          ExoticOptionalsTwinNormal? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_exotic_optionals_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_encode_opt_box_exotic_optionals_twin_rust_async(
          ExoticOptionalsTwinRustAsync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_exotic_optionals_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse>
      cst_encode_opt_box_exotic_optionals_twin_rust_async_sse(
          ExoticOptionalsTwinRustAsyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_exotic_optionals_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sse>
      cst_encode_opt_box_exotic_optionals_twin_sse(
          ExoticOptionalsTwinSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_exotic_optionals_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_encode_opt_box_exotic_optionals_twin_sync(
          ExoticOptionalsTwinSync? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_exotic_optionals_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse>
      cst_encode_opt_box_exotic_optionals_twin_sync_sse(
          ExoticOptionalsTwinSyncSse? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_exotic_optionals_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<ffi.Double> cst_encode_opt_box_f_64(double? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_f_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_i_32(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_i_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_i_64(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_i_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Int8> cst_encode_opt_box_i_8(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_i_8(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint8> cst_encode_opt_box_u_8(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_u_8(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_normal>
      cst_encode_opt_list_attribute_twin_normal(
          List<AttributeTwinNormal>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_attribute_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_rust_async>
      cst_encode_opt_list_attribute_twin_rust_async(
          List<AttributeTwinRustAsync>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_attribute_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_rust_async_sse>
      cst_encode_opt_list_attribute_twin_rust_async_sse(
          List<AttributeTwinRustAsyncSse>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_attribute_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_sse>
      cst_encode_opt_list_attribute_twin_sse(List<AttributeTwinSse>? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_attribute_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_sync>
      cst_encode_opt_list_attribute_twin_sync(List<AttributeTwinSync>? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_attribute_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_attribute_twin_sync_sse>
      cst_encode_opt_list_attribute_twin_sync_sse(
          List<AttributeTwinSyncSse>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_attribute_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_normal>
      cst_encode_opt_list_element_twin_normal(List<ElementTwinNormal>? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_element_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_rust_async>
      cst_encode_opt_list_element_twin_rust_async(
          List<ElementTwinRustAsync>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_element_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_rust_async_sse>
      cst_encode_opt_list_element_twin_rust_async_sse(
          List<ElementTwinRustAsyncSse>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_element_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_sse>
      cst_encode_opt_list_element_twin_sse(List<ElementTwinSse>? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_element_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_sync>
      cst_encode_opt_list_element_twin_sync(List<ElementTwinSync>? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_element_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_element_twin_sync_sse>
      cst_encode_opt_list_element_twin_sync_sse(List<ElementTwinSyncSse>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_element_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_normal(
          List<AttributeTwinNormal?>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_opt_box_autoadd_attribute_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
          List<AttributeTwinRustAsync?>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_opt_box_autoadd_attribute_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async_sse>
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
          List<AttributeTwinRustAsyncSse?>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_opt_box_autoadd_attribute_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sse>
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_sse(
          List<AttributeTwinSse?>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_opt_box_autoadd_attribute_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_sync(
          List<AttributeTwinSync?>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_opt_box_autoadd_attribute_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync_sse>
      cst_encode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(
          List<AttributeTwinSyncSse?>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_opt_box_autoadd_attribute_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_32> cst_encode_opt_list_prim_f_32(
      Float32List? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_prim_f_32(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_64> cst_encode_opt_list_prim_f_64(
      Float64List? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_prim_f_64(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_32> cst_encode_opt_list_prim_i_32(
      Int32List? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_prim_i_32(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_8> cst_encode_opt_list_prim_i_8(
      Int8List? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_prim_i_8(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_opt_list_prim_u_8(
      Uint8List? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_prim_u_8(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_normal>
      cst_encode_point_twin_normal_array_2(PointTwinNormalArray2 raw) {
    return cst_encode_list_point_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_rust_async>
      cst_encode_point_twin_rust_async_array_2(PointTwinRustAsyncArray2 raw) {
    return cst_encode_list_point_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_rust_async_sse>
      cst_encode_point_twin_rust_async_sse_array_2(
          PointTwinRustAsyncSseArray2 raw) {
    return cst_encode_list_point_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_sse> cst_encode_point_twin_sse_array_2(
      PointTwinSseArray2 raw) {
    return cst_encode_list_point_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_sync> cst_encode_point_twin_sync_array_2(
      PointTwinSyncArray2 raw) {
    return cst_encode_list_point_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_point_twin_sync_sse>
      cst_encode_point_twin_sync_sse_array_2(PointTwinSyncSseArray2 raw) {
    return cst_encode_list_point_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_normal>
      cst_encode_sum_with_twin_normal_array_3(SumWithTwinNormalArray3 raw) {
    return cst_encode_list_sum_with_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_rust_async>
      cst_encode_sum_with_twin_rust_async_array_3(
          SumWithTwinRustAsyncArray3 raw) {
    return cst_encode_list_sum_with_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_rust_async_sse>
      cst_encode_sum_with_twin_rust_async_sse_array_3(
          SumWithTwinRustAsyncSseArray3 raw) {
    return cst_encode_list_sum_with_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_sse>
      cst_encode_sum_with_twin_sse_array_3(SumWithTwinSseArray3 raw) {
    return cst_encode_list_sum_with_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_sync>
      cst_encode_sum_with_twin_sync_array_3(SumWithTwinSyncArray3 raw) {
    return cst_encode_list_sum_with_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_sum_with_twin_sync_sse>
      cst_encode_sum_with_twin_sync_sse_array_3(SumWithTwinSyncSseArray3 raw) {
    return cst_encode_list_sum_with_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_normal>
      cst_encode_test_id_twin_normal_array_2(TestIdTwinNormalArray2 raw) {
    return cst_encode_list_test_id_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_normal>
      cst_encode_test_id_twin_normal_array_4(TestIdTwinNormalArray4 raw) {
    return cst_encode_list_test_id_twin_normal(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_rust_async>
      cst_encode_test_id_twin_rust_async_array_2(
          TestIdTwinRustAsyncArray2 raw) {
    return cst_encode_list_test_id_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_rust_async>
      cst_encode_test_id_twin_rust_async_array_4(
          TestIdTwinRustAsyncArray4 raw) {
    return cst_encode_list_test_id_twin_rust_async(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_rust_async_sse>
      cst_encode_test_id_twin_rust_async_sse_array_2(
          TestIdTwinRustAsyncSseArray2 raw) {
    return cst_encode_list_test_id_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_rust_async_sse>
      cst_encode_test_id_twin_rust_async_sse_array_4(
          TestIdTwinRustAsyncSseArray4 raw) {
    return cst_encode_list_test_id_twin_rust_async_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sse>
      cst_encode_test_id_twin_sse_array_2(TestIdTwinSseArray2 raw) {
    return cst_encode_list_test_id_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sse>
      cst_encode_test_id_twin_sse_array_4(TestIdTwinSseArray4 raw) {
    return cst_encode_list_test_id_twin_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sync>
      cst_encode_test_id_twin_sync_array_2(TestIdTwinSyncArray2 raw) {
    return cst_encode_list_test_id_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sync>
      cst_encode_test_id_twin_sync_array_4(TestIdTwinSyncArray4 raw) {
    return cst_encode_list_test_id_twin_sync(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sync_sse>
      cst_encode_test_id_twin_sync_sse_array_2(TestIdTwinSyncSseArray2 raw) {
    return cst_encode_list_test_id_twin_sync_sse(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_test_id_twin_sync_sse>
      cst_encode_test_id_twin_sync_sse_array_4(TestIdTwinSyncSseArray4 raw) {
    return cst_encode_list_test_id_twin_sync_sse(raw);
  }

  @protected
  int cst_encode_u_64(int raw) {
    return raw.toInt();
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_u_8_array_1600(
      U8Array1600 raw) {
    final ans = wire.cst_new_list_prim_u_8(1600);
    ans.ref.ptr.asTypedList(1600).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_u_8_array_32(U8Array32 raw) {
    final ans = wire.cst_new_list_prim_u_8(32);
    ans.ref.ptr.asTypedList(32).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_u_8_array_5(U8Array5 raw) {
    final ans = wire.cst_new_list_prim_u_8(5);
    ans.ref.ptr.asTypedList(5).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8> cst_encode_u_8_array_8(U8Array8 raw) {
    final ans = wire.cst_new_list_prim_u_8(8);
    ans.ref.ptr.asTypedList(8).setAll(0, raw);
    return ans;
  }

  @protected
  void cst_api_fill_to_wire_a_twin_normal(
      ATwinNormal apiObj, wire_cst_a_twin_normal wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_a_twin_rust_async(
      ATwinRustAsync apiObj, wire_cst_a_twin_rust_async wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_a_twin_rust_async_sse(
      ATwinRustAsyncSse apiObj, wire_cst_a_twin_rust_async_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_a_twin_sse(
      ATwinSse apiObj, wire_cst_a_twin_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_a_twin_sync(
      ATwinSync apiObj, wire_cst_a_twin_sync wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_a_twin_sync_sse(
      ATwinSyncSse apiObj, wire_cst_a_twin_sync_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_abc_twin_normal(
      AbcTwinNormal apiObj, wire_cst_abc_twin_normal wireObj) {
    if (apiObj is AbcTwinNormal_A) {
      var pre_field0 = cst_encode_box_autoadd_a_twin_normal(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinNormal_B) {
      var pre_field0 = cst_encode_box_autoadd_b_twin_normal(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinNormal_C) {
      var pre_field0 = cst_encode_box_autoadd_c_twin_normal(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.C.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinNormal_JustInt) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.JustInt.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_abc_twin_rust_async(
      AbcTwinRustAsync apiObj, wire_cst_abc_twin_rust_async wireObj) {
    if (apiObj is AbcTwinRustAsync_A) {
      var pre_field0 = cst_encode_box_autoadd_a_twin_rust_async(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinRustAsync_B) {
      var pre_field0 = cst_encode_box_autoadd_b_twin_rust_async(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinRustAsync_C) {
      var pre_field0 = cst_encode_box_autoadd_c_twin_rust_async(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.C.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinRustAsync_JustInt) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.JustInt.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_abc_twin_rust_async_sse(
      AbcTwinRustAsyncSse apiObj, wire_cst_abc_twin_rust_async_sse wireObj) {
    if (apiObj is AbcTwinRustAsyncSse_A) {
      var pre_field0 =
          cst_encode_box_autoadd_a_twin_rust_async_sse(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinRustAsyncSse_B) {
      var pre_field0 =
          cst_encode_box_autoadd_b_twin_rust_async_sse(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinRustAsyncSse_C) {
      var pre_field0 =
          cst_encode_box_autoadd_c_twin_rust_async_sse(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.C.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinRustAsyncSse_JustInt) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.JustInt.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_abc_twin_sse(
      AbcTwinSse apiObj, wire_cst_abc_twin_sse wireObj) {
    if (apiObj is AbcTwinSse_A) {
      var pre_field0 = cst_encode_box_autoadd_a_twin_sse(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSse_B) {
      var pre_field0 = cst_encode_box_autoadd_b_twin_sse(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSse_C) {
      var pre_field0 = cst_encode_box_autoadd_c_twin_sse(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.C.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSse_JustInt) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.JustInt.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_abc_twin_sync(
      AbcTwinSync apiObj, wire_cst_abc_twin_sync wireObj) {
    if (apiObj is AbcTwinSync_A) {
      var pre_field0 = cst_encode_box_autoadd_a_twin_sync(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSync_B) {
      var pre_field0 = cst_encode_box_autoadd_b_twin_sync(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSync_C) {
      var pre_field0 = cst_encode_box_autoadd_c_twin_sync(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.C.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSync_JustInt) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.JustInt.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_abc_twin_sync_sse(
      AbcTwinSyncSse apiObj, wire_cst_abc_twin_sync_sse wireObj) {
    if (apiObj is AbcTwinSyncSse_A) {
      var pre_field0 = cst_encode_box_autoadd_a_twin_sync_sse(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSyncSse_B) {
      var pre_field0 = cst_encode_box_autoadd_b_twin_sync_sse(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSyncSse_C) {
      var pre_field0 = cst_encode_box_autoadd_c_twin_sync_sse(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.C.field0 = pre_field0;
      return;
    }
    if (apiObj is AbcTwinSyncSse_JustInt) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.JustInt.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_another_macro_struct_twin_normal(
      AnotherMacroStructTwinNormal apiObj,
      wire_cst_another_macro_struct_twin_normal wireObj) {
    wireObj.data = cst_encode_i_32(apiObj.data);
    wireObj.non_final_data = cst_encode_i_32(apiObj.nonFinalData);
  }

  @protected
  void cst_api_fill_to_wire_another_twin_normal(
      AnotherTwinNormal apiObj, wire_cst_another_twin_normal wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_another_twin_rust_async(
      AnotherTwinRustAsync apiObj, wire_cst_another_twin_rust_async wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_another_twin_rust_async_sse(
      AnotherTwinRustAsyncSse apiObj,
      wire_cst_another_twin_rust_async_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_another_twin_sse(
      AnotherTwinSse apiObj, wire_cst_another_twin_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_another_twin_sync(
      AnotherTwinSync apiObj, wire_cst_another_twin_sync wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_another_twin_sync_sse(
      AnotherTwinSyncSse apiObj, wire_cst_another_twin_sync_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_application_env(
      ApplicationEnv apiObj, wire_cst_application_env wireObj) {
    wireObj.vars = cst_encode_list_application_env_var(apiObj.vars);
  }

  @protected
  void cst_api_fill_to_wire_application_env_var(
      ApplicationEnvVar apiObj, wire_cst_application_env_var wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.field0);
    wireObj.field1 = cst_encode_bool(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_application_message(
      ApplicationMessage apiObj, wire_cst_application_message wireObj) {
    if (apiObj is ApplicationMessage_DisplayMessage) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.DisplayMessage.field0 = pre_field0;
      return;
    }
    if (apiObj is ApplicationMessage_RenderPixel) {
      var pre_x = cst_encode_i_32(apiObj.x);
      var pre_y = cst_encode_i_32(apiObj.y);
      wireObj.tag = 1;
      wireObj.kind.RenderPixel.x = pre_x;
      wireObj.kind.RenderPixel.y = pre_y;
      return;
    }
    if (apiObj is ApplicationMessage_Exit) {
      wireObj.tag = 2;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_application_settings(
      ApplicationSettings apiObj, wire_cst_application_settings wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.version = cst_encode_String(apiObj.version);
    wireObj.mode = cst_encode_application_mode(apiObj.mode);
    wireObj.env = cst_encode_box_application_env(apiObj.env);
    wireObj.env_optional =
        cst_encode_opt_box_autoadd_application_env(apiObj.envOptional);
  }

  @protected
  void cst_api_fill_to_wire_attribute_twin_normal(
      AttributeTwinNormal apiObj, wire_cst_attribute_twin_normal wireObj) {
    wireObj.key = cst_encode_String(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_attribute_twin_rust_async(
      AttributeTwinRustAsync apiObj,
      wire_cst_attribute_twin_rust_async wireObj) {
    wireObj.key = cst_encode_String(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse apiObj,
      wire_cst_attribute_twin_rust_async_sse wireObj) {
    wireObj.key = cst_encode_String(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_attribute_twin_sse(
      AttributeTwinSse apiObj, wire_cst_attribute_twin_sse wireObj) {
    wireObj.key = cst_encode_String(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_attribute_twin_sync(
      AttributeTwinSync apiObj, wire_cst_attribute_twin_sync wireObj) {
    wireObj.key = cst_encode_String(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_attribute_twin_sync_sse(
      AttributeTwinSyncSse apiObj, wire_cst_attribute_twin_sync_sse wireObj) {
    wireObj.key = cst_encode_String(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_b_twin_normal(
      BTwinNormal apiObj, wire_cst_b_twin_normal wireObj) {
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_b_twin_rust_async(
      BTwinRustAsync apiObj, wire_cst_b_twin_rust_async wireObj) {
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_b_twin_rust_async_sse(
      BTwinRustAsyncSse apiObj, wire_cst_b_twin_rust_async_sse wireObj) {
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_b_twin_sse(
      BTwinSse apiObj, wire_cst_b_twin_sse wireObj) {
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_b_twin_sync(
      BTwinSync apiObj, wire_cst_b_twin_sync wireObj) {
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_b_twin_sync_sse(
      BTwinSyncSse apiObj, wire_cst_b_twin_sync_sse wireObj) {
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal apiObj,
      wire_cst_benchmark_binary_tree_twin_normal wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.left =
        cst_encode_opt_box_benchmark_binary_tree_twin_normal(apiObj.left);
    wireObj.right =
        cst_encode_opt_box_benchmark_binary_tree_twin_normal(apiObj.right);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync apiObj,
      wire_cst_benchmark_binary_tree_twin_rust_async wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.left =
        cst_encode_opt_box_benchmark_binary_tree_twin_rust_async(apiObj.left);
    wireObj.right =
        cst_encode_opt_box_benchmark_binary_tree_twin_rust_async(apiObj.right);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse apiObj,
      wire_cst_benchmark_binary_tree_twin_rust_async_sse wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.left = cst_encode_opt_box_benchmark_binary_tree_twin_rust_async_sse(
        apiObj.left);
    wireObj.right =
        cst_encode_opt_box_benchmark_binary_tree_twin_rust_async_sse(
            apiObj.right);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse apiObj,
      wire_cst_benchmark_binary_tree_twin_sse wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.left =
        cst_encode_opt_box_benchmark_binary_tree_twin_sse(apiObj.left);
    wireObj.right =
        cst_encode_opt_box_benchmark_binary_tree_twin_sse(apiObj.right);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync apiObj,
      wire_cst_benchmark_binary_tree_twin_sync wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.left =
        cst_encode_opt_box_benchmark_binary_tree_twin_sync(apiObj.left);
    wireObj.right =
        cst_encode_opt_box_benchmark_binary_tree_twin_sync(apiObj.right);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse apiObj,
      wire_cst_benchmark_binary_tree_twin_sync_sse wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.left =
        cst_encode_opt_box_benchmark_binary_tree_twin_sync_sse(apiObj.left);
    wireObj.right =
        cst_encode_opt_box_benchmark_binary_tree_twin_sync_sse(apiObj.right);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal apiObj,
      wire_cst_benchmark_blob_twin_normal wireObj) {
    wireObj.first = cst_encode_list_prim_u_8(apiObj.first);
    wireObj.second = cst_encode_list_prim_u_8(apiObj.second);
    wireObj.third = cst_encode_list_prim_u_8(apiObj.third);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync apiObj,
      wire_cst_benchmark_blob_twin_rust_async wireObj) {
    wireObj.first = cst_encode_list_prim_u_8(apiObj.first);
    wireObj.second = cst_encode_list_prim_u_8(apiObj.second);
    wireObj.third = cst_encode_list_prim_u_8(apiObj.third);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_blob_twin_rust_async_sse(
      BenchmarkBlobTwinRustAsyncSse apiObj,
      wire_cst_benchmark_blob_twin_rust_async_sse wireObj) {
    wireObj.first = cst_encode_list_prim_u_8(apiObj.first);
    wireObj.second = cst_encode_list_prim_u_8(apiObj.second);
    wireObj.third = cst_encode_list_prim_u_8(apiObj.third);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_blob_twin_sse(
      BenchmarkBlobTwinSse apiObj, wire_cst_benchmark_blob_twin_sse wireObj) {
    wireObj.first = cst_encode_list_prim_u_8(apiObj.first);
    wireObj.second = cst_encode_list_prim_u_8(apiObj.second);
    wireObj.third = cst_encode_list_prim_u_8(apiObj.third);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync apiObj, wire_cst_benchmark_blob_twin_sync wireObj) {
    wireObj.first = cst_encode_list_prim_u_8(apiObj.first);
    wireObj.second = cst_encode_list_prim_u_8(apiObj.second);
    wireObj.third = cst_encode_list_prim_u_8(apiObj.third);
  }

  @protected
  void cst_api_fill_to_wire_benchmark_blob_twin_sync_sse(
      BenchmarkBlobTwinSyncSse apiObj,
      wire_cst_benchmark_blob_twin_sync_sse wireObj) {
    wireObj.first = cst_encode_list_prim_u_8(apiObj.first);
    wireObj.second = cst_encode_list_prim_u_8(apiObj.second);
    wireObj.third = cst_encode_list_prim_u_8(apiObj.third);
  }

  @protected
  void cst_api_fill_to_wire_big_buffers_twin_normal(
      BigBuffersTwinNormal apiObj, wire_cst_big_buffers_twin_normal wireObj) {
    wireObj.int64 = cst_encode_list_prim_i_64(apiObj.int64);
    wireObj.uint64 = cst_encode_list_prim_u_64(apiObj.uint64);
  }

  @protected
  void cst_api_fill_to_wire_big_buffers_twin_rust_async(
      BigBuffersTwinRustAsync apiObj,
      wire_cst_big_buffers_twin_rust_async wireObj) {
    wireObj.int64 = cst_encode_list_prim_i_64(apiObj.int64);
    wireObj.uint64 = cst_encode_list_prim_u_64(apiObj.uint64);
  }

  @protected
  void cst_api_fill_to_wire_big_buffers_twin_rust_async_sse(
      BigBuffersTwinRustAsyncSse apiObj,
      wire_cst_big_buffers_twin_rust_async_sse wireObj) {
    wireObj.int64 = cst_encode_list_prim_i_64(apiObj.int64);
    wireObj.uint64 = cst_encode_list_prim_u_64(apiObj.uint64);
  }

  @protected
  void cst_api_fill_to_wire_big_buffers_twin_sse(
      BigBuffersTwinSse apiObj, wire_cst_big_buffers_twin_sse wireObj) {
    wireObj.int64 = cst_encode_list_prim_i_64(apiObj.int64);
    wireObj.uint64 = cst_encode_list_prim_u_64(apiObj.uint64);
  }

  @protected
  void cst_api_fill_to_wire_big_buffers_twin_sync(
      BigBuffersTwinSync apiObj, wire_cst_big_buffers_twin_sync wireObj) {
    wireObj.int64 = cst_encode_list_prim_i_64(apiObj.int64);
    wireObj.uint64 = cst_encode_list_prim_u_64(apiObj.uint64);
  }

  @protected
  void cst_api_fill_to_wire_big_buffers_twin_sync_sse(
      BigBuffersTwinSyncSse apiObj,
      wire_cst_big_buffers_twin_sync_sse wireObj) {
    wireObj.int64 = cst_encode_list_prim_i_64(apiObj.int64);
    wireObj.uint64 = cst_encode_list_prim_u_64(apiObj.uint64);
  }

  @protected
  void cst_api_fill_to_wire_blob_twin_normal(
      BlobTwinNormal apiObj, wire_cst_blob_twin_normal wireObj) {
    wireObj.field0 = cst_encode_u_8_array_1600(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_blob_twin_rust_async(
      BlobTwinRustAsync apiObj, wire_cst_blob_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_u_8_array_1600(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_blob_twin_rust_async_sse(
      BlobTwinRustAsyncSse apiObj, wire_cst_blob_twin_rust_async_sse wireObj) {
    wireObj.field0 = cst_encode_u_8_array_1600(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_blob_twin_sse(
      BlobTwinSse apiObj, wire_cst_blob_twin_sse wireObj) {
    wireObj.field0 = cst_encode_u_8_array_1600(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_blob_twin_sync(
      BlobTwinSync apiObj, wire_cst_blob_twin_sync wireObj) {
    wireObj.field0 = cst_encode_u_8_array_1600(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_blob_twin_sync_sse(
      BlobTwinSyncSse apiObj, wire_cst_blob_twin_sync_sse wireObj) {
    wireObj.field0 = cst_encode_u_8_array_1600(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_box_application_env(
      ApplicationEnv apiObj, ffi.Pointer<wire_cst_application_env> wireObj) {
    cst_api_fill_to_wire_application_env(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_a_twin_normal(
      ATwinNormal apiObj, ffi.Pointer<wire_cst_a_twin_normal> wireObj) {
    cst_api_fill_to_wire_a_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_a_twin_rust_async(
      ATwinRustAsync apiObj, ffi.Pointer<wire_cst_a_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_a_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_a_twin_rust_async_sse(
      ATwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_a_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_a_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_a_twin_sse(
      ATwinSse apiObj, ffi.Pointer<wire_cst_a_twin_sse> wireObj) {
    cst_api_fill_to_wire_a_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_a_twin_sync(
      ATwinSync apiObj, ffi.Pointer<wire_cst_a_twin_sync> wireObj) {
    cst_api_fill_to_wire_a_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_a_twin_sync_sse(
      ATwinSyncSse apiObj, ffi.Pointer<wire_cst_a_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_a_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_abc_twin_normal(
      AbcTwinNormal apiObj, ffi.Pointer<wire_cst_abc_twin_normal> wireObj) {
    cst_api_fill_to_wire_abc_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_abc_twin_rust_async(
      AbcTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_abc_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_abc_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_abc_twin_rust_async_sse(
      AbcTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_abc_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_abc_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_abc_twin_sse(
      AbcTwinSse apiObj, ffi.Pointer<wire_cst_abc_twin_sse> wireObj) {
    cst_api_fill_to_wire_abc_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_abc_twin_sync(
      AbcTwinSync apiObj, ffi.Pointer<wire_cst_abc_twin_sync> wireObj) {
    cst_api_fill_to_wire_abc_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_abc_twin_sync_sse(
      AbcTwinSyncSse apiObj, ffi.Pointer<wire_cst_abc_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_abc_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_application_env(
      ApplicationEnv apiObj, ffi.Pointer<wire_cst_application_env> wireObj) {
    cst_api_fill_to_wire_application_env(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_application_settings(
      ApplicationSettings apiObj,
      ffi.Pointer<wire_cst_application_settings> wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_attribute_twin_normal(
      AttributeTwinNormal apiObj,
      ffi.Pointer<wire_cst_attribute_twin_normal> wireObj) {
    cst_api_fill_to_wire_attribute_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_attribute_twin_rust_async(
      AttributeTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_attribute_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_attribute_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_attribute_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_attribute_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_attribute_twin_sse(
      AttributeTwinSse apiObj,
      ffi.Pointer<wire_cst_attribute_twin_sse> wireObj) {
    cst_api_fill_to_wire_attribute_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_attribute_twin_sync(
      AttributeTwinSync apiObj,
      ffi.Pointer<wire_cst_attribute_twin_sync> wireObj) {
    cst_api_fill_to_wire_attribute_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_attribute_twin_sync_sse(
      AttributeTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_attribute_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_attribute_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_b_twin_normal(
      BTwinNormal apiObj, ffi.Pointer<wire_cst_b_twin_normal> wireObj) {
    cst_api_fill_to_wire_b_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_b_twin_rust_async(
      BTwinRustAsync apiObj, ffi.Pointer<wire_cst_b_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_b_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_b_twin_rust_async_sse(
      BTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_b_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_b_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_b_twin_sse(
      BTwinSse apiObj, ffi.Pointer<wire_cst_b_twin_sse> wireObj) {
    cst_api_fill_to_wire_b_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_b_twin_sync(
      BTwinSync apiObj, ffi.Pointer<wire_cst_b_twin_sync> wireObj) {
    cst_api_fill_to_wire_b_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_b_twin_sync_sse(
      BTwinSyncSse apiObj, ffi.Pointer<wire_cst_b_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_b_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
          BenchmarkBinaryTreeTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal apiObj,
      ffi.Pointer<wire_cst_benchmark_blob_twin_normal> wireObj) {
    cst_api_fill_to_wire_benchmark_blob_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_benchmark_blob_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_blob_twin_rust_async_sse(
      BenchmarkBlobTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_benchmark_blob_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_blob_twin_sse(
      BenchmarkBlobTwinSse apiObj,
      ffi.Pointer<wire_cst_benchmark_blob_twin_sse> wireObj) {
    cst_api_fill_to_wire_benchmark_blob_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync apiObj,
      ffi.Pointer<wire_cst_benchmark_blob_twin_sync> wireObj) {
    cst_api_fill_to_wire_benchmark_blob_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_benchmark_blob_twin_sync_sse(
      BenchmarkBlobTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_benchmark_blob_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_benchmark_blob_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_c_twin_normal(
      CTwinNormal apiObj, ffi.Pointer<wire_cst_c_twin_normal> wireObj) {
    cst_api_fill_to_wire_c_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_c_twin_rust_async(
      CTwinRustAsync apiObj, ffi.Pointer<wire_cst_c_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_c_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_c_twin_rust_async_sse(
      CTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_c_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_c_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_c_twin_sse(
      CTwinSse apiObj, ffi.Pointer<wire_cst_c_twin_sse> wireObj) {
    cst_api_fill_to_wire_c_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_c_twin_sync(
      CTwinSync apiObj, ffi.Pointer<wire_cst_c_twin_sync> wireObj) {
    cst_api_fill_to_wire_c_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_c_twin_sync_sse(
      CTwinSyncSse apiObj, ffi.Pointer<wire_cst_c_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_c_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal apiObj,
      ffi.Pointer<wire_cst_concatenate_with_twin_normal> wireObj) {
    cst_api_fill_to_wire_concatenate_with_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_concatenate_with_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_concatenate_with_twin_rust_async_sse(
      ConcatenateWithTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_concatenate_with_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_concatenate_with_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_concatenate_with_twin_sse(
      ConcatenateWithTwinSse apiObj,
      ffi.Pointer<wire_cst_concatenate_with_twin_sse> wireObj) {
    cst_api_fill_to_wire_concatenate_with_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_concatenate_with_twin_sync(
      ConcatenateWithTwinSync apiObj,
      ffi.Pointer<wire_cst_concatenate_with_twin_sync> wireObj) {
    cst_api_fill_to_wire_concatenate_with_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_concatenate_with_twin_sync_sse(
      ConcatenateWithTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_concatenate_with_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_concatenate_with_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_2_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_2_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
          CustomNestedError2TwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_custom_nested_error_2_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_2_twin_sse(
      CustomNestedError2TwinSse apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_2_twin_sse> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_2_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_2_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_2_twin_sync_sse(
      CustomNestedError2TwinSyncSse apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_2_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_inner_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_custom_nested_error_inner_twin_rust_async(
          CustomNestedErrorInnerTwinRustAsync apiObj,
          ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async>
              wireObj) {
    cst_api_fill_to_wire_custom_nested_error_inner_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
          CustomNestedErrorInnerTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_custom_nested_error_inner_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_inner_twin_sse(
      CustomNestedErrorInnerTwinSse apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sse> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_inner_twin_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_inner_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_inner_twin_sync_sse(
      CustomNestedErrorInnerTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_inner_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_outer_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_custom_nested_error_outer_twin_rust_async(
          CustomNestedErrorOuterTwinRustAsync apiObj,
          ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async>
              wireObj) {
    cst_api_fill_to_wire_custom_nested_error_outer_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
          CustomNestedErrorOuterTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_custom_nested_error_outer_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_outer_twin_sse(
      CustomNestedErrorOuterTwinSse apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sse> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_outer_twin_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_outer_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_nested_error_outer_twin_sync_sse(
      CustomNestedErrorOuterTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_custom_nested_error_outer_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal apiObj,
      ffi.Pointer<wire_cst_custom_struct_error_twin_normal> wireObj) {
    cst_api_fill_to_wire_custom_struct_error_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_custom_struct_error_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_error_twin_rust_async_sse(
      CustomStructErrorTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_custom_struct_error_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_error_twin_sse(
      CustomStructErrorTwinSse apiObj,
      ffi.Pointer<wire_cst_custom_struct_error_twin_sse> wireObj) {
    cst_api_fill_to_wire_custom_struct_error_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync apiObj,
      ffi.Pointer<wire_cst_custom_struct_error_twin_sync> wireObj) {
    cst_api_fill_to_wire_custom_struct_error_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_error_twin_sync_sse(
      CustomStructErrorTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_custom_struct_error_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_custom_struct_error_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_twin_normal(
      CustomStructTwinNormal apiObj,
      ffi.Pointer<wire_cst_custom_struct_twin_normal> wireObj) {
    cst_api_fill_to_wire_custom_struct_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_custom_struct_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_custom_struct_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_twin_rust_async_sse(
      CustomStructTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_custom_struct_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_custom_struct_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_twin_sse(
      CustomStructTwinSse apiObj,
      ffi.Pointer<wire_cst_custom_struct_twin_sse> wireObj) {
    cst_api_fill_to_wire_custom_struct_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_twin_sync(
      CustomStructTwinSync apiObj,
      ffi.Pointer<wire_cst_custom_struct_twin_sync> wireObj) {
    cst_api_fill_to_wire_custom_struct_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_custom_struct_twin_sync_sse(
      CustomStructTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_custom_struct_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_custom_struct_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_customized_twin_normal(
      CustomizedTwinNormal apiObj,
      ffi.Pointer<wire_cst_customized_twin_normal> wireObj) {
    cst_api_fill_to_wire_customized_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_customized_twin_rust_async(
      CustomizedTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_customized_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_customized_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_customized_twin_rust_async_sse(
      CustomizedTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_customized_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_customized_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_customized_twin_sse(
      CustomizedTwinSse apiObj,
      ffi.Pointer<wire_cst_customized_twin_sse> wireObj) {
    cst_api_fill_to_wire_customized_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_customized_twin_sync(
      CustomizedTwinSync apiObj,
      ffi.Pointer<wire_cst_customized_twin_sync> wireObj) {
    cst_api_fill_to_wire_customized_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_customized_twin_sync_sse(
      CustomizedTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_customized_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_customized_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal apiObj,
      ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal> wireObj) {
    cst_api_fill_to_wire_dart_opaque_nested_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_dart_opaque_nested_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
      DartOpaqueNestedTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_dart_opaque_nested_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_dart_opaque_nested_twin_sse(
      DartOpaqueNestedTwinSse apiObj,
      ffi.Pointer<wire_cst_dart_opaque_nested_twin_sse> wireObj) {
    cst_api_fill_to_wire_dart_opaque_nested_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync apiObj,
      ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync> wireObj) {
    cst_api_fill_to_wire_dart_opaque_nested_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_dart_opaque_nested_twin_sync_sse(
      DartOpaqueNestedTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_dart_opaque_nested_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_element_twin_normal(
      ElementTwinNormal apiObj,
      ffi.Pointer<wire_cst_element_twin_normal> wireObj) {
    cst_api_fill_to_wire_element_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_element_twin_rust_async(
      ElementTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_element_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_element_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_element_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_element_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_element_twin_sse(
      ElementTwinSse apiObj, ffi.Pointer<wire_cst_element_twin_sse> wireObj) {
    cst_api_fill_to_wire_element_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_element_twin_sync(
      ElementTwinSync apiObj, ffi.Pointer<wire_cst_element_twin_sync> wireObj) {
    cst_api_fill_to_wire_element_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_element_twin_sync_sse(
      ElementTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_element_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_element_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_dart_opaque_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_enum_dart_opaque_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_dart_opaque_twin_rust_async_sse(
      EnumDartOpaqueTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_enum_dart_opaque_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_dart_opaque_twin_sse(
      EnumDartOpaqueTwinSse apiObj,
      ffi.Pointer<wire_cst_enum_dart_opaque_twin_sse> wireObj) {
    cst_api_fill_to_wire_enum_dart_opaque_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_dart_opaque_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_dart_opaque_twin_sync_sse(
      EnumDartOpaqueTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_enum_dart_opaque_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_rust_async_sse(
      EnumOpaqueTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_sse(
      EnumOpaqueTwinSse apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_sse> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_sync(
      EnumOpaqueTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_opaque_twin_sync_sse(
      EnumOpaqueTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_enum_opaque_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_enum_opaque_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_with_item_mixed_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_enum_with_item_mixed_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
          EnumWithItemMixedTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_enum_with_item_mixed_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_mixed_twin_sse(
      EnumWithItemMixedTwinSse apiObj,
      ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sse> wireObj) {
    cst_api_fill_to_wire_enum_with_item_mixed_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_with_item_mixed_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_mixed_twin_sync_sse(
      EnumWithItemMixedTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_enum_with_item_mixed_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_with_item_struct_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_enum_with_item_struct_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
          EnumWithItemStructTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_enum_with_item_struct_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_struct_twin_sse(
      EnumWithItemStructTwinSse apiObj,
      ffi.Pointer<wire_cst_enum_with_item_struct_twin_sse> wireObj) {
    cst_api_fill_to_wire_enum_with_item_struct_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_with_item_struct_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_struct_twin_sync_sse(
      EnumWithItemStructTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_enum_with_item_struct_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal apiObj,
      ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal> wireObj) {
    cst_api_fill_to_wire_enum_with_item_tuple_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_enum_with_item_tuple_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
          EnumWithItemTupleTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_enum_with_item_tuple_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_tuple_twin_sse(
      EnumWithItemTupleTwinSse apiObj,
      ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sse> wireObj) {
    cst_api_fill_to_wire_enum_with_item_tuple_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync apiObj,
      ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync> wireObj) {
    cst_api_fill_to_wire_enum_with_item_tuple_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_enum_with_item_tuple_twin_sync_sse(
      EnumWithItemTupleTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_enum_with_item_tuple_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_event_twin_normal(
      EventTwinNormal apiObj, ffi.Pointer<wire_cst_event_twin_normal> wireObj) {
    cst_api_fill_to_wire_event_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_event_twin_rust_async(
      EventTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_event_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_event_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_event_twin_rust_async_sse(
      EventTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_event_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_event_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_event_twin_sse(
      EventTwinSse apiObj, ffi.Pointer<wire_cst_event_twin_sse> wireObj) {
    cst_api_fill_to_wire_event_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_normal> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_sse> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_sync> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_chrono_twin_normal(
      FeatureChronoTwinNormal apiObj,
      ffi.Pointer<wire_cst_feature_chrono_twin_normal> wireObj) {
    cst_api_fill_to_wire_feature_chrono_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_feature_chrono_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_feature_chrono_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_chrono_twin_sync(
      FeatureChronoTwinSync apiObj,
      ffi.Pointer<wire_cst_feature_chrono_twin_sync> wireObj) {
    cst_api_fill_to_wire_feature_chrono_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_uuid_twin_normal(
      FeatureUuidTwinNormal apiObj,
      ffi.Pointer<wire_cst_feature_uuid_twin_normal> wireObj) {
    cst_api_fill_to_wire_feature_uuid_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_feature_uuid_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_feature_uuid_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feature_uuid_twin_sync(
      FeatureUuidTwinSync apiObj,
      ffi.Pointer<wire_cst_feature_uuid_twin_sync> wireObj) {
    cst_api_fill_to_wire_feature_uuid_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feed_id_twin_normal(
      FeedIdTwinNormal apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_normal> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feed_id_twin_rust_async(
      FeedIdTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feed_id_twin_sse(
      FeedIdTwinSse apiObj, ffi.Pointer<wire_cst_feed_id_twin_sse> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feed_id_twin_sync(
      FeedIdTwinSync apiObj, ffi.Pointer<wire_cst_feed_id_twin_sync> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_normal> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_kitchen_sink_twin_sse(
      KitchenSinkTwinSse apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_sse> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_kitchen_sink_twin_sync(
      KitchenSinkTwinSync apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_sync> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored apiObj,
      ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored> wireObj) {
    cst_api_fill_to_wire_list_of_nested_raw_string_mirrored(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_macro_struct(
      MacroStruct apiObj, ffi.Pointer<wire_cst_macro_struct> wireObj) {
    cst_api_fill_to_wire_macro_struct(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_measure_twin_normal(
      MeasureTwinNormal apiObj,
      ffi.Pointer<wire_cst_measure_twin_normal> wireObj) {
    cst_api_fill_to_wire_measure_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_measure_twin_rust_async(
      MeasureTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_measure_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_measure_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_measure_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_measure_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_measure_twin_sse(
      MeasureTwinSse apiObj, ffi.Pointer<wire_cst_measure_twin_sse> wireObj) {
    cst_api_fill_to_wire_measure_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_measure_twin_sync(
      MeasureTwinSync apiObj, ffi.Pointer<wire_cst_measure_twin_sync> wireObj) {
    cst_api_fill_to_wire_measure_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_measure_twin_sync_sse(
      MeasureTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_measure_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_measure_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_message_id_twin_normal(
      MessageIdTwinNormal apiObj,
      ffi.Pointer<wire_cst_message_id_twin_normal> wireObj) {
    cst_api_fill_to_wire_message_id_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_message_id_twin_rust_async(
      MessageIdTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_message_id_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_message_id_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_message_id_twin_rust_async_sse(
      MessageIdTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_message_id_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_message_id_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_message_id_twin_sse(
      MessageIdTwinSse apiObj,
      ffi.Pointer<wire_cst_message_id_twin_sse> wireObj) {
    cst_api_fill_to_wire_message_id_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_message_id_twin_sync(
      MessageIdTwinSync apiObj,
      ffi.Pointer<wire_cst_message_id_twin_sync> wireObj) {
    cst_api_fill_to_wire_message_id_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_message_id_twin_sync_sse(
      MessageIdTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_message_id_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_message_id_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal apiObj,
      ffi.Pointer<wire_cst_my_nested_struct_twin_normal> wireObj) {
    cst_api_fill_to_wire_my_nested_struct_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_my_nested_struct_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_nested_struct_twin_rust_async_sse(
      MyNestedStructTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_my_nested_struct_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_nested_struct_twin_sse(
      MyNestedStructTwinSse apiObj,
      ffi.Pointer<wire_cst_my_nested_struct_twin_sse> wireObj) {
    cst_api_fill_to_wire_my_nested_struct_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_nested_struct_twin_sync(
      MyNestedStructTwinSync apiObj,
      ffi.Pointer<wire_cst_my_nested_struct_twin_sync> wireObj) {
    cst_api_fill_to_wire_my_nested_struct_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_nested_struct_twin_sync_sse(
      MyNestedStructTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_my_nested_struct_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_my_nested_struct_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_size(
      MySize apiObj, ffi.Pointer<wire_cst_my_size> wireObj) {
    cst_api_fill_to_wire_my_size(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_struct(
      MyStruct apiObj, ffi.Pointer<wire_cst_my_struct> wireObj) {
    cst_api_fill_to_wire_my_struct(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal apiObj,
      ffi.Pointer<wire_cst_my_tree_node_twin_normal> wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_my_tree_node_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_tree_node_twin_rust_async_sse(
      MyTreeNodeTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_my_tree_node_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_tree_node_twin_sse(
      MyTreeNodeTwinSse apiObj,
      ffi.Pointer<wire_cst_my_tree_node_twin_sse> wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_tree_node_twin_sync(
      MyTreeNodeTwinSync apiObj,
      ffi.Pointer<wire_cst_my_tree_node_twin_sync> wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_my_tree_node_twin_sync_sse(
      MyTreeNodeTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_my_tree_node_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_nested_raw_string_mirrored(
      NestedRawStringMirrored apiObj,
      ffi.Pointer<wire_cst_nested_raw_string_mirrored> wireObj) {
    cst_api_fill_to_wire_nested_raw_string_mirrored(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_new_type_int_twin_normal(
      NewTypeIntTwinNormal apiObj,
      ffi.Pointer<wire_cst_new_type_int_twin_normal> wireObj) {
    cst_api_fill_to_wire_new_type_int_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_new_type_int_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_new_type_int_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_new_type_int_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_new_type_int_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_new_type_int_twin_sse(
      NewTypeIntTwinSse apiObj,
      ffi.Pointer<wire_cst_new_type_int_twin_sse> wireObj) {
    cst_api_fill_to_wire_new_type_int_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_new_type_int_twin_sync(
      NewTypeIntTwinSync apiObj,
      ffi.Pointer<wire_cst_new_type_int_twin_sync> wireObj) {
    cst_api_fill_to_wire_new_type_int_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_new_type_int_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_new_type_int_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_note_twin_normal(
      NoteTwinNormal apiObj, ffi.Pointer<wire_cst_note_twin_normal> wireObj) {
    cst_api_fill_to_wire_note_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_note_twin_rust_async(
      NoteTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_note_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_note_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_note_twin_rust_async_sse(
      NoteTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_note_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_note_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_note_twin_sse(
      NoteTwinSse apiObj, ffi.Pointer<wire_cst_note_twin_sse> wireObj) {
    cst_api_fill_to_wire_note_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_note_twin_sync(
      NoteTwinSync apiObj, ffi.Pointer<wire_cst_note_twin_sync> wireObj) {
    cst_api_fill_to_wire_note_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_note_twin_sync_sse(
      NoteTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_note_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_note_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_numbers(
      Numbers apiObj, ffi.Pointer<wire_cst_numbers> wireObj) {
    cst_api_fill_to_wire_numbers(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_normal> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_rust_async_sse(
      OpaqueNestedTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_sse(
      OpaqueNestedTwinSse apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_sse> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_sync(
      OpaqueNestedTwinSync apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_sync> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opaque_nested_twin_sync_sse(
      OpaqueNestedTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_opaque_nested_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_opaque_nested_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opt_vecs_twin_normal(
      OptVecsTwinNormal apiObj,
      ffi.Pointer<wire_cst_opt_vecs_twin_normal> wireObj) {
    cst_api_fill_to_wire_opt_vecs_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_opt_vecs_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_opt_vecs_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opt_vecs_twin_rust_async_sse(
      OptVecsTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_opt_vecs_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_opt_vecs_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opt_vecs_twin_sse(
      OptVecsTwinSse apiObj, ffi.Pointer<wire_cst_opt_vecs_twin_sse> wireObj) {
    cst_api_fill_to_wire_opt_vecs_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opt_vecs_twin_sync(
      OptVecsTwinSync apiObj,
      ffi.Pointer<wire_cst_opt_vecs_twin_sync> wireObj) {
    cst_api_fill_to_wire_opt_vecs_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_opt_vecs_twin_sync_sse(
      OptVecsTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_opt_vecs_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_opt_vecs_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_raw_string_mirrored(
      RawStringMirrored apiObj,
      ffi.Pointer<wire_cst_raw_string_mirrored> wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_record_string_i_32(
      (String, int) apiObj, ffi.Pointer<wire_cst_record_string_i_32> wireObj) {
    cst_api_fill_to_wire_record_string_i_32(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sequences(
      Sequences apiObj, ffi.Pointer<wire_cst_sequences> wireObj) {
    cst_api_fill_to_wire_sequences(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_some_struct_twin_normal(
      SomeStructTwinNormal apiObj,
      ffi.Pointer<wire_cst_some_struct_twin_normal> wireObj) {
    cst_api_fill_to_wire_some_struct_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_some_struct_twin_rust_async(
      SomeStructTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_some_struct_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_some_struct_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_some_struct_twin_rust_async_sse(
      SomeStructTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_some_struct_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_some_struct_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_some_struct_twin_sse(
      SomeStructTwinSse apiObj,
      ffi.Pointer<wire_cst_some_struct_twin_sse> wireObj) {
    cst_api_fill_to_wire_some_struct_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_some_struct_twin_sync(
      SomeStructTwinSync apiObj,
      ffi.Pointer<wire_cst_some_struct_twin_sync> wireObj) {
    cst_api_fill_to_wire_some_struct_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_some_struct_twin_sync_sse(
      SomeStructTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_some_struct_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_some_struct_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal apiObj,
      ffi.Pointer<wire_cst_struct_with_comments_twin_normal> wireObj) {
    cst_api_fill_to_wire_struct_with_comments_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_struct_with_comments_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_comments_twin_rust_async_sse(
          StructWithCommentsTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_struct_with_comments_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_comments_twin_sse(
      StructWithCommentsTwinSse apiObj,
      ffi.Pointer<wire_cst_struct_with_comments_twin_sse> wireObj) {
    cst_api_fill_to_wire_struct_with_comments_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync apiObj,
      ffi.Pointer<wire_cst_struct_with_comments_twin_sync> wireObj) {
    cst_api_fill_to_wire_struct_with_comments_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_comments_twin_sync_sse(
      StructWithCommentsTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_struct_with_comments_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_struct_with_comments_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal apiObj,
      ffi.Pointer<wire_cst_struct_with_enum_twin_normal> wireObj) {
    cst_api_fill_to_wire_struct_with_enum_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_struct_with_enum_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_enum_twin_rust_async_sse(
      StructWithEnumTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_struct_with_enum_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_enum_twin_sse(
      StructWithEnumTwinSse apiObj,
      ffi.Pointer<wire_cst_struct_with_enum_twin_sse> wireObj) {
    cst_api_fill_to_wire_struct_with_enum_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_enum_twin_sync(
      StructWithEnumTwinSync apiObj,
      ffi.Pointer<wire_cst_struct_with_enum_twin_sync> wireObj) {
    cst_api_fill_to_wire_struct_with_enum_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_enum_twin_sync_sse(
      StructWithEnumTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_struct_with_enum_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_struct_with_enum_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal apiObj,
      ffi.Pointer<wire_cst_struct_with_one_field_twin_normal> wireObj) {
    cst_api_fill_to_wire_struct_with_one_field_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_struct_with_one_field_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_one_field_twin_rust_async_sse(
          StructWithOneFieldTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_struct_with_one_field_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_one_field_twin_sse(
      StructWithOneFieldTwinSse apiObj,
      ffi.Pointer<wire_cst_struct_with_one_field_twin_sse> wireObj) {
    cst_api_fill_to_wire_struct_with_one_field_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync apiObj,
      ffi.Pointer<wire_cst_struct_with_one_field_twin_sync> wireObj) {
    cst_api_fill_to_wire_struct_with_one_field_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_one_field_twin_sync_sse(
      StructWithOneFieldTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_struct_with_one_field_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_struct_with_one_field_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal apiObj,
      ffi.Pointer<wire_cst_struct_with_two_field_twin_normal> wireObj) {
    cst_api_fill_to_wire_struct_with_two_field_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_struct_with_two_field_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_struct_with_two_field_twin_rust_async_sse(
          StructWithTwoFieldTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_struct_with_two_field_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_two_field_twin_sse(
      StructWithTwoFieldTwinSse apiObj,
      ffi.Pointer<wire_cst_struct_with_two_field_twin_sse> wireObj) {
    cst_api_fill_to_wire_struct_with_two_field_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync apiObj,
      ffi.Pointer<wire_cst_struct_with_two_field_twin_sync> wireObj) {
    cst_api_fill_to_wire_struct_with_two_field_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_struct_with_two_field_twin_sync_sse(
      StructWithTwoFieldTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_struct_with_two_field_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_struct_with_two_field_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sum_with_twin_normal(
      SumWithTwinNormal apiObj,
      ffi.Pointer<wire_cst_sum_with_twin_normal> wireObj) {
    cst_api_fill_to_wire_sum_with_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sum_with_twin_rust_async(
      SumWithTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_sum_with_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_sum_with_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sum_with_twin_rust_async_sse(
      SumWithTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_sum_with_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_sum_with_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sum_with_twin_sse(
      SumWithTwinSse apiObj, ffi.Pointer<wire_cst_sum_with_twin_sse> wireObj) {
    cst_api_fill_to_wire_sum_with_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sum_with_twin_sync(
      SumWithTwinSync apiObj,
      ffi.Pointer<wire_cst_sum_with_twin_sync> wireObj) {
    cst_api_fill_to_wire_sum_with_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sum_with_twin_sync_sse(
      SumWithTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_sum_with_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_sum_with_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_test_id_twin_normal(
      TestIdTwinNormal apiObj,
      ffi.Pointer<wire_cst_test_id_twin_normal> wireObj) {
    cst_api_fill_to_wire_test_id_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_test_id_twin_rust_async(
      TestIdTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_test_id_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_test_id_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_test_id_twin_rust_async_sse(
      TestIdTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_test_id_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_test_id_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_test_id_twin_sse(
      TestIdTwinSse apiObj, ffi.Pointer<wire_cst_test_id_twin_sse> wireObj) {
    cst_api_fill_to_wire_test_id_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_test_id_twin_sync(
      TestIdTwinSync apiObj, ffi.Pointer<wire_cst_test_id_twin_sync> wireObj) {
    cst_api_fill_to_wire_test_id_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_test_id_twin_sync_sse(
      TestIdTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_test_id_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_test_id_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal apiObj,
      ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal> wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
          TupleStructWithOneFieldTwinRustAsync apiObj,
          ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async>
              wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
          TupleStructWithOneFieldTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_tuple_struct_with_one_field_twin_sse(
      TupleStructWithOneFieldTwinSse apiObj,
      ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sse> wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync apiObj,
      ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync> wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
          TupleStructWithOneFieldTwinSyncSse apiObj,
          ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync_sse>
              wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal apiObj,
      ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal> wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_normal(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
          TupleStructWithTwoFieldTwinRustAsync apiObj,
          ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async>
              wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
          TupleStructWithTwoFieldTwinRustAsyncSse apiObj,
          ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async_sse>
              wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_tuple_struct_with_two_field_twin_sse(
      TupleStructWithTwoFieldTwinSse apiObj,
      ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sse> wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync apiObj,
      ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync> wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sync(
        apiObj, wireObj.ref);
  }

  @protected
  void
      cst_api_fill_to_wire_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
          TupleStructWithTwoFieldTwinSyncSse apiObj,
          ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync_sse>
              wireObj) {
    cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_user_id_twin_normal(
      UserIdTwinNormal apiObj,
      ffi.Pointer<wire_cst_user_id_twin_normal> wireObj) {
    cst_api_fill_to_wire_user_id_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_user_id_twin_rust_async(
      UserIdTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_user_id_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_user_id_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_user_id_twin_rust_async_sse(
      UserIdTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_user_id_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_user_id_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_user_id_twin_sse(
      UserIdTwinSse apiObj, ffi.Pointer<wire_cst_user_id_twin_sse> wireObj) {
    cst_api_fill_to_wire_user_id_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_user_id_twin_sync(
      UserIdTwinSync apiObj, ffi.Pointer<wire_cst_user_id_twin_sync> wireObj) {
    cst_api_fill_to_wire_user_id_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_user_id_twin_sync_sse(
      UserIdTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_user_id_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_user_id_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_benchmark_binary_tree_twin_sync_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_blob_twin_normal(
      BlobTwinNormal apiObj, ffi.Pointer<wire_cst_blob_twin_normal> wireObj) {
    cst_api_fill_to_wire_blob_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_blob_twin_rust_async(BlobTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_blob_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_blob_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_blob_twin_rust_async_sse(
      BlobTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_blob_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_blob_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_blob_twin_sse(
      BlobTwinSse apiObj, ffi.Pointer<wire_cst_blob_twin_sse> wireObj) {
    cst_api_fill_to_wire_blob_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_blob_twin_sync(
      BlobTwinSync apiObj, ffi.Pointer<wire_cst_blob_twin_sync> wireObj) {
    cst_api_fill_to_wire_blob_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_blob_twin_sync_sse(BlobTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_blob_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_blob_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_distance_twin_normal(DistanceTwinNormal apiObj,
      ffi.Pointer<wire_cst_distance_twin_normal> wireObj) {
    cst_api_fill_to_wire_distance_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_distance_twin_rust_async(
      DistanceTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_distance_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_distance_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_distance_twin_rust_async_sse(
      DistanceTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_distance_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_distance_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_distance_twin_sse(
      DistanceTwinSse apiObj, ffi.Pointer<wire_cst_distance_twin_sse> wireObj) {
    cst_api_fill_to_wire_distance_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_distance_twin_sync(DistanceTwinSync apiObj,
      ffi.Pointer<wire_cst_distance_twin_sync> wireObj) {
    cst_api_fill_to_wire_distance_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_distance_twin_sync_sse(
      DistanceTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_distance_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_distance_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_normal> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_rust_async_sse(
        apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_sse> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_sync> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_exotic_optionals_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_feed_id_twin_normal(FeedIdTwinNormal apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_normal> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_feed_id_twin_rust_async(
      FeedIdTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_feed_id_twin_sse(
      FeedIdTwinSse apiObj, ffi.Pointer<wire_cst_feed_id_twin_sse> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_feed_id_twin_sync(
      FeedIdTwinSync apiObj, ffi.Pointer<wire_cst_feed_id_twin_sync> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_feed_id_twin_sync_sse(FeedIdTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_feed_id_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_feed_id_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_normal> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_kitchen_sink_twin_sse(KitchenSinkTwinSse apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_sse> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_kitchen_sink_twin_sync(
      KitchenSinkTwinSync apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_sync> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_kitchen_sink_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_my_size(
      MySize apiObj, ffi.Pointer<wire_cst_my_size> wireObj) {
    cst_api_fill_to_wire_my_size(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_speed_twin_normal(
      SpeedTwinNormal apiObj, ffi.Pointer<wire_cst_speed_twin_normal> wireObj) {
    cst_api_fill_to_wire_speed_twin_normal(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_speed_twin_rust_async(SpeedTwinRustAsync apiObj,
      ffi.Pointer<wire_cst_speed_twin_rust_async> wireObj) {
    cst_api_fill_to_wire_speed_twin_rust_async(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_speed_twin_rust_async_sse(
      SpeedTwinRustAsyncSse apiObj,
      ffi.Pointer<wire_cst_speed_twin_rust_async_sse> wireObj) {
    cst_api_fill_to_wire_speed_twin_rust_async_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_speed_twin_sse(
      SpeedTwinSse apiObj, ffi.Pointer<wire_cst_speed_twin_sse> wireObj) {
    cst_api_fill_to_wire_speed_twin_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_speed_twin_sync(
      SpeedTwinSync apiObj, ffi.Pointer<wire_cst_speed_twin_sync> wireObj) {
    cst_api_fill_to_wire_speed_twin_sync(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_speed_twin_sync_sse(SpeedTwinSyncSse apiObj,
      ffi.Pointer<wire_cst_speed_twin_sync_sse> wireObj) {
    cst_api_fill_to_wire_speed_twin_sync_sse(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_u_8_array_1600(
      U8Array1600 apiObj, ffi.Pointer<wire_cst_list_prim_u_8> wireObj) {
    wireObj = cst_encode_u_8_array_1600(apiObj);
  }

  @protected
  void cst_api_fill_to_wire_box_u_8_array_8(
      U8Array8 apiObj, ffi.Pointer<wire_cst_list_prim_u_8> wireObj) {
    wireObj = cst_encode_u_8_array_8(apiObj);
  }

  @protected
  void cst_api_fill_to_wire_c_twin_normal(
      CTwinNormal apiObj, wire_cst_c_twin_normal wireObj) {
    wireObj.c = cst_encode_bool(apiObj.c);
  }

  @protected
  void cst_api_fill_to_wire_c_twin_rust_async(
      CTwinRustAsync apiObj, wire_cst_c_twin_rust_async wireObj) {
    wireObj.c = cst_encode_bool(apiObj.c);
  }

  @protected
  void cst_api_fill_to_wire_c_twin_rust_async_sse(
      CTwinRustAsyncSse apiObj, wire_cst_c_twin_rust_async_sse wireObj) {
    wireObj.c = cst_encode_bool(apiObj.c);
  }

  @protected
  void cst_api_fill_to_wire_c_twin_sse(
      CTwinSse apiObj, wire_cst_c_twin_sse wireObj) {
    wireObj.c = cst_encode_bool(apiObj.c);
  }

  @protected
  void cst_api_fill_to_wire_c_twin_sync(
      CTwinSync apiObj, wire_cst_c_twin_sync wireObj) {
    wireObj.c = cst_encode_bool(apiObj.c);
  }

  @protected
  void cst_api_fill_to_wire_c_twin_sync_sse(
      CTwinSyncSse apiObj, wire_cst_c_twin_sync_sse wireObj) {
    wireObj.c = cst_encode_bool(apiObj.c);
  }

  @protected
  void cst_api_fill_to_wire_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal apiObj,
      wire_cst_concatenate_with_twin_normal wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync apiObj,
      wire_cst_concatenate_with_twin_rust_async wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_concatenate_with_twin_rust_async_sse(
      ConcatenateWithTwinRustAsyncSse apiObj,
      wire_cst_concatenate_with_twin_rust_async_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_concatenate_with_twin_sse(
      ConcatenateWithTwinSse apiObj,
      wire_cst_concatenate_with_twin_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_concatenate_with_twin_sync(
      ConcatenateWithTwinSync apiObj,
      wire_cst_concatenate_with_twin_sync wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_concatenate_with_twin_sync_sse(
      ConcatenateWithTwinSyncSse apiObj,
      wire_cst_concatenate_with_twin_sync_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_contains_mirrored_sub_struct_twin_normal(
      ContainsMirroredSubStructTwinNormal apiObj,
      wire_cst_contains_mirrored_sub_struct_twin_normal wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.test, wireObj.test);
    cst_api_fill_to_wire_another_twin_normal(apiObj.test2, wireObj.test2);
  }

  @protected
  void cst_api_fill_to_wire_contains_mirrored_sub_struct_twin_rust_async(
      ContainsMirroredSubStructTwinRustAsync apiObj,
      wire_cst_contains_mirrored_sub_struct_twin_rust_async wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.test, wireObj.test);
    cst_api_fill_to_wire_another_twin_rust_async(apiObj.test2, wireObj.test2);
  }

  @protected
  void cst_api_fill_to_wire_contains_mirrored_sub_struct_twin_rust_async_sse(
      ContainsMirroredSubStructTwinRustAsyncSse apiObj,
      wire_cst_contains_mirrored_sub_struct_twin_rust_async_sse wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.test, wireObj.test);
    cst_api_fill_to_wire_another_twin_rust_async_sse(
        apiObj.test2, wireObj.test2);
  }

  @protected
  void cst_api_fill_to_wire_contains_mirrored_sub_struct_twin_sse(
      ContainsMirroredSubStructTwinSse apiObj,
      wire_cst_contains_mirrored_sub_struct_twin_sse wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.test, wireObj.test);
    cst_api_fill_to_wire_another_twin_sse(apiObj.test2, wireObj.test2);
  }

  @protected
  void cst_api_fill_to_wire_contains_mirrored_sub_struct_twin_sync(
      ContainsMirroredSubStructTwinSync apiObj,
      wire_cst_contains_mirrored_sub_struct_twin_sync wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.test, wireObj.test);
    cst_api_fill_to_wire_another_twin_sync(apiObj.test2, wireObj.test2);
  }

  @protected
  void cst_api_fill_to_wire_contains_mirrored_sub_struct_twin_sync_sse(
      ContainsMirroredSubStructTwinSyncSse apiObj,
      wire_cst_contains_mirrored_sub_struct_twin_sync_sse wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.test, wireObj.test);
    cst_api_fill_to_wire_another_twin_sync_sse(apiObj.test2, wireObj.test2);
  }

  @protected
  void cst_api_fill_to_wire_custom_enum_error_twin_normal(
      CustomEnumErrorTwinNormal apiObj,
      wire_cst_custom_enum_error_twin_normal wireObj) {
    if (apiObj is CustomEnumErrorTwinNormal_One) {
      var pre_message = cst_encode_String(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.One.message = pre_message;
      wireObj.kind.One.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomEnumErrorTwinNormal_Two) {
      var pre_message = cst_encode_u_32(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Two.message = pre_message;
      wireObj.kind.Two.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_enum_error_twin_rust_async(
      CustomEnumErrorTwinRustAsync apiObj,
      wire_cst_custom_enum_error_twin_rust_async wireObj) {
    if (apiObj is CustomEnumErrorTwinRustAsync_One) {
      var pre_message = cst_encode_String(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.One.message = pre_message;
      wireObj.kind.One.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomEnumErrorTwinRustAsync_Two) {
      var pre_message = cst_encode_u_32(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Two.message = pre_message;
      wireObj.kind.Two.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_enum_error_twin_rust_async_sse(
      CustomEnumErrorTwinRustAsyncSse apiObj,
      wire_cst_custom_enum_error_twin_rust_async_sse wireObj) {
    if (apiObj is CustomEnumErrorTwinRustAsyncSse_One) {
      var pre_message = cst_encode_String(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.One.message = pre_message;
      wireObj.kind.One.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomEnumErrorTwinRustAsyncSse_Two) {
      var pre_message = cst_encode_u_32(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Two.message = pre_message;
      wireObj.kind.Two.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_enum_error_twin_sse(
      CustomEnumErrorTwinSse apiObj,
      wire_cst_custom_enum_error_twin_sse wireObj) {
    if (apiObj is CustomEnumErrorTwinSse_One) {
      var pre_message = cst_encode_String(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.One.message = pre_message;
      wireObj.kind.One.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomEnumErrorTwinSse_Two) {
      var pre_message = cst_encode_u_32(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Two.message = pre_message;
      wireObj.kind.Two.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_enum_error_twin_sync(
      CustomEnumErrorTwinSync apiObj,
      wire_cst_custom_enum_error_twin_sync wireObj) {
    if (apiObj is CustomEnumErrorTwinSync_One) {
      var pre_message = cst_encode_String(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.One.message = pre_message;
      wireObj.kind.One.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomEnumErrorTwinSync_Two) {
      var pre_message = cst_encode_u_32(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Two.message = pre_message;
      wireObj.kind.Two.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_enum_error_twin_sync_sse(
      CustomEnumErrorTwinSyncSse apiObj,
      wire_cst_custom_enum_error_twin_sync_sse wireObj) {
    if (apiObj is CustomEnumErrorTwinSyncSse_One) {
      var pre_message = cst_encode_String(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.One.message = pre_message;
      wireObj.kind.One.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomEnumErrorTwinSyncSse_Two) {
      var pre_message = cst_encode_u_32(apiObj.message);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Two.message = pre_message;
      wireObj.kind.Two.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_error_twin_normal(
      CustomErrorTwinNormal apiObj, wire_cst_custom_error_twin_normal wireObj) {
    if (apiObj is CustomErrorTwinNormal_Error0) {
      var pre_e = cst_encode_String(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.Error0.e = pre_e;
      wireObj.kind.Error0.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomErrorTwinNormal_Error1) {
      var pre_e = cst_encode_u_32(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Error1.e = pre_e;
      wireObj.kind.Error1.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_error_twin_rust_async(
      CustomErrorTwinRustAsync apiObj,
      wire_cst_custom_error_twin_rust_async wireObj) {
    if (apiObj is CustomErrorTwinRustAsync_Error0) {
      var pre_e = cst_encode_String(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.Error0.e = pre_e;
      wireObj.kind.Error0.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomErrorTwinRustAsync_Error1) {
      var pre_e = cst_encode_u_32(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Error1.e = pre_e;
      wireObj.kind.Error1.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_error_twin_rust_async_sse(
      CustomErrorTwinRustAsyncSse apiObj,
      wire_cst_custom_error_twin_rust_async_sse wireObj) {
    if (apiObj is CustomErrorTwinRustAsyncSse_Error0) {
      var pre_e = cst_encode_String(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.Error0.e = pre_e;
      wireObj.kind.Error0.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomErrorTwinRustAsyncSse_Error1) {
      var pre_e = cst_encode_u_32(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Error1.e = pre_e;
      wireObj.kind.Error1.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_error_twin_sse(
      CustomErrorTwinSse apiObj, wire_cst_custom_error_twin_sse wireObj) {
    if (apiObj is CustomErrorTwinSse_Error0) {
      var pre_e = cst_encode_String(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.Error0.e = pre_e;
      wireObj.kind.Error0.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomErrorTwinSse_Error1) {
      var pre_e = cst_encode_u_32(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Error1.e = pre_e;
      wireObj.kind.Error1.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_error_twin_sync(
      CustomErrorTwinSync apiObj, wire_cst_custom_error_twin_sync wireObj) {
    if (apiObj is CustomErrorTwinSync_Error0) {
      var pre_e = cst_encode_String(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.Error0.e = pre_e;
      wireObj.kind.Error0.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomErrorTwinSync_Error1) {
      var pre_e = cst_encode_u_32(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Error1.e = pre_e;
      wireObj.kind.Error1.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_error_twin_sync_sse(
      CustomErrorTwinSyncSse apiObj,
      wire_cst_custom_error_twin_sync_sse wireObj) {
    if (apiObj is CustomErrorTwinSyncSse_Error0) {
      var pre_e = cst_encode_String(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 0;
      wireObj.kind.Error0.e = pre_e;
      wireObj.kind.Error0.backtrace = pre_backtrace;
      return;
    }
    if (apiObj is CustomErrorTwinSyncSse_Error1) {
      var pre_e = cst_encode_u_32(apiObj.e);
      var pre_backtrace = cst_encode_Backtrace(apiObj.backtrace);
      wireObj.tag = 1;
      wireObj.kind.Error1.e = pre_e;
      wireObj.kind.Error1.backtrace = pre_backtrace;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_1_twin_normal(
      CustomNestedError1TwinNormal apiObj,
      wire_cst_custom_nested_error_1_twin_normal wireObj) {
    if (apiObj is CustomNestedError1TwinNormal_CustomNested1) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested1.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError1TwinNormal_ErrorNested) {
      var pre_field0 = cst_encode_box_autoadd_custom_nested_error_2_twin_normal(
          apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.ErrorNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_1_twin_rust_async(
      CustomNestedError1TwinRustAsync apiObj,
      wire_cst_custom_nested_error_1_twin_rust_async wireObj) {
    if (apiObj is CustomNestedError1TwinRustAsync_CustomNested1) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested1.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError1TwinRustAsync_ErrorNested) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_2_twin_rust_async(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.ErrorNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_1_twin_rust_async_sse(
      CustomNestedError1TwinRustAsyncSse apiObj,
      wire_cst_custom_nested_error_1_twin_rust_async_sse wireObj) {
    if (apiObj is CustomNestedError1TwinRustAsyncSse_CustomNested1) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested1.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError1TwinRustAsyncSse_ErrorNested) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.ErrorNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_1_twin_sse(
      CustomNestedError1TwinSse apiObj,
      wire_cst_custom_nested_error_1_twin_sse wireObj) {
    if (apiObj is CustomNestedError1TwinSse_CustomNested1) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested1.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError1TwinSse_ErrorNested) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_2_twin_sse(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.ErrorNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_1_twin_sync(
      CustomNestedError1TwinSync apiObj,
      wire_cst_custom_nested_error_1_twin_sync wireObj) {
    if (apiObj is CustomNestedError1TwinSync_CustomNested1) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested1.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError1TwinSync_ErrorNested) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_2_twin_sync(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.ErrorNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_1_twin_sync_sse(
      CustomNestedError1TwinSyncSse apiObj,
      wire_cst_custom_nested_error_1_twin_sync_sse wireObj) {
    if (apiObj is CustomNestedError1TwinSyncSse_CustomNested1) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested1.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError1TwinSyncSse_ErrorNested) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_2_twin_sync_sse(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.ErrorNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal apiObj,
      wire_cst_custom_nested_error_2_twin_normal wireObj) {
    if (apiObj is CustomNestedError2TwinNormal_CustomNested2) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested2.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError2TwinNormal_CustomNested2Number) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.CustomNested2Number.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync apiObj,
      wire_cst_custom_nested_error_2_twin_rust_async wireObj) {
    if (apiObj is CustomNestedError2TwinRustAsync_CustomNested2) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested2.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError2TwinRustAsync_CustomNested2Number) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.CustomNested2Number.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_2_twin_rust_async_sse(
      CustomNestedError2TwinRustAsyncSse apiObj,
      wire_cst_custom_nested_error_2_twin_rust_async_sse wireObj) {
    if (apiObj is CustomNestedError2TwinRustAsyncSse_CustomNested2) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested2.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError2TwinRustAsyncSse_CustomNested2Number) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.CustomNested2Number.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_2_twin_sse(
      CustomNestedError2TwinSse apiObj,
      wire_cst_custom_nested_error_2_twin_sse wireObj) {
    if (apiObj is CustomNestedError2TwinSse_CustomNested2) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested2.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError2TwinSse_CustomNested2Number) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.CustomNested2Number.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync apiObj,
      wire_cst_custom_nested_error_2_twin_sync wireObj) {
    if (apiObj is CustomNestedError2TwinSync_CustomNested2) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested2.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError2TwinSync_CustomNested2Number) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.CustomNested2Number.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_2_twin_sync_sse(
      CustomNestedError2TwinSyncSse apiObj,
      wire_cst_custom_nested_error_2_twin_sync_sse wireObj) {
    if (apiObj is CustomNestedError2TwinSyncSse_CustomNested2) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.CustomNested2.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedError2TwinSyncSse_CustomNested2Number) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.CustomNested2Number.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal apiObj,
      wire_cst_custom_nested_error_inner_twin_normal wireObj) {
    if (apiObj is CustomNestedErrorInnerTwinNormal_Three) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Three.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorInnerTwinNormal_Four) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Four.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_inner_twin_rust_async(
      CustomNestedErrorInnerTwinRustAsync apiObj,
      wire_cst_custom_nested_error_inner_twin_rust_async wireObj) {
    if (apiObj is CustomNestedErrorInnerTwinRustAsync_Three) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Three.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorInnerTwinRustAsync_Four) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Four.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_inner_twin_rust_async_sse(
      CustomNestedErrorInnerTwinRustAsyncSse apiObj,
      wire_cst_custom_nested_error_inner_twin_rust_async_sse wireObj) {
    if (apiObj is CustomNestedErrorInnerTwinRustAsyncSse_Three) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Three.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorInnerTwinRustAsyncSse_Four) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Four.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_inner_twin_sse(
      CustomNestedErrorInnerTwinSse apiObj,
      wire_cst_custom_nested_error_inner_twin_sse wireObj) {
    if (apiObj is CustomNestedErrorInnerTwinSse_Three) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Three.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorInnerTwinSse_Four) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Four.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync apiObj,
      wire_cst_custom_nested_error_inner_twin_sync wireObj) {
    if (apiObj is CustomNestedErrorInnerTwinSync_Three) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Three.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorInnerTwinSync_Four) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Four.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_inner_twin_sync_sse(
      CustomNestedErrorInnerTwinSyncSse apiObj,
      wire_cst_custom_nested_error_inner_twin_sync_sse wireObj) {
    if (apiObj is CustomNestedErrorInnerTwinSyncSse_Three) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Three.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorInnerTwinSyncSse_Four) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Four.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal apiObj,
      wire_cst_custom_nested_error_outer_twin_normal wireObj) {
    if (apiObj is CustomNestedErrorOuterTwinNormal_One) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.One.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorOuterTwinNormal_Two) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_inner_twin_normal(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Two.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_outer_twin_rust_async(
      CustomNestedErrorOuterTwinRustAsync apiObj,
      wire_cst_custom_nested_error_outer_twin_rust_async wireObj) {
    if (apiObj is CustomNestedErrorOuterTwinRustAsync_One) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.One.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorOuterTwinRustAsync_Two) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_inner_twin_rust_async(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Two.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_outer_twin_rust_async_sse(
      CustomNestedErrorOuterTwinRustAsyncSse apiObj,
      wire_cst_custom_nested_error_outer_twin_rust_async_sse wireObj) {
    if (apiObj is CustomNestedErrorOuterTwinRustAsyncSse_One) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.One.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorOuterTwinRustAsyncSse_Two) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Two.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_outer_twin_sse(
      CustomNestedErrorOuterTwinSse apiObj,
      wire_cst_custom_nested_error_outer_twin_sse wireObj) {
    if (apiObj is CustomNestedErrorOuterTwinSse_One) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.One.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorOuterTwinSse_Two) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_inner_twin_sse(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Two.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync apiObj,
      wire_cst_custom_nested_error_outer_twin_sync wireObj) {
    if (apiObj is CustomNestedErrorOuterTwinSync_One) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.One.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorOuterTwinSync_Two) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_inner_twin_sync(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Two.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_nested_error_outer_twin_sync_sse(
      CustomNestedErrorOuterTwinSyncSse apiObj,
      wire_cst_custom_nested_error_outer_twin_sync_sse wireObj) {
    if (apiObj is CustomNestedErrorOuterTwinSyncSse_One) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.One.field0 = pre_field0;
      return;
    }
    if (apiObj is CustomNestedErrorOuterTwinSyncSse_Two) {
      var pre_field0 =
          cst_encode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
              apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Two.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_another_twin_normal(
      CustomStructErrorAnotherTwinNormal apiObj,
      wire_cst_custom_struct_error_another_twin_normal wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_another_twin_rust_async(
      CustomStructErrorAnotherTwinRustAsync apiObj,
      wire_cst_custom_struct_error_another_twin_rust_async wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_another_twin_rust_async_sse(
      CustomStructErrorAnotherTwinRustAsyncSse apiObj,
      wire_cst_custom_struct_error_another_twin_rust_async_sse wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_another_twin_sse(
      CustomStructErrorAnotherTwinSse apiObj,
      wire_cst_custom_struct_error_another_twin_sse wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_another_twin_sync(
      CustomStructErrorAnotherTwinSync apiObj,
      wire_cst_custom_struct_error_another_twin_sync wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_another_twin_sync_sse(
      CustomStructErrorAnotherTwinSyncSse apiObj,
      wire_cst_custom_struct_error_another_twin_sync_sse wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal apiObj,
      wire_cst_custom_struct_error_twin_normal wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync apiObj,
      wire_cst_custom_struct_error_twin_rust_async wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_twin_rust_async_sse(
      CustomStructErrorTwinRustAsyncSse apiObj,
      wire_cst_custom_struct_error_twin_rust_async_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_twin_sse(
      CustomStructErrorTwinSse apiObj,
      wire_cst_custom_struct_error_twin_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync apiObj,
      wire_cst_custom_struct_error_twin_sync wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_error_twin_sync_sse(
      CustomStructErrorTwinSyncSse apiObj,
      wire_cst_custom_struct_error_twin_sync_sse wireObj) {
    wireObj.a = cst_encode_String(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_twin_normal(
      CustomStructTwinNormal apiObj,
      wire_cst_custom_struct_twin_normal wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync apiObj,
      wire_cst_custom_struct_twin_rust_async wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_twin_rust_async_sse(
      CustomStructTwinRustAsyncSse apiObj,
      wire_cst_custom_struct_twin_rust_async_sse wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_twin_sse(
      CustomStructTwinSse apiObj, wire_cst_custom_struct_twin_sse wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_twin_sync(
      CustomStructTwinSync apiObj, wire_cst_custom_struct_twin_sync wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_custom_struct_twin_sync_sse(
      CustomStructTwinSyncSse apiObj,
      wire_cst_custom_struct_twin_sync_sse wireObj) {
    wireObj.message = cst_encode_String(apiObj.message);
  }

  @protected
  void cst_api_fill_to_wire_customized_twin_normal(
      CustomizedTwinNormal apiObj, wire_cst_customized_twin_normal wireObj) {
    wireObj.final_field = cst_encode_String(apiObj.finalField);
    wireObj.non_final_field = cst_encode_opt_String(apiObj.nonFinalField);
  }

  @protected
  void cst_api_fill_to_wire_customized_twin_rust_async(
      CustomizedTwinRustAsync apiObj,
      wire_cst_customized_twin_rust_async wireObj) {
    wireObj.final_field = cst_encode_String(apiObj.finalField);
    wireObj.non_final_field = cst_encode_opt_String(apiObj.nonFinalField);
  }

  @protected
  void cst_api_fill_to_wire_customized_twin_rust_async_sse(
      CustomizedTwinRustAsyncSse apiObj,
      wire_cst_customized_twin_rust_async_sse wireObj) {
    wireObj.final_field = cst_encode_String(apiObj.finalField);
    wireObj.non_final_field = cst_encode_opt_String(apiObj.nonFinalField);
  }

  @protected
  void cst_api_fill_to_wire_customized_twin_sse(
      CustomizedTwinSse apiObj, wire_cst_customized_twin_sse wireObj) {
    wireObj.final_field = cst_encode_String(apiObj.finalField);
    wireObj.non_final_field = cst_encode_opt_String(apiObj.nonFinalField);
  }

  @protected
  void cst_api_fill_to_wire_customized_twin_sync(
      CustomizedTwinSync apiObj, wire_cst_customized_twin_sync wireObj) {
    wireObj.final_field = cst_encode_String(apiObj.finalField);
    wireObj.non_final_field = cst_encode_opt_String(apiObj.nonFinalField);
  }

  @protected
  void cst_api_fill_to_wire_customized_twin_sync_sse(
      CustomizedTwinSyncSse apiObj, wire_cst_customized_twin_sync_sse wireObj) {
    wireObj.final_field = cst_encode_String(apiObj.finalField);
    wireObj.non_final_field = cst_encode_opt_String(apiObj.nonFinalField);
  }

  @protected
  void cst_api_fill_to_wire_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal apiObj,
      wire_cst_dart_opaque_nested_twin_normal wireObj) {
    wireObj.first = cst_encode_DartOpaque(apiObj.first);
    wireObj.second = cst_encode_DartOpaque(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync apiObj,
      wire_cst_dart_opaque_nested_twin_rust_async wireObj) {
    wireObj.first = cst_encode_DartOpaque(apiObj.first);
    wireObj.second = cst_encode_DartOpaque(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_dart_opaque_nested_twin_rust_async_sse(
      DartOpaqueNestedTwinRustAsyncSse apiObj,
      wire_cst_dart_opaque_nested_twin_rust_async_sse wireObj) {
    wireObj.first = cst_encode_DartOpaque(apiObj.first);
    wireObj.second = cst_encode_DartOpaque(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_dart_opaque_nested_twin_sse(
      DartOpaqueNestedTwinSse apiObj,
      wire_cst_dart_opaque_nested_twin_sse wireObj) {
    wireObj.first = cst_encode_DartOpaque(apiObj.first);
    wireObj.second = cst_encode_DartOpaque(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync apiObj,
      wire_cst_dart_opaque_nested_twin_sync wireObj) {
    wireObj.first = cst_encode_DartOpaque(apiObj.first);
    wireObj.second = cst_encode_DartOpaque(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_dart_opaque_nested_twin_sync_sse(
      DartOpaqueNestedTwinSyncSse apiObj,
      wire_cst_dart_opaque_nested_twin_sync_sse wireObj) {
    wireObj.first = cst_encode_DartOpaque(apiObj.first);
    wireObj.second = cst_encode_DartOpaque(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_demo_struct_for_rust_call_dart_twin_normal(
      DemoStructForRustCallDartTwinNormal apiObj,
      wire_cst_demo_struct_for_rust_call_dart_twin_normal wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
  }

  @protected
  void cst_api_fill_to_wire_demo_struct_for_rust_call_dart_twin_rust_async(
      DemoStructForRustCallDartTwinRustAsync apiObj,
      wire_cst_demo_struct_for_rust_call_dart_twin_rust_async wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
  }

  @protected
  void cst_api_fill_to_wire_demo_struct_for_rust_call_dart_twin_rust_async_sse(
      DemoStructForRustCallDartTwinRustAsyncSse apiObj,
      wire_cst_demo_struct_for_rust_call_dart_twin_rust_async_sse wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
  }

  @protected
  void cst_api_fill_to_wire_demo_struct_for_rust_call_dart_twin_sse(
      DemoStructForRustCallDartTwinSse apiObj,
      wire_cst_demo_struct_for_rust_call_dart_twin_sse wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
  }

  @protected
  void cst_api_fill_to_wire_distance_twin_normal(
      DistanceTwinNormal apiObj, wire_cst_distance_twin_normal wireObj) {
    if (apiObj is DistanceTwinNormal_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is DistanceTwinNormal_Map) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Map.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_distance_twin_rust_async(
      DistanceTwinRustAsync apiObj, wire_cst_distance_twin_rust_async wireObj) {
    if (apiObj is DistanceTwinRustAsync_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is DistanceTwinRustAsync_Map) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Map.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_distance_twin_rust_async_sse(
      DistanceTwinRustAsyncSse apiObj,
      wire_cst_distance_twin_rust_async_sse wireObj) {
    if (apiObj is DistanceTwinRustAsyncSse_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is DistanceTwinRustAsyncSse_Map) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Map.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_distance_twin_sse(
      DistanceTwinSse apiObj, wire_cst_distance_twin_sse wireObj) {
    if (apiObj is DistanceTwinSse_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is DistanceTwinSse_Map) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Map.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_distance_twin_sync(
      DistanceTwinSync apiObj, wire_cst_distance_twin_sync wireObj) {
    if (apiObj is DistanceTwinSync_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is DistanceTwinSync_Map) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Map.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_distance_twin_sync_sse(
      DistanceTwinSyncSse apiObj, wire_cst_distance_twin_sync_sse wireObj) {
    if (apiObj is DistanceTwinSyncSse_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is DistanceTwinSyncSse_Map) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Map.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_element_twin_normal(
      ElementTwinNormal apiObj, wire_cst_element_twin_normal wireObj) {
    wireObj.tag = cst_encode_opt_String(apiObj.tag);
    wireObj.text = cst_encode_opt_String(apiObj.text);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_normal(apiObj.attributes);
    wireObj.children = cst_encode_opt_list_element_twin_normal(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_element_twin_rust_async(
      ElementTwinRustAsync apiObj, wire_cst_element_twin_rust_async wireObj) {
    wireObj.tag = cst_encode_opt_String(apiObj.tag);
    wireObj.text = cst_encode_opt_String(apiObj.text);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_rust_async(apiObj.attributes);
    wireObj.children =
        cst_encode_opt_list_element_twin_rust_async(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse apiObj,
      wire_cst_element_twin_rust_async_sse wireObj) {
    wireObj.tag = cst_encode_opt_String(apiObj.tag);
    wireObj.text = cst_encode_opt_String(apiObj.text);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_rust_async_sse(apiObj.attributes);
    wireObj.children =
        cst_encode_opt_list_element_twin_rust_async_sse(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_element_twin_sse(
      ElementTwinSse apiObj, wire_cst_element_twin_sse wireObj) {
    wireObj.tag = cst_encode_opt_String(apiObj.tag);
    wireObj.text = cst_encode_opt_String(apiObj.text);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_sse(apiObj.attributes);
    wireObj.children = cst_encode_opt_list_element_twin_sse(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_element_twin_sync(
      ElementTwinSync apiObj, wire_cst_element_twin_sync wireObj) {
    wireObj.tag = cst_encode_opt_String(apiObj.tag);
    wireObj.text = cst_encode_opt_String(apiObj.text);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_sync(apiObj.attributes);
    wireObj.children = cst_encode_opt_list_element_twin_sync(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_element_twin_sync_sse(
      ElementTwinSyncSse apiObj, wire_cst_element_twin_sync_sse wireObj) {
    wireObj.tag = cst_encode_opt_String(apiObj.tag);
    wireObj.text = cst_encode_opt_String(apiObj.text);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_sync_sse(apiObj.attributes);
    wireObj.children =
        cst_encode_opt_list_element_twin_sync_sse(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_empty_twin_normal(
      EmptyTwinNormal apiObj, wire_cst_empty_twin_normal wireObj) {}

  @protected
  void cst_api_fill_to_wire_empty_twin_rust_async(
      EmptyTwinRustAsync apiObj, wire_cst_empty_twin_rust_async wireObj) {}

  @protected
  void cst_api_fill_to_wire_empty_twin_rust_async_sse(
      EmptyTwinRustAsyncSse apiObj,
      wire_cst_empty_twin_rust_async_sse wireObj) {}

  @protected
  void cst_api_fill_to_wire_empty_twin_sse(
      EmptyTwinSse apiObj, wire_cst_empty_twin_sse wireObj) {}

  @protected
  void cst_api_fill_to_wire_empty_twin_sync(
      EmptyTwinSync apiObj, wire_cst_empty_twin_sync wireObj) {}

  @protected
  void cst_api_fill_to_wire_empty_twin_sync_sse(
      EmptyTwinSyncSse apiObj, wire_cst_empty_twin_sync_sse wireObj) {}

  @protected
  void cst_api_fill_to_wire_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal apiObj,
      wire_cst_enum_dart_opaque_twin_normal wireObj) {
    if (apiObj is EnumDartOpaqueTwinNormal_Primitive) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumDartOpaqueTwinNormal_Opaque) {
      var pre_field0 = cst_encode_DartOpaque(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync apiObj,
      wire_cst_enum_dart_opaque_twin_rust_async wireObj) {
    if (apiObj is EnumDartOpaqueTwinRustAsync_Primitive) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumDartOpaqueTwinRustAsync_Opaque) {
      var pre_field0 = cst_encode_DartOpaque(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_dart_opaque_twin_rust_async_sse(
      EnumDartOpaqueTwinRustAsyncSse apiObj,
      wire_cst_enum_dart_opaque_twin_rust_async_sse wireObj) {
    if (apiObj is EnumDartOpaqueTwinRustAsyncSse_Primitive) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumDartOpaqueTwinRustAsyncSse_Opaque) {
      var pre_field0 = cst_encode_DartOpaque(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_dart_opaque_twin_sse(
      EnumDartOpaqueTwinSse apiObj,
      wire_cst_enum_dart_opaque_twin_sse wireObj) {
    if (apiObj is EnumDartOpaqueTwinSse_Primitive) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumDartOpaqueTwinSse_Opaque) {
      var pre_field0 = cst_encode_DartOpaque(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync apiObj,
      wire_cst_enum_dart_opaque_twin_sync wireObj) {
    if (apiObj is EnumDartOpaqueTwinSync_Primitive) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumDartOpaqueTwinSync_Opaque) {
      var pre_field0 = cst_encode_DartOpaque(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_dart_opaque_twin_sync_sse(
      EnumDartOpaqueTwinSyncSse apiObj,
      wire_cst_enum_dart_opaque_twin_sync_sse wireObj) {
    if (apiObj is EnumDartOpaqueTwinSyncSse_Primitive) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumDartOpaqueTwinSyncSse_Opaque) {
      var pre_field0 = cst_encode_DartOpaque(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Opaque.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal apiObj, wire_cst_enum_opaque_twin_normal wireObj) {
    if (apiObj is EnumOpaqueTwinNormal_Struct) {
      var pre_field0 = cst_encode_RustOpaque_hide_data(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinNormal_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinNormal_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_box_dynDartDebugTwinNormal(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinNormal_Mutex) {
      var pre_field0 = cst_encode_RustOpaque_MutexHideData(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinNormal_RwLock) {
      var pre_field0 = cst_encode_RustOpaque_RwLockHideData(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync apiObj,
      wire_cst_enum_opaque_twin_rust_async wireObj) {
    if (apiObj is EnumOpaqueTwinRustAsync_Struct) {
      var pre_field0 = cst_encode_RustOpaque_hide_data(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsync_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsync_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_box_dynDartDebugTwinRustAsync(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsync_Mutex) {
      var pre_field0 = cst_encode_RustOpaque_MutexHideData(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsync_RwLock) {
      var pre_field0 = cst_encode_RustOpaque_RwLockHideData(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_rust_async_sse(
      EnumOpaqueTwinRustAsyncSse apiObj,
      wire_cst_enum_opaque_twin_rust_async_sse wireObj) {
    if (apiObj is EnumOpaqueTwinRustAsyncSse_Struct) {
      var pre_field0 = cst_encode_RustOpaque_hide_data(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsyncSse_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsyncSse_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_box_dynDartDebugTwinRustAsyncSse(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsyncSse_Mutex) {
      var pre_field0 = cst_encode_RustOpaque_MutexHideData(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinRustAsyncSse_RwLock) {
      var pre_field0 = cst_encode_RustOpaque_RwLockHideData(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_sse(
      EnumOpaqueTwinSse apiObj, wire_cst_enum_opaque_twin_sse wireObj) {
    if (apiObj is EnumOpaqueTwinSse_Struct) {
      var pre_field0 = cst_encode_RustOpaque_hide_data(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSse_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSse_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_box_dynDartDebugTwinSse(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSse_Mutex) {
      var pre_field0 = cst_encode_RustOpaque_MutexHideData(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSse_RwLock) {
      var pre_field0 = cst_encode_RustOpaque_RwLockHideData(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_sync(
      EnumOpaqueTwinSync apiObj, wire_cst_enum_opaque_twin_sync wireObj) {
    if (apiObj is EnumOpaqueTwinSync_Struct) {
      var pre_field0 = cst_encode_RustOpaque_hide_data(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSync_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSync_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_box_dynDartDebugTwinSync(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSync_Mutex) {
      var pre_field0 = cst_encode_RustOpaque_MutexHideData(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSync_RwLock) {
      var pre_field0 = cst_encode_RustOpaque_RwLockHideData(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_opaque_twin_sync_sse(
      EnumOpaqueTwinSyncSse apiObj,
      wire_cst_enum_opaque_twin_sync_sse wireObj) {
    if (apiObj is EnumOpaqueTwinSyncSse_Struct) {
      var pre_field0 = cst_encode_RustOpaque_hide_data(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSyncSse_Primitive) {
      var pre_field0 = cst_encode_RustOpaque_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Primitive.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSyncSse_TraitObj) {
      var pre_field0 =
          cst_encode_RustOpaque_box_dynDartDebugTwinSyncSse(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.TraitObj.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSyncSse_Mutex) {
      var pre_field0 = cst_encode_RustOpaque_MutexHideData(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Mutex.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumOpaqueTwinSyncSse_RwLock) {
      var pre_field0 = cst_encode_RustOpaque_RwLockHideData(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.RwLock.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal apiObj,
      wire_cst_enum_with_item_mixed_twin_normal wireObj) {
    if (apiObj is EnumWithItemMixedTwinNormal_A) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinNormal_B) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinNormal_C) {
      var pre_c_field = cst_encode_String(apiObj.cField);
      wireObj.tag = 2;
      wireObj.kind.C.c_field = pre_c_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync apiObj,
      wire_cst_enum_with_item_mixed_twin_rust_async wireObj) {
    if (apiObj is EnumWithItemMixedTwinRustAsync_A) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinRustAsync_B) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinRustAsync_C) {
      var pre_c_field = cst_encode_String(apiObj.cField);
      wireObj.tag = 2;
      wireObj.kind.C.c_field = pre_c_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_mixed_twin_rust_async_sse(
      EnumWithItemMixedTwinRustAsyncSse apiObj,
      wire_cst_enum_with_item_mixed_twin_rust_async_sse wireObj) {
    if (apiObj is EnumWithItemMixedTwinRustAsyncSse_A) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinRustAsyncSse_B) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinRustAsyncSse_C) {
      var pre_c_field = cst_encode_String(apiObj.cField);
      wireObj.tag = 2;
      wireObj.kind.C.c_field = pre_c_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_mixed_twin_sse(
      EnumWithItemMixedTwinSse apiObj,
      wire_cst_enum_with_item_mixed_twin_sse wireObj) {
    if (apiObj is EnumWithItemMixedTwinSse_A) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinSse_B) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinSse_C) {
      var pre_c_field = cst_encode_String(apiObj.cField);
      wireObj.tag = 2;
      wireObj.kind.C.c_field = pre_c_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync apiObj,
      wire_cst_enum_with_item_mixed_twin_sync wireObj) {
    if (apiObj is EnumWithItemMixedTwinSync_A) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinSync_B) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinSync_C) {
      var pre_c_field = cst_encode_String(apiObj.cField);
      wireObj.tag = 2;
      wireObj.kind.C.c_field = pre_c_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_mixed_twin_sync_sse(
      EnumWithItemMixedTwinSyncSse apiObj,
      wire_cst_enum_with_item_mixed_twin_sync_sse wireObj) {
    if (apiObj is EnumWithItemMixedTwinSyncSse_A) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinSyncSse_B) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemMixedTwinSyncSse_C) {
      var pre_c_field = cst_encode_String(apiObj.cField);
      wireObj.tag = 2;
      wireObj.kind.C.c_field = pre_c_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal apiObj,
      wire_cst_enum_with_item_struct_twin_normal wireObj) {
    if (apiObj is EnumWithItemStructTwinNormal_A) {
      var pre_a_field = cst_encode_list_prim_u_8(apiObj.aField);
      wireObj.tag = 0;
      wireObj.kind.A.a_field = pre_a_field;
      return;
    }
    if (apiObj is EnumWithItemStructTwinNormal_B) {
      var pre_b_field = cst_encode_list_prim_i_32(apiObj.bField);
      wireObj.tag = 1;
      wireObj.kind.B.b_field = pre_b_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync apiObj,
      wire_cst_enum_with_item_struct_twin_rust_async wireObj) {
    if (apiObj is EnumWithItemStructTwinRustAsync_A) {
      var pre_a_field = cst_encode_list_prim_u_8(apiObj.aField);
      wireObj.tag = 0;
      wireObj.kind.A.a_field = pre_a_field;
      return;
    }
    if (apiObj is EnumWithItemStructTwinRustAsync_B) {
      var pre_b_field = cst_encode_list_prim_i_32(apiObj.bField);
      wireObj.tag = 1;
      wireObj.kind.B.b_field = pre_b_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_struct_twin_rust_async_sse(
      EnumWithItemStructTwinRustAsyncSse apiObj,
      wire_cst_enum_with_item_struct_twin_rust_async_sse wireObj) {
    if (apiObj is EnumWithItemStructTwinRustAsyncSse_A) {
      var pre_a_field = cst_encode_list_prim_u_8(apiObj.aField);
      wireObj.tag = 0;
      wireObj.kind.A.a_field = pre_a_field;
      return;
    }
    if (apiObj is EnumWithItemStructTwinRustAsyncSse_B) {
      var pre_b_field = cst_encode_list_prim_i_32(apiObj.bField);
      wireObj.tag = 1;
      wireObj.kind.B.b_field = pre_b_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_struct_twin_sse(
      EnumWithItemStructTwinSse apiObj,
      wire_cst_enum_with_item_struct_twin_sse wireObj) {
    if (apiObj is EnumWithItemStructTwinSse_A) {
      var pre_a_field = cst_encode_list_prim_u_8(apiObj.aField);
      wireObj.tag = 0;
      wireObj.kind.A.a_field = pre_a_field;
      return;
    }
    if (apiObj is EnumWithItemStructTwinSse_B) {
      var pre_b_field = cst_encode_list_prim_i_32(apiObj.bField);
      wireObj.tag = 1;
      wireObj.kind.B.b_field = pre_b_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync apiObj,
      wire_cst_enum_with_item_struct_twin_sync wireObj) {
    if (apiObj is EnumWithItemStructTwinSync_A) {
      var pre_a_field = cst_encode_list_prim_u_8(apiObj.aField);
      wireObj.tag = 0;
      wireObj.kind.A.a_field = pre_a_field;
      return;
    }
    if (apiObj is EnumWithItemStructTwinSync_B) {
      var pre_b_field = cst_encode_list_prim_i_32(apiObj.bField);
      wireObj.tag = 1;
      wireObj.kind.B.b_field = pre_b_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_struct_twin_sync_sse(
      EnumWithItemStructTwinSyncSse apiObj,
      wire_cst_enum_with_item_struct_twin_sync_sse wireObj) {
    if (apiObj is EnumWithItemStructTwinSyncSse_A) {
      var pre_a_field = cst_encode_list_prim_u_8(apiObj.aField);
      wireObj.tag = 0;
      wireObj.kind.A.a_field = pre_a_field;
      return;
    }
    if (apiObj is EnumWithItemStructTwinSyncSse_B) {
      var pre_b_field = cst_encode_list_prim_i_32(apiObj.bField);
      wireObj.tag = 1;
      wireObj.kind.B.b_field = pre_b_field;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal apiObj,
      wire_cst_enum_with_item_tuple_twin_normal wireObj) {
    if (apiObj is EnumWithItemTupleTwinNormal_A) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemTupleTwinNormal_B) {
      var pre_field0 = cst_encode_list_prim_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync apiObj,
      wire_cst_enum_with_item_tuple_twin_rust_async wireObj) {
    if (apiObj is EnumWithItemTupleTwinRustAsync_A) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemTupleTwinRustAsync_B) {
      var pre_field0 = cst_encode_list_prim_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_tuple_twin_rust_async_sse(
      EnumWithItemTupleTwinRustAsyncSse apiObj,
      wire_cst_enum_with_item_tuple_twin_rust_async_sse wireObj) {
    if (apiObj is EnumWithItemTupleTwinRustAsyncSse_A) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemTupleTwinRustAsyncSse_B) {
      var pre_field0 = cst_encode_list_prim_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_tuple_twin_sse(
      EnumWithItemTupleTwinSse apiObj,
      wire_cst_enum_with_item_tuple_twin_sse wireObj) {
    if (apiObj is EnumWithItemTupleTwinSse_A) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemTupleTwinSse_B) {
      var pre_field0 = cst_encode_list_prim_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync apiObj,
      wire_cst_enum_with_item_tuple_twin_sync wireObj) {
    if (apiObj is EnumWithItemTupleTwinSync_A) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemTupleTwinSync_B) {
      var pre_field0 = cst_encode_list_prim_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_enum_with_item_tuple_twin_sync_sse(
      EnumWithItemTupleTwinSyncSse apiObj,
      wire_cst_enum_with_item_tuple_twin_sync_sse wireObj) {
    if (apiObj is EnumWithItemTupleTwinSyncSse_A) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.A.field0 = pre_field0;
      return;
    }
    if (apiObj is EnumWithItemTupleTwinSyncSse_B) {
      var pre_field0 = cst_encode_list_prim_i_32(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.B.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_event_twin_normal(
      EventTwinNormal apiObj, wire_cst_event_twin_normal wireObj) {
    wireObj.address = cst_encode_String(apiObj.address);
    wireObj.payload = cst_encode_String(apiObj.payload);
  }

  @protected
  void cst_api_fill_to_wire_event_twin_rust_async(
      EventTwinRustAsync apiObj, wire_cst_event_twin_rust_async wireObj) {
    wireObj.address = cst_encode_String(apiObj.address);
    wireObj.payload = cst_encode_String(apiObj.payload);
  }

  @protected
  void cst_api_fill_to_wire_event_twin_rust_async_sse(
      EventTwinRustAsyncSse apiObj,
      wire_cst_event_twin_rust_async_sse wireObj) {
    wireObj.address = cst_encode_String(apiObj.address);
    wireObj.payload = cst_encode_String(apiObj.payload);
  }

  @protected
  void cst_api_fill_to_wire_event_twin_sse(
      EventTwinSse apiObj, wire_cst_event_twin_sse wireObj) {
    wireObj.address = cst_encode_String(apiObj.address);
    wireObj.payload = cst_encode_String(apiObj.payload);
  }

  @protected
  void cst_api_fill_to_wire_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal apiObj,
      wire_cst_exotic_optionals_twin_normal wireObj) {
    wireObj.int32 = cst_encode_opt_box_autoadd_i_32(apiObj.int32);
    wireObj.int64 = cst_encode_opt_box_autoadd_i_64(apiObj.int64);
    wireObj.float64 = cst_encode_opt_box_autoadd_f_64(apiObj.float64);
    wireObj.boolean = cst_encode_opt_box_autoadd_bool(apiObj.boolean);
    wireObj.zerocopy = cst_encode_opt_list_prim_u_8(apiObj.zerocopy);
    wireObj.int8list = cst_encode_opt_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_opt_list_prim_u_8(apiObj.uint8List);
    wireObj.int32list = cst_encode_opt_list_prim_i_32(apiObj.int32List);
    wireObj.float32list = cst_encode_opt_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_opt_list_prim_f_64(apiObj.float64List);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_normal(apiObj.attributes);
    wireObj.attributes_nullable =
        cst_encode_list_opt_box_autoadd_attribute_twin_normal(
            apiObj.attributesNullable);
    wireObj.nullable_attributes =
        cst_encode_opt_list_opt_box_autoadd_attribute_twin_normal(
            apiObj.nullableAttributes);
    wireObj.newtypeint =
        cst_encode_opt_box_autoadd_new_type_int_twin_normal(apiObj.newtypeint);
  }

  @protected
  void cst_api_fill_to_wire_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync apiObj,
      wire_cst_exotic_optionals_twin_rust_async wireObj) {
    wireObj.int32 = cst_encode_opt_box_autoadd_i_32(apiObj.int32);
    wireObj.int64 = cst_encode_opt_box_autoadd_i_64(apiObj.int64);
    wireObj.float64 = cst_encode_opt_box_autoadd_f_64(apiObj.float64);
    wireObj.boolean = cst_encode_opt_box_autoadd_bool(apiObj.boolean);
    wireObj.zerocopy = cst_encode_opt_list_prim_u_8(apiObj.zerocopy);
    wireObj.int8list = cst_encode_opt_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_opt_list_prim_u_8(apiObj.uint8List);
    wireObj.int32list = cst_encode_opt_list_prim_i_32(apiObj.int32List);
    wireObj.float32list = cst_encode_opt_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_opt_list_prim_f_64(apiObj.float64List);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_rust_async(apiObj.attributes);
    wireObj.attributes_nullable =
        cst_encode_list_opt_box_autoadd_attribute_twin_rust_async(
            apiObj.attributesNullable);
    wireObj.nullable_attributes =
        cst_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
            apiObj.nullableAttributes);
    wireObj.newtypeint =
        cst_encode_opt_box_autoadd_new_type_int_twin_rust_async(
            apiObj.newtypeint);
  }

  @protected
  void cst_api_fill_to_wire_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse apiObj,
      wire_cst_exotic_optionals_twin_rust_async_sse wireObj) {
    wireObj.int32 = cst_encode_opt_box_autoadd_i_32(apiObj.int32);
    wireObj.int64 = cst_encode_opt_box_autoadd_i_64(apiObj.int64);
    wireObj.float64 = cst_encode_opt_box_autoadd_f_64(apiObj.float64);
    wireObj.boolean = cst_encode_opt_box_autoadd_bool(apiObj.boolean);
    wireObj.zerocopy = cst_encode_opt_list_prim_u_8(apiObj.zerocopy);
    wireObj.int8list = cst_encode_opt_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_opt_list_prim_u_8(apiObj.uint8List);
    wireObj.int32list = cst_encode_opt_list_prim_i_32(apiObj.int32List);
    wireObj.float32list = cst_encode_opt_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_opt_list_prim_f_64(apiObj.float64List);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_rust_async_sse(apiObj.attributes);
    wireObj.attributes_nullable =
        cst_encode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
            apiObj.attributesNullable);
    wireObj.nullable_attributes =
        cst_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
            apiObj.nullableAttributes);
    wireObj.newtypeint =
        cst_encode_opt_box_autoadd_new_type_int_twin_rust_async_sse(
            apiObj.newtypeint);
  }

  @protected
  void cst_api_fill_to_wire_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse apiObj,
      wire_cst_exotic_optionals_twin_sse wireObj) {
    wireObj.int32 = cst_encode_opt_box_autoadd_i_32(apiObj.int32);
    wireObj.int64 = cst_encode_opt_box_autoadd_i_64(apiObj.int64);
    wireObj.float64 = cst_encode_opt_box_autoadd_f_64(apiObj.float64);
    wireObj.boolean = cst_encode_opt_box_autoadd_bool(apiObj.boolean);
    wireObj.zerocopy = cst_encode_opt_list_prim_u_8(apiObj.zerocopy);
    wireObj.int8list = cst_encode_opt_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_opt_list_prim_u_8(apiObj.uint8List);
    wireObj.int32list = cst_encode_opt_list_prim_i_32(apiObj.int32List);
    wireObj.float32list = cst_encode_opt_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_opt_list_prim_f_64(apiObj.float64List);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_sse(apiObj.attributes);
    wireObj.attributes_nullable =
        cst_encode_list_opt_box_autoadd_attribute_twin_sse(
            apiObj.attributesNullable);
    wireObj.nullable_attributes =
        cst_encode_opt_list_opt_box_autoadd_attribute_twin_sse(
            apiObj.nullableAttributes);
    wireObj.newtypeint =
        cst_encode_opt_box_autoadd_new_type_int_twin_sse(apiObj.newtypeint);
  }

  @protected
  void cst_api_fill_to_wire_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync apiObj,
      wire_cst_exotic_optionals_twin_sync wireObj) {
    wireObj.int32 = cst_encode_opt_box_autoadd_i_32(apiObj.int32);
    wireObj.int64 = cst_encode_opt_box_autoadd_i_64(apiObj.int64);
    wireObj.float64 = cst_encode_opt_box_autoadd_f_64(apiObj.float64);
    wireObj.boolean = cst_encode_opt_box_autoadd_bool(apiObj.boolean);
    wireObj.zerocopy = cst_encode_opt_list_prim_u_8(apiObj.zerocopy);
    wireObj.int8list = cst_encode_opt_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_opt_list_prim_u_8(apiObj.uint8List);
    wireObj.int32list = cst_encode_opt_list_prim_i_32(apiObj.int32List);
    wireObj.float32list = cst_encode_opt_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_opt_list_prim_f_64(apiObj.float64List);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_sync(apiObj.attributes);
    wireObj.attributes_nullable =
        cst_encode_list_opt_box_autoadd_attribute_twin_sync(
            apiObj.attributesNullable);
    wireObj.nullable_attributes =
        cst_encode_opt_list_opt_box_autoadd_attribute_twin_sync(
            apiObj.nullableAttributes);
    wireObj.newtypeint =
        cst_encode_opt_box_autoadd_new_type_int_twin_sync(apiObj.newtypeint);
  }

  @protected
  void cst_api_fill_to_wire_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse apiObj,
      wire_cst_exotic_optionals_twin_sync_sse wireObj) {
    wireObj.int32 = cst_encode_opt_box_autoadd_i_32(apiObj.int32);
    wireObj.int64 = cst_encode_opt_box_autoadd_i_64(apiObj.int64);
    wireObj.float64 = cst_encode_opt_box_autoadd_f_64(apiObj.float64);
    wireObj.boolean = cst_encode_opt_box_autoadd_bool(apiObj.boolean);
    wireObj.zerocopy = cst_encode_opt_list_prim_u_8(apiObj.zerocopy);
    wireObj.int8list = cst_encode_opt_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_opt_list_prim_u_8(apiObj.uint8List);
    wireObj.int32list = cst_encode_opt_list_prim_i_32(apiObj.int32List);
    wireObj.float32list = cst_encode_opt_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_opt_list_prim_f_64(apiObj.float64List);
    wireObj.attributes =
        cst_encode_opt_list_attribute_twin_sync_sse(apiObj.attributes);
    wireObj.attributes_nullable =
        cst_encode_list_opt_box_autoadd_attribute_twin_sync_sse(
            apiObj.attributesNullable);
    wireObj.nullable_attributes =
        cst_encode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(
            apiObj.nullableAttributes);
    wireObj.newtypeint = cst_encode_opt_box_autoadd_new_type_int_twin_sync_sse(
        apiObj.newtypeint);
  }

  @protected
  void cst_api_fill_to_wire_feature_chrono_twin_normal(
      FeatureChronoTwinNormal apiObj,
      wire_cst_feature_chrono_twin_normal wireObj) {
    wireObj.utc = cst_encode_Chrono_Utc(apiObj.utc);
    wireObj.local = cst_encode_Chrono_Local(apiObj.local);
    wireObj.duration = cst_encode_Chrono_Duration(apiObj.duration);
    wireObj.naive = cst_encode_Chrono_Naive(apiObj.naive);
  }

  @protected
  void cst_api_fill_to_wire_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync apiObj,
      wire_cst_feature_chrono_twin_rust_async wireObj) {
    wireObj.utc = cst_encode_Chrono_Utc(apiObj.utc);
    wireObj.local = cst_encode_Chrono_Local(apiObj.local);
    wireObj.duration = cst_encode_Chrono_Duration(apiObj.duration);
    wireObj.naive = cst_encode_Chrono_Naive(apiObj.naive);
  }

  @protected
  void cst_api_fill_to_wire_feature_chrono_twin_sync(
      FeatureChronoTwinSync apiObj, wire_cst_feature_chrono_twin_sync wireObj) {
    wireObj.utc = cst_encode_Chrono_Utc(apiObj.utc);
    wireObj.local = cst_encode_Chrono_Local(apiObj.local);
    wireObj.duration = cst_encode_Chrono_Duration(apiObj.duration);
    wireObj.naive = cst_encode_Chrono_Naive(apiObj.naive);
  }

  @protected
  void cst_api_fill_to_wire_feature_uuid_twin_normal(
      FeatureUuidTwinNormal apiObj, wire_cst_feature_uuid_twin_normal wireObj) {
    wireObj.one = cst_encode_Uuid(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync apiObj,
      wire_cst_feature_uuid_twin_rust_async wireObj) {
    wireObj.one = cst_encode_Uuid(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_feature_uuid_twin_sync(
      FeatureUuidTwinSync apiObj, wire_cst_feature_uuid_twin_sync wireObj) {
    wireObj.one = cst_encode_Uuid(apiObj.one);
  }

  @protected
  void cst_api_fill_to_wire_feed_id_twin_normal(
      FeedIdTwinNormal apiObj, wire_cst_feed_id_twin_normal wireObj) {
    wireObj.field0 = cst_encode_u_8_array_8(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_feed_id_twin_rust_async(
      FeedIdTwinRustAsync apiObj, wire_cst_feed_id_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_u_8_array_8(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse apiObj,
      wire_cst_feed_id_twin_rust_async_sse wireObj) {
    wireObj.field0 = cst_encode_u_8_array_8(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_feed_id_twin_sse(
      FeedIdTwinSse apiObj, wire_cst_feed_id_twin_sse wireObj) {
    wireObj.field0 = cst_encode_u_8_array_8(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_feed_id_twin_sync(
      FeedIdTwinSync apiObj, wire_cst_feed_id_twin_sync wireObj) {
    wireObj.field0 = cst_encode_u_8_array_8(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse apiObj, wire_cst_feed_id_twin_sync_sse wireObj) {
    wireObj.field0 = cst_encode_u_8_array_8(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal apiObj, wire_cst_kitchen_sink_twin_normal wireObj) {
    if (apiObj is KitchenSinkTwinNormal_Empty) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is KitchenSinkTwinNormal_Primitives) {
      var pre_int32 = cst_encode_i_32(apiObj.int32);
      var pre_float64 = cst_encode_f_64(apiObj.float64);
      var pre_boolean = cst_encode_bool(apiObj.boolean);
      wireObj.tag = 1;
      wireObj.kind.Primitives.int32 = pre_int32;
      wireObj.kind.Primitives.float64 = pre_float64;
      wireObj.kind.Primitives.boolean = pre_boolean;
      return;
    }
    if (apiObj is KitchenSinkTwinNormal_Nested) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      var pre_field1 = cst_encode_box_kitchen_sink_twin_normal(apiObj.field1);
      wireObj.tag = 2;
      wireObj.kind.Nested.field0 = pre_field0;
      wireObj.kind.Nested.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinNormal_Optional) {
      var pre_field0 = cst_encode_opt_box_autoadd_i_32(apiObj.field0);
      var pre_field1 = cst_encode_opt_box_autoadd_i_32(apiObj.field1);
      wireObj.tag = 3;
      wireObj.kind.Optional.field0 = pre_field0;
      wireObj.kind.Optional.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinNormal_Buffer) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Buffer.field0 = pre_field0;
      return;
    }
    if (apiObj is KitchenSinkTwinNormal_Enums) {
      var pre_field0 = cst_encode_weekdays_twin_normal(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Enums.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync apiObj,
      wire_cst_kitchen_sink_twin_rust_async wireObj) {
    if (apiObj is KitchenSinkTwinRustAsync_Empty) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsync_Primitives) {
      var pre_int32 = cst_encode_i_32(apiObj.int32);
      var pre_float64 = cst_encode_f_64(apiObj.float64);
      var pre_boolean = cst_encode_bool(apiObj.boolean);
      wireObj.tag = 1;
      wireObj.kind.Primitives.int32 = pre_int32;
      wireObj.kind.Primitives.float64 = pre_float64;
      wireObj.kind.Primitives.boolean = pre_boolean;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsync_Nested) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      var pre_field1 =
          cst_encode_box_kitchen_sink_twin_rust_async(apiObj.field1);
      wireObj.tag = 2;
      wireObj.kind.Nested.field0 = pre_field0;
      wireObj.kind.Nested.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsync_Optional) {
      var pre_field0 = cst_encode_opt_box_autoadd_i_32(apiObj.field0);
      var pre_field1 = cst_encode_opt_box_autoadd_i_32(apiObj.field1);
      wireObj.tag = 3;
      wireObj.kind.Optional.field0 = pre_field0;
      wireObj.kind.Optional.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsync_Buffer) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Buffer.field0 = pre_field0;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsync_Enums) {
      var pre_field0 = cst_encode_weekdays_twin_rust_async(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Enums.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse apiObj,
      wire_cst_kitchen_sink_twin_rust_async_sse wireObj) {
    if (apiObj is KitchenSinkTwinRustAsyncSse_Empty) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsyncSse_Primitives) {
      var pre_int32 = cst_encode_i_32(apiObj.int32);
      var pre_float64 = cst_encode_f_64(apiObj.float64);
      var pre_boolean = cst_encode_bool(apiObj.boolean);
      wireObj.tag = 1;
      wireObj.kind.Primitives.int32 = pre_int32;
      wireObj.kind.Primitives.float64 = pre_float64;
      wireObj.kind.Primitives.boolean = pre_boolean;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsyncSse_Nested) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      var pre_field1 =
          cst_encode_box_kitchen_sink_twin_rust_async_sse(apiObj.field1);
      wireObj.tag = 2;
      wireObj.kind.Nested.field0 = pre_field0;
      wireObj.kind.Nested.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsyncSse_Optional) {
      var pre_field0 = cst_encode_opt_box_autoadd_i_32(apiObj.field0);
      var pre_field1 = cst_encode_opt_box_autoadd_i_32(apiObj.field1);
      wireObj.tag = 3;
      wireObj.kind.Optional.field0 = pre_field0;
      wireObj.kind.Optional.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsyncSse_Buffer) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Buffer.field0 = pre_field0;
      return;
    }
    if (apiObj is KitchenSinkTwinRustAsyncSse_Enums) {
      var pre_field0 = cst_encode_weekdays_twin_rust_async_sse(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Enums.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_kitchen_sink_twin_sse(
      KitchenSinkTwinSse apiObj, wire_cst_kitchen_sink_twin_sse wireObj) {
    if (apiObj is KitchenSinkTwinSse_Empty) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is KitchenSinkTwinSse_Primitives) {
      var pre_int32 = cst_encode_i_32(apiObj.int32);
      var pre_float64 = cst_encode_f_64(apiObj.float64);
      var pre_boolean = cst_encode_bool(apiObj.boolean);
      wireObj.tag = 1;
      wireObj.kind.Primitives.int32 = pre_int32;
      wireObj.kind.Primitives.float64 = pre_float64;
      wireObj.kind.Primitives.boolean = pre_boolean;
      return;
    }
    if (apiObj is KitchenSinkTwinSse_Nested) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      var pre_field1 = cst_encode_box_kitchen_sink_twin_sse(apiObj.field1);
      wireObj.tag = 2;
      wireObj.kind.Nested.field0 = pre_field0;
      wireObj.kind.Nested.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinSse_Optional) {
      var pre_field0 = cst_encode_opt_box_autoadd_i_32(apiObj.field0);
      var pre_field1 = cst_encode_opt_box_autoadd_i_32(apiObj.field1);
      wireObj.tag = 3;
      wireObj.kind.Optional.field0 = pre_field0;
      wireObj.kind.Optional.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinSse_Buffer) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Buffer.field0 = pre_field0;
      return;
    }
    if (apiObj is KitchenSinkTwinSse_Enums) {
      var pre_field0 = cst_encode_weekdays_twin_sse(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Enums.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_kitchen_sink_twin_sync(
      KitchenSinkTwinSync apiObj, wire_cst_kitchen_sink_twin_sync wireObj) {
    if (apiObj is KitchenSinkTwinSync_Empty) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is KitchenSinkTwinSync_Primitives) {
      var pre_int32 = cst_encode_i_32(apiObj.int32);
      var pre_float64 = cst_encode_f_64(apiObj.float64);
      var pre_boolean = cst_encode_bool(apiObj.boolean);
      wireObj.tag = 1;
      wireObj.kind.Primitives.int32 = pre_int32;
      wireObj.kind.Primitives.float64 = pre_float64;
      wireObj.kind.Primitives.boolean = pre_boolean;
      return;
    }
    if (apiObj is KitchenSinkTwinSync_Nested) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      var pre_field1 = cst_encode_box_kitchen_sink_twin_sync(apiObj.field1);
      wireObj.tag = 2;
      wireObj.kind.Nested.field0 = pre_field0;
      wireObj.kind.Nested.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinSync_Optional) {
      var pre_field0 = cst_encode_opt_box_autoadd_i_32(apiObj.field0);
      var pre_field1 = cst_encode_opt_box_autoadd_i_32(apiObj.field1);
      wireObj.tag = 3;
      wireObj.kind.Optional.field0 = pre_field0;
      wireObj.kind.Optional.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinSync_Buffer) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Buffer.field0 = pre_field0;
      return;
    }
    if (apiObj is KitchenSinkTwinSync_Enums) {
      var pre_field0 = cst_encode_weekdays_twin_sync(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Enums.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse apiObj,
      wire_cst_kitchen_sink_twin_sync_sse wireObj) {
    if (apiObj is KitchenSinkTwinSyncSse_Empty) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is KitchenSinkTwinSyncSse_Primitives) {
      var pre_int32 = cst_encode_i_32(apiObj.int32);
      var pre_float64 = cst_encode_f_64(apiObj.float64);
      var pre_boolean = cst_encode_bool(apiObj.boolean);
      wireObj.tag = 1;
      wireObj.kind.Primitives.int32 = pre_int32;
      wireObj.kind.Primitives.float64 = pre_float64;
      wireObj.kind.Primitives.boolean = pre_boolean;
      return;
    }
    if (apiObj is KitchenSinkTwinSyncSse_Nested) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      var pre_field1 = cst_encode_box_kitchen_sink_twin_sync_sse(apiObj.field1);
      wireObj.tag = 2;
      wireObj.kind.Nested.field0 = pre_field0;
      wireObj.kind.Nested.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinSyncSse_Optional) {
      var pre_field0 = cst_encode_opt_box_autoadd_i_32(apiObj.field0);
      var pre_field1 = cst_encode_opt_box_autoadd_i_32(apiObj.field1);
      wireObj.tag = 3;
      wireObj.kind.Optional.field0 = pre_field0;
      wireObj.kind.Optional.field1 = pre_field1;
      return;
    }
    if (apiObj is KitchenSinkTwinSyncSse_Buffer) {
      var pre_field0 = cst_encode_list_prim_u_8(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Buffer.field0 = pre_field0;
      return;
    }
    if (apiObj is KitchenSinkTwinSyncSse_Enums) {
      var pre_field0 = cst_encode_weekdays_twin_sync_sse(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Enums.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored apiObj,
      wire_cst_list_of_nested_raw_string_mirrored wireObj) {
    wireObj.raw = cst_encode_list_nested_raw_string_mirrored(apiObj.raw);
  }

  @protected
  void cst_api_fill_to_wire_log_2_twin_normal(
      Log2TwinNormal apiObj, wire_cst_log_2_twin_normal wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_2_twin_rust_async(
      Log2TwinRustAsync apiObj, wire_cst_log_2_twin_rust_async wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_2_twin_rust_async_sse(
      Log2TwinRustAsyncSse apiObj, wire_cst_log_2_twin_rust_async_sse wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_2_twin_sse(
      Log2TwinSse apiObj, wire_cst_log_2_twin_sse wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_2_twin_sync(
      Log2TwinSync apiObj, wire_cst_log_2_twin_sync wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_2_twin_sync_sse(
      Log2TwinSyncSse apiObj, wire_cst_log_2_twin_sync_sse wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_twin_normal(
      LogTwinNormal apiObj, wire_cst_log_twin_normal wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_twin_rust_async(
      LogTwinRustAsync apiObj, wire_cst_log_twin_rust_async wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_twin_rust_async_sse(
      LogTwinRustAsyncSse apiObj, wire_cst_log_twin_rust_async_sse wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_log_twin_sse(
      LogTwinSse apiObj, wire_cst_log_twin_sse wireObj) {
    wireObj.key = cst_encode_u_32(apiObj.key);
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_macro_struct(
      MacroStruct apiObj, wire_cst_macro_struct wireObj) {
    wireObj.data = cst_encode_i_32(apiObj.data);
  }

  @protected
  void cst_api_fill_to_wire_measure_twin_normal(
      MeasureTwinNormal apiObj, wire_cst_measure_twin_normal wireObj) {
    if (apiObj is MeasureTwinNormal_Speed) {
      var pre_field0 = cst_encode_box_speed_twin_normal(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Speed.field0 = pre_field0;
      return;
    }
    if (apiObj is MeasureTwinNormal_Distance) {
      var pre_field0 = cst_encode_box_distance_twin_normal(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Distance.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_measure_twin_rust_async(
      MeasureTwinRustAsync apiObj, wire_cst_measure_twin_rust_async wireObj) {
    if (apiObj is MeasureTwinRustAsync_Speed) {
      var pre_field0 = cst_encode_box_speed_twin_rust_async(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Speed.field0 = pre_field0;
      return;
    }
    if (apiObj is MeasureTwinRustAsync_Distance) {
      var pre_field0 = cst_encode_box_distance_twin_rust_async(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Distance.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse apiObj,
      wire_cst_measure_twin_rust_async_sse wireObj) {
    if (apiObj is MeasureTwinRustAsyncSse_Speed) {
      var pre_field0 = cst_encode_box_speed_twin_rust_async_sse(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Speed.field0 = pre_field0;
      return;
    }
    if (apiObj is MeasureTwinRustAsyncSse_Distance) {
      var pre_field0 =
          cst_encode_box_distance_twin_rust_async_sse(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Distance.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_measure_twin_sse(
      MeasureTwinSse apiObj, wire_cst_measure_twin_sse wireObj) {
    if (apiObj is MeasureTwinSse_Speed) {
      var pre_field0 = cst_encode_box_speed_twin_sse(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Speed.field0 = pre_field0;
      return;
    }
    if (apiObj is MeasureTwinSse_Distance) {
      var pre_field0 = cst_encode_box_distance_twin_sse(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Distance.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_measure_twin_sync(
      MeasureTwinSync apiObj, wire_cst_measure_twin_sync wireObj) {
    if (apiObj is MeasureTwinSync_Speed) {
      var pre_field0 = cst_encode_box_speed_twin_sync(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Speed.field0 = pre_field0;
      return;
    }
    if (apiObj is MeasureTwinSync_Distance) {
      var pre_field0 = cst_encode_box_distance_twin_sync(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Distance.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_measure_twin_sync_sse(
      MeasureTwinSyncSse apiObj, wire_cst_measure_twin_sync_sse wireObj) {
    if (apiObj is MeasureTwinSyncSse_Speed) {
      var pre_field0 = cst_encode_box_speed_twin_sync_sse(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Speed.field0 = pre_field0;
      return;
    }
    if (apiObj is MeasureTwinSyncSse_Distance) {
      var pre_field0 = cst_encode_box_distance_twin_sync_sse(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Distance.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_message_id_twin_normal(
      MessageIdTwinNormal apiObj, wire_cst_message_id_twin_normal wireObj) {
    wireObj.field0 = cst_encode_u_8_array_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_message_id_twin_rust_async(
      MessageIdTwinRustAsync apiObj,
      wire_cst_message_id_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_u_8_array_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_message_id_twin_rust_async_sse(
      MessageIdTwinRustAsyncSse apiObj,
      wire_cst_message_id_twin_rust_async_sse wireObj) {
    wireObj.field0 = cst_encode_u_8_array_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_message_id_twin_sse(
      MessageIdTwinSse apiObj, wire_cst_message_id_twin_sse wireObj) {
    wireObj.field0 = cst_encode_u_8_array_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_message_id_twin_sync(
      MessageIdTwinSync apiObj, wire_cst_message_id_twin_sync wireObj) {
    wireObj.field0 = cst_encode_u_8_array_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_message_id_twin_sync_sse(
      MessageIdTwinSyncSse apiObj, wire_cst_message_id_twin_sync_sse wireObj) {
    wireObj.field0 = cst_encode_u_8_array_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_mirror_struct_twin_normal(
      MirrorStructTwinNormal apiObj,
      wire_cst_mirror_struct_twin_normal wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.a, wireObj.a);
    cst_api_fill_to_wire_my_struct(apiObj.b, wireObj.b);
    wireObj.c = cst_encode_list_my_enum(apiObj.c);
    wireObj.d = cst_encode_list_application_settings(apiObj.d);
  }

  @protected
  void cst_api_fill_to_wire_mirror_struct_twin_rust_async(
      MirrorStructTwinRustAsync apiObj,
      wire_cst_mirror_struct_twin_rust_async wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.a, wireObj.a);
    cst_api_fill_to_wire_my_struct(apiObj.b, wireObj.b);
    wireObj.c = cst_encode_list_my_enum(apiObj.c);
    wireObj.d = cst_encode_list_application_settings(apiObj.d);
  }

  @protected
  void cst_api_fill_to_wire_mirror_struct_twin_rust_async_sse(
      MirrorStructTwinRustAsyncSse apiObj,
      wire_cst_mirror_struct_twin_rust_async_sse wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.a, wireObj.a);
    cst_api_fill_to_wire_my_struct(apiObj.b, wireObj.b);
    wireObj.c = cst_encode_list_my_enum(apiObj.c);
    wireObj.d = cst_encode_list_application_settings(apiObj.d);
  }

  @protected
  void cst_api_fill_to_wire_mirror_struct_twin_sse(
      MirrorStructTwinSse apiObj, wire_cst_mirror_struct_twin_sse wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.a, wireObj.a);
    cst_api_fill_to_wire_my_struct(apiObj.b, wireObj.b);
    wireObj.c = cst_encode_list_my_enum(apiObj.c);
    wireObj.d = cst_encode_list_application_settings(apiObj.d);
  }

  @protected
  void cst_api_fill_to_wire_mirror_struct_twin_sync(
      MirrorStructTwinSync apiObj, wire_cst_mirror_struct_twin_sync wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.a, wireObj.a);
    cst_api_fill_to_wire_my_struct(apiObj.b, wireObj.b);
    wireObj.c = cst_encode_list_my_enum(apiObj.c);
    wireObj.d = cst_encode_list_application_settings(apiObj.d);
  }

  @protected
  void cst_api_fill_to_wire_mirror_struct_twin_sync_sse(
      MirrorStructTwinSyncSse apiObj,
      wire_cst_mirror_struct_twin_sync_sse wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.a, wireObj.a);
    cst_api_fill_to_wire_my_struct(apiObj.b, wireObj.b);
    wireObj.c = cst_encode_list_my_enum(apiObj.c);
    wireObj.d = cst_encode_list_application_settings(apiObj.d);
  }

  @protected
  void cst_api_fill_to_wire_more_than_just_one_raw_string_struct_twin_normal(
      MoreThanJustOneRawStringStructTwinNormal apiObj,
      wire_cst_more_than_just_one_raw_string_struct_twin_normal wireObj) {
    wireObj.regular = cst_encode_String(apiObj.regular);
    wireObj.type = cst_encode_String(apiObj.type);
    wireObj.async1 = cst_encode_bool(apiObj.async);
    wireObj.another = cst_encode_String(apiObj.another);
  }

  @protected
  void
      cst_api_fill_to_wire_more_than_just_one_raw_string_struct_twin_rust_async(
          MoreThanJustOneRawStringStructTwinRustAsync apiObj,
          wire_cst_more_than_just_one_raw_string_struct_twin_rust_async
              wireObj) {
    wireObj.regular = cst_encode_String(apiObj.regular);
    wireObj.type = cst_encode_String(apiObj.type);
    wireObj.async1 = cst_encode_bool(apiObj.async);
    wireObj.another = cst_encode_String(apiObj.another);
  }

  @protected
  void
      cst_api_fill_to_wire_more_than_just_one_raw_string_struct_twin_rust_async_sse(
          MoreThanJustOneRawStringStructTwinRustAsyncSse apiObj,
          wire_cst_more_than_just_one_raw_string_struct_twin_rust_async_sse
              wireObj) {
    wireObj.regular = cst_encode_String(apiObj.regular);
    wireObj.type = cst_encode_String(apiObj.type);
    wireObj.async1 = cst_encode_bool(apiObj.async);
    wireObj.another = cst_encode_String(apiObj.another);
  }

  @protected
  void cst_api_fill_to_wire_more_than_just_one_raw_string_struct_twin_sse(
      MoreThanJustOneRawStringStructTwinSse apiObj,
      wire_cst_more_than_just_one_raw_string_struct_twin_sse wireObj) {
    wireObj.regular = cst_encode_String(apiObj.regular);
    wireObj.type = cst_encode_String(apiObj.type);
    wireObj.async1 = cst_encode_bool(apiObj.async);
    wireObj.another = cst_encode_String(apiObj.another);
  }

  @protected
  void cst_api_fill_to_wire_more_than_just_one_raw_string_struct_twin_sync(
      MoreThanJustOneRawStringStructTwinSync apiObj,
      wire_cst_more_than_just_one_raw_string_struct_twin_sync wireObj) {
    wireObj.regular = cst_encode_String(apiObj.regular);
    wireObj.type = cst_encode_String(apiObj.type);
    wireObj.async1 = cst_encode_bool(apiObj.async);
    wireObj.another = cst_encode_String(apiObj.another);
  }

  @protected
  void cst_api_fill_to_wire_more_than_just_one_raw_string_struct_twin_sync_sse(
      MoreThanJustOneRawStringStructTwinSyncSse apiObj,
      wire_cst_more_than_just_one_raw_string_struct_twin_sync_sse wireObj) {
    wireObj.regular = cst_encode_String(apiObj.regular);
    wireObj.type = cst_encode_String(apiObj.type);
    wireObj.async1 = cst_encode_bool(apiObj.async);
    wireObj.another = cst_encode_String(apiObj.another);
  }

  @protected
  void cst_api_fill_to_wire_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal apiObj,
      wire_cst_my_nested_struct_twin_normal wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_normal(
        apiObj.treeNode, wireObj.tree_node);
    wireObj.weekday = cst_encode_weekdays_twin_normal(apiObj.weekday);
  }

  @protected
  void cst_api_fill_to_wire_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync apiObj,
      wire_cst_my_nested_struct_twin_rust_async wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_rust_async(
        apiObj.treeNode, wireObj.tree_node);
    wireObj.weekday = cst_encode_weekdays_twin_rust_async(apiObj.weekday);
  }

  @protected
  void cst_api_fill_to_wire_my_nested_struct_twin_rust_async_sse(
      MyNestedStructTwinRustAsyncSse apiObj,
      wire_cst_my_nested_struct_twin_rust_async_sse wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_rust_async_sse(
        apiObj.treeNode, wireObj.tree_node);
    wireObj.weekday = cst_encode_weekdays_twin_rust_async_sse(apiObj.weekday);
  }

  @protected
  void cst_api_fill_to_wire_my_nested_struct_twin_sse(
      MyNestedStructTwinSse apiObj,
      wire_cst_my_nested_struct_twin_sse wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_sse(
        apiObj.treeNode, wireObj.tree_node);
    wireObj.weekday = cst_encode_weekdays_twin_sse(apiObj.weekday);
  }

  @protected
  void cst_api_fill_to_wire_my_nested_struct_twin_sync(
      MyNestedStructTwinSync apiObj,
      wire_cst_my_nested_struct_twin_sync wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_sync(
        apiObj.treeNode, wireObj.tree_node);
    wireObj.weekday = cst_encode_weekdays_twin_sync(apiObj.weekday);
  }

  @protected
  void cst_api_fill_to_wire_my_nested_struct_twin_sync_sse(
      MyNestedStructTwinSyncSse apiObj,
      wire_cst_my_nested_struct_twin_sync_sse wireObj) {
    cst_api_fill_to_wire_my_tree_node_twin_sync_sse(
        apiObj.treeNode, wireObj.tree_node);
    wireObj.weekday = cst_encode_weekdays_twin_sync_sse(apiObj.weekday);
  }

  @protected
  void cst_api_fill_to_wire_my_size(MySize apiObj, wire_cst_my_size wireObj) {
    wireObj.width = cst_encode_i_32(apiObj.width);
    wireObj.height = cst_encode_i_32(apiObj.height);
  }

  @protected
  void cst_api_fill_to_wire_my_stream_entry_twin_normal(
      MyStreamEntryTwinNormal apiObj,
      wire_cst_my_stream_entry_twin_normal wireObj) {
    wireObj.hello = cst_encode_String(apiObj.hello);
  }

  @protected
  void cst_api_fill_to_wire_my_stream_entry_twin_rust_async(
      MyStreamEntryTwinRustAsync apiObj,
      wire_cst_my_stream_entry_twin_rust_async wireObj) {
    wireObj.hello = cst_encode_String(apiObj.hello);
  }

  @protected
  void cst_api_fill_to_wire_my_stream_entry_twin_rust_async_sse(
      MyStreamEntryTwinRustAsyncSse apiObj,
      wire_cst_my_stream_entry_twin_rust_async_sse wireObj) {
    wireObj.hello = cst_encode_String(apiObj.hello);
  }

  @protected
  void cst_api_fill_to_wire_my_stream_entry_twin_sse(
      MyStreamEntryTwinSse apiObj, wire_cst_my_stream_entry_twin_sse wireObj) {
    wireObj.hello = cst_encode_String(apiObj.hello);
  }

  @protected
  void cst_api_fill_to_wire_my_struct(
      MyStruct apiObj, wire_cst_my_struct wireObj) {
    wireObj.content = cst_encode_bool(apiObj.content);
  }

  @protected
  void cst_api_fill_to_wire_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal apiObj, wire_cst_my_tree_node_twin_normal wireObj) {
    wireObj.value_i32 = cst_encode_i_32(apiObj.valueI32);
    wireObj.value_vec_u8 = cst_encode_list_prim_u_8(apiObj.valueVecU8);
    wireObj.value_boolean = cst_encode_bool(apiObj.valueBoolean);
    wireObj.children =
        cst_encode_list_my_tree_node_twin_normal(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync apiObj,
      wire_cst_my_tree_node_twin_rust_async wireObj) {
    wireObj.value_i32 = cst_encode_i_32(apiObj.valueI32);
    wireObj.value_vec_u8 = cst_encode_list_prim_u_8(apiObj.valueVecU8);
    wireObj.value_boolean = cst_encode_bool(apiObj.valueBoolean);
    wireObj.children =
        cst_encode_list_my_tree_node_twin_rust_async(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_my_tree_node_twin_rust_async_sse(
      MyTreeNodeTwinRustAsyncSse apiObj,
      wire_cst_my_tree_node_twin_rust_async_sse wireObj) {
    wireObj.value_i32 = cst_encode_i_32(apiObj.valueI32);
    wireObj.value_vec_u8 = cst_encode_list_prim_u_8(apiObj.valueVecU8);
    wireObj.value_boolean = cst_encode_bool(apiObj.valueBoolean);
    wireObj.children =
        cst_encode_list_my_tree_node_twin_rust_async_sse(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_my_tree_node_twin_sse(
      MyTreeNodeTwinSse apiObj, wire_cst_my_tree_node_twin_sse wireObj) {
    wireObj.value_i32 = cst_encode_i_32(apiObj.valueI32);
    wireObj.value_vec_u8 = cst_encode_list_prim_u_8(apiObj.valueVecU8);
    wireObj.value_boolean = cst_encode_bool(apiObj.valueBoolean);
    wireObj.children = cst_encode_list_my_tree_node_twin_sse(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_my_tree_node_twin_sync(
      MyTreeNodeTwinSync apiObj, wire_cst_my_tree_node_twin_sync wireObj) {
    wireObj.value_i32 = cst_encode_i_32(apiObj.valueI32);
    wireObj.value_vec_u8 = cst_encode_list_prim_u_8(apiObj.valueVecU8);
    wireObj.value_boolean = cst_encode_bool(apiObj.valueBoolean);
    wireObj.children = cst_encode_list_my_tree_node_twin_sync(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_my_tree_node_twin_sync_sse(
      MyTreeNodeTwinSyncSse apiObj,
      wire_cst_my_tree_node_twin_sync_sse wireObj) {
    wireObj.value_i32 = cst_encode_i_32(apiObj.valueI32);
    wireObj.value_vec_u8 = cst_encode_list_prim_u_8(apiObj.valueVecU8);
    wireObj.value_boolean = cst_encode_bool(apiObj.valueBoolean);
    wireObj.children =
        cst_encode_list_my_tree_node_twin_sync_sse(apiObj.children);
  }

  @protected
  void cst_api_fill_to_wire_nested_raw_string_mirrored(
      NestedRawStringMirrored apiObj,
      wire_cst_nested_raw_string_mirrored wireObj) {
    cst_api_fill_to_wire_raw_string_mirrored(apiObj.raw, wireObj.raw);
  }

  @protected
  void cst_api_fill_to_wire_new_simple_struct(
      NewSimpleStruct apiObj, wire_cst_new_simple_struct wireObj) {
    wireObj.field = cst_encode_i_32(apiObj.field);
  }

  @protected
  void cst_api_fill_to_wire_new_type_int_twin_normal(
      NewTypeIntTwinNormal apiObj, wire_cst_new_type_int_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_64(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync apiObj,
      wire_cst_new_type_int_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_64(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse apiObj,
      wire_cst_new_type_int_twin_rust_async_sse wireObj) {
    wireObj.field0 = cst_encode_i_64(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_new_type_int_twin_sse(
      NewTypeIntTwinSse apiObj, wire_cst_new_type_int_twin_sse wireObj) {
    wireObj.field0 = cst_encode_i_64(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_new_type_int_twin_sync(
      NewTypeIntTwinSync apiObj, wire_cst_new_type_int_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_64(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse apiObj,
      wire_cst_new_type_int_twin_sync_sse wireObj) {
    wireObj.field0 = cst_encode_i_64(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_note_twin_normal(
      NoteTwinNormal apiObj, wire_cst_note_twin_normal wireObj) {
    wireObj.day = cst_encode_box_weekdays_twin_normal(apiObj.day);
    wireObj.body = cst_encode_String(apiObj.body);
  }

  @protected
  void cst_api_fill_to_wire_note_twin_rust_async(
      NoteTwinRustAsync apiObj, wire_cst_note_twin_rust_async wireObj) {
    wireObj.day = cst_encode_box_weekdays_twin_rust_async(apiObj.day);
    wireObj.body = cst_encode_String(apiObj.body);
  }

  @protected
  void cst_api_fill_to_wire_note_twin_rust_async_sse(
      NoteTwinRustAsyncSse apiObj, wire_cst_note_twin_rust_async_sse wireObj) {
    wireObj.day = cst_encode_box_weekdays_twin_rust_async_sse(apiObj.day);
    wireObj.body = cst_encode_String(apiObj.body);
  }

  @protected
  void cst_api_fill_to_wire_note_twin_sse(
      NoteTwinSse apiObj, wire_cst_note_twin_sse wireObj) {
    wireObj.day = cst_encode_box_weekdays_twin_sse(apiObj.day);
    wireObj.body = cst_encode_String(apiObj.body);
  }

  @protected
  void cst_api_fill_to_wire_note_twin_sync(
      NoteTwinSync apiObj, wire_cst_note_twin_sync wireObj) {
    wireObj.day = cst_encode_box_weekdays_twin_sync(apiObj.day);
    wireObj.body = cst_encode_String(apiObj.body);
  }

  @protected
  void cst_api_fill_to_wire_note_twin_sync_sse(
      NoteTwinSyncSse apiObj, wire_cst_note_twin_sync_sse wireObj) {
    wireObj.day = cst_encode_box_weekdays_twin_sync_sse(apiObj.day);
    wireObj.body = cst_encode_String(apiObj.body);
  }

  @protected
  void cst_api_fill_to_wire_numbers(Numbers apiObj, wire_cst_numbers wireObj) {
    wireObj.field0 = cst_encode_list_prim_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_old_simple_struct(
      OldSimpleStruct apiObj, wire_cst_old_simple_struct wireObj) {
    wireObj.field = cst_encode_i_32(apiObj.field);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal apiObj,
      wire_cst_opaque_nested_twin_normal wireObj) {
    wireObj.first = cst_encode_RustOpaque_hide_data(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_hide_data(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync apiObj,
      wire_cst_opaque_nested_twin_rust_async wireObj) {
    wireObj.first = cst_encode_RustOpaque_hide_data(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_hide_data(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_rust_async_sse(
      OpaqueNestedTwinRustAsyncSse apiObj,
      wire_cst_opaque_nested_twin_rust_async_sse wireObj) {
    wireObj.first = cst_encode_RustOpaque_hide_data(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_hide_data(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_sse(
      OpaqueNestedTwinSse apiObj, wire_cst_opaque_nested_twin_sse wireObj) {
    wireObj.first = cst_encode_RustOpaque_hide_data(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_hide_data(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_sync(
      OpaqueNestedTwinSync apiObj, wire_cst_opaque_nested_twin_sync wireObj) {
    wireObj.first = cst_encode_RustOpaque_hide_data(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_hide_data(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opaque_nested_twin_sync_sse(
      OpaqueNestedTwinSyncSse apiObj,
      wire_cst_opaque_nested_twin_sync_sse wireObj) {
    wireObj.first = cst_encode_RustOpaque_hide_data(apiObj.first);
    wireObj.second = cst_encode_RustOpaque_hide_data(apiObj.second);
  }

  @protected
  void cst_api_fill_to_wire_opt_vecs_twin_normal(
      OptVecsTwinNormal apiObj, wire_cst_opt_vecs_twin_normal wireObj) {
    wireObj.i32 = cst_encode_list_opt_box_autoadd_i_32(apiObj.i32);
    wireObj.enums =
        cst_encode_list_opt_box_autoadd_weekdays_twin_normal(apiObj.enums);
    wireObj.strings = cst_encode_list_opt_String(apiObj.strings);
    wireObj.buffers = cst_encode_list_opt_list_prim_i_32(apiObj.buffers);
  }

  @protected
  void cst_api_fill_to_wire_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync apiObj, wire_cst_opt_vecs_twin_rust_async wireObj) {
    wireObj.i32 = cst_encode_list_opt_box_autoadd_i_32(apiObj.i32);
    wireObj.enums =
        cst_encode_list_opt_box_autoadd_weekdays_twin_rust_async(apiObj.enums);
    wireObj.strings = cst_encode_list_opt_String(apiObj.strings);
    wireObj.buffers = cst_encode_list_opt_list_prim_i_32(apiObj.buffers);
  }

  @protected
  void cst_api_fill_to_wire_opt_vecs_twin_rust_async_sse(
      OptVecsTwinRustAsyncSse apiObj,
      wire_cst_opt_vecs_twin_rust_async_sse wireObj) {
    wireObj.i32 = cst_encode_list_opt_box_autoadd_i_32(apiObj.i32);
    wireObj.enums =
        cst_encode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(
            apiObj.enums);
    wireObj.strings = cst_encode_list_opt_String(apiObj.strings);
    wireObj.buffers = cst_encode_list_opt_list_prim_i_32(apiObj.buffers);
  }

  @protected
  void cst_api_fill_to_wire_opt_vecs_twin_sse(
      OptVecsTwinSse apiObj, wire_cst_opt_vecs_twin_sse wireObj) {
    wireObj.i32 = cst_encode_list_opt_box_autoadd_i_32(apiObj.i32);
    wireObj.enums =
        cst_encode_list_opt_box_autoadd_weekdays_twin_sse(apiObj.enums);
    wireObj.strings = cst_encode_list_opt_String(apiObj.strings);
    wireObj.buffers = cst_encode_list_opt_list_prim_i_32(apiObj.buffers);
  }

  @protected
  void cst_api_fill_to_wire_opt_vecs_twin_sync(
      OptVecsTwinSync apiObj, wire_cst_opt_vecs_twin_sync wireObj) {
    wireObj.i32 = cst_encode_list_opt_box_autoadd_i_32(apiObj.i32);
    wireObj.enums =
        cst_encode_list_opt_box_autoadd_weekdays_twin_sync(apiObj.enums);
    wireObj.strings = cst_encode_list_opt_String(apiObj.strings);
    wireObj.buffers = cst_encode_list_opt_list_prim_i_32(apiObj.buffers);
  }

  @protected
  void cst_api_fill_to_wire_opt_vecs_twin_sync_sse(
      OptVecsTwinSyncSse apiObj, wire_cst_opt_vecs_twin_sync_sse wireObj) {
    wireObj.i32 = cst_encode_list_opt_box_autoadd_i_32(apiObj.i32);
    wireObj.enums =
        cst_encode_list_opt_box_autoadd_weekdays_twin_sync_sse(apiObj.enums);
    wireObj.strings = cst_encode_list_opt_String(apiObj.strings);
    wireObj.buffers = cst_encode_list_opt_list_prim_i_32(apiObj.buffers);
  }

  @protected
  void cst_api_fill_to_wire_point_twin_normal(
      PointTwinNormal apiObj, wire_cst_point_twin_normal wireObj) {
    wireObj.x = cst_encode_f_32(apiObj.x);
    wireObj.y = cst_encode_f_32(apiObj.y);
  }

  @protected
  void cst_api_fill_to_wire_point_twin_rust_async(
      PointTwinRustAsync apiObj, wire_cst_point_twin_rust_async wireObj) {
    wireObj.x = cst_encode_f_32(apiObj.x);
    wireObj.y = cst_encode_f_32(apiObj.y);
  }

  @protected
  void cst_api_fill_to_wire_point_twin_rust_async_sse(
      PointTwinRustAsyncSse apiObj,
      wire_cst_point_twin_rust_async_sse wireObj) {
    wireObj.x = cst_encode_f_32(apiObj.x);
    wireObj.y = cst_encode_f_32(apiObj.y);
  }

  @protected
  void cst_api_fill_to_wire_point_twin_sse(
      PointTwinSse apiObj, wire_cst_point_twin_sse wireObj) {
    wireObj.x = cst_encode_f_32(apiObj.x);
    wireObj.y = cst_encode_f_32(apiObj.y);
  }

  @protected
  void cst_api_fill_to_wire_point_twin_sync(
      PointTwinSync apiObj, wire_cst_point_twin_sync wireObj) {
    wireObj.x = cst_encode_f_32(apiObj.x);
    wireObj.y = cst_encode_f_32(apiObj.y);
  }

  @protected
  void cst_api_fill_to_wire_point_twin_sync_sse(
      PointTwinSyncSse apiObj, wire_cst_point_twin_sync_sse wireObj) {
    wireObj.x = cst_encode_f_32(apiObj.x);
    wireObj.y = cst_encode_f_32(apiObj.y);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_enum_mirrored(
      RawStringEnumMirrored apiObj, wire_cst_raw_string_enum_mirrored wireObj) {
    if (apiObj is RawStringEnumMirrored_Raw) {
      var pre_field0 =
          cst_encode_box_autoadd_raw_string_mirrored(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Raw.field0 = pre_field0;
      return;
    }
    if (apiObj is RawStringEnumMirrored_Nested) {
      var pre_field0 =
          cst_encode_box_autoadd_nested_raw_string_mirrored(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Nested.field0 = pre_field0;
      return;
    }
    if (apiObj is RawStringEnumMirrored_ListOfNested) {
      var pre_field0 =
          cst_encode_box_autoadd_list_of_nested_raw_string_mirrored(
              apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.ListOfNested.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_raw_string_item_struct_twin_normal(
      RawStringItemStructTwinNormal apiObj,
      wire_cst_raw_string_item_struct_twin_normal wireObj) {
    wireObj.type = cst_encode_String(apiObj.type);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_item_struct_twin_rust_async(
      RawStringItemStructTwinRustAsync apiObj,
      wire_cst_raw_string_item_struct_twin_rust_async wireObj) {
    wireObj.type = cst_encode_String(apiObj.type);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_item_struct_twin_rust_async_sse(
      RawStringItemStructTwinRustAsyncSse apiObj,
      wire_cst_raw_string_item_struct_twin_rust_async_sse wireObj) {
    wireObj.type = cst_encode_String(apiObj.type);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_item_struct_twin_sse(
      RawStringItemStructTwinSse apiObj,
      wire_cst_raw_string_item_struct_twin_sse wireObj) {
    wireObj.type = cst_encode_String(apiObj.type);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_item_struct_twin_sync(
      RawStringItemStructTwinSync apiObj,
      wire_cst_raw_string_item_struct_twin_sync wireObj) {
    wireObj.type = cst_encode_String(apiObj.type);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_item_struct_twin_sync_sse(
      RawStringItemStructTwinSyncSse apiObj,
      wire_cst_raw_string_item_struct_twin_sync_sse wireObj) {
    wireObj.type = cst_encode_String(apiObj.type);
  }

  @protected
  void cst_api_fill_to_wire_raw_string_mirrored(
      RawStringMirrored apiObj, wire_cst_raw_string_mirrored wireObj) {
    wireObj.value = cst_encode_String(apiObj.value);
  }

  @protected
  void
      cst_api_fill_to_wire_record_application_settings_raw_string_enum_mirrored(
          (ApplicationSettings, RawStringEnumMirrored) apiObj,
          wire_cst_record_application_settings_raw_string_enum_mirrored
              wireObj) {
    cst_api_fill_to_wire_application_settings(apiObj.$1, wireObj.field0);
    cst_api_fill_to_wire_raw_string_enum_mirrored(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_i_32_i_32(
      (int, int) apiObj, wire_cst_record_i_32_i_32 wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.$1);
    wireObj.field1 = cst_encode_i_32(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_enum_simple_twin_normal(
      (String, EnumSimpleTwinNormal) apiObj,
      wire_cst_record_string_enum_simple_twin_normal wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_enum_simple_twin_normal(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_enum_simple_twin_rust_async(
      (String, EnumSimpleTwinRustAsync) apiObj,
      wire_cst_record_string_enum_simple_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_enum_simple_twin_rust_async(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_enum_simple_twin_rust_async_sse(
      (String, EnumSimpleTwinRustAsyncSse) apiObj,
      wire_cst_record_string_enum_simple_twin_rust_async_sse wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_enum_simple_twin_rust_async_sse(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_enum_simple_twin_sse(
      (String, EnumSimpleTwinSse) apiObj,
      wire_cst_record_string_enum_simple_twin_sse wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_enum_simple_twin_sse(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_enum_simple_twin_sync(
      (String, EnumSimpleTwinSync) apiObj,
      wire_cst_record_string_enum_simple_twin_sync wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_enum_simple_twin_sync(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_enum_simple_twin_sync_sse(
      (String, EnumSimpleTwinSyncSse) apiObj,
      wire_cst_record_string_enum_simple_twin_sync_sse wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_enum_simple_twin_sync_sse(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_i_32(
      (String, int) apiObj, wire_cst_record_string_i_32 wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_i_32(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_kitchen_sink_twin_normal(
      (String, KitchenSinkTwinNormal) apiObj,
      wire_cst_record_string_kitchen_sink_twin_normal wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_kitchen_sink_twin_normal(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_kitchen_sink_twin_rust_async(
      (String, KitchenSinkTwinRustAsync) apiObj,
      wire_cst_record_string_kitchen_sink_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async(
        apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_kitchen_sink_twin_rust_async_sse(
      (String, KitchenSinkTwinRustAsyncSse) apiObj,
      wire_cst_record_string_kitchen_sink_twin_rust_async_sse wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_kitchen_sink_twin_rust_async_sse(
        apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_kitchen_sink_twin_sse(
      (String, KitchenSinkTwinSse) apiObj,
      wire_cst_record_string_kitchen_sink_twin_sse wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_kitchen_sink_twin_sse(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_kitchen_sink_twin_sync(
      (String, KitchenSinkTwinSync) apiObj,
      wire_cst_record_string_kitchen_sink_twin_sync wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_kitchen_sink_twin_sync(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_kitchen_sink_twin_sync_sse(
      (String, KitchenSinkTwinSyncSse) apiObj,
      wire_cst_record_string_kitchen_sink_twin_sync_sse wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_kitchen_sink_twin_sync_sse(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_list_prim_u_8(
      (String, Uint8List) apiObj,
      wire_cst_record_string_list_prim_u_8 wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_list_prim_u_8(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_record_string_my_size(
      (String, MySize) apiObj, wire_cst_record_string_my_size wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_my_size(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_string(
      (String, String) apiObj, wire_cst_record_string_string wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_String(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_sequences(
      Sequences apiObj, wire_cst_sequences wireObj) {
    wireObj.field0 = cst_encode_list_prim_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_some_struct_twin_normal(
      SomeStructTwinNormal apiObj, wire_cst_some_struct_twin_normal wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_some_struct_twin_rust_async(
      SomeStructTwinRustAsync apiObj,
      wire_cst_some_struct_twin_rust_async wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_some_struct_twin_rust_async_sse(
      SomeStructTwinRustAsyncSse apiObj,
      wire_cst_some_struct_twin_rust_async_sse wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_some_struct_twin_sse(
      SomeStructTwinSse apiObj, wire_cst_some_struct_twin_sse wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_some_struct_twin_sync(
      SomeStructTwinSync apiObj, wire_cst_some_struct_twin_sync wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_some_struct_twin_sync_sse(
      SomeStructTwinSyncSse apiObj,
      wire_cst_some_struct_twin_sync_sse wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_speed_twin_normal(
      SpeedTwinNormal apiObj, wire_cst_speed_twin_normal wireObj) {
    if (apiObj is SpeedTwinNormal_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is SpeedTwinNormal_GPS) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.GPS.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_speed_twin_rust_async(
      SpeedTwinRustAsync apiObj, wire_cst_speed_twin_rust_async wireObj) {
    if (apiObj is SpeedTwinRustAsync_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is SpeedTwinRustAsync_GPS) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.GPS.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_speed_twin_rust_async_sse(
      SpeedTwinRustAsyncSse apiObj,
      wire_cst_speed_twin_rust_async_sse wireObj) {
    if (apiObj is SpeedTwinRustAsyncSse_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is SpeedTwinRustAsyncSse_GPS) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.GPS.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_speed_twin_sse(
      SpeedTwinSse apiObj, wire_cst_speed_twin_sse wireObj) {
    if (apiObj is SpeedTwinSse_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is SpeedTwinSse_GPS) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.GPS.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_speed_twin_sync(
      SpeedTwinSync apiObj, wire_cst_speed_twin_sync wireObj) {
    if (apiObj is SpeedTwinSync_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is SpeedTwinSync_GPS) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.GPS.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_speed_twin_sync_sse(
      SpeedTwinSyncSse apiObj, wire_cst_speed_twin_sync_sse wireObj) {
    if (apiObj is SpeedTwinSyncSse_Unknown) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is SpeedTwinSyncSse_GPS) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.GPS.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal apiObj,
      wire_cst_struct_with_comments_twin_normal wireObj) {
    wireObj.field_with_comments = cst_encode_i_32(apiObj.fieldWithComments);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync apiObj,
      wire_cst_struct_with_comments_twin_rust_async wireObj) {
    wireObj.field_with_comments = cst_encode_i_32(apiObj.fieldWithComments);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_comments_twin_rust_async_sse(
      StructWithCommentsTwinRustAsyncSse apiObj,
      wire_cst_struct_with_comments_twin_rust_async_sse wireObj) {
    wireObj.field_with_comments = cst_encode_i_32(apiObj.fieldWithComments);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_comments_twin_sse(
      StructWithCommentsTwinSse apiObj,
      wire_cst_struct_with_comments_twin_sse wireObj) {
    wireObj.field_with_comments = cst_encode_i_32(apiObj.fieldWithComments);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync apiObj,
      wire_cst_struct_with_comments_twin_sync wireObj) {
    wireObj.field_with_comments = cst_encode_i_32(apiObj.fieldWithComments);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_comments_twin_sync_sse(
      StructWithCommentsTwinSyncSse apiObj,
      wire_cst_struct_with_comments_twin_sync_sse wireObj) {
    wireObj.field_with_comments = cst_encode_i_32(apiObj.fieldWithComments);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal apiObj,
      wire_cst_struct_with_enum_twin_normal wireObj) {
    cst_api_fill_to_wire_abc_twin_normal(apiObj.abc1, wireObj.abc1);
    cst_api_fill_to_wire_abc_twin_normal(apiObj.abc2, wireObj.abc2);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync apiObj,
      wire_cst_struct_with_enum_twin_rust_async wireObj) {
    cst_api_fill_to_wire_abc_twin_rust_async(apiObj.abc1, wireObj.abc1);
    cst_api_fill_to_wire_abc_twin_rust_async(apiObj.abc2, wireObj.abc2);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_enum_twin_rust_async_sse(
      StructWithEnumTwinRustAsyncSse apiObj,
      wire_cst_struct_with_enum_twin_rust_async_sse wireObj) {
    cst_api_fill_to_wire_abc_twin_rust_async_sse(apiObj.abc1, wireObj.abc1);
    cst_api_fill_to_wire_abc_twin_rust_async_sse(apiObj.abc2, wireObj.abc2);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_enum_twin_sse(
      StructWithEnumTwinSse apiObj,
      wire_cst_struct_with_enum_twin_sse wireObj) {
    cst_api_fill_to_wire_abc_twin_sse(apiObj.abc1, wireObj.abc1);
    cst_api_fill_to_wire_abc_twin_sse(apiObj.abc2, wireObj.abc2);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_enum_twin_sync(
      StructWithEnumTwinSync apiObj,
      wire_cst_struct_with_enum_twin_sync wireObj) {
    cst_api_fill_to_wire_abc_twin_sync(apiObj.abc1, wireObj.abc1);
    cst_api_fill_to_wire_abc_twin_sync(apiObj.abc2, wireObj.abc2);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_enum_twin_sync_sse(
      StructWithEnumTwinSyncSse apiObj,
      wire_cst_struct_with_enum_twin_sync_sse wireObj) {
    cst_api_fill_to_wire_abc_twin_sync_sse(apiObj.abc1, wireObj.abc1);
    cst_api_fill_to_wire_abc_twin_sync_sse(apiObj.abc2, wireObj.abc2);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal apiObj,
      wire_cst_struct_with_one_field_twin_normal wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync apiObj,
      wire_cst_struct_with_one_field_twin_rust_async wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_one_field_twin_rust_async_sse(
      StructWithOneFieldTwinRustAsyncSse apiObj,
      wire_cst_struct_with_one_field_twin_rust_async_sse wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_one_field_twin_sse(
      StructWithOneFieldTwinSse apiObj,
      wire_cst_struct_with_one_field_twin_sse wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync apiObj,
      wire_cst_struct_with_one_field_twin_sync wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_one_field_twin_sync_sse(
      StructWithOneFieldTwinSyncSse apiObj,
      wire_cst_struct_with_one_field_twin_sync_sse wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal apiObj,
      wire_cst_struct_with_two_field_twin_normal wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync apiObj,
      wire_cst_struct_with_two_field_twin_rust_async wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_two_field_twin_rust_async_sse(
      StructWithTwoFieldTwinRustAsyncSse apiObj,
      wire_cst_struct_with_two_field_twin_rust_async_sse wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_two_field_twin_sse(
      StructWithTwoFieldTwinSse apiObj,
      wire_cst_struct_with_two_field_twin_sse wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync apiObj,
      wire_cst_struct_with_two_field_twin_sync wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_two_field_twin_sync_sse(
      StructWithTwoFieldTwinSyncSse apiObj,
      wire_cst_struct_with_two_field_twin_sync_sse wireObj) {
    wireObj.a = cst_encode_i_32(apiObj.a);
    wireObj.b = cst_encode_i_32(apiObj.b);
  }

  @protected
  void cst_api_fill_to_wire_struct_with_zero_field_twin_normal(
      StructWithZeroFieldTwinNormal apiObj,
      wire_cst_struct_with_zero_field_twin_normal wireObj) {}

  @protected
  void cst_api_fill_to_wire_struct_with_zero_field_twin_rust_async(
      StructWithZeroFieldTwinRustAsync apiObj,
      wire_cst_struct_with_zero_field_twin_rust_async wireObj) {}

  @protected
  void cst_api_fill_to_wire_struct_with_zero_field_twin_rust_async_sse(
      StructWithZeroFieldTwinRustAsyncSse apiObj,
      wire_cst_struct_with_zero_field_twin_rust_async_sse wireObj) {}

  @protected
  void cst_api_fill_to_wire_struct_with_zero_field_twin_sse(
      StructWithZeroFieldTwinSse apiObj,
      wire_cst_struct_with_zero_field_twin_sse wireObj) {}

  @protected
  void cst_api_fill_to_wire_struct_with_zero_field_twin_sync(
      StructWithZeroFieldTwinSync apiObj,
      wire_cst_struct_with_zero_field_twin_sync wireObj) {}

  @protected
  void cst_api_fill_to_wire_struct_with_zero_field_twin_sync_sse(
      StructWithZeroFieldTwinSyncSse apiObj,
      wire_cst_struct_with_zero_field_twin_sync_sse wireObj) {}

  @protected
  void cst_api_fill_to_wire_sum_with_twin_normal(
      SumWithTwinNormal apiObj, wire_cst_sum_with_twin_normal wireObj) {
    wireObj.x = cst_encode_u_32(apiObj.x);
  }

  @protected
  void cst_api_fill_to_wire_sum_with_twin_rust_async(
      SumWithTwinRustAsync apiObj, wire_cst_sum_with_twin_rust_async wireObj) {
    wireObj.x = cst_encode_u_32(apiObj.x);
  }

  @protected
  void cst_api_fill_to_wire_sum_with_twin_rust_async_sse(
      SumWithTwinRustAsyncSse apiObj,
      wire_cst_sum_with_twin_rust_async_sse wireObj) {
    wireObj.x = cst_encode_u_32(apiObj.x);
  }

  @protected
  void cst_api_fill_to_wire_sum_with_twin_sse(
      SumWithTwinSse apiObj, wire_cst_sum_with_twin_sse wireObj) {
    wireObj.x = cst_encode_u_32(apiObj.x);
  }

  @protected
  void cst_api_fill_to_wire_sum_with_twin_sync(
      SumWithTwinSync apiObj, wire_cst_sum_with_twin_sync wireObj) {
    wireObj.x = cst_encode_u_32(apiObj.x);
  }

  @protected
  void cst_api_fill_to_wire_sum_with_twin_sync_sse(
      SumWithTwinSyncSse apiObj, wire_cst_sum_with_twin_sync_sse wireObj) {
    wireObj.x = cst_encode_u_32(apiObj.x);
  }

  @protected
  void cst_api_fill_to_wire_test_chrono_twin_normal(
      TestChronoTwinNormal apiObj, wire_cst_test_chrono_twin_normal wireObj) {
    wireObj.dt = cst_encode_opt_box_autoadd_Chrono_Utc(apiObj.dt);
    wireObj.dt2 = cst_encode_opt_box_autoadd_Chrono_Naive(apiObj.dt2);
    wireObj.du = cst_encode_opt_box_autoadd_Chrono_Duration(apiObj.du);
  }

  @protected
  void cst_api_fill_to_wire_test_chrono_twin_rust_async(
      TestChronoTwinRustAsync apiObj,
      wire_cst_test_chrono_twin_rust_async wireObj) {
    wireObj.dt = cst_encode_opt_box_autoadd_Chrono_Utc(apiObj.dt);
    wireObj.dt2 = cst_encode_opt_box_autoadd_Chrono_Naive(apiObj.dt2);
    wireObj.du = cst_encode_opt_box_autoadd_Chrono_Duration(apiObj.du);
  }

  @protected
  void cst_api_fill_to_wire_test_chrono_twin_sync(
      TestChronoTwinSync apiObj, wire_cst_test_chrono_twin_sync wireObj) {
    wireObj.dt = cst_encode_opt_box_autoadd_Chrono_Utc(apiObj.dt);
    wireObj.dt2 = cst_encode_opt_box_autoadd_Chrono_Naive(apiObj.dt2);
    wireObj.du = cst_encode_opt_box_autoadd_Chrono_Duration(apiObj.du);
  }

  @protected
  void cst_api_fill_to_wire_test_id_twin_normal(
      TestIdTwinNormal apiObj, wire_cst_test_id_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_32_array_2(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_test_id_twin_rust_async(
      TestIdTwinRustAsync apiObj, wire_cst_test_id_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_32_array_2(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_test_id_twin_rust_async_sse(
      TestIdTwinRustAsyncSse apiObj,
      wire_cst_test_id_twin_rust_async_sse wireObj) {
    wireObj.field0 = cst_encode_i_32_array_2(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_test_id_twin_sse(
      TestIdTwinSse apiObj, wire_cst_test_id_twin_sse wireObj) {
    wireObj.field0 = cst_encode_i_32_array_2(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_test_id_twin_sync(
      TestIdTwinSync apiObj, wire_cst_test_id_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_32_array_2(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_test_id_twin_sync_sse(
      TestIdTwinSyncSse apiObj, wire_cst_test_id_twin_sync_sse wireObj) {
    wireObj.field0 = cst_encode_i_32_array_2(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_test_model_twin_normal(
      TestModelTwinNormal apiObj, wire_cst_test_model_twin_normal wireObj) {
    wireObj.id = cst_encode_u_64(apiObj.id);
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.alias_enum = cst_encode_my_enum(apiObj.aliasEnum);
    cst_api_fill_to_wire_my_struct(apiObj.aliasStruct, wireObj.alias_struct);
  }

  @protected
  void cst_api_fill_to_wire_test_model_twin_rust_async(
      TestModelTwinRustAsync apiObj,
      wire_cst_test_model_twin_rust_async wireObj) {
    wireObj.id = cst_encode_u_64(apiObj.id);
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.alias_enum = cst_encode_my_enum(apiObj.aliasEnum);
    cst_api_fill_to_wire_my_struct(apiObj.aliasStruct, wireObj.alias_struct);
  }

  @protected
  void cst_api_fill_to_wire_test_model_twin_rust_async_sse(
      TestModelTwinRustAsyncSse apiObj,
      wire_cst_test_model_twin_rust_async_sse wireObj) {
    wireObj.id = cst_encode_u_64(apiObj.id);
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.alias_enum = cst_encode_my_enum(apiObj.aliasEnum);
    cst_api_fill_to_wire_my_struct(apiObj.aliasStruct, wireObj.alias_struct);
  }

  @protected
  void cst_api_fill_to_wire_test_model_twin_sse(
      TestModelTwinSse apiObj, wire_cst_test_model_twin_sse wireObj) {
    wireObj.id = cst_encode_u_64(apiObj.id);
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.alias_enum = cst_encode_my_enum(apiObj.aliasEnum);
    cst_api_fill_to_wire_my_struct(apiObj.aliasStruct, wireObj.alias_struct);
  }

  @protected
  void cst_api_fill_to_wire_test_model_twin_sync(
      TestModelTwinSync apiObj, wire_cst_test_model_twin_sync wireObj) {
    wireObj.id = cst_encode_u_64(apiObj.id);
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.alias_enum = cst_encode_my_enum(apiObj.aliasEnum);
    cst_api_fill_to_wire_my_struct(apiObj.aliasStruct, wireObj.alias_struct);
  }

  @protected
  void cst_api_fill_to_wire_test_model_twin_sync_sse(
      TestModelTwinSyncSse apiObj, wire_cst_test_model_twin_sync_sse wireObj) {
    wireObj.id = cst_encode_u_64(apiObj.id);
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.alias_enum = cst_encode_my_enum(apiObj.aliasEnum);
    cst_api_fill_to_wire_my_struct(apiObj.aliasStruct, wireObj.alias_struct);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal apiObj,
      wire_cst_tuple_struct_with_one_field_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_one_field_twin_rust_async(
      TupleStructWithOneFieldTwinRustAsync apiObj,
      wire_cst_tuple_struct_with_one_field_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_one_field_twin_rust_async_sse(
      TupleStructWithOneFieldTwinRustAsyncSse apiObj,
      wire_cst_tuple_struct_with_one_field_twin_rust_async_sse wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sse(
      TupleStructWithOneFieldTwinSse apiObj,
      wire_cst_tuple_struct_with_one_field_twin_sse wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync apiObj,
      wire_cst_tuple_struct_with_one_field_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_one_field_twin_sync_sse(
      TupleStructWithOneFieldTwinSyncSse apiObj,
      wire_cst_tuple_struct_with_one_field_twin_sync_sse wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal apiObj,
      wire_cst_tuple_struct_with_two_field_twin_normal wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
    wireObj.field1 = cst_encode_i_32(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_two_field_twin_rust_async(
      TupleStructWithTwoFieldTwinRustAsync apiObj,
      wire_cst_tuple_struct_with_two_field_twin_rust_async wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
    wireObj.field1 = cst_encode_i_32(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_two_field_twin_rust_async_sse(
      TupleStructWithTwoFieldTwinRustAsyncSse apiObj,
      wire_cst_tuple_struct_with_two_field_twin_rust_async_sse wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
    wireObj.field1 = cst_encode_i_32(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sse(
      TupleStructWithTwoFieldTwinSse apiObj,
      wire_cst_tuple_struct_with_two_field_twin_sse wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
    wireObj.field1 = cst_encode_i_32(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync apiObj,
      wire_cst_tuple_struct_with_two_field_twin_sync wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
    wireObj.field1 = cst_encode_i_32(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_tuple_struct_with_two_field_twin_sync_sse(
      TupleStructWithTwoFieldTwinSyncSse apiObj,
      wire_cst_tuple_struct_with_two_field_twin_sync_sse wireObj) {
    wireObj.field0 = cst_encode_i_32(apiObj.field0);
    wireObj.field1 = cst_encode_i_32(apiObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_user_id_twin_normal(
      UserIdTwinNormal apiObj, wire_cst_user_id_twin_normal wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_user_id_twin_rust_async(
      UserIdTwinRustAsync apiObj, wire_cst_user_id_twin_rust_async wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_user_id_twin_rust_async_sse(
      UserIdTwinRustAsyncSse apiObj,
      wire_cst_user_id_twin_rust_async_sse wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_user_id_twin_sse(
      UserIdTwinSse apiObj, wire_cst_user_id_twin_sse wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_user_id_twin_sync(
      UserIdTwinSync apiObj, wire_cst_user_id_twin_sync wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_user_id_twin_sync_sse(
      UserIdTwinSyncSse apiObj, wire_cst_user_id_twin_sync_sse wireObj) {
    wireObj.value = cst_encode_u_32(apiObj.value);
  }

  @protected
  void cst_api_fill_to_wire_vec_of_primitive_pack_twin_normal(
      VecOfPrimitivePackTwinNormal apiObj,
      wire_cst_vec_of_primitive_pack_twin_normal wireObj) {
    wireObj.int8list = cst_encode_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_list_prim_u_8(apiObj.uint8List);
    wireObj.int16list = cst_encode_list_prim_i_16(apiObj.int16List);
    wireObj.uint16list = cst_encode_list_prim_u_16(apiObj.uint16List);
    wireObj.uint32list = cst_encode_list_prim_u_32(apiObj.uint32List);
    wireObj.int32list = cst_encode_list_prim_i_32(apiObj.int32List);
    wireObj.uint64list = cst_encode_list_prim_u_64(apiObj.uint64List);
    wireObj.int64list = cst_encode_list_prim_i_64(apiObj.int64List);
    wireObj.float32list = cst_encode_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_list_prim_f_64(apiObj.float64List);
    wireObj.bool_list = cst_encode_list_bool(apiObj.boolList);
  }

  @protected
  void cst_api_fill_to_wire_vec_of_primitive_pack_twin_rust_async(
      VecOfPrimitivePackTwinRustAsync apiObj,
      wire_cst_vec_of_primitive_pack_twin_rust_async wireObj) {
    wireObj.int8list = cst_encode_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_list_prim_u_8(apiObj.uint8List);
    wireObj.int16list = cst_encode_list_prim_i_16(apiObj.int16List);
    wireObj.uint16list = cst_encode_list_prim_u_16(apiObj.uint16List);
    wireObj.uint32list = cst_encode_list_prim_u_32(apiObj.uint32List);
    wireObj.int32list = cst_encode_list_prim_i_32(apiObj.int32List);
    wireObj.uint64list = cst_encode_list_prim_u_64(apiObj.uint64List);
    wireObj.int64list = cst_encode_list_prim_i_64(apiObj.int64List);
    wireObj.float32list = cst_encode_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_list_prim_f_64(apiObj.float64List);
    wireObj.bool_list = cst_encode_list_bool(apiObj.boolList);
  }

  @protected
  void cst_api_fill_to_wire_vec_of_primitive_pack_twin_rust_async_sse(
      VecOfPrimitivePackTwinRustAsyncSse apiObj,
      wire_cst_vec_of_primitive_pack_twin_rust_async_sse wireObj) {
    wireObj.int8list = cst_encode_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_list_prim_u_8(apiObj.uint8List);
    wireObj.int16list = cst_encode_list_prim_i_16(apiObj.int16List);
    wireObj.uint16list = cst_encode_list_prim_u_16(apiObj.uint16List);
    wireObj.uint32list = cst_encode_list_prim_u_32(apiObj.uint32List);
    wireObj.int32list = cst_encode_list_prim_i_32(apiObj.int32List);
    wireObj.uint64list = cst_encode_list_prim_u_64(apiObj.uint64List);
    wireObj.int64list = cst_encode_list_prim_i_64(apiObj.int64List);
    wireObj.float32list = cst_encode_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_list_prim_f_64(apiObj.float64List);
    wireObj.bool_list = cst_encode_list_bool(apiObj.boolList);
  }

  @protected
  void cst_api_fill_to_wire_vec_of_primitive_pack_twin_sse(
      VecOfPrimitivePackTwinSse apiObj,
      wire_cst_vec_of_primitive_pack_twin_sse wireObj) {
    wireObj.int8list = cst_encode_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_list_prim_u_8(apiObj.uint8List);
    wireObj.int16list = cst_encode_list_prim_i_16(apiObj.int16List);
    wireObj.uint16list = cst_encode_list_prim_u_16(apiObj.uint16List);
    wireObj.uint32list = cst_encode_list_prim_u_32(apiObj.uint32List);
    wireObj.int32list = cst_encode_list_prim_i_32(apiObj.int32List);
    wireObj.uint64list = cst_encode_list_prim_u_64(apiObj.uint64List);
    wireObj.int64list = cst_encode_list_prim_i_64(apiObj.int64List);
    wireObj.float32list = cst_encode_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_list_prim_f_64(apiObj.float64List);
    wireObj.bool_list = cst_encode_list_bool(apiObj.boolList);
  }

  @protected
  void cst_api_fill_to_wire_vec_of_primitive_pack_twin_sync(
      VecOfPrimitivePackTwinSync apiObj,
      wire_cst_vec_of_primitive_pack_twin_sync wireObj) {
    wireObj.int8list = cst_encode_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_list_prim_u_8(apiObj.uint8List);
    wireObj.int16list = cst_encode_list_prim_i_16(apiObj.int16List);
    wireObj.uint16list = cst_encode_list_prim_u_16(apiObj.uint16List);
    wireObj.uint32list = cst_encode_list_prim_u_32(apiObj.uint32List);
    wireObj.int32list = cst_encode_list_prim_i_32(apiObj.int32List);
    wireObj.uint64list = cst_encode_list_prim_u_64(apiObj.uint64List);
    wireObj.int64list = cst_encode_list_prim_i_64(apiObj.int64List);
    wireObj.float32list = cst_encode_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_list_prim_f_64(apiObj.float64List);
    wireObj.bool_list = cst_encode_list_bool(apiObj.boolList);
  }

  @protected
  void cst_api_fill_to_wire_vec_of_primitive_pack_twin_sync_sse(
      VecOfPrimitivePackTwinSyncSse apiObj,
      wire_cst_vec_of_primitive_pack_twin_sync_sse wireObj) {
    wireObj.int8list = cst_encode_list_prim_i_8(apiObj.int8List);
    wireObj.uint8list = cst_encode_list_prim_u_8(apiObj.uint8List);
    wireObj.int16list = cst_encode_list_prim_i_16(apiObj.int16List);
    wireObj.uint16list = cst_encode_list_prim_u_16(apiObj.uint16List);
    wireObj.uint32list = cst_encode_list_prim_u_32(apiObj.uint32List);
    wireObj.int32list = cst_encode_list_prim_i_32(apiObj.int32List);
    wireObj.uint64list = cst_encode_list_prim_u_64(apiObj.uint64List);
    wireObj.int64list = cst_encode_list_prim_i_64(apiObj.int64List);
    wireObj.float32list = cst_encode_list_prim_f_32(apiObj.float32List);
    wireObj.float64list = cst_encode_list_prim_f_64(apiObj.float64List);
    wireObj.bool_list = cst_encode_list_bool(apiObj.boolList);
  }

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
          BoxFnStringString raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
          BoxMyTraitTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
          BoxMyTraitTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
          BoxMyTraitTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          BoxMyTraitTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          StructWithGoodAndOpaqueFieldTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          StructWithGoodAndOpaqueFieldTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          StructWithGoodAndOpaqueFieldTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          StructWithGoodAndOpaqueFieldTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          StructWithGoodAndOpaqueFieldTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          StructWithGoodAndOpaqueFieldTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          StructWithGoodAndOpaqueFieldTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          StructWithGoodAndOpaqueFieldTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
          BoxHelloTraitTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
          BoxHelloTraitTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
          NonCloneSimpleTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
          NonCloneSimpleTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
          NonCloneSimpleTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
          NonCloneSimpleTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          StructWithGoodAndOpaqueFieldTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          StructWithGoodAndOpaqueFieldTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          StructWithGoodAndOpaqueFieldTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          StructWithGoodAndOpaqueFieldTwinSyncSse raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs_DartOpaque_Output_unit(
      FutureOr<void> Function(Object) raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs_String_Output_unit(
      FutureOr<void> Function(String) raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_normal_Output_unit(
          FutureOr<void> Function(String, DemoStructForRustCallDartTwinNormal)
              raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_Output_unit(
          FutureOr<void> Function(
                  String, DemoStructForRustCallDartTwinRustAsync)
              raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_unit(
          FutureOr<void> Function(
                  String, DemoStructForRustCallDartTwinRustAsyncSse)
              raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_sse_Output_unit(
          FutureOr<void> Function(String, DemoStructForRustCallDartTwinSse)
              raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs__Output_DartOpaque(
      FutureOr<Object> Function() raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs__Output_String(
      FutureOr<String> Function() raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs__Output_unit(
      FutureOr<void> Function() raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_normal_Output_demo_struct_for_rust_call_dart_twin_normal(
          FutureOr<DemoStructForRustCallDartTwinNormal> Function(
                  DemoStructForRustCallDartTwinNormal)
              raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_Output_demo_struct_for_rust_call_dart_twin_rust_async(
          FutureOr<DemoStructForRustCallDartTwinRustAsync> Function(
                  DemoStructForRustCallDartTwinRustAsync)
              raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          FutureOr<DemoStructForRustCallDartTwinRustAsyncSse> Function(
                  DemoStructForRustCallDartTwinRustAsyncSse)
              raw);

  @protected
  PlatformPointer
      cst_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_sse_Output_demo_struct_for_rust_call_dart_twin_sse(
          FutureOr<DemoStructForRustCallDartTwinSse> Function(
                  DemoStructForRustCallDartTwinSse)
              raw);

  @protected
  PlatformPointer cst_encode_DartOpaque(Object raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_MutexHideData(MutexHideData raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_RwLockHideData(RwLockHideData raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_box_dynDartDebugTwinNormal(
      BoxDartDebugTwinNormal raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_box_dynDartDebugTwinRustAsync(
      BoxDartDebugTwinRustAsync raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_box_dynDartDebugTwinRustAsyncSse(
      BoxDartDebugTwinRustAsyncSse raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_box_dynDartDebugTwinSse(
      BoxDartDebugTwinSse raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_box_dynDartDebugTwinSync(
      BoxDartDebugTwinSync raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_box_dynDartDebugTwinSyncSse(
      BoxDartDebugTwinSyncSse raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_frb_opaque_return(FrbOpaqueReturn raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_frb_opaque_sync_return(
      FrbOpaqueSyncReturn raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_hide_data(HideData raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_i_32(I32 raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_non_clone_data(NonCloneData raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_non_send_hide_data(NonSendHideData raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
          BoxFnStringString raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
      BoxHelloTraitTwinSse raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
          BoxMyTraitTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
          BoxMyTraitTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
          BoxMyTraitTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          BoxMyTraitTwinSyncSse raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
      NonCloneSimpleTwinSse raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync raw);

  @protected
  PlatformPointer cst_encode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
      NonCloneSimpleTwinSyncSse raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          StructWithGoodAndOpaqueFieldTwinNormal raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          StructWithGoodAndOpaqueFieldTwinSse raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          StructWithGoodAndOpaqueFieldTwinSync raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          StructWithGoodAndOpaqueFieldTwinSyncSse raw);

  @protected
  int cst_encode_application_mode(ApplicationMode raw);

  @protected
  bool cst_encode_bool(bool raw);

  @protected
  int cst_encode_enum_simple_twin_normal(EnumSimpleTwinNormal raw);

  @protected
  int cst_encode_enum_simple_twin_rust_async(EnumSimpleTwinRustAsync raw);

  @protected
  int cst_encode_enum_simple_twin_rust_async_sse(
      EnumSimpleTwinRustAsyncSse raw);

  @protected
  int cst_encode_enum_simple_twin_sse(EnumSimpleTwinSse raw);

  @protected
  int cst_encode_enum_simple_twin_sync(EnumSimpleTwinSync raw);

  @protected
  int cst_encode_enum_simple_twin_sync_sse(EnumSimpleTwinSyncSse raw);

  @protected
  double cst_encode_f_32(double raw);

  @protected
  double cst_encode_f_64(double raw);

  @protected
  int cst_encode_i_16(int raw);

  @protected
  int cst_encode_i_32(int raw);

  @protected
  int cst_encode_i_8(int raw);

  @protected
  int cst_encode_isize(int raw);

  @protected
  int cst_encode_my_enum(MyEnum raw);

  @protected
  int cst_encode_u_16(int raw);

  @protected
  int cst_encode_u_32(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  int cst_encode_usize(int raw);

  @protected
  int cst_encode_weekdays_twin_normal(WeekdaysTwinNormal raw);

  @protected
  int cst_encode_weekdays_twin_rust_async(WeekdaysTwinRustAsync raw);

  @protected
  int cst_encode_weekdays_twin_rust_async_sse(WeekdaysTwinRustAsyncSse raw);

  @protected
  int cst_encode_weekdays_twin_sse(WeekdaysTwinSse raw);

  @protected
  int cst_encode_weekdays_twin_sync(WeekdaysTwinSync raw);

  @protected
  int cst_encode_weekdays_twin_sync_sse(WeekdaysTwinSyncSse raw);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
          BoxFnStringString self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
      BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
          BoxMyTraitTwinNormal self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
          BoxMyTraitTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
          BoxMyTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
          BoxMyTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
      NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
      NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          StructWithGoodAndOpaqueFieldTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          StructWithGoodAndOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          StructWithGoodAndOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          StructWithGoodAndOpaqueFieldTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
          BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
      BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
          BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
      NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
      NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          StructWithGoodAndOpaqueFieldTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          StructWithGoodAndOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          StructWithGoodAndOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          StructWithGoodAndOpaqueFieldTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
      BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
      BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
      NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
      NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          StructWithGoodAndOpaqueFieldTwinNormal self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
          StructWithGoodAndOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
          StructWithGoodAndOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          StructWithGoodAndOpaqueFieldTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void sse_encode_Backtrace(String self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Duration(Duration self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Local(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Naive(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Utc(DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_DartOpaque_Output_unit(
      FutureOr<void> Function(Object) self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs_String_Output_unit(
      FutureOr<void> Function(String) self, SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_normal_Output_unit(
          FutureOr<void> Function(String, DemoStructForRustCallDartTwinNormal)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_Output_unit(
          FutureOr<void> Function(
                  String, DemoStructForRustCallDartTwinRustAsync)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_unit(
          FutureOr<void> Function(
                  String, DemoStructForRustCallDartTwinRustAsyncSse)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_String_demo_struct_for_rust_call_dart_twin_sse_Output_unit(
          FutureOr<void> Function(String, DemoStructForRustCallDartTwinSse)
              self,
          SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_DartOpaque(
      FutureOr<Object> Function() self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_String(
      FutureOr<String> Function() self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_unit(
      FutureOr<void> Function() self, SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_normal_Output_demo_struct_for_rust_call_dart_twin_normal(
          FutureOr<DemoStructForRustCallDartTwinNormal> Function(
                  DemoStructForRustCallDartTwinNormal)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_Output_demo_struct_for_rust_call_dart_twin_rust_async(
          FutureOr<DemoStructForRustCallDartTwinRustAsync> Function(
                  DemoStructForRustCallDartTwinRustAsync)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_rust_async_sse_Output_demo_struct_for_rust_call_dart_twin_rust_async_sse(
          FutureOr<DemoStructForRustCallDartTwinRustAsyncSse> Function(
                  DemoStructForRustCallDartTwinRustAsyncSse)
              self,
          SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_demo_struct_for_rust_call_dart_twin_sse_Output_demo_struct_for_rust_call_dart_twin_sse(
          FutureOr<DemoStructForRustCallDartTwinSse> Function(
                  DemoStructForRustCallDartTwinSse)
              self,
          SseSerializer serializer);

  @protected
  void sse_encode_DartOpaque(Object self, SseSerializer serializer);

  @protected
  void sse_encode_DartOpaque_array_1(
      ObjectArray1 self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_String(
      Map<String, String> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_normal(
      Map<String, EnumSimpleTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_rust_async(
      Map<String, EnumSimpleTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_rust_async_sse(
      Map<String, EnumSimpleTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_sse(
      Map<String, EnumSimpleTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_sync(
      Map<String, EnumSimpleTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_enum_simple_twin_sync_sse(
      Map<String, EnumSimpleTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_normal(
      Map<String, KitchenSinkTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_rust_async(
      Map<String, KitchenSinkTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_rust_async_sse(
      Map<String, KitchenSinkTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_sse(
      Map<String, KitchenSinkTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_sync(
      Map<String, KitchenSinkTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_kitchen_sink_twin_sync_sse(
      Map<String, KitchenSinkTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_list_prim_u_8(
      Map<String, Uint8List> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_my_size(
      Map<String, MySize> self, SseSerializer serializer);

  @protected
  void sse_encode_Map_i_32_i_32(Map<int, int> self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MutexHideData(
      MutexHideData self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockHideData(
      RwLockHideData self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_box_dynDartDebugTwinNormal(
      BoxDartDebugTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_box_dynDartDebugTwinRustAsync(
      BoxDartDebugTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_box_dynDartDebugTwinRustAsyncSse(
      BoxDartDebugTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_box_dynDartDebugTwinSse(
      BoxDartDebugTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_box_dynDartDebugTwinSync(
      BoxDartDebugTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_box_dynDartDebugTwinSyncSse(
      BoxDartDebugTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_frb_opaque_return(
      FrbOpaqueReturn self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_frb_opaque_sync_return(
      FrbOpaqueSyncReturn self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_hide_data(HideData self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_hide_data_array_2(
      HideDataArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_i_32(I32 self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_non_clone_data(
      NonCloneData self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_non_send_hide_data(
      NonSendHideData self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
      BoxFnStringString self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
      BoxHelloTraitTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
      BoxHelloTraitTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
      BoxHelloTraitTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
      BoxHelloTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
      BoxMyTraitTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
      BoxMyTraitTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
      BoxMyTraitTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
      BoxMyTraitTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
      NonCloneSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
      NonCloneSimpleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
      NonCloneSimpleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
      NonCloneSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
          StructWithGoodAndOpaqueFieldTwinNormal self,
          SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
      StructWithGoodAndOpaqueFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
      StructWithGoodAndOpaqueFieldTwinSync self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
          StructWithGoodAndOpaqueFieldTwinSyncSse self,
          SseSerializer serializer);

  @protected
  void sse_encode_Set_String(Set<String> self, SseSerializer serializer);

  @protected
  void sse_encode_Set_i_32(Set<int> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_Uuid(UuidValue self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_normal(ATwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_rust_async(
      ATwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_rust_async_sse(
      ATwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_sse(ATwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_sync(ATwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_a_twin_sync_sse(ATwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_normal(AbcTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_rust_async(
      AbcTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_rust_async_sse(
      AbcTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_sse(AbcTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_sync(AbcTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_abc_twin_sync_sse(
      AbcTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_another_macro_struct_twin_normal(
      AnotherMacroStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_normal(
      AnotherTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_rust_async(
      AnotherTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_rust_async_sse(
      AnotherTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_sse(
      AnotherTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_sync(
      AnotherTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_another_twin_sync_sse(
      AnotherTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_application_env(
      ApplicationEnv self, SseSerializer serializer);

  @protected
  void sse_encode_application_env_var(
      ApplicationEnvVar self, SseSerializer serializer);

  @protected
  void sse_encode_application_message(
      ApplicationMessage self, SseSerializer serializer);

  @protected
  void sse_encode_application_mode(
      ApplicationMode self, SseSerializer serializer);

  @protected
  void sse_encode_application_settings(
      ApplicationSettings self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_normal(
      AttributeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_rust_async(
      AttributeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_sse(
      AttributeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_sync(
      AttributeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_attribute_twin_sync_sse(
      AttributeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_normal(BTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_rust_async(
      BTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_rust_async_sse(
      BTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_sse(BTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_sync(BTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_b_twin_sync_sse(BTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_rust_async_sse(
      BenchmarkBlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_sse(
      BenchmarkBlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_benchmark_blob_twin_sync_sse(
      BenchmarkBlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_normal(
      BigBuffersTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_rust_async(
      BigBuffersTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_rust_async_sse(
      BigBuffersTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_sse(
      BigBuffersTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_sync(
      BigBuffersTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_big_buffers_twin_sync_sse(
      BigBuffersTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_normal(
      BlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_rust_async(
      BlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_rust_async_sse(
      BlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_sse(BlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_sync(BlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_blob_twin_sync_sse(
      BlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_application_env(
      ApplicationEnv self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_Chrono_Duration(
      Duration self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_Chrono_Naive(
      DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_Chrono_Utc(
      DateTime self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_DartOpaque(Object self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_hide_data(
      HideData self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_normal(
      ATwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_rust_async(
      ATwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_rust_async_sse(
      ATwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_sse(
      ATwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_sync(
      ATwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_a_twin_sync_sse(
      ATwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_normal(
      AbcTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_rust_async(
      AbcTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_rust_async_sse(
      AbcTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_sse(
      AbcTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_sync(
      AbcTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_abc_twin_sync_sse(
      AbcTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_application_env(
      ApplicationEnv self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_application_settings(
      ApplicationSettings self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_normal(
      AttributeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_rust_async(
      AttributeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_sse(
      AttributeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_sync(
      AttributeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_attribute_twin_sync_sse(
      AttributeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_normal(
      BTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_rust_async(
      BTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_rust_async_sse(
      BTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_sse(
      BTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_sync(
      BTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_b_twin_sync_sse(
      BTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_normal(
      BenchmarkBlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_rust_async(
      BenchmarkBlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_rust_async_sse(
      BenchmarkBlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_sse(
      BenchmarkBlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_sync(
      BenchmarkBlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_benchmark_blob_twin_sync_sse(
      BenchmarkBlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_normal(
      CTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_rust_async(
      CTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_rust_async_sse(
      CTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_sse(
      CTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_sync(
      CTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_c_twin_sync_sse(
      CTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_rust_async_sse(
      ConcatenateWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_sse(
      ConcatenateWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_sync(
      ConcatenateWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_concatenate_with_twin_sync_sse(
      ConcatenateWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_rust_async_sse(
      CustomNestedError2TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_sse(
      CustomNestedError2TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_2_twin_sync_sse(
      CustomNestedError2TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_rust_async(
      CustomNestedErrorInnerTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_rust_async_sse(
      CustomNestedErrorInnerTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_sse(
      CustomNestedErrorInnerTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_inner_twin_sync_sse(
      CustomNestedErrorInnerTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_rust_async(
      CustomNestedErrorOuterTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_rust_async_sse(
      CustomNestedErrorOuterTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_sse(
      CustomNestedErrorOuterTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_nested_error_outer_twin_sync_sse(
      CustomNestedErrorOuterTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_rust_async_sse(
      CustomStructErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_sse(
      CustomStructErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_error_twin_sync_sse(
      CustomStructErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_normal(
      CustomStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_rust_async_sse(
      CustomStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_sse(
      CustomStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_sync(
      CustomStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_custom_struct_twin_sync_sse(
      CustomStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_normal(
      CustomizedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_rust_async(
      CustomizedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_rust_async_sse(
      CustomizedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_sse(
      CustomizedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_sync(
      CustomizedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_customized_twin_sync_sse(
      CustomizedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_rust_async_sse(
      DartOpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_sse(
      DartOpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_dart_opaque_nested_twin_sync_sse(
      DartOpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_normal(
      ElementTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_rust_async(
      ElementTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_sse(
      ElementTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_sync(
      ElementTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_element_twin_sync_sse(
      ElementTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_normal(
      EmptyTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_rust_async(
      EmptyTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_rust_async_sse(
      EmptyTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_sse(
      EmptyTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_sync(
      EmptyTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_empty_twin_sync_sse(
      EmptyTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_rust_async_sse(
      EnumDartOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_sse(
      EnumDartOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_dart_opaque_twin_sync_sse(
      EnumDartOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_rust_async_sse(
      EnumOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sse(
      EnumOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sync(
      EnumOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_opaque_twin_sync_sse(
      EnumOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_rust_async_sse(
      EnumWithItemMixedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_sse(
      EnumWithItemMixedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_mixed_twin_sync_sse(
      EnumWithItemMixedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_rust_async_sse(
      EnumWithItemStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_sse(
      EnumWithItemStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_struct_twin_sync_sse(
      EnumWithItemStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_rust_async_sse(
      EnumWithItemTupleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_sse(
      EnumWithItemTupleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_enum_with_item_tuple_twin_sync_sse(
      EnumWithItemTupleTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_normal(
      EventTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_rust_async(
      EventTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_rust_async_sse(
      EventTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_event_twin_sse(
      EventTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_normal(
      FeatureChronoTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_chrono_twin_sync(
      FeatureChronoTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_normal(
      FeatureUuidTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feature_uuid_twin_sync(
      FeatureUuidTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_normal(
      FeedIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_rust_async(
      FeedIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_sse(
      FeedIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_sync(
      FeedIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_sse(
      KitchenSinkTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_sync(
      KitchenSinkTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_macro_struct(
      MacroStruct self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_normal(
      MeasureTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_rust_async(
      MeasureTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_sse(
      MeasureTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_sync(
      MeasureTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_measure_twin_sync_sse(
      MeasureTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_normal(
      MessageIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_rust_async(
      MessageIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_rust_async_sse(
      MessageIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_sse(
      MessageIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_sync(
      MessageIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_message_id_twin_sync_sse(
      MessageIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_rust_async_sse(
      MyNestedStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_sse(
      MyNestedStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_sync(
      MyNestedStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_nested_struct_twin_sync_sse(
      MyNestedStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_size(MySize self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_struct(
      MyStruct self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_rust_async_sse(
      MyTreeNodeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_sse(
      MyTreeNodeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_sync(
      MyTreeNodeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_tree_node_twin_sync_sse(
      MyTreeNodeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_nested_raw_string_mirrored(
      NestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_normal(
      NewTypeIntTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_sse(
      NewTypeIntTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_sync(
      NewTypeIntTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_normal(
      NoteTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_rust_async(
      NoteTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_rust_async_sse(
      NoteTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_sse(
      NoteTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_sync(
      NoteTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_note_twin_sync_sse(
      NoteTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_numbers(Numbers self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_rust_async_sse(
      OpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sse(
      OpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sync(
      OpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opaque_nested_twin_sync_sse(
      OpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_normal(
      OptVecsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_rust_async_sse(
      OptVecsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_sse(
      OptVecsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_sync(
      OptVecsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_opt_vecs_twin_sync_sse(
      OptVecsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_raw_string_mirrored(
      RawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_record_string_i_32(
      (String, int) self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sequences(
      Sequences self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_normal(
      SomeStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_rust_async(
      SomeStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_rust_async_sse(
      SomeStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_sse(
      SomeStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_sync(
      SomeStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_some_struct_twin_sync_sse(
      SomeStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_rust_async_sse(
      StructWithCommentsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_sse(
      StructWithCommentsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_comments_twin_sync_sse(
      StructWithCommentsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_rust_async_sse(
      StructWithEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_sse(
      StructWithEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_sync(
      StructWithEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_enum_twin_sync_sse(
      StructWithEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_rust_async_sse(
      StructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_sse(
      StructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_one_field_twin_sync_sse(
      StructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_rust_async_sse(
      StructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_sse(
      StructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_two_field_twin_sync_sse(
      StructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_normal(
      StructWithZeroFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_rust_async(
      StructWithZeroFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_rust_async_sse(
      StructWithZeroFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_sse(
      StructWithZeroFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_sync(
      StructWithZeroFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_struct_with_zero_field_twin_sync_sse(
      StructWithZeroFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_normal(
      SumWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_rust_async(
      SumWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_rust_async_sse(
      SumWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_sse(
      SumWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_sync(
      SumWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sum_with_twin_sync_sse(
      SumWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_normal(
      TestIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_rust_async(
      TestIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_rust_async_sse(
      TestIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_sse(
      TestIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_sync(
      TestIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_test_id_twin_sync_sse(
      TestIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_rust_async(
      TupleStructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse(
      TupleStructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_sse(
      TupleStructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_one_field_twin_sync_sse(
      TupleStructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_rust_async(
      TupleStructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse(
      TupleStructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_sse(
      TupleStructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_tuple_struct_with_two_field_twin_sync_sse(
      TupleStructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_normal(
      UserIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_rust_async(
      UserIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_rust_async_sse(
      UserIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_sse(
      UserIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_sync(
      UserIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_id_twin_sync_sse(
      UserIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_sse(
      WeekdaysTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_sync(
      WeekdaysTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_normal(
      BlobTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_rust_async(
      BlobTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_rust_async_sse(
      BlobTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_sse(BlobTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_sync(
      BlobTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_blob_twin_sync_sse(
      BlobTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_normal(
      DistanceTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_rust_async(
      DistanceTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_rust_async_sse(
      DistanceTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_sse(
      DistanceTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_sync(
      DistanceTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_distance_twin_sync_sse(
      DistanceTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_normal(
      FeedIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_rust_async(
      FeedIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_sse(
      FeedIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_sync(
      FeedIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_i_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_sse(
      KitchenSinkTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_sync(
      KitchenSinkTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_my_size(MySize self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_normal(
      SpeedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_rust_async(
      SpeedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_rust_async_sse(
      SpeedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_sse(
      SpeedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_sync(
      SpeedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_speed_twin_sync_sse(
      SpeedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_u_8_array_1600(
      U8Array1600 self, SseSerializer serializer);

  @protected
  void sse_encode_box_u_8_array_8(U8Array8 self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_normal(
      WeekdaysTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_sse(
      WeekdaysTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_sync(
      WeekdaysTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_box_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_normal(CTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_rust_async(
      CTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_rust_async_sse(
      CTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_sse(CTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_sync(CTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_c_twin_sync_sse(CTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_normal(
      ConcatenateWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_rust_async(
      ConcatenateWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_rust_async_sse(
      ConcatenateWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_sse(
      ConcatenateWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_sync(
      ConcatenateWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_concatenate_with_twin_sync_sse(
      ConcatenateWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_normal(
      ContainsMirroredSubStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_rust_async(
      ContainsMirroredSubStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_rust_async_sse(
      ContainsMirroredSubStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_sse(
      ContainsMirroredSubStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_sync(
      ContainsMirroredSubStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_contains_mirrored_sub_struct_twin_sync_sse(
      ContainsMirroredSubStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_normal(
      CustomEnumErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_rust_async(
      CustomEnumErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_rust_async_sse(
      CustomEnumErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_sse(
      CustomEnumErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_sync(
      CustomEnumErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_enum_error_twin_sync_sse(
      CustomEnumErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_normal(
      CustomErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_rust_async(
      CustomErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_rust_async_sse(
      CustomErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_sse(
      CustomErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_sync(
      CustomErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_error_twin_sync_sse(
      CustomErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_normal(
      CustomNestedError1TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_rust_async(
      CustomNestedError1TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_rust_async_sse(
      CustomNestedError1TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_sse(
      CustomNestedError1TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_sync(
      CustomNestedError1TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_1_twin_sync_sse(
      CustomNestedError1TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_normal(
      CustomNestedError2TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_rust_async(
      CustomNestedError2TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_rust_async_sse(
      CustomNestedError2TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_sse(
      CustomNestedError2TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_sync(
      CustomNestedError2TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_2_twin_sync_sse(
      CustomNestedError2TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_normal(
      CustomNestedErrorInnerTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_rust_async(
      CustomNestedErrorInnerTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_rust_async_sse(
      CustomNestedErrorInnerTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_sse(
      CustomNestedErrorInnerTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_sync(
      CustomNestedErrorInnerTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_inner_twin_sync_sse(
      CustomNestedErrorInnerTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_normal(
      CustomNestedErrorOuterTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_rust_async(
      CustomNestedErrorOuterTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_rust_async_sse(
      CustomNestedErrorOuterTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_sse(
      CustomNestedErrorOuterTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_sync(
      CustomNestedErrorOuterTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_nested_error_outer_twin_sync_sse(
      CustomNestedErrorOuterTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_normal(
      CustomStructErrorAnotherTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_rust_async(
      CustomStructErrorAnotherTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_rust_async_sse(
      CustomStructErrorAnotherTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_sse(
      CustomStructErrorAnotherTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_sync(
      CustomStructErrorAnotherTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_another_twin_sync_sse(
      CustomStructErrorAnotherTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_normal(
      CustomStructErrorTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_rust_async(
      CustomStructErrorTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_rust_async_sse(
      CustomStructErrorTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_sse(
      CustomStructErrorTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_sync(
      CustomStructErrorTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_error_twin_sync_sse(
      CustomStructErrorTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_normal(
      CustomStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_rust_async(
      CustomStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_rust_async_sse(
      CustomStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_sse(
      CustomStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_sync(
      CustomStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_custom_struct_twin_sync_sse(
      CustomStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_normal(
      CustomizedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_rust_async(
      CustomizedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_rust_async_sse(
      CustomizedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_sse(
      CustomizedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_sync(
      CustomizedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_customized_twin_sync_sse(
      CustomizedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_normal(
      DartOpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_rust_async(
      DartOpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_rust_async_sse(
      DartOpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_sse(
      DartOpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_sync(
      DartOpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_dart_opaque_nested_twin_sync_sse(
      DartOpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_dartabi(dynamic self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_normal(
      DemoStructForRustCallDartTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_rust_async(
      DemoStructForRustCallDartTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_rust_async_sse(
      DemoStructForRustCallDartTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_demo_struct_for_rust_call_dart_twin_sse(
      DemoStructForRustCallDartTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_normal(
      DistanceTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_rust_async(
      DistanceTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_rust_async_sse(
      DistanceTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_sse(
      DistanceTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_sync(
      DistanceTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_distance_twin_sync_sse(
      DistanceTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_normal(
      ElementTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_rust_async(
      ElementTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_sse(
      ElementTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_sync(
      ElementTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_element_twin_sync_sse(
      ElementTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_normal(
      EmptyTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_rust_async(
      EmptyTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_rust_async_sse(
      EmptyTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_sse(EmptyTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_sync(EmptyTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_empty_twin_sync_sse(
      EmptyTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_normal(
      EnumDartOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_rust_async(
      EnumDartOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_rust_async_sse(
      EnumDartOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_sse(
      EnumDartOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_sync(
      EnumDartOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_dart_opaque_twin_sync_sse(
      EnumDartOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_normal(
      EnumOpaqueTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_normal_array_5(
      EnumOpaqueTwinNormalArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async(
      EnumOpaqueTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_array_5(
      EnumOpaqueTwinRustAsyncArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_sse(
      EnumOpaqueTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_rust_async_sse_array_5(
      EnumOpaqueTwinRustAsyncSseArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sse(
      EnumOpaqueTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sse_array_5(
      EnumOpaqueTwinSseArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync(
      EnumOpaqueTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_array_5(
      EnumOpaqueTwinSyncArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_sse(
      EnumOpaqueTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_opaque_twin_sync_sse_array_5(
      EnumOpaqueTwinSyncSseArray5 self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_normal(
      EnumSimpleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_rust_async(
      EnumSimpleTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_rust_async_sse(
      EnumSimpleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_sse(
      EnumSimpleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_sync(
      EnumSimpleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_simple_twin_sync_sse(
      EnumSimpleTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_normal(
      EnumWithItemMixedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_rust_async(
      EnumWithItemMixedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_rust_async_sse(
      EnumWithItemMixedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_sse(
      EnumWithItemMixedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_sync(
      EnumWithItemMixedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_mixed_twin_sync_sse(
      EnumWithItemMixedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_normal(
      EnumWithItemStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_rust_async(
      EnumWithItemStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_rust_async_sse(
      EnumWithItemStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_sse(
      EnumWithItemStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_sync(
      EnumWithItemStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_struct_twin_sync_sse(
      EnumWithItemStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_normal(
      EnumWithItemTupleTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_rust_async(
      EnumWithItemTupleTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_rust_async_sse(
      EnumWithItemTupleTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_sse(
      EnumWithItemTupleTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_sync(
      EnumWithItemTupleTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_enum_with_item_tuple_twin_sync_sse(
      EnumWithItemTupleTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_normal(
      EventTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_rust_async(
      EventTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_rust_async_sse(
      EventTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_event_twin_sse(EventTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_f_64_array_16(F64Array16 self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_normal(
      FeatureChronoTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_rust_async(
      FeatureChronoTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_chrono_twin_sync(
      FeatureChronoTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_normal(
      FeatureUuidTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_rust_async(
      FeatureUuidTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_feature_uuid_twin_sync(
      FeatureUuidTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_normal(
      FeedIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_rust_async(
      FeedIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_rust_async_sse(
      FeedIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_sse(
      FeedIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_sync(
      FeedIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_feed_id_twin_sync_sse(
      FeedIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_i_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_32_array_2(I32Array2 self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_isize(int self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_normal(
      KitchenSinkTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_rust_async(
      KitchenSinkTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_rust_async_sse(
      KitchenSinkTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_sse(
      KitchenSinkTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_sync(
      KitchenSinkTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_kitchen_sink_twin_sync_sse(
      KitchenSinkTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_list_Chrono_Duration(
      List<Duration> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Chrono_Local(
      List<DateTime> self, SseSerializer serializer);

  @protected
  void sse_encode_list_Chrono_Naive(
      List<DateTime> self, SseSerializer serializer);

  @protected
  void sse_encode_list_DartOpaque(List<Object> self, SseSerializer serializer);

  @protected
  void sse_encode_list_RustOpaque_hide_data(
      List<HideData> self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_application_env_var(
      List<ApplicationEnvVar> self, SseSerializer serializer);

  @protected
  void sse_encode_list_application_settings(
      List<ApplicationSettings> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_normal(
      List<AttributeTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_rust_async(
      List<AttributeTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_sse(
      List<AttributeTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_sync(
      List<AttributeTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_bool(List<bool> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_normal(
      List<ElementTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_rust_async(
      List<ElementTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_rust_async_sse(
      List<ElementTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_sse(
      List<ElementTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_sync(
      List<ElementTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_element_twin_sync_sse(
      List<ElementTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_normal(
      List<EnumOpaqueTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_rust_async(
      List<EnumOpaqueTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_rust_async_sse(
      List<EnumOpaqueTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sse(
      List<EnumOpaqueTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sync(
      List<EnumOpaqueTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_enum_opaque_twin_sync_sse(
      List<EnumOpaqueTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_enum(List<MyEnum> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_size(List<MySize> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_normal(
      List<MyTreeNodeTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_rust_async(
      List<MyTreeNodeTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_rust_async_sse(
      List<MyTreeNodeTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_sse(
      List<MyTreeNodeTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_sync(
      List<MyTreeNodeTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_my_tree_node_twin_sync_sse(
      List<MyTreeNodeTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_nested_raw_string_mirrored(
      List<NestedRawStringMirrored> self, SseSerializer serializer);

  @protected
  void sse_encode_list_of_nested_raw_string_mirrored(
      ListOfNestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_String(List<String?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_normal(
      List<AttributeTwinNormal?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_rust_async(
      List<AttributeTwinRustAsync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_sse(
      List<AttributeTwinSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_sync(
      List<AttributeTwinSync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_i_32(
      List<int?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_normal(
      List<WeekdaysTwinNormal?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_rust_async(
      List<WeekdaysTwinRustAsync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_rust_async_sse(
      List<WeekdaysTwinRustAsyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_sse(
      List<WeekdaysTwinSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_sync(
      List<WeekdaysTwinSync?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_weekdays_twin_sync_sse(
      List<WeekdaysTwinSyncSse?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_list_prim_i_32(
      List<Int32List?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_normal(
      List<PointTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_rust_async(
      List<PointTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_rust_async_sse(
      List<PointTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_sse(
      List<PointTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_sync(
      List<PointTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_point_twin_sync_sse(
      List<PointTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_32(Float32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_64(Float64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_16(Int16List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_32(Int32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_64(Int64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_8(Int8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_16(Uint16List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32(Uint32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_64(Uint64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8(Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_raw_string_enum_mirrored(
      List<RawStringEnumMirrored> self, SseSerializer serializer);

  @protected
  void sse_encode_list_raw_string_mirrored(
      List<RawStringMirrored> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_i_32_i_32(
      List<(int, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_normal(
      List<(String, EnumSimpleTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_rust_async(
      List<(String, EnumSimpleTwinRustAsync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_rust_async_sse(
      List<(String, EnumSimpleTwinRustAsyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_sse(
      List<(String, EnumSimpleTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_sync(
      List<(String, EnumSimpleTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_enum_simple_twin_sync_sse(
      List<(String, EnumSimpleTwinSyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_i_32(
      List<(String, int)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_normal(
      List<(String, KitchenSinkTwinNormal)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_rust_async(
      List<(String, KitchenSinkTwinRustAsync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_rust_async_sse(
      List<(String, KitchenSinkTwinRustAsyncSse)> self,
      SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_sse(
      List<(String, KitchenSinkTwinSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_sync(
      List<(String, KitchenSinkTwinSync)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_kitchen_sink_twin_sync_sse(
      List<(String, KitchenSinkTwinSyncSse)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_list_prim_u_8(
      List<(String, Uint8List)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_my_size(
      List<(String, MySize)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_string(
      List<(String, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_normal(
      List<SumWithTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_rust_async(
      List<SumWithTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_rust_async_sse(
      List<SumWithTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_sse(
      List<SumWithTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_sync(
      List<SumWithTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_sum_with_twin_sync_sse(
      List<SumWithTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_normal(
      List<TestIdTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_rust_async(
      List<TestIdTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_rust_async_sse(
      List<TestIdTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_sse(
      List<TestIdTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_sync(
      List<TestIdTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_test_id_twin_sync_sse(
      List<TestIdTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_normal(
      List<WeekdaysTwinNormal> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_rust_async(
      List<WeekdaysTwinRustAsync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_rust_async_sse(
      List<WeekdaysTwinRustAsyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_sse(
      List<WeekdaysTwinSse> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_sync(
      List<WeekdaysTwinSync> self, SseSerializer serializer);

  @protected
  void sse_encode_list_weekdays_twin_sync_sse(
      List<WeekdaysTwinSyncSse> self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_normal(
      Log2TwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_rust_async(
      Log2TwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_rust_async_sse(
      Log2TwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_sse(Log2TwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_sync(Log2TwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_log_2_twin_sync_sse(
      Log2TwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_normal(LogTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_rust_async(
      LogTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_rust_async_sse(
      LogTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_log_twin_sse(LogTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_macro_struct(MacroStruct self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_normal(
      MeasureTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_rust_async(
      MeasureTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_sse(
      MeasureTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_sync(
      MeasureTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_measure_twin_sync_sse(
      MeasureTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_normal(
      MessageIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_rust_async(
      MessageIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_rust_async_sse(
      MessageIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_sse(
      MessageIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_sync(
      MessageIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_message_id_twin_sync_sse(
      MessageIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_normal(
      MirrorStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_rust_async(
      MirrorStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_rust_async_sse(
      MirrorStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_sse(
      MirrorStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_sync(
      MirrorStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_mirror_struct_twin_sync_sse(
      MirrorStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_normal(
      MoreThanJustOneRawStringStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_rust_async(
      MoreThanJustOneRawStringStructTwinRustAsync self,
      SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_rust_async_sse(
      MoreThanJustOneRawStringStructTwinRustAsyncSse self,
      SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_sse(
      MoreThanJustOneRawStringStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_sync(
      MoreThanJustOneRawStringStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_more_than_just_one_raw_string_struct_twin_sync_sse(
      MoreThanJustOneRawStringStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_enum(MyEnum self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_normal(
      MyNestedStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_rust_async(
      MyNestedStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_rust_async_sse(
      MyNestedStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_sse(
      MyNestedStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_sync(
      MyNestedStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_my_nested_struct_twin_sync_sse(
      MyNestedStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_size(MySize self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_normal(
      MyStreamEntryTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_rust_async(
      MyStreamEntryTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_rust_async_sse(
      MyStreamEntryTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_stream_entry_twin_sse(
      MyStreamEntryTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_struct(MyStruct self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_normal(
      MyTreeNodeTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_rust_async(
      MyTreeNodeTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_rust_async_sse(
      MyTreeNodeTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_sse(
      MyTreeNodeTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_sync(
      MyTreeNodeTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_my_tree_node_twin_sync_sse(
      MyTreeNodeTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_nested_raw_string_mirrored(
      NestedRawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_new_simple_struct(
      NewSimpleStruct self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_normal(
      NewTypeIntTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_sse(
      NewTypeIntTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_sync(
      NewTypeIntTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_normal(
      NoteTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_rust_async(
      NoteTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_rust_async_sse(
      NoteTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_sse(NoteTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_sync(NoteTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_note_twin_sync_sse(
      NoteTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_numbers(Numbers self, SseSerializer serializer);

  @protected
  void sse_encode_old_simple_struct(
      OldSimpleStruct self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_normal(
      OpaqueNestedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_rust_async(
      OpaqueNestedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_rust_async_sse(
      OpaqueNestedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sse(
      OpaqueNestedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sync(
      OpaqueNestedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_opaque_nested_twin_sync_sse(
      OpaqueNestedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Duration(
      Duration? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Naive(
      DateTime? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Utc(
      DateTime? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_DartOpaque(
      Object? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_hide_data(
      HideData? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_application_env(
      ApplicationEnv? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_normal(
      AttributeTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_rust_async(
      AttributeTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_rust_async_sse(
      AttributeTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_sse(
      AttributeTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_sync(
      AttributeTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_attribute_twin_sync_sse(
      AttributeTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_normal(
      ElementTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_rust_async(
      ElementTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_rust_async_sse(
      ElementTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_sse(
      ElementTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_sync(
      ElementTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_element_twin_sync_sse(
      ElementTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_32(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_64(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_16(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_normal(
      MeasureTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_rust_async(
      MeasureTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_rust_async_sse(
      MeasureTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_sse(
      MeasureTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_sync(
      MeasureTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_measure_twin_sync_sse(
      MeasureTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_normal(
      NewTypeIntTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_rust_async(
      NewTypeIntTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_rust_async_sse(
      NewTypeIntTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_sse(
      NewTypeIntTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_sync(
      NewTypeIntTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_new_type_int_twin_sync_sse(
      NewTypeIntTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_record_string_i_32(
      (String, int)? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_16(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_normal(
      WeekdaysTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_sse(
      WeekdaysTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_sync(
      WeekdaysTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_normal(
      BenchmarkBinaryTreeTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_rust_async(
      BenchmarkBinaryTreeTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_rust_async_sse(
      BenchmarkBinaryTreeTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_sse(
      BenchmarkBinaryTreeTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_sync(
      BenchmarkBinaryTreeTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_benchmark_binary_tree_twin_sync_sse(
      BenchmarkBinaryTreeTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_normal(
      ExoticOptionalsTwinNormal? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_rust_async(
      ExoticOptionalsTwinRustAsync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_rust_async_sse(
      ExoticOptionalsTwinRustAsyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_sse(
      ExoticOptionalsTwinSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_sync(
      ExoticOptionalsTwinSync? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_exotic_optionals_twin_sync_sse(
      ExoticOptionalsTwinSyncSse? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_f_64(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_i_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_i_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_i_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_u_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_normal(
      List<AttributeTwinNormal>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_rust_async(
      List<AttributeTwinRustAsync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_sse(
      List<AttributeTwinSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_sync(
      List<AttributeTwinSync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_normal(
      List<ElementTwinNormal>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_rust_async(
      List<ElementTwinRustAsync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_rust_async_sse(
      List<ElementTwinRustAsyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_sse(
      List<ElementTwinSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_sync(
      List<ElementTwinSync>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_element_twin_sync_sse(
      List<ElementTwinSyncSse>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_normal(
      List<AttributeTwinNormal?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async(
      List<AttributeTwinRustAsync?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_rust_async_sse(
      List<AttributeTwinRustAsyncSse?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_sse(
      List<AttributeTwinSse?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_sync(
      List<AttributeTwinSync?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_opt_box_autoadd_attribute_twin_sync_sse(
      List<AttributeTwinSyncSse?>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_f_32(
      Float32List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_f_64(
      Float64List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_i_32(Int32List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_i_8(Int8List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_8(Uint8List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_normal(
      OptVecsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_rust_async(
      OptVecsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_rust_async_sse(
      OptVecsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_sse(
      OptVecsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_sync(
      OptVecsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_opt_vecs_twin_sync_sse(
      OptVecsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_normal(
      PointTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_normal_array_2(
      PointTwinNormalArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async(
      PointTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async_array_2(
      PointTwinRustAsyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async_sse(
      PointTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_rust_async_sse_array_2(
      PointTwinRustAsyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sse(PointTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sse_array_2(
      PointTwinSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync(PointTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync_array_2(
      PointTwinSyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync_sse(
      PointTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_point_twin_sync_sse_array_2(
      PointTwinSyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_enum_mirrored(
      RawStringEnumMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_normal(
      RawStringItemStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_rust_async(
      RawStringItemStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_rust_async_sse(
      RawStringItemStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_sse(
      RawStringItemStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_sync(
      RawStringItemStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_item_struct_twin_sync_sse(
      RawStringItemStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_raw_string_mirrored(
      RawStringMirrored self, SseSerializer serializer);

  @protected
  void sse_encode_record_application_settings_raw_string_enum_mirrored(
      (ApplicationSettings, RawStringEnumMirrored) self,
      SseSerializer serializer);

  @protected
  void sse_encode_record_i_32_i_32((int, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_normal(
      (String, EnumSimpleTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_rust_async(
      (String, EnumSimpleTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_rust_async_sse(
      (String, EnumSimpleTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_sse(
      (String, EnumSimpleTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_sync(
      (String, EnumSimpleTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_enum_simple_twin_sync_sse(
      (String, EnumSimpleTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_i_32(
      (String, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_normal(
      (String, KitchenSinkTwinNormal) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_rust_async(
      (String, KitchenSinkTwinRustAsync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_rust_async_sse(
      (String, KitchenSinkTwinRustAsyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_sse(
      (String, KitchenSinkTwinSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_sync(
      (String, KitchenSinkTwinSync) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_kitchen_sink_twin_sync_sse(
      (String, KitchenSinkTwinSyncSse) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_list_prim_u_8(
      (String, Uint8List) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_my_size(
      (String, MySize) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_string(
      (String, String) self, SseSerializer serializer);

  @protected
  void sse_encode_sequences(Sequences self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_normal(
      SomeStructTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_rust_async(
      SomeStructTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_rust_async_sse(
      SomeStructTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_sse(
      SomeStructTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_sync(
      SomeStructTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_some_struct_twin_sync_sse(
      SomeStructTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_normal(
      SpeedTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_rust_async(
      SpeedTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_rust_async_sse(
      SpeedTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_sse(SpeedTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_sync(SpeedTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_speed_twin_sync_sse(
      SpeedTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_normal(
      StructWithCommentsTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_rust_async(
      StructWithCommentsTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_rust_async_sse(
      StructWithCommentsTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_sse(
      StructWithCommentsTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_sync(
      StructWithCommentsTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_comments_twin_sync_sse(
      StructWithCommentsTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_normal(
      StructWithEnumTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_rust_async(
      StructWithEnumTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_rust_async_sse(
      StructWithEnumTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_sse(
      StructWithEnumTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_sync(
      StructWithEnumTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_enum_twin_sync_sse(
      StructWithEnumTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_normal(
      StructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_rust_async(
      StructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_rust_async_sse(
      StructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_sse(
      StructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_sync(
      StructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_one_field_twin_sync_sse(
      StructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_normal(
      StructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_rust_async(
      StructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_rust_async_sse(
      StructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_sse(
      StructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_sync(
      StructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_two_field_twin_sync_sse(
      StructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_normal(
      StructWithZeroFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_rust_async(
      StructWithZeroFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_rust_async_sse(
      StructWithZeroFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_sse(
      StructWithZeroFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_sync(
      StructWithZeroFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_struct_with_zero_field_twin_sync_sse(
      StructWithZeroFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_normal(
      SumWithTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_normal_array_3(
      SumWithTwinNormalArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async(
      SumWithTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async_array_3(
      SumWithTwinRustAsyncArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async_sse(
      SumWithTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_rust_async_sse_array_3(
      SumWithTwinRustAsyncSseArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sse(
      SumWithTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sse_array_3(
      SumWithTwinSseArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync(
      SumWithTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync_array_3(
      SumWithTwinSyncArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync_sse(
      SumWithTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_sum_with_twin_sync_sse_array_3(
      SumWithTwinSyncSseArray3 self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_normal(
      TestChronoTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_rust_async(
      TestChronoTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_test_chrono_twin_sync(
      TestChronoTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_normal(
      TestIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_normal_array_2(
      TestIdTwinNormalArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_normal_array_4(
      TestIdTwinNormalArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async(
      TestIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_array_2(
      TestIdTwinRustAsyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_array_4(
      TestIdTwinRustAsyncArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_sse(
      TestIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_sse_array_2(
      TestIdTwinRustAsyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_rust_async_sse_array_4(
      TestIdTwinRustAsyncSseArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sse(
      TestIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sse_array_2(
      TestIdTwinSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sse_array_4(
      TestIdTwinSseArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync(
      TestIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_array_2(
      TestIdTwinSyncArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_array_4(
      TestIdTwinSyncArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_sse(
      TestIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_sse_array_2(
      TestIdTwinSyncSseArray2 self, SseSerializer serializer);

  @protected
  void sse_encode_test_id_twin_sync_sse_array_4(
      TestIdTwinSyncSseArray4 self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_normal(
      TestModelTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_rust_async(
      TestModelTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_rust_async_sse(
      TestModelTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_sse(
      TestModelTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_sync(
      TestModelTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_test_model_twin_sync_sse(
      TestModelTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_normal(
      TupleStructWithOneFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_rust_async(
      TupleStructWithOneFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_rust_async_sse(
      TupleStructWithOneFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_sse(
      TupleStructWithOneFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_sync(
      TupleStructWithOneFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_one_field_twin_sync_sse(
      TupleStructWithOneFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_normal(
      TupleStructWithTwoFieldTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_rust_async(
      TupleStructWithTwoFieldTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_rust_async_sse(
      TupleStructWithTwoFieldTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_sse(
      TupleStructWithTwoFieldTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_sync(
      TupleStructWithTwoFieldTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_tuple_struct_with_two_field_twin_sync_sse(
      TupleStructWithTwoFieldTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_1600(U8Array1600 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_32(U8Array32 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_5(U8Array5 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_8(U8Array8 self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_normal(
      UserIdTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_rust_async(
      UserIdTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_rust_async_sse(
      UserIdTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_sse(
      UserIdTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_sync(
      UserIdTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_user_id_twin_sync_sse(
      UserIdTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_normal(
      VecOfPrimitivePackTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_rust_async(
      VecOfPrimitivePackTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_rust_async_sse(
      VecOfPrimitivePackTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_sse(
      VecOfPrimitivePackTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_sync(
      VecOfPrimitivePackTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_vec_of_primitive_pack_twin_sync_sse(
      VecOfPrimitivePackTwinSyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_normal(
      WeekdaysTwinNormal self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_rust_async(
      WeekdaysTwinRustAsync self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_rust_async_sse(
      WeekdaysTwinRustAsyncSse self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_sse(
      WeekdaysTwinSse self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_sync(
      WeekdaysTwinSync self, SseSerializer serializer);

  @protected
  void sse_encode_weekdays_twin_sync_sse(
      WeekdaysTwinSyncSse self, SseSerializer serializer);
}

// Section: wire_class

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names
// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  RustLibWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void benchmark_raw_void_sync() {
    return _benchmark_raw_void_sync();
  }

  late final _benchmark_raw_void_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function()>>(
          'benchmark_raw_void_sync');
  late final _benchmark_raw_void_sync =
      _benchmark_raw_void_syncPtr.asFunction<void Function()>();

  benchmark_raw_list_prim_u_8 benchmark_raw_new_list_prim_u_8(
    int len,
  ) {
    return _benchmark_raw_new_list_prim_u_8(
      len,
    );
  }

  late final _benchmark_raw_new_list_prim_u_8Ptr = _lookup<
          ffi.NativeFunction<benchmark_raw_list_prim_u_8 Function(ffi.Int32)>>(
      'benchmark_raw_new_list_prim_u_8');
  late final _benchmark_raw_new_list_prim_u_8 =
      _benchmark_raw_new_list_prim_u_8Ptr
          .asFunction<benchmark_raw_list_prim_u_8 Function(int)>();

  int benchmark_raw_input_bytes(
    benchmark_raw_list_prim_u_8 bytes,
  ) {
    return _benchmark_raw_input_bytes(
      bytes,
    );
  }

  late final _benchmark_raw_input_bytesPtr = _lookup<
          ffi.NativeFunction<ffi.Int32 Function(benchmark_raw_list_prim_u_8)>>(
      'benchmark_raw_input_bytes');
  late final _benchmark_raw_input_bytes = _benchmark_raw_input_bytesPtr
      .asFunction<int Function(benchmark_raw_list_prim_u_8)>();

  void benchmark_raw_output_bytes(
    int port,
    int message_id,
    int size,
  ) {
    return _benchmark_raw_output_bytes(
      port,
      message_id,
      size,
    );
  }

  late final _benchmark_raw_output_bytesPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Int32)>>(
      'benchmark_raw_output_bytes');
  late final _benchmark_raw_output_bytes =
      _benchmark_raw_output_bytesPtr.asFunction<void Function(int, int, int)>();

  void dart_fn_deliver_output(
    int call_id,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _dart_fn_deliver_output(
      call_id,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _dart_fn_deliver_outputPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int32, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_dart_fn_deliver_output');
  late final _dart_fn_deliver_output = _dart_fn_deliver_outputPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_boxed_blob_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> blob,
  ) {
    return _wire_boxed_blob_twin_normal(
      port_,
      blob,
    );
  }

  late final _wire_boxed_blob_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_normal');
  late final _wire_boxed_blob_twin_normal = _wire_boxed_blob_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_func_test_id_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_test_id_twin_normal> id,
  ) {
    return _wire_func_test_id_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_func_test_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_test_id_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_normal');
  late final _wire_func_test_id_twin_normal =
      _wire_func_test_id_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_test_id_twin_normal>)>();

  void wire_get_array_twin_normal(
    int port_,
  ) {
    return _wire_get_array_twin_normal(
      port_,
    );
  }

  late final _wire_get_array_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_array_twin_normal');
  late final _wire_get_array_twin_normal =
      _wire_get_array_twin_normalPtr.asFunction<void Function(int)>();

  void wire_get_complex_array_twin_normal(
    int port_,
  ) {
    return _wire_get_complex_array_twin_normal(
      port_,
    );
  }

  late final _wire_get_complex_array_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_normal');
  late final _wire_get_complex_array_twin_normal =
      _wire_get_complex_array_twin_normalPtr.asFunction<void Function(int)>();

  void wire_last_number_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_64> array,
  ) {
    return _wire_last_number_twin_normal(
      port_,
      array,
    );
  }

  late final _wire_last_number_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_64>)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_normal');
  late final _wire_last_number_twin_normal = _wire_last_number_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_list_prim_f_64>)>();

  void wire_nested_id_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_test_id_twin_normal> id,
  ) {
    return _wire_nested_id_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_nested_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_test_id_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_normal');
  late final _wire_nested_id_twin_normal =
      _wire_nested_id_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_test_id_twin_normal>)>();

  void wire_new_msgid_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> id,
  ) {
    return _wire_new_msgid_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_new_msgid_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_normal');
  late final _wire_new_msgid_twin_normal = _wire_new_msgid_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_return_boxed_feed_id_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> id,
  ) {
    return _wire_return_boxed_feed_id_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_return_boxed_feed_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_normal');
  late final _wire_return_boxed_feed_id_twin_normal =
      _wire_return_boxed_feed_id_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_return_boxed_raw_feed_id_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_feed_id_twin_normal> id,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_feed_id_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_normal');
  late final _wire_return_boxed_raw_feed_id_twin_normal =
      _wire_return_boxed_raw_feed_id_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_feed_id_twin_normal>)>();

  void wire_use_boxed_blob_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_blob_twin_normal> blob,
  ) {
    return _wire_use_boxed_blob_twin_normal(
      port_,
      blob,
    );
  }

  late final _wire_use_boxed_blob_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_blob_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_normal');
  late final _wire_use_boxed_blob_twin_normal =
      _wire_use_boxed_blob_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_blob_twin_normal>)>();

  void wire_use_msgid_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_message_id_twin_normal> id,
  ) {
    return _wire_use_msgid_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_use_msgid_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_message_id_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_normal');
  late final _wire_use_msgid_twin_normal =
      _wire_use_msgid_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_message_id_twin_normal>)>();

  void wire_func_async_simple_add_twin_normal(
    int port_,
    int a,
    int b,
  ) {
    return _wire_func_async_simple_add_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_func_async_simple_add_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_async_simple_add_twin_normal');
  late final _wire_func_async_simple_add_twin_normal =
      _wire_func_async_simple_add_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_func_async_void_twin_normal(
    int port_,
  ) {
    return _wire_func_async_void_twin_normal(
      port_,
    );
  }

  late final _wire_func_async_void_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_func_async_void_twin_normal');
  late final _wire_func_async_void_twin_normal =
      _wire_func_async_void_twin_normalPtr.asFunction<void Function(int)>();

  void wire_simple_use_async_spawn(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> arg,
  ) {
    return _wire_simple_use_async_spawn(
      port_,
      arg,
    );
  }

  late final _wire_simple_use_async_spawnPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_simple_use_async_spawn');
  late final _wire_simple_use_async_spawn = _wire_simple_use_async_spawnPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_simple_use_async_spawn_blocking(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> arg,
  ) {
    return _wire_simple_use_async_spawn_blocking(
      port_,
      arg,
    );
  }

  late final _wire_simple_use_async_spawn_blockingPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_simple_use_async_spawn_blocking');
  late final _wire_simple_use_async_spawn_blocking =
      _wire_simple_use_async_spawn_blockingPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_handle_customized_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_customized_twin_normal> val,
  ) {
    return _wire_handle_customized_struct_twin_normal(
      port_,
      val,
    );
  }

  late final _wire_handle_customized_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_customized_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_normal');
  late final _wire_handle_customized_struct_twin_normal =
      _wire_handle_customized_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_customized_twin_normal>)>();

  void wire_next_user_id_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_user_id_twin_normal> user_id,
  ) {
    return _wire_next_user_id_twin_normal(
      port_,
      user_id,
    );
  }

  late final _wire_next_user_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_user_id_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_normal');
  late final _wire_next_user_id_twin_normal =
      _wire_next_user_id_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_user_id_twin_normal>)>();

  WireSyncRust2DartSse wire_benchmark_void_semi_serialize() {
    return _wire_benchmark_void_semi_serialize();
  }

  late final _wire_benchmark_void_semi_serializePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartSse Function()>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_void_semi_serialize');
  late final _wire_benchmark_void_semi_serialize =
      _wire_benchmark_void_semi_serializePtr
          .asFunction<WireSyncRust2DartSse Function()>();

  void wire_datetime_local_twin_normal(
    int port_,
    int d,
  ) {
    return _wire_datetime_local_twin_normal(
      port_,
      d,
    );
  }

  late final _wire_datetime_local_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_local_twin_normal');
  late final _wire_datetime_local_twin_normal =
      _wire_datetime_local_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_datetime_utc_twin_normal(
    int port_,
    int d,
  ) {
    return _wire_datetime_utc_twin_normal(
      port_,
      d,
    );
  }

  late final _wire_datetime_utc_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_utc_twin_normal');
  late final _wire_datetime_utc_twin_normal =
      _wire_datetime_utc_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_duration_twin_normal(
    int port_,
    int d,
  ) {
    return _wire_duration_twin_normal(
      port_,
      d,
    );
  }

  late final _wire_duration_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_duration_twin_normal');
  late final _wire_duration_twin_normal =
      _wire_duration_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_handle_durations_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_Chrono_Duration> durations,
    int since,
  ) {
    return _wire_handle_durations_twin_normal(
      port_,
      durations,
      since,
    );
  }

  late final _wire_handle_durations_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_Chrono_Duration>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_durations_twin_normal');
  late final _wire_handle_durations_twin_normal =
      _wire_handle_durations_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_Chrono_Duration>, int)>();

  void wire_handle_timestamps_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_Chrono_Naive> timestamps,
    int epoch,
  ) {
    return _wire_handle_timestamps_twin_normal(
      port_,
      timestamps,
      epoch,
    );
  }

  late final _wire_handle_timestamps_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_Chrono_Naive>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_timestamps_twin_normal');
  late final _wire_handle_timestamps_twin_normal =
      _wire_handle_timestamps_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_Chrono_Naive>, int)>();

  void wire_how_long_does_it_take_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_feature_chrono_twin_normal> mine,
  ) {
    return _wire_how_long_does_it_take_twin_normal(
      port_,
      mine,
    );
  }

  late final _wire_how_long_does_it_take_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_feature_chrono_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_how_long_does_it_take_twin_normal');
  late final _wire_how_long_does_it_take_twin_normal =
      _wire_how_long_does_it_take_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_feature_chrono_twin_normal>)>();

  void wire_naivedatetime_twin_normal(
    int port_,
    int d,
  ) {
    return _wire_naivedatetime_twin_normal(
      port_,
      d,
    );
  }

  late final _wire_naivedatetime_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_naivedatetime_twin_normal');
  late final _wire_naivedatetime_twin_normal =
      _wire_naivedatetime_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_optional_empty_datetime_utc_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int64> d,
  ) {
    return _wire_optional_empty_datetime_utc_twin_normal(
      port_,
      d,
    );
  }

  late final _wire_optional_empty_datetime_utc_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_optional_empty_datetime_utc_twin_normal');
  late final _wire_optional_empty_datetime_utc_twin_normal =
      _wire_optional_empty_datetime_utc_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int64>)>();

  void wire_test_chrono_twin_normal(
    int port_,
  ) {
    return _wire_test_chrono_twin_normal(
      port_,
    );
  }

  late final _wire_test_chrono_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_chrono_twin_normal');
  late final _wire_test_chrono_twin_normal =
      _wire_test_chrono_twin_normalPtr.asFunction<void Function(int)>();

  void wire_test_precise_chrono_twin_normal(
    int port_,
  ) {
    return _wire_test_precise_chrono_twin_normal(
      port_,
    );
  }

  late final _wire_test_precise_chrono_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_precise_chrono_twin_normal');
  late final _wire_test_precise_chrono_twin_normal =
      _wire_test_precise_chrono_twin_normalPtr.asFunction<void Function(int)>();

  void wire_StructWithCommentsTwinNormal_instance_method_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_comments_twin_normal> that,
  ) {
    return _wire_StructWithCommentsTwinNormal_instance_method_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_StructWithCommentsTwinNormal_instance_method_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_struct_with_comments_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinNormal_instance_method_twin_normal');
  late final _wire_StructWithCommentsTwinNormal_instance_method_twin_normal =
      _wire_StructWithCommentsTwinNormal_instance_method_twin_normalPtr
          .asFunction<
              void Function(int,
                  ffi.Pointer<wire_cst_struct_with_comments_twin_normal>)>();

  void wire_StructWithCommentsTwinNormal_static_method_twin_normal(
    int port_,
  ) {
    return _wire_StructWithCommentsTwinNormal_static_method_twin_normal(
      port_,
    );
  }

  late final _wire_StructWithCommentsTwinNormal_static_method_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinNormal_static_method_twin_normal');
  late final _wire_StructWithCommentsTwinNormal_static_method_twin_normal =
      _wire_StructWithCommentsTwinNormal_static_method_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_slash_star_star_twin_normal(
    int port_,
  ) {
    return _wire_function_with_comments_slash_star_star_twin_normal(
      port_,
    );
  }

  late final _wire_function_with_comments_slash_star_star_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_normal');
  late final _wire_function_with_comments_slash_star_star_twin_normal =
      _wire_function_with_comments_slash_star_star_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_triple_slash_multi_line_twin_normal(
    int port_,
  ) {
    return _wire_function_with_comments_triple_slash_multi_line_twin_normal(
      port_,
    );
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_normal');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_normal =
      _wire_function_with_comments_triple_slash_multi_line_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_triple_slash_single_line_twin_normal(
    int port_,
  ) {
    return _wire_function_with_comments_triple_slash_single_line_twin_normal(
      port_,
    );
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_normal');
  late final _wire_function_with_comments_triple_slash_single_line_twin_normal =
      _wire_function_with_comments_triple_slash_single_line_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_check_init_done(
    int port_,
  ) {
    return _wire_check_init_done(
      port_,
    );
  }

  late final _wire_check_init_donePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_check_init_done');
  late final _wire_check_init_done =
      _wire_check_init_donePtr.asFunction<void Function(int)>();

  void wire_init_app(
    int port_,
  ) {
    return _wire_init_app(
      port_,
    );
  }

  late final _wire_init_appPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_init_app');
  late final _wire_init_app =
      _wire_init_appPtr.asFunction<void Function(int)>();

  void wire_my_init_one(
    int port_,
  ) {
    return _wire_my_init_one(
      port_,
    );
  }

  late final _wire_my_init_onePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_my_init_one');
  late final _wire_my_init_one =
      _wire_my_init_onePtr.asFunction<void Function(int)>();

  void wire_my_init_two(
    int port_,
  ) {
    return _wire_my_init_two(
      port_,
    );
  }

  late final _wire_my_init_twoPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_my_init_two');
  late final _wire_my_init_two =
      _wire_my_init_twoPtr.asFunction<void Function(int)>();

  void wire_return_dart_dynamic_twin_normal(
    int port_,
  ) {
    return _wire_return_dart_dynamic_twin_normal(
      port_,
    );
  }

  late final _wire_return_dart_dynamic_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_return_dart_dynamic_twin_normal');
  late final _wire_return_dart_dynamic_twin_normal =
      _wire_return_dart_dynamic_twin_normalPtr.asFunction<void Function(int)>();

  void wire_rust_call_dart_loopback_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_loopback_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_loopback_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_loopback_twin_normal');
  late final _wire_rust_call_dart_loopback_twin_normal =
      _wire_rust_call_dart_loopback_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_multi_times_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
    int num_times,
  ) {
    return _wire_rust_call_dart_multi_times_twin_normal(
      port_,
      callback,
      num_times,
    );
  }

  late final _wire_rust_call_dart_multi_times_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_multi_times_twin_normal');
  late final _wire_rust_call_dart_multi_times_twin_normal =
      _wire_rust_call_dart_multi_times_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>, int)>();

  void wire_rust_call_dart_one_arg_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_one_arg_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_one_arg_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_one_arg_twin_normal');
  late final _wire_rust_call_dart_one_arg_twin_normal =
      _wire_rust_call_dart_one_arg_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_return_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_return_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_return_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_return_twin_normal');
  late final _wire_rust_call_dart_return_twin_normal =
      _wire_rust_call_dart_return_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_simple_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_simple_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_simple_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_simple_twin_normal');
  late final _wire_rust_call_dart_simple_twin_normal =
      _wire_rust_call_dart_simple_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_two_args_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_two_args_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_two_args_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_two_args_twin_normal');
  late final _wire_rust_call_dart_two_args_twin_normal =
      _wire_rust_call_dart_two_args_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_with_dart_opaque_arg_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> input,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_arg_twin_normal(
      port_,
      input,
      callback,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_arg_twin_normal');
  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_normal =
      _wire_rust_call_dart_with_dart_opaque_arg_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_with_dart_opaque_result_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_result_twin_normal(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_result_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_result_twin_normal');
  late final _wire_rust_call_dart_with_dart_opaque_result_twin_normal =
      _wire_rust_call_dart_with_dart_opaque_result_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_async_accept_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_async_accept_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_normal');
  late final _wire_async_accept_dart_opaque_twin_normal =
      _wire_async_accept_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_clone_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_clone_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_clone_dart_opaque_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_normal');
  late final _wire_clone_dart_opaque_twin_normal =
      _wire_clone_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_create_enum_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_create_enum_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_normal');
  late final _wire_create_enum_dart_opaque_twin_normal =
      _wire_create_enum_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_create_nested_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque1,
    ffi.Pointer<ffi.Void> opaque2,
  ) {
    return _wire_create_nested_dart_opaque_twin_normal(
      port_,
      opaque1,
      opaque2,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_normal');
  late final _wire_create_nested_dart_opaque_twin_normal =
      _wire_create_nested_dart_opaque_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  void wire_drop_static_dart_opaque_twin_normal(
    int port_,
    int id,
  ) {
    return _wire_drop_static_dart_opaque_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_normal');
  late final _wire_drop_static_dart_opaque_twin_normal =
      _wire_drop_static_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_get_enum_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal> opaque,
  ) {
    return _wire_get_enum_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_normal');
  late final _wire_get_enum_dart_opaque_twin_normal =
      _wire_get_enum_dart_opaque_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal>)>();

  void wire_get_nested_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal> opaque,
  ) {
    return _wire_get_nested_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_normal');
  late final _wire_get_nested_dart_opaque_twin_normal =
      _wire_get_nested_dart_opaque_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal>)>();

  void wire_loop_back_array_get_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_array_get_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_array_get_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_normal');
  late final _wire_loop_back_array_get_twin_normal =
      _wire_loop_back_array_get_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_DartOpaque>)>();

  void wire_loop_back_array_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_array_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_array_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_normal');
  late final _wire_loop_back_array_twin_normal =
      _wire_loop_back_array_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_option_get_twin_normal(
    int port_,
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_loop_back_option_get_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_option_get_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_normal');
  late final _wire_loop_back_option_get_twin_normal =
      _wire_loop_back_option_get_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  void wire_loop_back_option_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_option_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_option_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_normal');
  late final _wire_loop_back_option_twin_normal =
      _wire_loop_back_option_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_normal');
  late final _wire_loop_back_twin_normal = _wire_loop_back_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_vec_get_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_vec_get_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_vec_get_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_normal');
  late final _wire_loop_back_vec_get_twin_normal =
      _wire_loop_back_vec_get_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_DartOpaque>)>();

  void wire_loop_back_vec_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_vec_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_vec_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_normal');
  late final _wire_loop_back_vec_twin_normal =
      _wire_loop_back_vec_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_panic_unwrap_dart_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_normal');
  late final _wire_panic_unwrap_dart_opaque_twin_normal =
      _wire_panic_unwrap_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_set_static_dart_opaque_twin_normal(
    int port_,
    int id,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_set_static_dart_opaque_twin_normal(
      port_,
      id,
      opaque,
    );
  }

  late final _wire_set_static_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_normal');
  late final _wire_set_static_dart_opaque_twin_normal =
      _wire_set_static_dart_opaque_twin_normalPtr
          .asFunction<void Function(int, int, ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_sync_accept_dart_opaque_twin_normal(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_sync_accept_dart_opaque_twin_normal(
      opaque,
    );
  }

  late final _wire_sync_accept_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_sync_accept_dart_opaque_twin_normal');
  late final _wire_sync_accept_dart_opaque_twin_normal =
      _wire_sync_accept_dart_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_sync_loopback_twin_normal(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_sync_loopback_twin_normal(
      opaque,
    );
  }

  late final _wire_sync_loopback_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_sync_loopback_twin_normal');
  late final _wire_sync_loopback_twin_normal =
      _wire_sync_loopback_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_sync_option_dart_opaque_twin_normal(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_sync_option_dart_opaque_twin_normal(
      opaque,
    );
  }

  late final _wire_sync_option_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_dart_opaque_twin_normal');
  late final _wire_sync_option_dart_opaque_twin_normal =
      _wire_sync_option_dart_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_sync_option_loopback_twin_normal(
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_sync_option_loopback_twin_normal(
      opaque,
    );
  }

  late final _wire_sync_option_loopback_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_loopback_twin_normal');
  late final _wire_sync_option_loopback_twin_normal =
      _wire_sync_option_loopback_twin_normalPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  WireSyncRust2DartDco wire_unwrap_dart_opaque_twin_normal(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_unwrap_dart_opaque_twin_normal(
      opaque,
    );
  }

  late final _wire_unwrap_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_dart_opaque_twin_normal');
  late final _wire_unwrap_dart_opaque_twin_normal =
      _wire_unwrap_dart_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  void wire_func_enum_simple_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_func_enum_simple_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_simple_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_normal');
  late final _wire_func_enum_simple_twin_normal =
      _wire_func_enum_simple_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_func_enum_with_item_mixed_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal> arg,
  ) {
    return _wire_func_enum_with_item_mixed_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_normal');
  late final _wire_func_enum_with_item_mixed_twin_normal =
      _wire_func_enum_with_item_mixed_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal>)>();

  void wire_func_enum_with_item_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal> arg,
  ) {
    return _wire_func_enum_with_item_struct_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_normal');
  late final _wire_func_enum_with_item_struct_twin_normal =
      _wire_func_enum_with_item_struct_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal>)>();

  void wire_func_enum_with_item_tuple_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal> arg,
  ) {
    return _wire_func_enum_with_item_tuple_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_normal');
  late final _wire_func_enum_with_item_tuple_twin_normal =
      _wire_func_enum_with_item_tuple_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal>)>();

  void wire_handle_enum_parameter_twin_normal(
    int port_,
    int weekday,
  ) {
    return _wire_handle_enum_parameter_twin_normal(
      port_,
      weekday,
    );
  }

  late final _wire_handle_enum_parameter_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_normal');
  late final _wire_handle_enum_parameter_twin_normal =
      _wire_handle_enum_parameter_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_enum_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_kitchen_sink_twin_normal> val,
  ) {
    return _wire_handle_enum_struct_twin_normal(
      port_,
      val,
    );
  }

  late final _wire_handle_enum_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_kitchen_sink_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_normal');
  late final _wire_handle_enum_struct_twin_normal =
      _wire_handle_enum_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_kitchen_sink_twin_normal>)>();

  void wire_handle_return_enum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> input,
  ) {
    return _wire_handle_return_enum_twin_normal(
      port_,
      input,
    );
  }

  late final _wire_handle_return_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_normal');
  late final _wire_handle_return_enum_twin_normal =
      _wire_handle_return_enum_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_multiply_by_ten_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_measure_twin_normal> measure,
  ) {
    return _wire_multiply_by_ten_twin_normal(
      port_,
      measure,
    );
  }

  late final _wire_multiply_by_ten_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_measure_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_normal');
  late final _wire_multiply_by_ten_twin_normal =
      _wire_multiply_by_ten_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_measure_twin_normal>)>();

  void wire_print_note_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_note_twin_normal> note,
  ) {
    return _wire_print_note_twin_normal(
      port_,
      note,
    );
  }

  late final _wire_print_note_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_note_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_normal');
  late final _wire_print_note_twin_normal = _wire_print_note_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_note_twin_normal>)>();

  void wire_EventTwinNormal_as_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_event_twin_normal> that,
  ) {
    return _wire_EventTwinNormal_as_string_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_EventTwinNormal_as_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_event_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_EventTwinNormal_as_string_twin_normal');
  late final _wire_EventTwinNormal_as_string_twin_normal =
      _wire_EventTwinNormal_as_string_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_event_twin_normal>)>();

  void wire_close_event_listener_twin_normal(
    int port_,
  ) {
    return _wire_close_event_listener_twin_normal(
      port_,
    );
  }

  late final _wire_close_event_listener_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_close_event_listener_twin_normal');
  late final _wire_close_event_listener_twin_normal =
      _wire_close_event_listener_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_create_event_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> address,
    ffi.Pointer<wire_cst_list_prim_u_8> payload,
  ) {
    return _wire_create_event_twin_normal(
      port_,
      address,
      payload,
    );
  }

  late final _wire_create_event_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_create_event_twin_normal');
  late final _wire_create_event_twin_normal =
      _wire_create_event_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>,
              ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_register_event_listener_twin_normal(
    int port_,
  ) {
    return _wire_register_event_listener_twin_normal(
      port_,
    );
  }

  late final _wire_register_event_listener_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_register_event_listener_twin_normal');
  late final _wire_register_event_listener_twin_normal =
      _wire_register_event_listener_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_CustomStructTwinNormal_new_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> message,
  ) {
    return _wire_CustomStructTwinNormal_new_twin_normal(
      port_,
      message,
    );
  }

  late final _wire_CustomStructTwinNormal_new_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_CustomStructTwinNormal_new_twin_normal');
  late final _wire_CustomStructTwinNormal_new_twin_normal =
      _wire_CustomStructTwinNormal_new_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void
      wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_twin_normal> that,
  ) {
    return _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_custom_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal');
  late final _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normal =
      _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_error_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_custom_struct_twin_normal>)>();

  void
      wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_twin_normal> that,
  ) {
    return _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_custom_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal');
  late final _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normal =
      _wire_CustomStructTwinNormal_nonstatic_return_custom_struct_ok_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_custom_struct_twin_normal>)>();

  void
      wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal(
    int port_,
  ) {
    return _wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal(
      port_,
    );
  }

  late final _wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal');
  late final _wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normal =
      _wire_CustomStructTwinNormal_static_return_custom_struct_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal(
    int port_,
  ) {
    return _wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal(
      port_,
    );
  }

  late final _wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal');
  late final _wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normal =
      _wire_CustomStructTwinNormal_static_return_custom_struct_ok_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_SomeStructTwinNormal_new_twin_normal(
    int port_,
    int value,
  ) {
    return _wire_SomeStructTwinNormal_new_twin_normal(
      port_,
      value,
    );
  }

  late final _wire_SomeStructTwinNormal_new_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_SomeStructTwinNormal_new_twin_normal');
  late final _wire_SomeStructTwinNormal_new_twin_normal =
      _wire_SomeStructTwinNormal_new_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_some_struct_twin_normal> that,
  ) {
    return _wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_some_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal');
  late final _wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normal =
      _wire_SomeStructTwinNormal_non_static_return_err_custom_error_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_some_struct_twin_normal>)>();

  void wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_some_struct_twin_normal> that,
  ) {
    return _wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_some_struct_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal');
  late final _wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normal =
      _wire_SomeStructTwinNormal_non_static_return_ok_custom_error_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_some_struct_twin_normal>)>();

  void wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal(
    int port_,
  ) {
    return _wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal(
      port_,
    );
  }

  late final _wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal');
  late final _wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normal =
      _wire_SomeStructTwinNormal_static_return_err_custom_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal(
    int port_,
  ) {
    return _wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal(
      port_,
    );
  }

  late final _wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal');
  late final _wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normal =
      _wire_SomeStructTwinNormal_static_return_ok_custom_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_panic_twin_normal(
    int port_,
  ) {
    return _wire_custom_enum_error_panic_twin_normal(
      port_,
    );
  }

  late final _wire_custom_enum_error_panic_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_normal');
  late final _wire_custom_enum_error_panic_twin_normal =
      _wire_custom_enum_error_panic_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_return_error_twin_normal(
    int port_,
  ) {
    return _wire_custom_enum_error_return_error_twin_normal(
      port_,
    );
  }

  late final _wire_custom_enum_error_return_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_normal');
  late final _wire_custom_enum_error_return_error_twin_normal =
      _wire_custom_enum_error_return_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_return_ok_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_custom_enum_error_return_ok_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_normal');
  late final _wire_custom_enum_error_return_ok_twin_normal =
      _wire_custom_enum_error_return_ok_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_custom_nested_error_return_error_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal> arg,
  ) {
    return _wire_custom_nested_error_return_error_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_custom_nested_error_outer_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_normal');
  late final _wire_custom_nested_error_return_error_twin_normal =
      _wire_custom_nested_error_return_error_twin_normalPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal>)>();

  void wire_custom_struct_error_return_error_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_error_twin_normal> arg,
  ) {
    return _wire_custom_struct_error_return_error_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_custom_struct_error_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_normal');
  late final _wire_custom_struct_error_return_error_twin_normal =
      _wire_custom_struct_error_return_error_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_custom_struct_error_twin_normal>)>();

  void wire_func_return_error_twin_normal(
    int port_,
  ) {
    return _wire_func_return_error_twin_normal(
      port_,
    );
  }

  late final _wire_func_return_error_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_func_return_error_twin_normal');
  late final _wire_func_return_error_twin_normal =
      _wire_func_return_error_twin_normalPtr.asFunction<void Function(int)>();

  void wire_func_type_fallible_panic_twin_normal(
    int port_,
  ) {
    return _wire_func_type_fallible_panic_twin_normal(
      port_,
    );
  }

  late final _wire_func_type_fallible_panic_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_normal');
  late final _wire_func_type_fallible_panic_twin_normal =
      _wire_func_type_fallible_panic_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_func_type_infallible_panic_twin_normal(
    int port_,
  ) {
    return _wire_func_type_infallible_panic_twin_normal(
      port_,
    );
  }

  late final _wire_func_type_infallible_panic_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_normal');
  late final _wire_func_type_infallible_panic_twin_normal =
      _wire_func_type_infallible_panic_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_panic_with_custom_result_twin_normal(
    int port_,
  ) {
    return _wire_panic_with_custom_result_twin_normal(
      port_,
    );
  }

  late final _wire_panic_with_custom_result_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_normal');
  late final _wire_panic_with_custom_result_twin_normal =
      _wire_panic_with_custom_result_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_1_twin_normal(
    int port_,
  ) {
    return _wire_return_custom_nested_error_1_twin_normal(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_1_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_normal');
  late final _wire_return_custom_nested_error_1_twin_normal =
      _wire_return_custom_nested_error_1_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_1_variant1_twin_normal(
    int port_,
  ) {
    return _wire_return_custom_nested_error_1_variant1_twin_normal(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_normal');
  late final _wire_return_custom_nested_error_1_variant1_twin_normal =
      _wire_return_custom_nested_error_1_variant1_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_2_twin_normal(
    int port_,
  ) {
    return _wire_return_custom_nested_error_2_twin_normal(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_2_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_normal');
  late final _wire_return_custom_nested_error_2_twin_normal =
      _wire_return_custom_nested_error_2_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_struct_error_twin_normal(
    int port_,
  ) {
    return _wire_return_custom_struct_error_twin_normal(
      port_,
    );
  }

  late final _wire_return_custom_struct_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_normal');
  late final _wire_return_custom_struct_error_twin_normal =
      _wire_return_custom_struct_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_struct_ok_twin_normal(
    int port_,
  ) {
    return _wire_return_custom_struct_ok_twin_normal(
      port_,
    );
  }

  late final _wire_return_custom_struct_ok_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_normal');
  late final _wire_return_custom_struct_ok_twin_normal =
      _wire_return_custom_struct_ok_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_err_custom_error_twin_normal(
    int port_,
  ) {
    return _wire_return_err_custom_error_twin_normal(
      port_,
    );
  }

  late final _wire_return_err_custom_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_normal');
  late final _wire_return_err_custom_error_twin_normal =
      _wire_return_err_custom_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_return_error_variant_twin_normal(
    int port_,
    int variant,
  ) {
    return _wire_return_error_variant_twin_normal(
      port_,
      variant,
    );
  }

  late final _wire_return_error_variant_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_normal');
  late final _wire_return_error_variant_twin_normal =
      _wire_return_error_variant_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_return_ok_custom_error_twin_normal(
    int port_,
  ) {
    return _wire_return_ok_custom_error_twin_normal(
      port_,
    );
  }

  late final _wire_return_ok_custom_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_normal');
  late final _wire_return_ok_custom_error_twin_normal =
      _wire_return_ok_custom_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_stream_sink_throw_anyhow_twin_normal(
    int port_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_normal(
      port_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_normal');
  late final _wire_stream_sink_throw_anyhow_twin_normal =
      _wire_stream_sink_throw_anyhow_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_throw_anyhow_twin_normal(
    int port_,
  ) {
    return _wire_throw_anyhow_twin_normal(
      port_,
    );
  }

  late final _wire_throw_anyhow_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_normal');
  late final _wire_throw_anyhow_twin_normal =
      _wire_throw_anyhow_twin_normalPtr.asFunction<void Function(int)>();

  void wire_call_new_module_system_twin_normal(
    int port_,
  ) {
    return _wire_call_new_module_system_twin_normal(
      port_,
    );
  }

  late final _wire_call_new_module_system_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_normal');
  late final _wire_call_new_module_system_twin_normal =
      _wire_call_new_module_system_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_call_old_module_system_twin_normal(
    int port_,
  ) {
    return _wire_call_old_module_system_twin_normal(
      port_,
    );
  }

  late final _wire_call_old_module_system_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_normal');
  late final _wire_call_old_module_system_twin_normal =
      _wire_call_old_module_system_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_use_imported_enum_twin_normal(
    int port_,
    int my_enum,
  ) {
    return _wire_use_imported_enum_twin_normal(
      port_,
      my_enum,
    );
  }

  late final _wire_use_imported_enum_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_normal');
  late final _wire_use_imported_enum_twin_normal =
      _wire_use_imported_enum_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_use_imported_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_my_struct> my_struct,
  ) {
    return _wire_use_imported_struct_twin_normal(
      port_,
      my_struct,
    );
  }

  late final _wire_use_imported_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_my_struct>)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_normal');
  late final _wire_use_imported_struct_twin_normal =
      _wire_use_imported_struct_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_my_struct>)>();

  void wire_another_macro_struct_twin_normal(
    int port_,
  ) {
    return _wire_another_macro_struct_twin_normal(
      port_,
    );
  }

  late final _wire_another_macro_struct_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_another_macro_struct_twin_normal');
  late final _wire_another_macro_struct_twin_normal =
      _wire_another_macro_struct_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_func_macro_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_macro_struct> arg,
  ) {
    return _wire_func_macro_struct_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_macro_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_macro_struct>)>>(
      'frbgen_frb_example_pure_dart_wire_func_macro_struct_twin_normal');
  late final _wire_func_macro_struct_twin_normal =
      _wire_func_macro_struct_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_macro_struct>)>();

  void wire_func_hash_map_i32_i32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_32> arg,
  ) {
    return _wire_func_hash_map_i32_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_normal');
  late final _wire_func_hash_map_i32_i32_twin_normal =
      _wire_func_hash_map_i32_i32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>();

  void wire_func_hash_map_string_bytes_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_list_prim_u_8> arg,
  ) {
    return _wire_func_hash_map_string_bytes_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_record_string_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_normal');
  late final _wire_func_hash_map_string_bytes_twin_normal =
      _wire_func_hash_map_string_bytes_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_record_string_list_prim_u_8>)>();

  void wire_func_hash_map_string_complex_enum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal> arg,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_string_kitchen_sink_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_normal');
  late final _wire_func_hash_map_string_complex_enum_twin_normal =
      _wire_func_hash_map_string_complex_enum_twin_normalPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_record_string_kitchen_sink_twin_normal>)>();

  void wire_func_hash_map_string_simple_enum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal> arg,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_string_enum_simple_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_normal');
  late final _wire_func_hash_map_string_simple_enum_twin_normal =
      _wire_func_hash_map_string_simple_enum_twin_normalPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_record_string_enum_simple_twin_normal>)>();

  void wire_func_hash_map_string_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_string> arg,
  ) {
    return _wire_func_hash_map_string_string_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_string_string>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_normal');
  late final _wire_func_hash_map_string_string_twin_normal =
      _wire_func_hash_map_string_string_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_record_string_string>)>();

  void wire_func_hash_map_string_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_my_size> arg,
  ) {
    return _wire_func_hash_map_string_struct_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_record_string_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_normal');
  late final _wire_func_hash_map_string_struct_twin_normal =
      _wire_func_hash_map_string_struct_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_record_string_my_size>)>();

  void wire_func_hash_set_i32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_32> arg,
  ) {
    return _wire_func_hash_set_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_set_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_normal');
  late final _wire_func_hash_set_i32_twin_normal =
      _wire_func_hash_set_i32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_32>)>();

  void wire_func_hash_set_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_String> arg,
  ) {
    return _wire_func_hash_set_string_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_set_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_normal');
  late final _wire_func_hash_set_string_twin_normal =
      _wire_func_hash_set_string_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> a,
    ffi.Pointer<wire_cst_list_prim_u_8> b,
  ) {
    return _wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_concatenate_static_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8>,
                      ffi.Pointer<wire_cst_list_prim_u_8>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_concatenate_static_twin_normal =
      _wire_ConcatenateWithTwinNormal_concatenate_static_twin_normalPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_ConcatenateWithTwinNormal_concatenate_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_normal> that,
    ffi.Pointer<wire_cst_list_prim_u_8> b,
  ) {
    return _wire_ConcatenateWithTwinNormal_concatenate_twin_normal(
      port_,
      that,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_concatenate_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_concatenate_with_twin_normal>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_concatenate_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_concatenate_twin_normal =
      _wire_ConcatenateWithTwinNormal_concatenate_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_concatenate_with_twin_normal>,
              ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void
      wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal(
    int port_,
  ) {
    return _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal(
      port_,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normal =
      _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_single_arg_twin_normalPtr
          .asFunction<void Function(int)>();

  void
      wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal(
    int port_,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal(
      port_,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normal =
      _wire_ConcatenateWithTwinNormal_handle_some_static_stream_sink_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_normal> that,
  ) {
    return _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_normal>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normal =
      _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_at_1_twin_normalPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_concatenate_with_twin_normal>)>();

  void wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_normal> that,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal(
      port_,
      that,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_normal>,
                      ffi.Uint32,
                      ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normal =
      _wire_ConcatenateWithTwinNormal_handle_some_stream_sink_twin_normalPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_normal>,
                  int,
                  int)>();

  void wire_ConcatenateWithTwinNormal_new_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> a,
  ) {
    return _wire_ConcatenateWithTwinNormal_new_twin_normal(
      port_,
      a,
    );
  }

  late final _wire_ConcatenateWithTwinNormal_new_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinNormal_new_twin_normal');
  late final _wire_ConcatenateWithTwinNormal_new_twin_normal =
      _wire_ConcatenateWithTwinNormal_new_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_SumWithTwinNormal_sum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_sum_with_twin_normal> that,
    int y,
    int z,
  ) {
    return _wire_SumWithTwinNormal_sum_twin_normal(
      port_,
      that,
      y,
      z,
    );
  }

  late final _wire_SumWithTwinNormal_sum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_sum_with_twin_normal>,
                  ffi.Uint32,
                  ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinNormal_sum_twin_normal');
  late final _wire_SumWithTwinNormal_sum_twin_normal =
      _wire_SumWithTwinNormal_sum_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_sum_with_twin_normal>, int, int)>();

  void wire_get_sum_array_twin_normal(
    int port_,
    int a,
    int b,
    int c,
  ) {
    return _wire_get_sum_array_twin_normal(
      port_,
      a,
      b,
      c,
    );
  }

  late final _wire_get_sum_array_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Uint32, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_normal');
  late final _wire_get_sum_array_twin_normal =
      _wire_get_sum_array_twin_normalPtr
          .asFunction<void Function(int, int, int, int)>();

  void wire_get_sum_struct_twin_normal(
    int port_,
  ) {
    return _wire_get_sum_struct_twin_normal(
      port_,
    );
  }

  late final _wire_get_sum_struct_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_normal');
  late final _wire_get_sum_struct_twin_normal =
      _wire_get_sum_struct_twin_normalPtr.asFunction<void Function(int)>();

  void wire_app_settings_stream_twin_normal(
    int port_,
  ) {
    return _wire_app_settings_stream_twin_normal(
      port_,
    );
  }

  late final _wire_app_settings_stream_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_normal');
  late final _wire_app_settings_stream_twin_normal =
      _wire_app_settings_stream_twin_normalPtr.asFunction<void Function(int)>();

  void wire_app_settings_vec_stream_twin_normal(
    int port_,
  ) {
    return _wire_app_settings_vec_stream_twin_normal(
      port_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_normal');
  late final _wire_app_settings_vec_stream_twin_normal =
      _wire_app_settings_vec_stream_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_first_number_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_numbers> nums,
  ) {
    return _wire_first_number_twin_normal(
      port_,
      nums,
    );
  }

  late final _wire_first_number_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_numbers>)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_normal');
  late final _wire_first_number_twin_normal = _wire_first_number_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_numbers>)>();

  void wire_first_sequence_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_sequences> seqs,
  ) {
    return _wire_first_sequence_twin_normal(
      port_,
      seqs,
    );
  }

  late final _wire_first_sequence_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_sequences>)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_normal');
  late final _wire_first_sequence_twin_normal =
      _wire_first_sequence_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_sequences>)>();

  void wire_get_app_settings_twin_normal(
    int port_,
  ) {
    return _wire_get_app_settings_twin_normal(
      port_,
    );
  }

  late final _wire_get_app_settings_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_normal');
  late final _wire_get_app_settings_twin_normal =
      _wire_get_app_settings_twin_normalPtr.asFunction<void Function(int)>();

  void wire_get_fallible_app_settings_twin_normal(
    int port_,
  ) {
    return _wire_get_fallible_app_settings_twin_normal(
      port_,
    );
  }

  late final _wire_get_fallible_app_settings_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_normal');
  late final _wire_get_fallible_app_settings_twin_normal =
      _wire_get_fallible_app_settings_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_get_message_twin_normal(
    int port_,
  ) {
    return _wire_get_message_twin_normal(
      port_,
    );
  }

  late final _wire_get_message_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_message_twin_normal');
  late final _wire_get_message_twin_normal =
      _wire_get_message_twin_normalPtr.asFunction<void Function(int)>();

  void wire_is_app_embedded_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_application_settings> app_settings,
  ) {
    return _wire_is_app_embedded_twin_normal(
      port_,
      app_settings,
    );
  }

  late final _wire_is_app_embedded_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_application_settings>)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_normal');
  late final _wire_is_app_embedded_twin_normal =
      _wire_is_app_embedded_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_application_settings>)>();

  void wire_mirror_struct_stream_twin_normal(
    int port_,
  ) {
    return _wire_mirror_struct_stream_twin_normal(
      port_,
    );
  }

  late final _wire_mirror_struct_stream_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_normal');
  late final _wire_mirror_struct_stream_twin_normal =
      _wire_mirror_struct_stream_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_mirror_tuple_stream_twin_normal(
    int port_,
  ) {
    return _wire_mirror_tuple_stream_twin_normal(
      port_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_normal');
  late final _wire_mirror_tuple_stream_twin_normal =
      _wire_mirror_tuple_stream_twin_normalPtr.asFunction<void Function(int)>();

  void wire_repeat_number_twin_normal(
    int port_,
    int num,
    int times,
  ) {
    return _wire_repeat_number_twin_normal(
      port_,
      num,
      times,
    );
  }

  late final _wire_repeat_number_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_normal');
  late final _wire_repeat_number_twin_normal =
      _wire_repeat_number_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_repeat_sequence_twin_normal(
    int port_,
    int seq,
    int times,
  ) {
    return _wire_repeat_sequence_twin_normal(
      port_,
      seq,
      times,
    );
  }

  late final _wire_repeat_sequence_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_normal');
  late final _wire_repeat_sequence_twin_normal =
      _wire_repeat_sequence_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_test_contains_mirrored_sub_struct_twin_normal(
    int port_,
  ) {
    return _wire_test_contains_mirrored_sub_struct_twin_normal(
      port_,
    );
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_normal');
  late final _wire_test_contains_mirrored_sub_struct_twin_normal =
      _wire_test_contains_mirrored_sub_struct_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_fallible_of_raw_string_mirrored_twin_normal(
    int port_,
  ) {
    return _wire_test_fallible_of_raw_string_mirrored_twin_normal(
      port_,
    );
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_normal');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_normal =
      _wire_test_fallible_of_raw_string_mirrored_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_list_of_nested_enums_mirrored_twin_normal(
    int port_,
  ) {
    return _wire_test_list_of_nested_enums_mirrored_twin_normal(
      port_,
    );
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_normal');
  late final _wire_test_list_of_nested_enums_mirrored_twin_normal =
      _wire_test_list_of_nested_enums_mirrored_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_list_of_raw_nested_string_mirrored_twin_normal(
    int port_,
  ) {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_normal(
      port_,
    );
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_normal');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_normal =
      _wire_test_list_of_raw_nested_string_mirrored_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_nested_raw_string_mirrored_twin_normal(
    int port_,
  ) {
    return _wire_test_nested_raw_string_mirrored_twin_normal(
      port_,
    );
  }

  late final _wire_test_nested_raw_string_mirrored_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_normal');
  late final _wire_test_nested_raw_string_mirrored_twin_normal =
      _wire_test_nested_raw_string_mirrored_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_raw_string_enum_mirrored_twin_normal(
    int port_,
    bool nested,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_normal(
      port_,
      nested,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_normal');
  late final _wire_test_raw_string_enum_mirrored_twin_normal =
      _wire_test_raw_string_enum_mirrored_twin_normalPtr
          .asFunction<void Function(int, bool)>();

  void wire_test_raw_string_mirrored_twin_normal(
    int port_,
  ) {
    return _wire_test_raw_string_mirrored_twin_normal(
      port_,
    );
  }

  late final _wire_test_raw_string_mirrored_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_normal');
  late final _wire_test_raw_string_mirrored_twin_normal =
      _wire_test_raw_string_mirrored_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_handle_big_buffers_twin_normal(
    int port_,
  ) {
    return _wire_handle_big_buffers_twin_normal(
      port_,
    );
  }

  late final _wire_handle_big_buffers_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_normal');
  late final _wire_handle_big_buffers_twin_normal =
      _wire_handle_big_buffers_twin_normalPtr.asFunction<void Function(int)>();

  void wire_handle_complex_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_my_tree_node_twin_normal> s,
  ) {
    return _wire_handle_complex_struct_twin_normal(
      port_,
      s,
    );
  }

  late final _wire_handle_complex_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_my_tree_node_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_normal');
  late final _wire_handle_complex_struct_twin_normal =
      _wire_handle_complex_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_my_tree_node_twin_normal>)>();

  void wire_handle_nested_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_my_nested_struct_twin_normal> s,
  ) {
    return _wire_handle_nested_struct_twin_normal(
      port_,
      s,
    );
  }

  late final _wire_handle_nested_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_my_nested_struct_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_normal');
  late final _wire_handle_nested_struct_twin_normal =
      _wire_handle_nested_struct_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_my_nested_struct_twin_normal>)>();

  void wire_handle_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> s,
  ) {
    return _wire_handle_string_twin_normal(
      port_,
      s,
    );
  }

  late final _wire_handle_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_normal');
  late final _wire_handle_string_twin_normal =
      _wire_handle_string_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_handle_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_my_size> arg,
    ffi.Pointer<wire_cst_my_size> boxed,
  ) {
    return _wire_handle_struct_twin_normal(
      port_,
      arg,
      boxed,
    );
  }

  late final _wire_handle_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_my_size>,
                  ffi.Pointer<wire_cst_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_normal');
  late final _wire_handle_struct_twin_normal =
      _wire_handle_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_my_size>,
              ffi.Pointer<wire_cst_my_size>)>();

  void wire_handle_vec_u8_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> v,
  ) {
    return _wire_handle_vec_u8_twin_normal(
      port_,
      v,
    );
  }

  late final _wire_handle_vec_u8_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_normal');
  late final _wire_handle_vec_u8_twin_normal =
      _wire_handle_vec_u8_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_list_of_primitive_enums_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_weekdays_twin_normal> weekdays,
  ) {
    return _wire_list_of_primitive_enums_twin_normal(
      port_,
      weekdays,
    );
  }

  late final _wire_list_of_primitive_enums_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_weekdays_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_normal');
  late final _wire_list_of_primitive_enums_twin_normal =
      _wire_list_of_primitive_enums_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_weekdays_twin_normal>)>();

  void wire_test_abc_enum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_abc_twin_normal> abc,
  ) {
    return _wire_test_abc_enum_twin_normal(
      port_,
      abc,
    );
  }

  late final _wire_test_abc_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_abc_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_normal');
  late final _wire_test_abc_enum_twin_normal =
      _wire_test_abc_enum_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_abc_twin_normal>)>();

  void wire_test_struct_with_enum_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_enum_twin_normal> se,
  ) {
    return _wire_test_struct_with_enum_twin_normal(
      port_,
      se,
    );
  }

  late final _wire_test_struct_with_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_struct_with_enum_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_normal');
  late final _wire_test_struct_with_enum_twin_normal =
      _wire_test_struct_with_enum_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_struct_with_enum_twin_normal>)>();

  void wire_empty_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_empty_twin_normal> empty,
  ) {
    return _wire_empty_struct_twin_normal(
      port_,
      empty,
    );
  }

  late final _wire_empty_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_empty_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_normal');
  late final _wire_empty_struct_twin_normal =
      _wire_empty_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_empty_twin_normal>)>();

  void wire_func_return_unit_twin_normal(
    int port_,
  ) {
    return _wire_func_return_unit_twin_normal(
      port_,
    );
  }

  late final _wire_func_return_unit_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_normal');
  late final _wire_func_return_unit_twin_normal =
      _wire_func_return_unit_twin_normalPtr.asFunction<void Function(int)>();

  void wire_func_string_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> arg,
  ) {
    return _wire_func_string_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_string_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_func_string_twin_normal');
  late final _wire_func_string_twin_normal = _wire_func_string_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_handle_list_of_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_my_size> l,
  ) {
    return _wire_handle_list_of_struct_twin_normal(
      port_,
      l,
    );
  }

  late final _wire_handle_list_of_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_normal');
  late final _wire_handle_list_of_struct_twin_normal =
      _wire_handle_list_of_struct_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_my_size>)>();

  void wire_handle_string_list_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_String> names,
  ) {
    return _wire_handle_string_list_twin_normal(
      port_,
      names,
    );
  }

  late final _wire_handle_string_list_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_normal');
  late final _wire_handle_string_list_twin_normal =
      _wire_handle_string_list_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_handle_newtype_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_new_type_int_twin_normal> arg,
  ) {
    return _wire_handle_newtype_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_handle_newtype_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_new_type_int_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_normal');
  late final _wire_handle_newtype_twin_normal =
      _wire_handle_newtype_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_new_type_int_twin_normal>)>();

  void wire_handle_increment_boxed_optional_twin_normal(
    int port_,
    ffi.Pointer<ffi.Double> opt,
  ) {
    return _wire_handle_increment_boxed_optional_twin_normal(
      port_,
      opt,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_normal');
  late final _wire_handle_increment_boxed_optional_twin_normal =
      _wire_handle_increment_boxed_optional_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Double>)>();

  void wire_handle_option_box_arguments_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int8> i8box,
    ffi.Pointer<ffi.Uint8> u8box,
    ffi.Pointer<ffi.Int32> i32box,
    ffi.Pointer<ffi.Int64> i64box,
    ffi.Pointer<ffi.Double> f64box,
    ffi.Pointer<ffi.Bool> boolbox,
    ffi.Pointer<wire_cst_exotic_optionals_twin_normal> structbox,
  ) {
    return _wire_handle_option_box_arguments_twin_normal(
      port_,
      i8box,
      u8box,
      i32box,
      i64box,
      f64box,
      boolbox,
      structbox,
    );
  }

  late final _wire_handle_option_box_arguments_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<ffi.Int8>,
                  ffi.Pointer<ffi.Uint8>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>,
                  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_normal');
  late final _wire_handle_option_box_arguments_twin_normal =
      _wire_handle_option_box_arguments_twin_normalPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Uint8>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<wire_cst_exotic_optionals_twin_normal>)>();

  void wire_handle_optional_increment_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_exotic_optionals_twin_normal> opt,
  ) {
    return _wire_handle_optional_increment_twin_normal(
      port_,
      opt,
    );
  }

  late final _wire_handle_optional_increment_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_normal');
  late final _wire_handle_optional_increment_twin_normal =
      _wire_handle_optional_increment_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_exotic_optionals_twin_normal>)>();

  void wire_handle_optional_return_twin_normal(
    int port_,
    double left,
    double right,
  ) {
    return _wire_handle_optional_return_twin_normal(
      port_,
      left,
      right,
    );
  }

  late final _wire_handle_optional_return_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Double, ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_normal');
  late final _wire_handle_optional_return_twin_normal =
      _wire_handle_optional_return_twin_normalPtr
          .asFunction<void Function(int, double, double)>();

  void wire_handle_optional_struct_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> document,
  ) {
    return _wire_handle_optional_struct_twin_normal(
      port_,
      document,
    );
  }

  late final _wire_handle_optional_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_normal');
  late final _wire_handle_optional_struct_twin_normal =
      _wire_handle_optional_struct_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_handle_vec_of_opts_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_opt_vecs_twin_normal> opt,
  ) {
    return _wire_handle_vec_of_opts_twin_normal(
      port_,
      opt,
    );
  }

  late final _wire_handle_vec_of_opts_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_opt_vecs_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_normal');
  late final _wire_handle_vec_of_opts_twin_normal =
      _wire_handle_vec_of_opts_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_opt_vecs_twin_normal>)>();

  void wire_primitive_optional_types_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int32> my_i32,
    ffi.Pointer<ffi.Int64> my_i64,
    ffi.Pointer<ffi.Double> my_f64,
    ffi.Pointer<ffi.Bool> my_bool,
  ) {
    return _wire_primitive_optional_types_twin_normal(
      port_,
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_optional_types_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_normal');
  late final _wire_primitive_optional_types_twin_normal =
      _wire_primitive_optional_types_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Int32>, ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>, ffi.Pointer<ffi.Bool>)>();

  void wire_handle_vec_of_primitive_twin_normal(
    int port_,
    int n,
  ) {
    return _wire_handle_vec_of_primitive_twin_normal(
      port_,
      n,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_normal');
  late final _wire_handle_vec_of_primitive_twin_normal =
      _wire_handle_vec_of_primitive_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_primitive_isize_loopback_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_primitive_isize_loopback_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_primitive_isize_loopback_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.IntPtr)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_isize_loopback_twin_normal');
  late final _wire_primitive_isize_loopback_twin_normal =
      _wire_primitive_isize_loopback_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_primitive_types_twin_normal(
    int port_,
    int my_i32,
    int my_i64,
    double my_f64,
    bool my_bool,
  ) {
    return _wire_primitive_types_twin_normal(
      port_,
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_types_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Int32, ffi.Int64, ffi.Double, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_normal');
  late final _wire_primitive_types_twin_normal =
      _wire_primitive_types_twin_normalPtr
          .asFunction<void Function(int, int, int, double, bool)>();

  void wire_primitive_u32_twin_normal(
    int port_,
    int my_u32,
  ) {
    return _wire_primitive_u32_twin_normal(
      port_,
      my_u32,
    );
  }

  late final _wire_primitive_u32_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_normal');
  late final _wire_primitive_u32_twin_normal =
      _wire_primitive_u32_twin_normalPtr.asFunction<void Function(int, int)>();

  void wire_primitive_usize_loopback_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_primitive_usize_loopback_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_primitive_usize_loopback_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_usize_loopback_twin_normal');
  late final _wire_primitive_usize_loopback_twin_normal =
      _wire_primitive_usize_loopback_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_boxed_blob_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> blob,
  ) {
    return _wire_boxed_blob_twin_rust_async(
      port_,
      blob,
    );
  }

  late final _wire_boxed_blob_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_rust_async');
  late final _wire_boxed_blob_twin_rust_async =
      _wire_boxed_blob_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_func_test_id_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_test_id_twin_rust_async> id,
  ) {
    return _wire_func_test_id_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_func_test_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_test_id_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_rust_async');
  late final _wire_func_test_id_twin_rust_async =
      _wire_func_test_id_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_test_id_twin_rust_async>)>();

  void wire_get_array_twin_rust_async(
    int port_,
  ) {
    return _wire_get_array_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_array_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_array_twin_rust_async');
  late final _wire_get_array_twin_rust_async =
      _wire_get_array_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_get_complex_array_twin_rust_async(
    int port_,
  ) {
    return _wire_get_complex_array_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_complex_array_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_rust_async');
  late final _wire_get_complex_array_twin_rust_async =
      _wire_get_complex_array_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_last_number_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_64> array,
  ) {
    return _wire_last_number_twin_rust_async(
      port_,
      array,
    );
  }

  late final _wire_last_number_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_64>)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_rust_async');
  late final _wire_last_number_twin_rust_async =
      _wire_last_number_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_64>)>();

  void wire_nested_id_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_test_id_twin_rust_async> id,
  ) {
    return _wire_nested_id_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_nested_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_test_id_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_rust_async');
  late final _wire_nested_id_twin_rust_async =
      _wire_nested_id_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_test_id_twin_rust_async>)>();

  void wire_new_msgid_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> id,
  ) {
    return _wire_new_msgid_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_new_msgid_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_rust_async');
  late final _wire_new_msgid_twin_rust_async =
      _wire_new_msgid_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_return_boxed_feed_id_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> id,
  ) {
    return _wire_return_boxed_feed_id_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_return_boxed_feed_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_rust_async');
  late final _wire_return_boxed_feed_id_twin_rust_async =
      _wire_return_boxed_feed_id_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_return_boxed_raw_feed_id_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_feed_id_twin_rust_async> id,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_feed_id_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_rust_async');
  late final _wire_return_boxed_raw_feed_id_twin_rust_async =
      _wire_return_boxed_raw_feed_id_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_feed_id_twin_rust_async>)>();

  void wire_use_boxed_blob_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_blob_twin_rust_async> blob,
  ) {
    return _wire_use_boxed_blob_twin_rust_async(
      port_,
      blob,
    );
  }

  late final _wire_use_boxed_blob_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_blob_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_rust_async');
  late final _wire_use_boxed_blob_twin_rust_async =
      _wire_use_boxed_blob_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_blob_twin_rust_async>)>();

  void wire_use_msgid_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_message_id_twin_rust_async> id,
  ) {
    return _wire_use_msgid_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_use_msgid_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_message_id_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_rust_async');
  late final _wire_use_msgid_twin_rust_async =
      _wire_use_msgid_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_message_id_twin_rust_async>)>();

  void wire_boxed_blob_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_boxed_blob_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_boxed_blob_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_rust_async_sse');
  late final _wire_boxed_blob_twin_rust_async_sse =
      _wire_boxed_blob_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_test_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_test_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_test_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_rust_async_sse');
  late final _wire_func_test_id_twin_rust_async_sse =
      _wire_func_test_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_array_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_array_twin_rust_async_sse');
  late final _wire_get_array_twin_rust_async_sse =
      _wire_get_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_complex_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_complex_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_complex_array_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_rust_async_sse');
  late final _wire_get_complex_array_twin_rust_async_sse =
      _wire_get_complex_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_last_number_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_last_number_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_last_number_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_rust_async_sse');
  late final _wire_last_number_twin_rust_async_sse =
      _wire_last_number_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_nested_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_nested_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_nested_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_rust_async_sse');
  late final _wire_nested_id_twin_rust_async_sse =
      _wire_nested_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_new_msgid_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_new_msgid_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_new_msgid_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_rust_async_sse');
  late final _wire_new_msgid_twin_rust_async_sse =
      _wire_new_msgid_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_boxed_feed_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_feed_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_feed_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_rust_async_sse');
  late final _wire_return_boxed_feed_id_twin_rust_async_sse =
      _wire_return_boxed_feed_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_boxed_raw_feed_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_rust_async_sse');
  late final _wire_return_boxed_raw_feed_id_twin_rust_async_sse =
      _wire_return_boxed_raw_feed_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_boxed_blob_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_boxed_blob_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_boxed_blob_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_rust_async_sse');
  late final _wire_use_boxed_blob_twin_rust_async_sse =
      _wire_use_boxed_blob_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_msgid_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_msgid_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_msgid_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_rust_async_sse');
  late final _wire_use_msgid_twin_rust_async_sse =
      _wire_use_msgid_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_boxed_blob_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_boxed_blob_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_boxed_blob_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_sse');
  late final _wire_boxed_blob_twin_sse = _wire_boxed_blob_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_test_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_test_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_test_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_sse');
  late final _wire_func_test_id_twin_sse = _wire_func_test_id_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_array_twin_sse');
  late final _wire_get_array_twin_sse = _wire_get_array_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_complex_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_complex_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_complex_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_sse');
  late final _wire_get_complex_array_twin_sse =
      _wire_get_complex_array_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_last_number_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_last_number_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_last_number_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_sse');
  late final _wire_last_number_twin_sse = _wire_last_number_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_nested_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_nested_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_nested_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_sse');
  late final _wire_nested_id_twin_sse = _wire_nested_id_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_new_msgid_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_new_msgid_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_new_msgid_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_sse');
  late final _wire_new_msgid_twin_sse = _wire_new_msgid_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_boxed_feed_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_feed_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_feed_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_sse');
  late final _wire_return_boxed_feed_id_twin_sse =
      _wire_return_boxed_feed_id_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_boxed_raw_feed_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_sse');
  late final _wire_return_boxed_raw_feed_id_twin_sse =
      _wire_return_boxed_raw_feed_id_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_boxed_blob_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_boxed_blob_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_boxed_blob_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_sse');
  late final _wire_use_boxed_blob_twin_sse = _wire_use_boxed_blob_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_msgid_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_msgid_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_msgid_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_sse');
  late final _wire_use_msgid_twin_sse = _wire_use_msgid_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_boxed_blob_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> blob,
  ) {
    return _wire_boxed_blob_twin_sync(
      blob,
    );
  }

  late final _wire_boxed_blob_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_sync');
  late final _wire_boxed_blob_twin_sync =
      _wire_boxed_blob_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_func_test_id_twin_sync(
    ffi.Pointer<wire_cst_test_id_twin_sync> id,
  ) {
    return _wire_func_test_id_twin_sync(
      id,
    );
  }

  late final _wire_func_test_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_test_id_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_sync');
  late final _wire_func_test_id_twin_sync =
      _wire_func_test_id_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_test_id_twin_sync>)>();

  WireSyncRust2DartDco wire_get_array_twin_sync() {
    return _wire_get_array_twin_sync();
  }

  late final _wire_get_array_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_get_array_twin_sync');
  late final _wire_get_array_twin_sync = _wire_get_array_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_get_complex_array_twin_sync() {
    return _wire_get_complex_array_twin_sync();
  }

  late final _wire_get_complex_array_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_sync');
  late final _wire_get_complex_array_twin_sync =
      _wire_get_complex_array_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_last_number_twin_sync(
    ffi.Pointer<wire_cst_list_prim_f_64> array,
  ) {
    return _wire_last_number_twin_sync(
      array,
    );
  }

  late final _wire_last_number_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_f_64>)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_sync');
  late final _wire_last_number_twin_sync =
      _wire_last_number_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_f_64>)>();

  WireSyncRust2DartDco wire_nested_id_twin_sync(
    ffi.Pointer<wire_cst_list_test_id_twin_sync> id,
  ) {
    return _wire_nested_id_twin_sync(
      id,
    );
  }

  late final _wire_nested_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_test_id_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_sync');
  late final _wire_nested_id_twin_sync =
      _wire_nested_id_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_test_id_twin_sync>)>();

  WireSyncRust2DartDco wire_new_msgid_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> id,
  ) {
    return _wire_new_msgid_twin_sync(
      id,
    );
  }

  late final _wire_new_msgid_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_sync');
  late final _wire_new_msgid_twin_sync =
      _wire_new_msgid_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_return_boxed_feed_id_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> id,
  ) {
    return _wire_return_boxed_feed_id_twin_sync(
      id,
    );
  }

  late final _wire_return_boxed_feed_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_sync');
  late final _wire_return_boxed_feed_id_twin_sync =
      _wire_return_boxed_feed_id_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_return_boxed_raw_feed_id_twin_sync(
    ffi.Pointer<wire_cst_feed_id_twin_sync> id,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_sync(
      id,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_feed_id_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_sync');
  late final _wire_return_boxed_raw_feed_id_twin_sync =
      _wire_return_boxed_raw_feed_id_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_feed_id_twin_sync>)>();

  WireSyncRust2DartDco wire_use_boxed_blob_twin_sync(
    ffi.Pointer<wire_cst_blob_twin_sync> blob,
  ) {
    return _wire_use_boxed_blob_twin_sync(
      blob,
    );
  }

  late final _wire_use_boxed_blob_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_blob_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_sync');
  late final _wire_use_boxed_blob_twin_sync =
      _wire_use_boxed_blob_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_blob_twin_sync>)>();

  WireSyncRust2DartDco wire_use_msgid_twin_sync(
    ffi.Pointer<wire_cst_message_id_twin_sync> id,
  ) {
    return _wire_use_msgid_twin_sync(
      id,
    );
  }

  late final _wire_use_msgid_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_message_id_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_sync');
  late final _wire_use_msgid_twin_sync =
      _wire_use_msgid_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_message_id_twin_sync>)>();

  WireSyncRust2DartSse wire_boxed_blob_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_boxed_blob_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_boxed_blob_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_boxed_blob_twin_sync_sse');
  late final _wire_boxed_blob_twin_sync_sse =
      _wire_boxed_blob_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_test_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_test_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_test_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_test_id_twin_sync_sse');
  late final _wire_func_test_id_twin_sync_sse =
      _wire_func_test_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_array_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_array_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_array_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_array_twin_sync_sse');
  late final _wire_get_array_twin_sync_sse =
      _wire_get_array_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_complex_array_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_complex_array_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_complex_array_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_complex_array_twin_sync_sse');
  late final _wire_get_complex_array_twin_sync_sse =
      _wire_get_complex_array_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_last_number_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_last_number_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_last_number_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_last_number_twin_sync_sse');
  late final _wire_last_number_twin_sync_sse =
      _wire_last_number_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_nested_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_nested_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_nested_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_nested_id_twin_sync_sse');
  late final _wire_nested_id_twin_sync_sse =
      _wire_nested_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_new_msgid_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_new_msgid_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_new_msgid_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_new_msgid_twin_sync_sse');
  late final _wire_new_msgid_twin_sync_sse =
      _wire_new_msgid_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_boxed_feed_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_feed_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_feed_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_feed_id_twin_sync_sse');
  late final _wire_return_boxed_feed_id_twin_sync_sse =
      _wire_return_boxed_feed_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_boxed_raw_feed_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_boxed_raw_feed_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_boxed_raw_feed_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_boxed_raw_feed_id_twin_sync_sse');
  late final _wire_return_boxed_raw_feed_id_twin_sync_sse =
      _wire_return_boxed_raw_feed_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_use_boxed_blob_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_boxed_blob_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_boxed_blob_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_boxed_blob_twin_sync_sse');
  late final _wire_use_boxed_blob_twin_sync_sse =
      _wire_use_boxed_blob_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_use_msgid_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_msgid_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_msgid_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_msgid_twin_sync_sse');
  late final _wire_use_msgid_twin_sync_sse =
      _wire_use_msgid_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_async_simple_add_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_async_simple_add_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_async_simple_add_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_async_simple_add_twin_sse');
  late final _wire_func_async_simple_add_twin_sse =
      _wire_func_async_simple_add_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_async_void_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_async_void_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_async_void_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_async_void_twin_sse');
  late final _wire_func_async_void_twin_sse = _wire_func_async_void_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_customized_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_customized_twin_rust_async> val,
  ) {
    return _wire_handle_customized_struct_twin_rust_async(
      port_,
      val,
    );
  }

  late final _wire_handle_customized_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_customized_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_rust_async');
  late final _wire_handle_customized_struct_twin_rust_async =
      _wire_handle_customized_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_customized_twin_rust_async>)>();

  void wire_next_user_id_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_user_id_twin_rust_async> user_id,
  ) {
    return _wire_next_user_id_twin_rust_async(
      port_,
      user_id,
    );
  }

  late final _wire_next_user_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_user_id_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_rust_async');
  late final _wire_next_user_id_twin_rust_async =
      _wire_next_user_id_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_user_id_twin_rust_async>)>();

  void wire_handle_customized_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_customized_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_customized_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_rust_async_sse');
  late final _wire_handle_customized_struct_twin_rust_async_sse =
      _wire_handle_customized_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_next_user_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_next_user_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_next_user_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_rust_async_sse');
  late final _wire_next_user_id_twin_rust_async_sse =
      _wire_next_user_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_customized_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_customized_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_customized_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_sse');
  late final _wire_handle_customized_struct_twin_sse =
      _wire_handle_customized_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_next_user_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_next_user_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_next_user_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_sse');
  late final _wire_next_user_id_twin_sse = _wire_next_user_id_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_customized_struct_twin_sync(
    ffi.Pointer<wire_cst_customized_twin_sync> val,
  ) {
    return _wire_handle_customized_struct_twin_sync(
      val,
    );
  }

  late final _wire_handle_customized_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_customized_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_sync');
  late final _wire_handle_customized_struct_twin_sync =
      _wire_handle_customized_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_customized_twin_sync>)>();

  WireSyncRust2DartDco wire_next_user_id_twin_sync(
    ffi.Pointer<wire_cst_user_id_twin_sync> user_id,
  ) {
    return _wire_next_user_id_twin_sync(
      user_id,
    );
  }

  late final _wire_next_user_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_user_id_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_sync');
  late final _wire_next_user_id_twin_sync =
      _wire_next_user_id_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_user_id_twin_sync>)>();

  WireSyncRust2DartSse wire_handle_customized_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_customized_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_customized_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_customized_struct_twin_sync_sse');
  late final _wire_handle_customized_struct_twin_sync_sse =
      _wire_handle_customized_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_next_user_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_next_user_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_next_user_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_next_user_id_twin_sync_sse');
  late final _wire_next_user_id_twin_sync_sse =
      _wire_next_user_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_json_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_normal(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_normal');
  late final _wire_benchmark_binary_tree_input_json_twin_normal =
      _wire_benchmark_binary_tree_input_json_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_benchmark_binary_tree_input_protobuf_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_normal(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_normal');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_normal =
      _wire_benchmark_binary_tree_input_protobuf_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_benchmark_binary_tree_input_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> tree,
  ) {
    return _wire_benchmark_binary_tree_input_twin_normal(
      port_,
      tree,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_normal');
  late final _wire_benchmark_binary_tree_input_twin_normal =
      _wire_benchmark_binary_tree_input_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>)>();

  void wire_benchmark_binary_tree_output_json_twin_normal(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_normal(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_normal');
  late final _wire_benchmark_binary_tree_output_json_twin_normal =
      _wire_benchmark_binary_tree_output_json_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_binary_tree_output_protobuf_twin_normal(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_normal(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_normal');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_normal =
      _wire_benchmark_binary_tree_output_protobuf_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_binary_tree_output_twin_normal(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_twin_normal(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_normal');
  late final _wire_benchmark_binary_tree_output_twin_normal =
      _wire_benchmark_binary_tree_output_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_input_json_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_blob_input_json_twin_normal(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_normal');
  late final _wire_benchmark_blob_input_json_twin_normal =
      _wire_benchmark_blob_input_json_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_benchmark_blob_input_protobuf_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_normal(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_normal');
  late final _wire_benchmark_blob_input_protobuf_twin_normal =
      _wire_benchmark_blob_input_protobuf_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_benchmark_blob_input_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_benchmark_blob_twin_normal> blob,
  ) {
    return _wire_benchmark_blob_input_twin_normal(
      port_,
      blob,
    );
  }

  late final _wire_benchmark_blob_input_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_benchmark_blob_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_normal');
  late final _wire_benchmark_blob_input_twin_normal =
      _wire_benchmark_blob_input_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_benchmark_blob_twin_normal>)>();

  void wire_benchmark_blob_output_json_twin_normal(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_json_twin_normal(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_normal');
  late final _wire_benchmark_blob_output_json_twin_normal =
      _wire_benchmark_blob_output_json_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_output_protobuf_twin_normal(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_normal(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_normal');
  late final _wire_benchmark_blob_output_protobuf_twin_normal =
      _wire_benchmark_blob_output_protobuf_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_output_twin_normal(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_twin_normal(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_normal');
  late final _wire_benchmark_blob_output_twin_normal =
      _wire_benchmark_blob_output_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_input_bytes_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> bytes,
  ) {
    return _wire_benchmark_input_bytes_twin_normal(
      port_,
      bytes,
    );
  }

  late final _wire_benchmark_input_bytes_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_normal');
  late final _wire_benchmark_input_bytes_twin_normal =
      _wire_benchmark_input_bytes_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_benchmark_output_bytes_twin_normal(
    int port_,
    int size,
  ) {
    return _wire_benchmark_output_bytes_twin_normal(
      port_,
      size,
    );
  }

  late final _wire_benchmark_output_bytes_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_normal');
  late final _wire_benchmark_output_bytes_twin_normal =
      _wire_benchmark_output_bytes_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_void_twin_normal(
    int port_,
  ) {
    return _wire_benchmark_void_twin_normal(
      port_,
    );
  }

  late final _wire_benchmark_void_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_normal');
  late final _wire_benchmark_void_twin_normal =
      _wire_benchmark_void_twin_normalPtr.asFunction<void Function(int)>();

  void wire_benchmark_binary_tree_input_json_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_rust_async(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_rust_async');
  late final _wire_benchmark_binary_tree_input_json_twin_rust_async =
      _wire_benchmark_binary_tree_input_json_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_benchmark_binary_tree_input_protobuf_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_rust_async(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_rust_async');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_rust_async =
      _wire_benchmark_binary_tree_input_protobuf_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_benchmark_binary_tree_input_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async> tree,
  ) {
    return _wire_benchmark_binary_tree_input_twin_rust_async(
      port_,
      tree,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_benchmark_binary_tree_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_rust_async');
  late final _wire_benchmark_binary_tree_input_twin_rust_async =
      _wire_benchmark_binary_tree_input_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>)>();

  void wire_benchmark_binary_tree_output_json_twin_rust_async(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_rust_async(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_rust_async');
  late final _wire_benchmark_binary_tree_output_json_twin_rust_async =
      _wire_benchmark_binary_tree_output_json_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_binary_tree_output_protobuf_twin_rust_async(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_rust_async(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_rust_async');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_rust_async =
      _wire_benchmark_binary_tree_output_protobuf_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_binary_tree_output_twin_rust_async(
    int port_,
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_twin_rust_async(
      port_,
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_rust_async');
  late final _wire_benchmark_binary_tree_output_twin_rust_async =
      _wire_benchmark_binary_tree_output_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_input_json_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_blob_input_json_twin_rust_async(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_rust_async');
  late final _wire_benchmark_blob_input_json_twin_rust_async =
      _wire_benchmark_blob_input_json_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_benchmark_blob_input_protobuf_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_rust_async(
      port_,
      raw,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_rust_async');
  late final _wire_benchmark_blob_input_protobuf_twin_rust_async =
      _wire_benchmark_blob_input_protobuf_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_benchmark_blob_input_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async> blob,
  ) {
    return _wire_benchmark_blob_input_twin_rust_async(
      port_,
      blob,
    );
  }

  late final _wire_benchmark_blob_input_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_rust_async');
  late final _wire_benchmark_blob_input_twin_rust_async =
      _wire_benchmark_blob_input_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async>)>();

  void wire_benchmark_blob_output_json_twin_rust_async(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_json_twin_rust_async(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_rust_async');
  late final _wire_benchmark_blob_output_json_twin_rust_async =
      _wire_benchmark_blob_output_json_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_output_protobuf_twin_rust_async(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_rust_async(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_rust_async');
  late final _wire_benchmark_blob_output_protobuf_twin_rust_async =
      _wire_benchmark_blob_output_protobuf_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_blob_output_twin_rust_async(
    int port_,
    int size,
  ) {
    return _wire_benchmark_blob_output_twin_rust_async(
      port_,
      size,
    );
  }

  late final _wire_benchmark_blob_output_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_rust_async');
  late final _wire_benchmark_blob_output_twin_rust_async =
      _wire_benchmark_blob_output_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_input_bytes_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> bytes,
  ) {
    return _wire_benchmark_input_bytes_twin_rust_async(
      port_,
      bytes,
    );
  }

  late final _wire_benchmark_input_bytes_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_rust_async');
  late final _wire_benchmark_input_bytes_twin_rust_async =
      _wire_benchmark_input_bytes_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_benchmark_output_bytes_twin_rust_async(
    int port_,
    int size,
  ) {
    return _wire_benchmark_output_bytes_twin_rust_async(
      port_,
      size,
    );
  }

  late final _wire_benchmark_output_bytes_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_rust_async');
  late final _wire_benchmark_output_bytes_twin_rust_async =
      _wire_benchmark_output_bytes_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_benchmark_void_twin_rust_async(
    int port_,
  ) {
    return _wire_benchmark_void_twin_rust_async(
      port_,
    );
  }

  late final _wire_benchmark_void_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_rust_async');
  late final _wire_benchmark_void_twin_rust_async =
      _wire_benchmark_void_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_benchmark_binary_tree_input_json_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_input_json_twin_rust_async_sse =
      _wire_benchmark_binary_tree_input_json_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_rust_async_sse =
      _wire_benchmark_binary_tree_input_protobuf_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_input_twin_rust_async_sse =
      _wire_benchmark_binary_tree_input_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_json_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_output_json_twin_rust_async_sse =
      _wire_benchmark_binary_tree_output_json_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_rust_async_sse =
      _wire_benchmark_binary_tree_output_protobuf_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_rust_async_sse');
  late final _wire_benchmark_binary_tree_output_twin_rust_async_sse =
      _wire_benchmark_binary_tree_output_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_json_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_json_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_rust_async_sse');
  late final _wire_benchmark_blob_input_json_twin_rust_async_sse =
      _wire_benchmark_blob_input_json_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_protobuf_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_rust_async_sse');
  late final _wire_benchmark_blob_input_protobuf_twin_rust_async_sse =
      _wire_benchmark_blob_input_protobuf_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_rust_async_sse');
  late final _wire_benchmark_blob_input_twin_rust_async_sse =
      _wire_benchmark_blob_input_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_json_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_json_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_rust_async_sse');
  late final _wire_benchmark_blob_output_json_twin_rust_async_sse =
      _wire_benchmark_blob_output_json_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_protobuf_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_rust_async_sse');
  late final _wire_benchmark_blob_output_protobuf_twin_rust_async_sse =
      _wire_benchmark_blob_output_protobuf_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_rust_async_sse');
  late final _wire_benchmark_blob_output_twin_rust_async_sse =
      _wire_benchmark_blob_output_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_input_bytes_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_input_bytes_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_input_bytes_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_rust_async_sse');
  late final _wire_benchmark_input_bytes_twin_rust_async_sse =
      _wire_benchmark_input_bytes_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_output_bytes_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_output_bytes_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_output_bytes_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_rust_async_sse');
  late final _wire_benchmark_output_bytes_twin_rust_async_sse =
      _wire_benchmark_output_bytes_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_void_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_void_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_void_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_rust_async_sse');
  late final _wire_benchmark_void_twin_rust_async_sse =
      _wire_benchmark_void_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_json_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_sse');
  late final _wire_benchmark_binary_tree_input_json_twin_sse =
      _wire_benchmark_binary_tree_input_json_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_protobuf_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_sse');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_sse =
      _wire_benchmark_binary_tree_input_protobuf_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_input_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_sse');
  late final _wire_benchmark_binary_tree_input_twin_sse =
      _wire_benchmark_binary_tree_input_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_json_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_sse');
  late final _wire_benchmark_binary_tree_output_json_twin_sse =
      _wire_benchmark_binary_tree_output_json_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_protobuf_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_sse');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_sse =
      _wire_benchmark_binary_tree_output_protobuf_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_binary_tree_output_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_sse');
  late final _wire_benchmark_binary_tree_output_twin_sse =
      _wire_benchmark_binary_tree_output_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_json_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_json_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_sse');
  late final _wire_benchmark_blob_input_json_twin_sse =
      _wire_benchmark_blob_input_json_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_protobuf_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_sse');
  late final _wire_benchmark_blob_input_protobuf_twin_sse =
      _wire_benchmark_blob_input_protobuf_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_input_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_sse');
  late final _wire_benchmark_blob_input_twin_sse =
      _wire_benchmark_blob_input_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_json_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_json_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_sse');
  late final _wire_benchmark_blob_output_json_twin_sse =
      _wire_benchmark_blob_output_json_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_protobuf_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_sse');
  late final _wire_benchmark_blob_output_protobuf_twin_sse =
      _wire_benchmark_blob_output_protobuf_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_blob_output_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_sse');
  late final _wire_benchmark_blob_output_twin_sse =
      _wire_benchmark_blob_output_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_input_bytes_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_input_bytes_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_input_bytes_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_sse');
  late final _wire_benchmark_input_bytes_twin_sse =
      _wire_benchmark_input_bytes_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_output_bytes_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_output_bytes_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_output_bytes_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_sse');
  late final _wire_benchmark_output_bytes_twin_sse =
      _wire_benchmark_output_bytes_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_benchmark_void_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_void_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_void_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_sse');
  late final _wire_benchmark_void_twin_sse = _wire_benchmark_void_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_input_json_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_sync(
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_sync');
  late final _wire_benchmark_binary_tree_input_json_twin_sync =
      _wire_benchmark_binary_tree_input_json_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_input_protobuf_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_sync(
      raw,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_sync');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_sync =
      _wire_benchmark_binary_tree_input_protobuf_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_input_twin_sync(
    ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> tree,
  ) {
    return _wire_benchmark_binary_tree_input_twin_sync(
      tree,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_sync');
  late final _wire_benchmark_binary_tree_input_twin_sync =
      _wire_benchmark_binary_tree_input_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_output_json_twin_sync(
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_sync(
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_sync');
  late final _wire_benchmark_binary_tree_output_json_twin_sync =
      _wire_benchmark_binary_tree_output_json_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_output_protobuf_twin_sync(
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_sync(
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_sync');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_sync =
      _wire_benchmark_binary_tree_output_protobuf_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_binary_tree_output_twin_sync(
    int depth,
  ) {
    return _wire_benchmark_binary_tree_output_twin_sync(
      depth,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_sync');
  late final _wire_benchmark_binary_tree_output_twin_sync =
      _wire_benchmark_binary_tree_output_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_blob_input_json_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_blob_input_json_twin_sync(
      raw,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_sync');
  late final _wire_benchmark_blob_input_json_twin_sync =
      _wire_benchmark_blob_input_json_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_benchmark_blob_input_protobuf_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> raw,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_sync(
      raw,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_sync');
  late final _wire_benchmark_blob_input_protobuf_twin_sync =
      _wire_benchmark_blob_input_protobuf_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_benchmark_blob_input_twin_sync(
    ffi.Pointer<wire_cst_benchmark_blob_twin_sync> blob,
  ) {
    return _wire_benchmark_blob_input_twin_sync(
      blob,
    );
  }

  late final _wire_benchmark_blob_input_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_benchmark_blob_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_sync');
  late final _wire_benchmark_blob_input_twin_sync =
      _wire_benchmark_blob_input_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_benchmark_blob_twin_sync>)>();

  WireSyncRust2DartDco wire_benchmark_blob_output_json_twin_sync(
    int size,
  ) {
    return _wire_benchmark_blob_output_json_twin_sync(
      size,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_sync');
  late final _wire_benchmark_blob_output_json_twin_sync =
      _wire_benchmark_blob_output_json_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_blob_output_protobuf_twin_sync(
    int size,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_sync(
      size,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_sync');
  late final _wire_benchmark_blob_output_protobuf_twin_sync =
      _wire_benchmark_blob_output_protobuf_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_blob_output_twin_sync(
    int size,
  ) {
    return _wire_benchmark_blob_output_twin_sync(
      size,
    );
  }

  late final _wire_benchmark_blob_output_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_sync');
  late final _wire_benchmark_blob_output_twin_sync =
      _wire_benchmark_blob_output_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_input_bytes_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> bytes,
  ) {
    return _wire_benchmark_input_bytes_twin_sync(
      bytes,
    );
  }

  late final _wire_benchmark_input_bytes_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_sync');
  late final _wire_benchmark_input_bytes_twin_sync =
      _wire_benchmark_input_bytes_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_benchmark_output_bytes_twin_sync(
    int size,
  ) {
    return _wire_benchmark_output_bytes_twin_sync(
      size,
    );
  }

  late final _wire_benchmark_output_bytes_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_sync');
  late final _wire_benchmark_output_bytes_twin_sync =
      _wire_benchmark_output_bytes_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_benchmark_void_twin_sync() {
    return _wire_benchmark_void_twin_sync();
  }

  late final _wire_benchmark_void_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_sync');
  late final _wire_benchmark_void_twin_sync = _wire_benchmark_void_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_input_json_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_json_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_json_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_json_twin_sync_sse');
  late final _wire_benchmark_binary_tree_input_json_twin_sync_sse =
      _wire_benchmark_binary_tree_input_json_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_input_protobuf_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_protobuf_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_protobuf_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_protobuf_twin_sync_sse');
  late final _wire_benchmark_binary_tree_input_protobuf_twin_sync_sse =
      _wire_benchmark_binary_tree_input_protobuf_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_input_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_input_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_input_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_input_twin_sync_sse');
  late final _wire_benchmark_binary_tree_input_twin_sync_sse =
      _wire_benchmark_binary_tree_input_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_output_json_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_json_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_json_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_json_twin_sync_sse');
  late final _wire_benchmark_binary_tree_output_json_twin_sync_sse =
      _wire_benchmark_binary_tree_output_json_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_output_protobuf_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_protobuf_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_protobuf_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_protobuf_twin_sync_sse');
  late final _wire_benchmark_binary_tree_output_protobuf_twin_sync_sse =
      _wire_benchmark_binary_tree_output_protobuf_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_binary_tree_output_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_binary_tree_output_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_binary_tree_output_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_binary_tree_output_twin_sync_sse');
  late final _wire_benchmark_binary_tree_output_twin_sync_sse =
      _wire_benchmark_binary_tree_output_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_input_json_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_json_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_json_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_json_twin_sync_sse');
  late final _wire_benchmark_blob_input_json_twin_sync_sse =
      _wire_benchmark_blob_input_json_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_input_protobuf_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_protobuf_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_protobuf_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_protobuf_twin_sync_sse');
  late final _wire_benchmark_blob_input_protobuf_twin_sync_sse =
      _wire_benchmark_blob_input_protobuf_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_input_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_input_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_input_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_input_twin_sync_sse');
  late final _wire_benchmark_blob_input_twin_sync_sse =
      _wire_benchmark_blob_input_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_output_json_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_json_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_json_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_json_twin_sync_sse');
  late final _wire_benchmark_blob_output_json_twin_sync_sse =
      _wire_benchmark_blob_output_json_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_output_protobuf_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_protobuf_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_protobuf_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_protobuf_twin_sync_sse');
  late final _wire_benchmark_blob_output_protobuf_twin_sync_sse =
      _wire_benchmark_blob_output_protobuf_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_blob_output_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_blob_output_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_blob_output_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_blob_output_twin_sync_sse');
  late final _wire_benchmark_blob_output_twin_sync_sse =
      _wire_benchmark_blob_output_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_input_bytes_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_input_bytes_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_input_bytes_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_input_bytes_twin_sync_sse');
  late final _wire_benchmark_input_bytes_twin_sync_sse =
      _wire_benchmark_input_bytes_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_output_bytes_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_output_bytes_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_output_bytes_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_output_bytes_twin_sync_sse');
  late final _wire_benchmark_output_bytes_twin_sync_sse =
      _wire_benchmark_output_bytes_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_benchmark_void_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_benchmark_void_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_benchmark_void_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_benchmark_void_twin_sync_sse');
  late final _wire_benchmark_void_twin_sync_sse =
      _wire_benchmark_void_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_datetime_local_twin_rust_async(
    int port_,
    int d,
  ) {
    return _wire_datetime_local_twin_rust_async(
      port_,
      d,
    );
  }

  late final _wire_datetime_local_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_local_twin_rust_async');
  late final _wire_datetime_local_twin_rust_async =
      _wire_datetime_local_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_datetime_utc_twin_rust_async(
    int port_,
    int d,
  ) {
    return _wire_datetime_utc_twin_rust_async(
      port_,
      d,
    );
  }

  late final _wire_datetime_utc_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_utc_twin_rust_async');
  late final _wire_datetime_utc_twin_rust_async =
      _wire_datetime_utc_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_duration_twin_rust_async(
    int port_,
    int d,
  ) {
    return _wire_duration_twin_rust_async(
      port_,
      d,
    );
  }

  late final _wire_duration_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_duration_twin_rust_async');
  late final _wire_duration_twin_rust_async =
      _wire_duration_twin_rust_asyncPtr.asFunction<void Function(int, int)>();

  void wire_handle_durations_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_Chrono_Duration> durations,
    int since,
  ) {
    return _wire_handle_durations_twin_rust_async(
      port_,
      durations,
      since,
    );
  }

  late final _wire_handle_durations_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_Chrono_Duration>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_durations_twin_rust_async');
  late final _wire_handle_durations_twin_rust_async =
      _wire_handle_durations_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_Chrono_Duration>, int)>();

  void wire_handle_timestamps_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_Chrono_Naive> timestamps,
    int epoch,
  ) {
    return _wire_handle_timestamps_twin_rust_async(
      port_,
      timestamps,
      epoch,
    );
  }

  late final _wire_handle_timestamps_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_Chrono_Naive>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_timestamps_twin_rust_async');
  late final _wire_handle_timestamps_twin_rust_async =
      _wire_handle_timestamps_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_Chrono_Naive>, int)>();

  void wire_how_long_does_it_take_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_feature_chrono_twin_rust_async> mine,
  ) {
    return _wire_how_long_does_it_take_twin_rust_async(
      port_,
      mine,
    );
  }

  late final _wire_how_long_does_it_take_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_feature_chrono_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_how_long_does_it_take_twin_rust_async');
  late final _wire_how_long_does_it_take_twin_rust_async =
      _wire_how_long_does_it_take_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_feature_chrono_twin_rust_async>)>();

  void wire_naivedatetime_twin_rust_async(
    int port_,
    int d,
  ) {
    return _wire_naivedatetime_twin_rust_async(
      port_,
      d,
    );
  }

  late final _wire_naivedatetime_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_naivedatetime_twin_rust_async');
  late final _wire_naivedatetime_twin_rust_async =
      _wire_naivedatetime_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_optional_empty_datetime_utc_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int64> d,
  ) {
    return _wire_optional_empty_datetime_utc_twin_rust_async(
      port_,
      d,
    );
  }

  late final _wire_optional_empty_datetime_utc_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_optional_empty_datetime_utc_twin_rust_async');
  late final _wire_optional_empty_datetime_utc_twin_rust_async =
      _wire_optional_empty_datetime_utc_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int64>)>();

  void wire_test_chrono_twin_rust_async(
    int port_,
  ) {
    return _wire_test_chrono_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_chrono_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_chrono_twin_rust_async');
  late final _wire_test_chrono_twin_rust_async =
      _wire_test_chrono_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_test_precise_chrono_twin_rust_async(
    int port_,
  ) {
    return _wire_test_precise_chrono_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_precise_chrono_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_precise_chrono_twin_rust_async');
  late final _wire_test_precise_chrono_twin_rust_async =
      _wire_test_precise_chrono_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_datetime_local_twin_sync(
    int d,
  ) {
    return _wire_datetime_local_twin_sync(
      d,
    );
  }

  late final _wire_datetime_local_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_local_twin_sync');
  late final _wire_datetime_local_twin_sync = _wire_datetime_local_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_datetime_utc_twin_sync(
    int d,
  ) {
    return _wire_datetime_utc_twin_sync(
      d,
    );
  }

  late final _wire_datetime_utc_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_datetime_utc_twin_sync');
  late final _wire_datetime_utc_twin_sync = _wire_datetime_utc_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_duration_twin_sync(
    int d,
  ) {
    return _wire_duration_twin_sync(
      d,
    );
  }

  late final _wire_duration_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_duration_twin_sync');
  late final _wire_duration_twin_sync = _wire_duration_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_handle_durations_twin_sync(
    ffi.Pointer<wire_cst_list_Chrono_Duration> durations,
    int since,
  ) {
    return _wire_handle_durations_twin_sync(
      durations,
      since,
    );
  }

  late final _wire_handle_durations_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_Chrono_Duration>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_durations_twin_sync');
  late final _wire_handle_durations_twin_sync =
      _wire_handle_durations_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_Chrono_Duration>, int)>();

  WireSyncRust2DartDco wire_handle_timestamps_twin_sync(
    ffi.Pointer<wire_cst_list_Chrono_Naive> timestamps,
    int epoch,
  ) {
    return _wire_handle_timestamps_twin_sync(
      timestamps,
      epoch,
    );
  }

  late final _wire_handle_timestamps_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_Chrono_Naive>, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_timestamps_twin_sync');
  late final _wire_handle_timestamps_twin_sync =
      _wire_handle_timestamps_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_Chrono_Naive>, int)>();

  WireSyncRust2DartDco wire_how_long_does_it_take_twin_sync(
    ffi.Pointer<wire_cst_feature_chrono_twin_sync> mine,
  ) {
    return _wire_how_long_does_it_take_twin_sync(
      mine,
    );
  }

  late final _wire_how_long_does_it_take_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_feature_chrono_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_how_long_does_it_take_twin_sync');
  late final _wire_how_long_does_it_take_twin_sync =
      _wire_how_long_does_it_take_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_feature_chrono_twin_sync>)>();

  WireSyncRust2DartDco wire_naivedatetime_twin_sync(
    int d,
  ) {
    return _wire_naivedatetime_twin_sync(
      d,
    );
  }

  late final _wire_naivedatetime_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_naivedatetime_twin_sync');
  late final _wire_naivedatetime_twin_sync = _wire_naivedatetime_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_optional_empty_datetime_utc_twin_sync(
    ffi.Pointer<ffi.Int64> d,
  ) {
    return _wire_optional_empty_datetime_utc_twin_sync(
      d,
    );
  }

  late final _wire_optional_empty_datetime_utc_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_optional_empty_datetime_utc_twin_sync');
  late final _wire_optional_empty_datetime_utc_twin_sync =
      _wire_optional_empty_datetime_utc_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int64>)>();

  WireSyncRust2DartDco wire_test_chrono_twin_sync() {
    return _wire_test_chrono_twin_sync();
  }

  late final _wire_test_chrono_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_test_chrono_twin_sync');
  late final _wire_test_chrono_twin_sync = _wire_test_chrono_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_precise_chrono_twin_sync() {
    return _wire_test_precise_chrono_twin_sync();
  }

  late final _wire_test_precise_chrono_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_test_precise_chrono_twin_sync');
  late final _wire_test_precise_chrono_twin_sync =
      _wire_test_precise_chrono_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async> that,
  ) {
    return _wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<
                          wire_cst_struct_with_comments_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async');
  late final _wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_async =
      _wire_StructWithCommentsTwinRustAsync_instance_method_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<
                      wire_cst_struct_with_comments_twin_rust_async>)>();

  void wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async(
    int port_,
  ) {
    return _wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async(
      port_,
    );
  }

  late final _wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async');
  late final _wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_async =
      _wire_StructWithCommentsTwinRustAsync_static_method_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_slash_star_star_twin_rust_async(
    int port_,
  ) {
    return _wire_function_with_comments_slash_star_star_twin_rust_async(
      port_,
    );
  }

  late final _wire_function_with_comments_slash_star_star_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_rust_async');
  late final _wire_function_with_comments_slash_star_star_twin_rust_async =
      _wire_function_with_comments_slash_star_star_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_triple_slash_multi_line_twin_rust_async(
    int port_,
  ) {
    return _wire_function_with_comments_triple_slash_multi_line_twin_rust_async(
      port_,
    );
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_rust_async');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_rust_async =
      _wire_function_with_comments_triple_slash_multi_line_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_function_with_comments_triple_slash_single_line_twin_rust_async(
    int port_,
  ) {
    return _wire_function_with_comments_triple_slash_single_line_twin_rust_async(
      port_,
    );
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_rust_async');
  late final _wire_function_with_comments_triple_slash_single_line_twin_rust_async =
      _wire_function_with_comments_triple_slash_single_line_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse');
  late final _wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_sse =
      _wire_StructWithCommentsTwinRustAsyncSse_instance_method_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse');
  late final _wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_sse =
      _wire_StructWithCommentsTwinRustAsyncSse_static_method_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_slash_star_star_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_slash_star_star_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_slash_star_star_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_rust_async_sse');
  late final _wire_function_with_comments_slash_star_star_twin_rust_async_sse =
      _wire_function_with_comments_slash_star_star_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_rust_async_sse =
      _wire_function_with_comments_triple_slash_multi_line_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse');
  late final _wire_function_with_comments_triple_slash_single_line_twin_rust_async_sse =
      _wire_function_with_comments_triple_slash_single_line_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_StructWithCommentsTwinSse_instance_method_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinSse_instance_method_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinSse_instance_method_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSse_instance_method_twin_sse');
  late final _wire_StructWithCommentsTwinSse_instance_method_twin_sse =
      _wire_StructWithCommentsTwinSse_instance_method_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_StructWithCommentsTwinSse_static_method_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinSse_static_method_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinSse_static_method_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSse_static_method_twin_sse');
  late final _wire_StructWithCommentsTwinSse_static_method_twin_sse =
      _wire_StructWithCommentsTwinSse_static_method_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_slash_star_star_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_slash_star_star_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_slash_star_star_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_sse');
  late final _wire_function_with_comments_slash_star_star_twin_sse =
      _wire_function_with_comments_slash_star_star_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_triple_slash_multi_line_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_multi_line_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_sse');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_sse =
      _wire_function_with_comments_triple_slash_multi_line_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_function_with_comments_triple_slash_single_line_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_single_line_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_sse');
  late final _wire_function_with_comments_triple_slash_single_line_twin_sse =
      _wire_function_with_comments_triple_slash_single_line_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_StructWithCommentsTwinSync_instance_method_twin_sync(
    ffi.Pointer<wire_cst_struct_with_comments_twin_sync> that,
  ) {
    return _wire_StructWithCommentsTwinSync_instance_method_twin_sync(
      that,
    );
  }

  late final _wire_StructWithCommentsTwinSync_instance_method_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_struct_with_comments_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSync_instance_method_twin_sync');
  late final _wire_StructWithCommentsTwinSync_instance_method_twin_sync =
      _wire_StructWithCommentsTwinSync_instance_method_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_struct_with_comments_twin_sync>)>();

  WireSyncRust2DartDco
      wire_StructWithCommentsTwinSync_static_method_twin_sync() {
    return _wire_StructWithCommentsTwinSync_static_method_twin_sync();
  }

  late final _wire_StructWithCommentsTwinSync_static_method_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSync_static_method_twin_sync');
  late final _wire_StructWithCommentsTwinSync_static_method_twin_sync =
      _wire_StructWithCommentsTwinSync_static_method_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_function_with_comments_slash_star_star_twin_sync() {
    return _wire_function_with_comments_slash_star_star_twin_sync();
  }

  late final _wire_function_with_comments_slash_star_star_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_sync');
  late final _wire_function_with_comments_slash_star_star_twin_sync =
      _wire_function_with_comments_slash_star_star_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_function_with_comments_triple_slash_multi_line_twin_sync() {
    return _wire_function_with_comments_triple_slash_multi_line_twin_sync();
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_sync');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_sync =
      _wire_function_with_comments_triple_slash_multi_line_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_function_with_comments_triple_slash_single_line_twin_sync() {
    return _wire_function_with_comments_triple_slash_single_line_twin_sync();
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_sync');
  late final _wire_function_with_comments_triple_slash_single_line_twin_sync =
      _wire_function_with_comments_triple_slash_single_line_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse
      wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse');
  late final _wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_sse =
      _wire_StructWithCommentsTwinSyncSse_instance_method_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse');
  late final _wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_sse =
      _wire_StructWithCommentsTwinSyncSse_static_method_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_function_with_comments_slash_star_star_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_slash_star_star_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_slash_star_star_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_slash_star_star_twin_sync_sse');
  late final _wire_function_with_comments_slash_star_star_twin_sync_sse =
      _wire_function_with_comments_slash_star_star_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_function_with_comments_triple_slash_multi_line_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_multi_line_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_multi_line_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_multi_line_twin_sync_sse');
  late final _wire_function_with_comments_triple_slash_multi_line_twin_sync_sse =
      _wire_function_with_comments_triple_slash_multi_line_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_function_with_comments_triple_slash_single_line_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_function_with_comments_triple_slash_single_line_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_function_with_comments_triple_slash_single_line_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_function_with_comments_triple_slash_single_line_twin_sync_sse');
  late final _wire_function_with_comments_triple_slash_single_line_twin_sync_sse =
      _wire_function_with_comments_triple_slash_single_line_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_dart_dynamic_twin_rust_async(
    int port_,
  ) {
    return _wire_return_dart_dynamic_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_dart_dynamic_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_dart_dynamic_twin_rust_async');
  late final _wire_return_dart_dynamic_twin_rust_async =
      _wire_return_dart_dynamic_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_return_dart_dynamic_twin_sync() {
    return _wire_return_dart_dynamic_twin_sync();
  }

  late final _wire_return_dart_dynamic_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_return_dart_dynamic_twin_sync');
  late final _wire_return_dart_dynamic_twin_sync =
      _wire_return_dart_dynamic_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_rust_call_dart_loopback_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_loopback_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_loopback_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_loopback_twin_rust_async');
  late final _wire_rust_call_dart_loopback_twin_rust_async =
      _wire_rust_call_dart_loopback_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_multi_times_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
    int num_times,
  ) {
    return _wire_rust_call_dart_multi_times_twin_rust_async(
      port_,
      callback,
      num_times,
    );
  }

  late final _wire_rust_call_dart_multi_times_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_multi_times_twin_rust_async');
  late final _wire_rust_call_dart_multi_times_twin_rust_async =
      _wire_rust_call_dart_multi_times_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>, int)>();

  void wire_rust_call_dart_one_arg_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_one_arg_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_one_arg_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_one_arg_twin_rust_async');
  late final _wire_rust_call_dart_one_arg_twin_rust_async =
      _wire_rust_call_dart_one_arg_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_return_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_return_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_return_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_return_twin_rust_async');
  late final _wire_rust_call_dart_return_twin_rust_async =
      _wire_rust_call_dart_return_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_simple_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_simple_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_simple_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_simple_twin_rust_async');
  late final _wire_rust_call_dart_simple_twin_rust_async =
      _wire_rust_call_dart_simple_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_two_args_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_two_args_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_two_args_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_two_args_twin_rust_async');
  late final _wire_rust_call_dart_two_args_twin_rust_async =
      _wire_rust_call_dart_two_args_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> input,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async(
      port_,
      input,
      callback,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async');
  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async =
      _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_with_dart_opaque_result_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> callback,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async(
      port_,
      callback,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_result_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_result_twin_rust_async');
  late final _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async =
      _wire_rust_call_dart_with_dart_opaque_result_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_call_dart_loopback_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_loopback_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_loopback_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_loopback_twin_rust_async_sse');
  late final _wire_rust_call_dart_loopback_twin_rust_async_sse =
      _wire_rust_call_dart_loopback_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_multi_times_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_multi_times_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_multi_times_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_multi_times_twin_rust_async_sse');
  late final _wire_rust_call_dart_multi_times_twin_rust_async_sse =
      _wire_rust_call_dart_multi_times_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_one_arg_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_one_arg_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_one_arg_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_one_arg_twin_rust_async_sse');
  late final _wire_rust_call_dart_one_arg_twin_rust_async_sse =
      _wire_rust_call_dart_one_arg_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_return_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_return_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_return_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_return_twin_rust_async_sse');
  late final _wire_rust_call_dart_return_twin_rust_async_sse =
      _wire_rust_call_dart_return_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_simple_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_simple_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_simple_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_simple_twin_rust_async_sse');
  late final _wire_rust_call_dart_simple_twin_rust_async_sse =
      _wire_rust_call_dart_simple_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_two_args_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_two_args_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_two_args_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_two_args_twin_rust_async_sse');
  late final _wire_rust_call_dart_two_args_twin_rust_async_sse =
      _wire_rust_call_dart_two_args_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse');
  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_sse =
      _wire_rust_call_dart_with_dart_opaque_arg_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse');
  late final _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_sse =
      _wire_rust_call_dart_with_dart_opaque_result_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_loopback_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_loopback_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_loopback_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_loopback_twin_sse');
  late final _wire_rust_call_dart_loopback_twin_sse =
      _wire_rust_call_dart_loopback_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_multi_times_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_multi_times_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_multi_times_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_multi_times_twin_sse');
  late final _wire_rust_call_dart_multi_times_twin_sse =
      _wire_rust_call_dart_multi_times_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_one_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_one_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_one_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_one_arg_twin_sse');
  late final _wire_rust_call_dart_one_arg_twin_sse =
      _wire_rust_call_dart_one_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_return_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_return_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_return_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_return_twin_sse');
  late final _wire_rust_call_dart_return_twin_sse =
      _wire_rust_call_dart_return_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_simple_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_simple_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_simple_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_simple_twin_sse');
  late final _wire_rust_call_dart_simple_twin_sse =
      _wire_rust_call_dart_simple_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_two_args_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_two_args_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_two_args_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_two_args_twin_sse');
  late final _wire_rust_call_dart_two_args_twin_sse =
      _wire_rust_call_dart_two_args_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_with_dart_opaque_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_arg_twin_sse');
  late final _wire_rust_call_dart_with_dart_opaque_arg_twin_sse =
      _wire_rust_call_dart_with_dart_opaque_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_call_dart_with_dart_opaque_result_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_call_dart_with_dart_opaque_result_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_call_dart_with_dart_opaque_result_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_call_dart_with_dart_opaque_result_twin_sse');
  late final _wire_rust_call_dart_with_dart_opaque_result_twin_sse =
      _wire_rust_call_dart_with_dart_opaque_result_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_accept_dart_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_accept_dart_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_accept_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_accept_dart_opaque_twin_sse');
  late final _wire_sync_accept_dart_opaque_twin_sse =
      _wire_sync_accept_dart_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_loopback_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_loopback_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_loopback_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_loopback_twin_sse');
  late final _wire_sync_loopback_twin_sse =
      _wire_sync_loopback_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_option_dart_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_option_dart_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_option_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_dart_opaque_twin_sse');
  late final _wire_sync_option_dart_opaque_twin_sse =
      _wire_sync_option_dart_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_option_loopback_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_option_loopback_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_option_loopback_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_loopback_twin_sse');
  late final _wire_sync_option_loopback_twin_sse =
      _wire_sync_option_loopback_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_unwrap_dart_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_dart_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_dart_opaque_twin_sse');
  late final _wire_unwrap_dart_opaque_twin_sse =
      _wire_unwrap_dart_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_async_accept_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_async_accept_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_rust_async');
  late final _wire_async_accept_dart_opaque_twin_rust_async =
      _wire_async_accept_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_clone_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_clone_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_clone_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_rust_async');
  late final _wire_clone_dart_opaque_twin_rust_async =
      _wire_clone_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_create_enum_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_create_enum_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_rust_async');
  late final _wire_create_enum_dart_opaque_twin_rust_async =
      _wire_create_enum_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_create_nested_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque1,
    ffi.Pointer<ffi.Void> opaque2,
  ) {
    return _wire_create_nested_dart_opaque_twin_rust_async(
      port_,
      opaque1,
      opaque2,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_rust_async');
  late final _wire_create_nested_dart_opaque_twin_rust_async =
      _wire_create_nested_dart_opaque_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  void wire_drop_static_dart_opaque_twin_rust_async(
    int port_,
    int id,
  ) {
    return _wire_drop_static_dart_opaque_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_rust_async');
  late final _wire_drop_static_dart_opaque_twin_rust_async =
      _wire_drop_static_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_get_enum_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async> opaque,
  ) {
    return _wire_get_enum_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_rust_async');
  late final _wire_get_enum_dart_opaque_twin_rust_async =
      _wire_get_enum_dart_opaque_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async>)>();

  void wire_get_nested_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async> opaque,
  ) {
    return _wire_get_nested_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_rust_async');
  late final _wire_get_nested_dart_opaque_twin_rust_async =
      _wire_get_nested_dart_opaque_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>)>();

  void wire_loop_back_array_get_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_array_get_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_array_get_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_rust_async');
  late final _wire_loop_back_array_get_twin_rust_async =
      _wire_loop_back_array_get_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_DartOpaque>)>();

  void wire_loop_back_array_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_array_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_array_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_rust_async');
  late final _wire_loop_back_array_twin_rust_async =
      _wire_loop_back_array_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_option_get_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_loop_back_option_get_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_option_get_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_rust_async');
  late final _wire_loop_back_option_get_twin_rust_async =
      _wire_loop_back_option_get_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  void wire_loop_back_option_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_option_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_option_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_rust_async');
  late final _wire_loop_back_option_twin_rust_async =
      _wire_loop_back_option_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_rust_async');
  late final _wire_loop_back_twin_rust_async =
      _wire_loop_back_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_loop_back_vec_get_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_vec_get_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_vec_get_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_rust_async');
  late final _wire_loop_back_vec_get_twin_rust_async =
      _wire_loop_back_vec_get_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_DartOpaque>)>();

  void wire_loop_back_vec_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_vec_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_loop_back_vec_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_rust_async');
  late final _wire_loop_back_vec_twin_rust_async =
      _wire_loop_back_vec_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_panic_unwrap_dart_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_rust_async');
  late final _wire_panic_unwrap_dart_opaque_twin_rust_async =
      _wire_panic_unwrap_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_set_static_dart_opaque_twin_rust_async(
    int port_,
    int id,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_set_static_dart_opaque_twin_rust_async(
      port_,
      id,
      opaque,
    );
  }

  late final _wire_set_static_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_rust_async');
  late final _wire_set_static_dart_opaque_twin_rust_async =
      _wire_set_static_dart_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, int, ffi.Pointer<ffi.Void>)>();

  void wire_async_accept_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_async_accept_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_rust_async_sse');
  late final _wire_async_accept_dart_opaque_twin_rust_async_sse =
      _wire_async_accept_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_clone_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_clone_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_clone_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_rust_async_sse');
  late final _wire_clone_dart_opaque_twin_rust_async_sse =
      _wire_clone_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_enum_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_enum_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_rust_async_sse');
  late final _wire_create_enum_dart_opaque_twin_rust_async_sse =
      _wire_create_enum_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_nested_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_rust_async_sse');
  late final _wire_create_nested_dart_opaque_twin_rust_async_sse =
      _wire_create_nested_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_drop_static_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_drop_static_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_rust_async_sse');
  late final _wire_drop_static_dart_opaque_twin_rust_async_sse =
      _wire_drop_static_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_enum_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_enum_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_rust_async_sse');
  late final _wire_get_enum_dart_opaque_twin_rust_async_sse =
      _wire_get_enum_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_nested_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_nested_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_rust_async_sse');
  late final _wire_get_nested_dart_opaque_twin_rust_async_sse =
      _wire_get_nested_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_array_get_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_get_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_get_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_rust_async_sse');
  late final _wire_loop_back_array_get_twin_rust_async_sse =
      _wire_loop_back_array_get_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_rust_async_sse');
  late final _wire_loop_back_array_twin_rust_async_sse =
      _wire_loop_back_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_option_get_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_get_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_get_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_rust_async_sse');
  late final _wire_loop_back_option_get_twin_rust_async_sse =
      _wire_loop_back_option_get_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_option_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_rust_async_sse');
  late final _wire_loop_back_option_twin_rust_async_sse =
      _wire_loop_back_option_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_rust_async_sse');
  late final _wire_loop_back_twin_rust_async_sse =
      _wire_loop_back_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_vec_get_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_get_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_get_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_rust_async_sse');
  late final _wire_loop_back_vec_get_twin_rust_async_sse =
      _wire_loop_back_vec_get_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_vec_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_rust_async_sse');
  late final _wire_loop_back_vec_twin_rust_async_sse =
      _wire_loop_back_vec_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_panic_unwrap_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_rust_async_sse');
  late final _wire_panic_unwrap_dart_opaque_twin_rust_async_sse =
      _wire_panic_unwrap_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_set_static_dart_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_set_static_dart_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_set_static_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_rust_async_sse');
  late final _wire_set_static_dart_opaque_twin_rust_async_sse =
      _wire_set_static_dart_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_async_accept_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_async_accept_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_sse');
  late final _wire_async_accept_dart_opaque_twin_sse =
      _wire_async_accept_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_clone_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_clone_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_clone_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_sse');
  late final _wire_clone_dart_opaque_twin_sse =
      _wire_clone_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_enum_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_enum_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_sse');
  late final _wire_create_enum_dart_opaque_twin_sse =
      _wire_create_enum_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_nested_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_sse');
  late final _wire_create_nested_dart_opaque_twin_sse =
      _wire_create_nested_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_drop_static_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_drop_static_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_sse');
  late final _wire_drop_static_dart_opaque_twin_sse =
      _wire_drop_static_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_enum_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_enum_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_sse');
  late final _wire_get_enum_dart_opaque_twin_sse =
      _wire_get_enum_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_nested_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_nested_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_sse');
  late final _wire_get_nested_dart_opaque_twin_sse =
      _wire_get_nested_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_array_get_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_get_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_get_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_sse');
  late final _wire_loop_back_array_get_twin_sse =
      _wire_loop_back_array_get_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_sse');
  late final _wire_loop_back_array_twin_sse = _wire_loop_back_array_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_option_get_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_get_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_get_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_sse');
  late final _wire_loop_back_option_get_twin_sse =
      _wire_loop_back_option_get_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_option_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_sse');
  late final _wire_loop_back_option_twin_sse =
      _wire_loop_back_option_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_sse');
  late final _wire_loop_back_twin_sse = _wire_loop_back_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_vec_get_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_get_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_get_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_sse');
  late final _wire_loop_back_vec_get_twin_sse =
      _wire_loop_back_vec_get_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_loop_back_vec_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_sse');
  late final _wire_loop_back_vec_twin_sse = _wire_loop_back_vec_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_panic_unwrap_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_sse');
  late final _wire_panic_unwrap_dart_opaque_twin_sse =
      _wire_panic_unwrap_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_set_static_dart_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_set_static_dart_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_set_static_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_sse');
  late final _wire_set_static_dart_opaque_twin_sse =
      _wire_set_static_dart_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_async_accept_dart_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_async_accept_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_sync');
  late final _wire_async_accept_dart_opaque_twin_sync =
      _wire_async_accept_dart_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_clone_dart_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_clone_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_clone_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_sync');
  late final _wire_clone_dart_opaque_twin_sync =
      _wire_clone_dart_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_create_enum_dart_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_create_enum_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_sync');
  late final _wire_create_enum_dart_opaque_twin_sync =
      _wire_create_enum_dart_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_create_nested_dart_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque1,
    ffi.Pointer<ffi.Void> opaque2,
  ) {
    return _wire_create_nested_dart_opaque_twin_sync(
      opaque1,
      opaque2,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_sync');
  late final _wire_create_nested_dart_opaque_twin_sync =
      _wire_create_nested_dart_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_drop_static_dart_opaque_twin_sync(
    int id,
  ) {
    return _wire_drop_static_dart_opaque_twin_sync(
      id,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_sync');
  late final _wire_drop_static_dart_opaque_twin_sync =
      _wire_drop_static_dart_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_get_enum_dart_opaque_twin_sync(
    ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync> opaque,
  ) {
    return _wire_get_enum_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_sync');
  late final _wire_get_enum_dart_opaque_twin_sync =
      _wire_get_enum_dart_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync>)>();

  WireSyncRust2DartDco wire_get_nested_dart_opaque_twin_sync(
    ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync> opaque,
  ) {
    return _wire_get_nested_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_sync');
  late final _wire_get_nested_dart_opaque_twin_sync =
      _wire_get_nested_dart_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync>)>();

  WireSyncRust2DartDco wire_loop_back_array_get_twin_sync(
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_array_get_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_array_get_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_sync');
  late final _wire_loop_back_array_get_twin_sync =
      _wire_loop_back_array_get_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_DartOpaque>)>();

  WireSyncRust2DartDco wire_loop_back_array_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_array_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_array_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_sync');
  late final _wire_loop_back_array_twin_sync =
      _wire_loop_back_array_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_loop_back_option_get_twin_sync(
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_loop_back_option_get_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_option_get_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_sync');
  late final _wire_loop_back_option_get_twin_sync =
      _wire_loop_back_option_get_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  WireSyncRust2DartDco wire_loop_back_option_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_option_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_option_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_sync');
  late final _wire_loop_back_option_twin_sync =
      _wire_loop_back_option_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_loop_back_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_sync');
  late final _wire_loop_back_twin_sync = _wire_loop_back_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_loop_back_vec_get_twin_sync(
    ffi.Pointer<wire_cst_list_DartOpaque> opaque,
  ) {
    return _wire_loop_back_vec_get_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_vec_get_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_DartOpaque>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_sync');
  late final _wire_loop_back_vec_get_twin_sync =
      _wire_loop_back_vec_get_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_DartOpaque>)>();

  WireSyncRust2DartDco wire_loop_back_vec_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_loop_back_vec_twin_sync(
      opaque,
    );
  }

  late final _wire_loop_back_vec_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_sync');
  late final _wire_loop_back_vec_twin_sync = _wire_loop_back_vec_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_panic_unwrap_dart_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_sync');
  late final _wire_panic_unwrap_dart_opaque_twin_sync =
      _wire_panic_unwrap_dart_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_set_static_dart_opaque_twin_sync(
    int id,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_set_static_dart_opaque_twin_sync(
      id,
      opaque,
    );
  }

  late final _wire_set_static_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Int32, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_sync');
  late final _wire_set_static_dart_opaque_twin_sync =
      _wire_set_static_dart_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(int, ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartSse wire_async_accept_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_async_accept_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_async_accept_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_async_accept_dart_opaque_twin_sync_sse');
  late final _wire_async_accept_dart_opaque_twin_sync_sse =
      _wire_async_accept_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_clone_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_clone_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_clone_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_clone_dart_opaque_twin_sync_sse');
  late final _wire_clone_dart_opaque_twin_sync_sse =
      _wire_clone_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_enum_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_enum_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_enum_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_enum_dart_opaque_twin_sync_sse');
  late final _wire_create_enum_dart_opaque_twin_sync_sse =
      _wire_create_enum_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_nested_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_dart_opaque_twin_sync_sse');
  late final _wire_create_nested_dart_opaque_twin_sync_sse =
      _wire_create_nested_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_drop_static_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_drop_static_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_drop_static_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_drop_static_dart_opaque_twin_sync_sse');
  late final _wire_drop_static_dart_opaque_twin_sync_sse =
      _wire_drop_static_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_enum_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_enum_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_enum_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_enum_dart_opaque_twin_sync_sse');
  late final _wire_get_enum_dart_opaque_twin_sync_sse =
      _wire_get_enum_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_nested_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_nested_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_nested_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_nested_dart_opaque_twin_sync_sse');
  late final _wire_get_nested_dart_opaque_twin_sync_sse =
      _wire_get_nested_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_array_get_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_get_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_get_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_get_twin_sync_sse');
  late final _wire_loop_back_array_get_twin_sync_sse =
      _wire_loop_back_array_get_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_array_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_array_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_array_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_array_twin_sync_sse');
  late final _wire_loop_back_array_twin_sync_sse =
      _wire_loop_back_array_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_option_get_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_get_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_get_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_get_twin_sync_sse');
  late final _wire_loop_back_option_get_twin_sync_sse =
      _wire_loop_back_option_get_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_option_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_option_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_option_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_option_twin_sync_sse');
  late final _wire_loop_back_option_twin_sync_sse =
      _wire_loop_back_option_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_twin_sync_sse');
  late final _wire_loop_back_twin_sync_sse =
      _wire_loop_back_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_vec_get_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_get_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_get_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_get_twin_sync_sse');
  late final _wire_loop_back_vec_get_twin_sync_sse =
      _wire_loop_back_vec_get_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_loop_back_vec_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_loop_back_vec_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_loop_back_vec_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_loop_back_vec_twin_sync_sse');
  late final _wire_loop_back_vec_twin_sync_sse =
      _wire_loop_back_vec_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_panic_unwrap_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_unwrap_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_unwrap_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_unwrap_dart_opaque_twin_sync_sse');
  late final _wire_panic_unwrap_dart_opaque_twin_sync_sse =
      _wire_panic_unwrap_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_set_static_dart_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_set_static_dart_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_set_static_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_set_static_dart_opaque_twin_sync_sse');
  late final _wire_set_static_dart_opaque_twin_sync_sse =
      _wire_set_static_dart_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_simple_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_func_enum_simple_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_simple_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_rust_async');
  late final _wire_func_enum_simple_twin_rust_async =
      _wire_func_enum_simple_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_func_enum_with_item_mixed_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async> arg,
  ) {
    return _wire_func_enum_with_item_mixed_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_rust_async');
  late final _wire_func_enum_with_item_mixed_twin_rust_async =
      _wire_func_enum_with_item_mixed_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>)>();

  void wire_func_enum_with_item_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async> arg,
  ) {
    return _wire_func_enum_with_item_struct_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_enum_with_item_struct_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_rust_async');
  late final _wire_func_enum_with_item_struct_twin_rust_async =
      _wire_func_enum_with_item_struct_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async>)>();

  void wire_func_enum_with_item_tuple_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async> arg,
  ) {
    return _wire_func_enum_with_item_tuple_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_rust_async');
  late final _wire_func_enum_with_item_tuple_twin_rust_async =
      _wire_func_enum_with_item_tuple_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>)>();

  void wire_handle_enum_parameter_twin_rust_async(
    int port_,
    int weekday,
  ) {
    return _wire_handle_enum_parameter_twin_rust_async(
      port_,
      weekday,
    );
  }

  late final _wire_handle_enum_parameter_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_rust_async');
  late final _wire_handle_enum_parameter_twin_rust_async =
      _wire_handle_enum_parameter_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_enum_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> val,
  ) {
    return _wire_handle_enum_struct_twin_rust_async(
      port_,
      val,
    );
  }

  late final _wire_handle_enum_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_rust_async');
  late final _wire_handle_enum_struct_twin_rust_async =
      _wire_handle_enum_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>)>();

  void wire_handle_return_enum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> input,
  ) {
    return _wire_handle_return_enum_twin_rust_async(
      port_,
      input,
    );
  }

  late final _wire_handle_return_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_rust_async');
  late final _wire_handle_return_enum_twin_rust_async =
      _wire_handle_return_enum_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_multiply_by_ten_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_measure_twin_rust_async> measure,
  ) {
    return _wire_multiply_by_ten_twin_rust_async(
      port_,
      measure,
    );
  }

  late final _wire_multiply_by_ten_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_measure_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_rust_async');
  late final _wire_multiply_by_ten_twin_rust_async =
      _wire_multiply_by_ten_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_measure_twin_rust_async>)>();

  void wire_print_note_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_note_twin_rust_async> note,
  ) {
    return _wire_print_note_twin_rust_async(
      port_,
      note,
    );
  }

  late final _wire_print_note_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_note_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_rust_async');
  late final _wire_print_note_twin_rust_async =
      _wire_print_note_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_note_twin_rust_async>)>();

  void wire_func_enum_simple_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_simple_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_simple_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_rust_async_sse');
  late final _wire_func_enum_simple_twin_rust_async_sse =
      _wire_func_enum_simple_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_mixed_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_mixed_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_rust_async_sse');
  late final _wire_func_enum_with_item_mixed_twin_rust_async_sse =
      _wire_func_enum_with_item_mixed_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_rust_async_sse');
  late final _wire_func_enum_with_item_struct_twin_rust_async_sse =
      _wire_func_enum_with_item_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_tuple_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_tuple_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_rust_async_sse');
  late final _wire_func_enum_with_item_tuple_twin_rust_async_sse =
      _wire_func_enum_with_item_tuple_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_enum_parameter_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_parameter_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_parameter_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_rust_async_sse');
  late final _wire_handle_enum_parameter_twin_rust_async_sse =
      _wire_handle_enum_parameter_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_enum_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_rust_async_sse');
  late final _wire_handle_enum_struct_twin_rust_async_sse =
      _wire_handle_enum_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_return_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_return_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_return_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_rust_async_sse');
  late final _wire_handle_return_enum_twin_rust_async_sse =
      _wire_handle_return_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_multiply_by_ten_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_multiply_by_ten_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_multiply_by_ten_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_rust_async_sse');
  late final _wire_multiply_by_ten_twin_rust_async_sse =
      _wire_multiply_by_ten_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_print_note_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_print_note_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_print_note_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_rust_async_sse');
  late final _wire_print_note_twin_rust_async_sse =
      _wire_print_note_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_simple_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_simple_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_simple_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_sse');
  late final _wire_func_enum_simple_twin_sse =
      _wire_func_enum_simple_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_mixed_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_mixed_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_sse');
  late final _wire_func_enum_with_item_mixed_twin_sse =
      _wire_func_enum_with_item_mixed_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_sse');
  late final _wire_func_enum_with_item_struct_twin_sse =
      _wire_func_enum_with_item_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_enum_with_item_tuple_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_tuple_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_sse');
  late final _wire_func_enum_with_item_tuple_twin_sse =
      _wire_func_enum_with_item_tuple_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_enum_parameter_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_parameter_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_parameter_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_sse');
  late final _wire_handle_enum_parameter_twin_sse =
      _wire_handle_enum_parameter_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_enum_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_sse');
  late final _wire_handle_enum_struct_twin_sse =
      _wire_handle_enum_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_return_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_return_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_return_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_sse');
  late final _wire_handle_return_enum_twin_sse =
      _wire_handle_return_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_multiply_by_ten_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_multiply_by_ten_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_multiply_by_ten_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_sse');
  late final _wire_multiply_by_ten_twin_sse = _wire_multiply_by_ten_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_print_note_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_print_note_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_print_note_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_sse');
  late final _wire_print_note_twin_sse = _wire_print_note_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_func_enum_simple_twin_sync(
    int arg,
  ) {
    return _wire_func_enum_simple_twin_sync(
      arg,
    );
  }

  late final _wire_func_enum_simple_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_sync');
  late final _wire_func_enum_simple_twin_sync =
      _wire_func_enum_simple_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_func_enum_with_item_mixed_twin_sync(
    ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync> arg,
  ) {
    return _wire_func_enum_with_item_mixed_twin_sync(
      arg,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_sync');
  late final _wire_func_enum_with_item_mixed_twin_sync =
      _wire_func_enum_with_item_mixed_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync>)>();

  WireSyncRust2DartDco wire_func_enum_with_item_struct_twin_sync(
    ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync> arg,
  ) {
    return _wire_func_enum_with_item_struct_twin_sync(
      arg,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_sync');
  late final _wire_func_enum_with_item_struct_twin_sync =
      _wire_func_enum_with_item_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync>)>();

  WireSyncRust2DartDco wire_func_enum_with_item_tuple_twin_sync(
    ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync> arg,
  ) {
    return _wire_func_enum_with_item_tuple_twin_sync(
      arg,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_sync');
  late final _wire_func_enum_with_item_tuple_twin_sync =
      _wire_func_enum_with_item_tuple_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_enum_parameter_twin_sync(
    int weekday,
  ) {
    return _wire_handle_enum_parameter_twin_sync(
      weekday,
    );
  }

  late final _wire_handle_enum_parameter_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_sync');
  late final _wire_handle_enum_parameter_twin_sync =
      _wire_handle_enum_parameter_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_handle_enum_struct_twin_sync(
    ffi.Pointer<wire_cst_kitchen_sink_twin_sync> val,
  ) {
    return _wire_handle_enum_struct_twin_sync(
      val,
    );
  }

  late final _wire_handle_enum_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_kitchen_sink_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_sync');
  late final _wire_handle_enum_struct_twin_sync =
      _wire_handle_enum_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_kitchen_sink_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_return_enum_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> input,
  ) {
    return _wire_handle_return_enum_twin_sync(
      input,
    );
  }

  late final _wire_handle_return_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_sync');
  late final _wire_handle_return_enum_twin_sync =
      _wire_handle_return_enum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_multiply_by_ten_twin_sync(
    ffi.Pointer<wire_cst_measure_twin_sync> measure,
  ) {
    return _wire_multiply_by_ten_twin_sync(
      measure,
    );
  }

  late final _wire_multiply_by_ten_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_measure_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_sync');
  late final _wire_multiply_by_ten_twin_sync =
      _wire_multiply_by_ten_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_measure_twin_sync>)>();

  WireSyncRust2DartDco wire_print_note_twin_sync(
    ffi.Pointer<wire_cst_note_twin_sync> note,
  ) {
    return _wire_print_note_twin_sync(
      note,
    );
  }

  late final _wire_print_note_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_note_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_sync');
  late final _wire_print_note_twin_sync =
      _wire_print_note_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_note_twin_sync>)>();

  WireSyncRust2DartSse wire_func_enum_simple_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_simple_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_simple_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_simple_twin_sync_sse');
  late final _wire_func_enum_simple_twin_sync_sse =
      _wire_func_enum_simple_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_enum_with_item_mixed_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_mixed_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_mixed_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_mixed_twin_sync_sse');
  late final _wire_func_enum_with_item_mixed_twin_sync_sse =
      _wire_func_enum_with_item_mixed_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_enum_with_item_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_struct_twin_sync_sse');
  late final _wire_func_enum_with_item_struct_twin_sync_sse =
      _wire_func_enum_with_item_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_enum_with_item_tuple_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_enum_with_item_tuple_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_enum_with_item_tuple_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_enum_with_item_tuple_twin_sync_sse');
  late final _wire_func_enum_with_item_tuple_twin_sync_sse =
      _wire_func_enum_with_item_tuple_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_enum_parameter_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_parameter_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_parameter_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_parameter_twin_sync_sse');
  late final _wire_handle_enum_parameter_twin_sync_sse =
      _wire_handle_enum_parameter_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_enum_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_enum_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_enum_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_enum_struct_twin_sync_sse');
  late final _wire_handle_enum_struct_twin_sync_sse =
      _wire_handle_enum_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_return_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_return_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_return_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_return_enum_twin_sync_sse');
  late final _wire_handle_return_enum_twin_sync_sse =
      _wire_handle_return_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_multiply_by_ten_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_multiply_by_ten_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_multiply_by_ten_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_multiply_by_ten_twin_sync_sse');
  late final _wire_multiply_by_ten_twin_sync_sse =
      _wire_multiply_by_ten_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_print_note_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_print_note_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_print_note_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_print_note_twin_sync_sse');
  late final _wire_print_note_twin_sync_sse =
      _wire_print_note_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_EventTwinRustAsync_as_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_event_twin_rust_async> that,
  ) {
    return _wire_EventTwinRustAsync_as_string_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_EventTwinRustAsync_as_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_event_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_EventTwinRustAsync_as_string_twin_rust_async');
  late final _wire_EventTwinRustAsync_as_string_twin_rust_async =
      _wire_EventTwinRustAsync_as_string_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_event_twin_rust_async>)>();

  void wire_close_event_listener_twin_rust_async(
    int port_,
  ) {
    return _wire_close_event_listener_twin_rust_async(
      port_,
    );
  }

  late final _wire_close_event_listener_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_close_event_listener_twin_rust_async');
  late final _wire_close_event_listener_twin_rust_async =
      _wire_close_event_listener_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_create_event_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> address,
    ffi.Pointer<wire_cst_list_prim_u_8> payload,
  ) {
    return _wire_create_event_twin_rust_async(
      port_,
      address,
      payload,
    );
  }

  late final _wire_create_event_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_create_event_twin_rust_async');
  late final _wire_create_event_twin_rust_async =
      _wire_create_event_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>,
              ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_register_event_listener_twin_rust_async(
    int port_,
  ) {
    return _wire_register_event_listener_twin_rust_async(
      port_,
    );
  }

  late final _wire_register_event_listener_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_register_event_listener_twin_rust_async');
  late final _wire_register_event_listener_twin_rust_async =
      _wire_register_event_listener_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_EventTwinRustAsyncSse_as_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse');
  late final _wire_EventTwinRustAsyncSse_as_string_twin_rust_async_sse =
      _wire_EventTwinRustAsyncSse_as_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_close_event_listener_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_close_event_listener_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_close_event_listener_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_close_event_listener_twin_rust_async_sse');
  late final _wire_close_event_listener_twin_rust_async_sse =
      _wire_close_event_listener_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_event_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_event_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_event_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_event_twin_rust_async_sse');
  late final _wire_create_event_twin_rust_async_sse =
      _wire_create_event_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_register_event_listener_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_register_event_listener_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_register_event_listener_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_register_event_listener_twin_rust_async_sse');
  late final _wire_register_event_listener_twin_rust_async_sse =
      _wire_register_event_listener_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_EventTwinSse_as_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_EventTwinSse_as_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_EventTwinSse_as_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_EventTwinSse_as_string_twin_sse');
  late final _wire_EventTwinSse_as_string_twin_sse =
      _wire_EventTwinSse_as_string_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_close_event_listener_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_close_event_listener_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_close_event_listener_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_close_event_listener_twin_sse');
  late final _wire_close_event_listener_twin_sse =
      _wire_close_event_listener_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_event_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_event_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_event_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_event_twin_sse');
  late final _wire_create_event_twin_sse = _wire_create_event_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_register_event_listener_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_register_event_listener_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_register_event_listener_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_register_event_listener_twin_sse');
  late final _wire_register_event_listener_twin_sse =
      _wire_register_event_listener_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinRustAsync_new_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> message,
  ) {
    return _wire_CustomStructTwinRustAsync_new_twin_rust_async(
      port_,
      message,
    );
  }

  late final _wire_CustomStructTwinRustAsync_new_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsync_new_twin_rust_async');
  late final _wire_CustomStructTwinRustAsync_new_twin_rust_async =
      _wire_CustomStructTwinRustAsync_new_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void
      wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_twin_rust_async> that,
  ) {
    return _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_custom_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async');
  late final _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_async =
      _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_error_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_custom_struct_twin_rust_async>)>();

  void
      wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_twin_rust_async> that,
  ) {
    return _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_custom_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async');
  late final _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_async =
      _wire_CustomStructTwinRustAsync_nonstatic_return_custom_struct_ok_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_custom_struct_twin_rust_async>)>();

  void
      wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async(
    int port_,
  ) {
    return _wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async');
  late final _wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_async =
      _wire_CustomStructTwinRustAsync_static_return_custom_struct_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async(
    int port_,
  ) {
    return _wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async(
      port_,
    );
  }

  late final _wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async');
  late final _wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_async =
      _wire_CustomStructTwinRustAsync_static_return_custom_struct_ok_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_SomeStructTwinRustAsync_new_twin_rust_async(
    int port_,
    int value,
  ) {
    return _wire_SomeStructTwinRustAsync_new_twin_rust_async(
      port_,
      value,
    );
  }

  late final _wire_SomeStructTwinRustAsync_new_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsync_new_twin_rust_async');
  late final _wire_SomeStructTwinRustAsync_new_twin_rust_async =
      _wire_SomeStructTwinRustAsync_new_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void
      wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_some_struct_twin_rust_async> that,
  ) {
    return _wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_some_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async');
  late final _wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_async =
      _wire_SomeStructTwinRustAsync_non_static_return_err_custom_error_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_some_struct_twin_rust_async>)>();

  void
      wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_some_struct_twin_rust_async> that,
  ) {
    return _wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_some_struct_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async');
  late final _wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_async =
      _wire_SomeStructTwinRustAsync_non_static_return_ok_custom_error_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_some_struct_twin_rust_async>)>();

  void
      wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async(
    int port_,
  ) {
    return _wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async');
  late final _wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_async =
      _wire_SomeStructTwinRustAsync_static_return_err_custom_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async(
    int port_,
  ) {
    return _wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async');
  late final _wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_async =
      _wire_SomeStructTwinRustAsync_static_return_ok_custom_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_panic_twin_rust_async(
    int port_,
  ) {
    return _wire_custom_enum_error_panic_twin_rust_async(
      port_,
    );
  }

  late final _wire_custom_enum_error_panic_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_rust_async');
  late final _wire_custom_enum_error_panic_twin_rust_async =
      _wire_custom_enum_error_panic_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_return_error_twin_rust_async(
    int port_,
  ) {
    return _wire_custom_enum_error_return_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_custom_enum_error_return_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_rust_async');
  late final _wire_custom_enum_error_return_error_twin_rust_async =
      _wire_custom_enum_error_return_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_custom_enum_error_return_ok_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_custom_enum_error_return_ok_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_rust_async');
  late final _wire_custom_enum_error_return_ok_twin_rust_async =
      _wire_custom_enum_error_return_ok_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_custom_nested_error_return_error_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async> arg,
  ) {
    return _wire_custom_nested_error_return_error_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_custom_nested_error_outer_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_rust_async');
  late final _wire_custom_nested_error_return_error_twin_rust_async =
      _wire_custom_nested_error_return_error_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_custom_nested_error_outer_twin_rust_async>)>();

  void wire_custom_struct_error_return_error_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async> arg,
  ) {
    return _wire_custom_struct_error_return_error_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_rust_async');
  late final _wire_custom_struct_error_return_error_twin_rust_async =
      _wire_custom_struct_error_return_error_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>)>();

  void wire_func_return_error_twin_rust_async(
    int port_,
  ) {
    return _wire_func_return_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_return_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_error_twin_rust_async');
  late final _wire_func_return_error_twin_rust_async =
      _wire_func_return_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_func_type_fallible_panic_twin_rust_async(
    int port_,
  ) {
    return _wire_func_type_fallible_panic_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_type_fallible_panic_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_rust_async');
  late final _wire_func_type_fallible_panic_twin_rust_async =
      _wire_func_type_fallible_panic_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_func_type_infallible_panic_twin_rust_async(
    int port_,
  ) {
    return _wire_func_type_infallible_panic_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_type_infallible_panic_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_rust_async');
  late final _wire_func_type_infallible_panic_twin_rust_async =
      _wire_func_type_infallible_panic_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_panic_with_custom_result_twin_rust_async(
    int port_,
  ) {
    return _wire_panic_with_custom_result_twin_rust_async(
      port_,
    );
  }

  late final _wire_panic_with_custom_result_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_rust_async');
  late final _wire_panic_with_custom_result_twin_rust_async =
      _wire_panic_with_custom_result_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_1_twin_rust_async(
    int port_,
  ) {
    return _wire_return_custom_nested_error_1_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_1_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_rust_async');
  late final _wire_return_custom_nested_error_1_twin_rust_async =
      _wire_return_custom_nested_error_1_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_1_variant1_twin_rust_async(
    int port_,
  ) {
    return _wire_return_custom_nested_error_1_variant1_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_rust_async');
  late final _wire_return_custom_nested_error_1_variant1_twin_rust_async =
      _wire_return_custom_nested_error_1_variant1_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_nested_error_2_twin_rust_async(
    int port_,
  ) {
    return _wire_return_custom_nested_error_2_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_custom_nested_error_2_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_rust_async');
  late final _wire_return_custom_nested_error_2_twin_rust_async =
      _wire_return_custom_nested_error_2_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_struct_error_twin_rust_async(
    int port_,
  ) {
    return _wire_return_custom_struct_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_custom_struct_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_rust_async');
  late final _wire_return_custom_struct_error_twin_rust_async =
      _wire_return_custom_struct_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_custom_struct_ok_twin_rust_async(
    int port_,
  ) {
    return _wire_return_custom_struct_ok_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_custom_struct_ok_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_rust_async');
  late final _wire_return_custom_struct_ok_twin_rust_async =
      _wire_return_custom_struct_ok_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_err_custom_error_twin_rust_async(
    int port_,
  ) {
    return _wire_return_err_custom_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_err_custom_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_rust_async');
  late final _wire_return_err_custom_error_twin_rust_async =
      _wire_return_err_custom_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_return_error_variant_twin_rust_async(
    int port_,
    int variant,
  ) {
    return _wire_return_error_variant_twin_rust_async(
      port_,
      variant,
    );
  }

  late final _wire_return_error_variant_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_rust_async');
  late final _wire_return_error_variant_twin_rust_async =
      _wire_return_error_variant_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_return_ok_custom_error_twin_rust_async(
    int port_,
  ) {
    return _wire_return_ok_custom_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_return_ok_custom_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_rust_async');
  late final _wire_return_ok_custom_error_twin_rust_async =
      _wire_return_ok_custom_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_stream_sink_throw_anyhow_twin_rust_async(
    int port_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_rust_async(
      port_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_rust_async');
  late final _wire_stream_sink_throw_anyhow_twin_rust_async =
      _wire_stream_sink_throw_anyhow_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_throw_anyhow_twin_rust_async(
    int port_,
  ) {
    return _wire_throw_anyhow_twin_rust_async(
      port_,
    );
  }

  late final _wire_throw_anyhow_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_rust_async');
  late final _wire_throw_anyhow_twin_rust_async =
      _wire_throw_anyhow_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse');
  late final _wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_sse =
      _wire_CustomStructTwinRustAsyncSse_new_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse');
  late final _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_sse =
      _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse');
  late final _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_sse =
      _wire_CustomStructTwinRustAsyncSse_nonstatic_return_custom_struct_ok_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse');
  late final _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_sse =
      _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse');
  late final _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_sse =
      _wire_CustomStructTwinRustAsyncSse_static_return_custom_struct_ok_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse');
  late final _wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_sse =
      _wire_SomeStructTwinRustAsyncSse_new_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse');
  late final _wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_sse =
      _wire_SomeStructTwinRustAsyncSse_non_static_return_err_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse');
  late final _wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_sse =
      _wire_SomeStructTwinRustAsyncSse_non_static_return_ok_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse');
  late final _wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_sse =
      _wire_SomeStructTwinRustAsyncSse_static_return_err_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse');
  late final _wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_sse =
      _wire_SomeStructTwinRustAsyncSse_static_return_ok_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_panic_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_panic_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_panic_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_rust_async_sse');
  late final _wire_custom_enum_error_panic_twin_rust_async_sse =
      _wire_custom_enum_error_panic_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_return_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_rust_async_sse');
  late final _wire_custom_enum_error_return_error_twin_rust_async_sse =
      _wire_custom_enum_error_return_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_return_ok_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_ok_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_rust_async_sse');
  late final _wire_custom_enum_error_return_ok_twin_rust_async_sse =
      _wire_custom_enum_error_return_ok_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_nested_error_return_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_nested_error_return_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_rust_async_sse');
  late final _wire_custom_nested_error_return_error_twin_rust_async_sse =
      _wire_custom_nested_error_return_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_struct_error_return_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_struct_error_return_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_rust_async_sse');
  late final _wire_custom_struct_error_return_error_twin_rust_async_sse =
      _wire_custom_struct_error_return_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_return_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_error_twin_rust_async_sse');
  late final _wire_func_return_error_twin_rust_async_sse =
      _wire_func_return_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_type_fallible_panic_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_fallible_panic_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_fallible_panic_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_rust_async_sse');
  late final _wire_func_type_fallible_panic_twin_rust_async_sse =
      _wire_func_type_fallible_panic_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_type_infallible_panic_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_infallible_panic_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_infallible_panic_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_rust_async_sse');
  late final _wire_func_type_infallible_panic_twin_rust_async_sse =
      _wire_func_type_infallible_panic_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_panic_with_custom_result_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_with_custom_result_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_with_custom_result_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_rust_async_sse');
  late final _wire_panic_with_custom_result_twin_rust_async_sse =
      _wire_panic_with_custom_result_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_1_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_rust_async_sse');
  late final _wire_return_custom_nested_error_1_twin_rust_async_sse =
      _wire_return_custom_nested_error_1_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_1_variant1_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_variant1_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_rust_async_sse');
  late final _wire_return_custom_nested_error_1_variant1_twin_rust_async_sse =
      _wire_return_custom_nested_error_1_variant1_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_2_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_2_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_2_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_rust_async_sse');
  late final _wire_return_custom_nested_error_2_twin_rust_async_sse =
      _wire_return_custom_nested_error_2_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_struct_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_rust_async_sse');
  late final _wire_return_custom_struct_error_twin_rust_async_sse =
      _wire_return_custom_struct_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_struct_ok_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_ok_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_ok_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_rust_async_sse');
  late final _wire_return_custom_struct_ok_twin_rust_async_sse =
      _wire_return_custom_struct_ok_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_err_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_err_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_err_custom_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_rust_async_sse');
  late final _wire_return_err_custom_error_twin_rust_async_sse =
      _wire_return_err_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_error_variant_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_error_variant_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_error_variant_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_rust_async_sse');
  late final _wire_return_error_variant_twin_rust_async_sse =
      _wire_return_error_variant_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_ok_custom_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_ok_custom_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_ok_custom_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_rust_async_sse');
  late final _wire_return_ok_custom_error_twin_rust_async_sse =
      _wire_return_ok_custom_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_stream_sink_throw_anyhow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_rust_async_sse');
  late final _wire_stream_sink_throw_anyhow_twin_rust_async_sse =
      _wire_stream_sink_throw_anyhow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_throw_anyhow_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_throw_anyhow_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_throw_anyhow_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_rust_async_sse');
  late final _wire_throw_anyhow_twin_rust_async_sse =
      _wire_throw_anyhow_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinSse_new_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSse_new_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSse_new_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_CustomStructTwinSse_new_twin_sse');
  late final _wire_CustomStructTwinSse_new_twin_sse =
      _wire_CustomStructTwinSse_new_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse');
  late final _wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_sse =
      _wire_CustomStructTwinSse_nonstatic_return_custom_struct_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse');
  late final _wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_sse =
      _wire_CustomStructTwinSse_nonstatic_return_custom_struct_ok_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSse_static_return_custom_struct_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse');
  late final _wire_CustomStructTwinSse_static_return_custom_struct_error_twin_sse =
      _wire_CustomStructTwinSse_static_return_custom_struct_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse');
  late final _wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_sse =
      _wire_CustomStructTwinSse_static_return_custom_struct_ok_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinSse_new_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSse_new_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSse_new_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SomeStructTwinSse_new_twin_sse');
  late final _wire_SomeStructTwinSse_new_twin_sse =
      _wire_SomeStructTwinSse_new_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse');
  late final _wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_sse =
      _wire_SomeStructTwinSse_non_static_return_err_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse');
  late final _wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_sse =
      _wire_SomeStructTwinSse_non_static_return_ok_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSse_static_return_err_custom_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse');
  late final _wire_SomeStructTwinSse_static_return_err_custom_error_twin_sse =
      _wire_SomeStructTwinSse_static_return_err_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSse_static_return_ok_custom_error_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse');
  late final _wire_SomeStructTwinSse_static_return_ok_custom_error_twin_sse =
      _wire_SomeStructTwinSse_static_return_ok_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_panic_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_panic_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_panic_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_sse');
  late final _wire_custom_enum_error_panic_twin_sse =
      _wire_custom_enum_error_panic_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_return_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_sse');
  late final _wire_custom_enum_error_return_error_twin_sse =
      _wire_custom_enum_error_return_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_enum_error_return_ok_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_ok_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_sse');
  late final _wire_custom_enum_error_return_ok_twin_sse =
      _wire_custom_enum_error_return_ok_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_nested_error_return_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_nested_error_return_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_sse');
  late final _wire_custom_nested_error_return_error_twin_sse =
      _wire_custom_nested_error_return_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_custom_struct_error_return_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_struct_error_return_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_sse');
  late final _wire_custom_struct_error_return_error_twin_sse =
      _wire_custom_struct_error_return_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_return_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_error_twin_sse');
  late final _wire_func_return_error_twin_sse =
      _wire_func_return_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_type_fallible_panic_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_fallible_panic_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_fallible_panic_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_sse');
  late final _wire_func_type_fallible_panic_twin_sse =
      _wire_func_type_fallible_panic_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_type_infallible_panic_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_infallible_panic_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_infallible_panic_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_sse');
  late final _wire_func_type_infallible_panic_twin_sse =
      _wire_func_type_infallible_panic_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_panic_with_custom_result_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_with_custom_result_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_with_custom_result_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_sse');
  late final _wire_panic_with_custom_result_twin_sse =
      _wire_panic_with_custom_result_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_1_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_sse');
  late final _wire_return_custom_nested_error_1_twin_sse =
      _wire_return_custom_nested_error_1_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_1_variant1_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_variant1_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_sse');
  late final _wire_return_custom_nested_error_1_variant1_twin_sse =
      _wire_return_custom_nested_error_1_variant1_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_nested_error_2_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_2_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_2_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_sse');
  late final _wire_return_custom_nested_error_2_twin_sse =
      _wire_return_custom_nested_error_2_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_struct_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_sse');
  late final _wire_return_custom_struct_error_twin_sse =
      _wire_return_custom_struct_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_custom_struct_ok_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_ok_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_ok_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_sse');
  late final _wire_return_custom_struct_ok_twin_sse =
      _wire_return_custom_struct_ok_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_err_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_err_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_err_custom_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_sse');
  late final _wire_return_err_custom_error_twin_sse =
      _wire_return_err_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_error_variant_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_error_variant_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_error_variant_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_sse');
  late final _wire_return_error_variant_twin_sse =
      _wire_return_error_variant_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_return_ok_custom_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_ok_custom_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_ok_custom_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_sse');
  late final _wire_return_ok_custom_error_twin_sse =
      _wire_return_ok_custom_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_stream_sink_throw_anyhow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_sse');
  late final _wire_stream_sink_throw_anyhow_twin_sse =
      _wire_stream_sink_throw_anyhow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_throw_anyhow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_throw_anyhow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_throw_anyhow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_sse');
  late final _wire_throw_anyhow_twin_sse = _wire_throw_anyhow_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_CustomStructTwinSync_new_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> message,
  ) {
    return _wire_CustomStructTwinSync_new_twin_sync(
      message,
    );
  }

  late final _wire_CustomStructTwinSync_new_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_CustomStructTwinSync_new_twin_sync');
  late final _wire_CustomStructTwinSync_new_twin_sync =
      _wire_CustomStructTwinSync_new_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco
      wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync(
    ffi.Pointer<wire_cst_custom_struct_twin_sync> that,
  ) {
    return _wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync(
      that,
    );
  }

  late final _wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_custom_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync');
  late final _wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_sync =
      _wire_CustomStructTwinSync_nonstatic_return_custom_struct_error_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_custom_struct_twin_sync>)>();

  WireSyncRust2DartDco
      wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync(
    ffi.Pointer<wire_cst_custom_struct_twin_sync> that,
  ) {
    return _wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync(
      that,
    );
  }

  late final _wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_custom_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync');
  late final _wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_sync =
      _wire_CustomStructTwinSync_nonstatic_return_custom_struct_ok_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_custom_struct_twin_sync>)>();

  WireSyncRust2DartDco
      wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync() {
    return _wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync();
  }

  late final _wire_CustomStructTwinSync_static_return_custom_struct_error_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync');
  late final _wire_CustomStructTwinSync_static_return_custom_struct_error_twin_sync =
      _wire_CustomStructTwinSync_static_return_custom_struct_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync() {
    return _wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync();
  }

  late final _wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync');
  late final _wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_sync =
      _wire_CustomStructTwinSync_static_return_custom_struct_ok_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_SomeStructTwinSync_new_twin_sync(
    int value,
  ) {
    return _wire_SomeStructTwinSync_new_twin_sync(
      value,
    );
  }

  late final _wire_SomeStructTwinSync_new_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSync_new_twin_sync');
  late final _wire_SomeStructTwinSync_new_twin_sync =
      _wire_SomeStructTwinSync_new_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync(
    ffi.Pointer<wire_cst_some_struct_twin_sync> that,
  ) {
    return _wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync(
      that,
    );
  }

  late final _wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_some_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync');
  late final _wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_sync =
      _wire_SomeStructTwinSync_non_static_return_err_custom_error_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_some_struct_twin_sync>)>();

  WireSyncRust2DartDco
      wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync(
    ffi.Pointer<wire_cst_some_struct_twin_sync> that,
  ) {
    return _wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync(
      that,
    );
  }

  late final _wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_some_struct_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync');
  late final _wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_sync =
      _wire_SomeStructTwinSync_non_static_return_ok_custom_error_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_some_struct_twin_sync>)>();

  WireSyncRust2DartDco
      wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync() {
    return _wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync();
  }

  late final _wire_SomeStructTwinSync_static_return_err_custom_error_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync');
  late final _wire_SomeStructTwinSync_static_return_err_custom_error_twin_sync =
      _wire_SomeStructTwinSync_static_return_err_custom_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync() {
    return _wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync();
  }

  late final _wire_SomeStructTwinSync_static_return_ok_custom_error_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync');
  late final _wire_SomeStructTwinSync_static_return_ok_custom_error_twin_sync =
      _wire_SomeStructTwinSync_static_return_ok_custom_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_custom_enum_error_panic_twin_sync() {
    return _wire_custom_enum_error_panic_twin_sync();
  }

  late final _wire_custom_enum_error_panic_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_sync');
  late final _wire_custom_enum_error_panic_twin_sync =
      _wire_custom_enum_error_panic_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_custom_enum_error_return_error_twin_sync() {
    return _wire_custom_enum_error_return_error_twin_sync();
  }

  late final _wire_custom_enum_error_return_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_sync');
  late final _wire_custom_enum_error_return_error_twin_sync =
      _wire_custom_enum_error_return_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_custom_enum_error_return_ok_twin_sync(
    int arg,
  ) {
    return _wire_custom_enum_error_return_ok_twin_sync(
      arg,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_sync');
  late final _wire_custom_enum_error_return_ok_twin_sync =
      _wire_custom_enum_error_return_ok_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_custom_nested_error_return_error_twin_sync(
    ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync> arg,
  ) {
    return _wire_custom_nested_error_return_error_twin_sync(
      arg,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_sync');
  late final _wire_custom_nested_error_return_error_twin_sync =
      _wire_custom_nested_error_return_error_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>)>();

  WireSyncRust2DartDco wire_custom_struct_error_return_error_twin_sync(
    ffi.Pointer<wire_cst_custom_struct_error_twin_sync> arg,
  ) {
    return _wire_custom_struct_error_return_error_twin_sync(
      arg,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_custom_struct_error_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_sync');
  late final _wire_custom_struct_error_return_error_twin_sync =
      _wire_custom_struct_error_return_error_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_custom_struct_error_twin_sync>)>();

  WireSyncRust2DartDco wire_func_return_error_twin_sync() {
    return _wire_func_return_error_twin_sync();
  }

  late final _wire_func_return_error_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_func_return_error_twin_sync');
  late final _wire_func_return_error_twin_sync =
      _wire_func_return_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_func_type_fallible_panic_twin_sync() {
    return _wire_func_type_fallible_panic_twin_sync();
  }

  late final _wire_func_type_fallible_panic_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_sync');
  late final _wire_func_type_fallible_panic_twin_sync =
      _wire_func_type_fallible_panic_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_func_type_infallible_panic_twin_sync() {
    return _wire_func_type_infallible_panic_twin_sync();
  }

  late final _wire_func_type_infallible_panic_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_sync');
  late final _wire_func_type_infallible_panic_twin_sync =
      _wire_func_type_infallible_panic_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_panic_with_custom_result_twin_sync() {
    return _wire_panic_with_custom_result_twin_sync();
  }

  late final _wire_panic_with_custom_result_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_sync');
  late final _wire_panic_with_custom_result_twin_sync =
      _wire_panic_with_custom_result_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_custom_nested_error_1_twin_sync() {
    return _wire_return_custom_nested_error_1_twin_sync();
  }

  late final _wire_return_custom_nested_error_1_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_sync');
  late final _wire_return_custom_nested_error_1_twin_sync =
      _wire_return_custom_nested_error_1_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_custom_nested_error_1_variant1_twin_sync() {
    return _wire_return_custom_nested_error_1_variant1_twin_sync();
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_sync');
  late final _wire_return_custom_nested_error_1_variant1_twin_sync =
      _wire_return_custom_nested_error_1_variant1_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_custom_nested_error_2_twin_sync() {
    return _wire_return_custom_nested_error_2_twin_sync();
  }

  late final _wire_return_custom_nested_error_2_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_sync');
  late final _wire_return_custom_nested_error_2_twin_sync =
      _wire_return_custom_nested_error_2_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_custom_struct_error_twin_sync() {
    return _wire_return_custom_struct_error_twin_sync();
  }

  late final _wire_return_custom_struct_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_sync');
  late final _wire_return_custom_struct_error_twin_sync =
      _wire_return_custom_struct_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_custom_struct_ok_twin_sync() {
    return _wire_return_custom_struct_ok_twin_sync();
  }

  late final _wire_return_custom_struct_ok_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_sync');
  late final _wire_return_custom_struct_ok_twin_sync =
      _wire_return_custom_struct_ok_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_err_custom_error_twin_sync() {
    return _wire_return_err_custom_error_twin_sync();
  }

  late final _wire_return_err_custom_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_sync');
  late final _wire_return_err_custom_error_twin_sync =
      _wire_return_err_custom_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_return_error_variant_twin_sync(
    int variant,
  ) {
    return _wire_return_error_variant_twin_sync(
      variant,
    );
  }

  late final _wire_return_error_variant_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_sync');
  late final _wire_return_error_variant_twin_sync =
      _wire_return_error_variant_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_return_ok_custom_error_twin_sync() {
    return _wire_return_ok_custom_error_twin_sync();
  }

  late final _wire_return_ok_custom_error_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_sync');
  late final _wire_return_ok_custom_error_twin_sync =
      _wire_return_ok_custom_error_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_stream_sink_throw_anyhow_twin_sync(
    int port_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_sync(
      port_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_sync');
  late final _wire_stream_sink_throw_anyhow_twin_sync =
      _wire_stream_sink_throw_anyhow_twin_syncPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_throw_anyhow_twin_sync() {
    return _wire_throw_anyhow_twin_sync();
  }

  late final _wire_throw_anyhow_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_sync');
  late final _wire_throw_anyhow_twin_sync = _wire_throw_anyhow_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse wire_CustomStructTwinSyncSse_new_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSyncSse_new_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSyncSse_new_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_CustomStructTwinSyncSse_new_twin_sync_sse');
  late final _wire_CustomStructTwinSyncSse_new_twin_sync_sse =
      _wire_CustomStructTwinSyncSse_new_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse');
  late final _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_sse =
      _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse');
  late final _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_sse =
      _wire_CustomStructTwinSyncSse_nonstatic_return_custom_struct_ok_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse');
  late final _wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_sse =
      _wire_CustomStructTwinSyncSse_static_return_custom_struct_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse');
  late final _wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_sse =
      _wire_CustomStructTwinSyncSse_static_return_custom_struct_ok_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_SomeStructTwinSyncSse_new_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSyncSse_new_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSyncSse_new_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SomeStructTwinSyncSse_new_twin_sync_sse');
  late final _wire_SomeStructTwinSyncSse_new_twin_sync_sse =
      _wire_SomeStructTwinSyncSse_new_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse');
  late final _wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_sse =
      _wire_SomeStructTwinSyncSse_non_static_return_err_custom_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse');
  late final _wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_sse =
      _wire_SomeStructTwinSyncSse_non_static_return_ok_custom_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse');
  late final _wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_sse =
      _wire_SomeStructTwinSyncSse_static_return_err_custom_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse');
  late final _wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_sse =
      _wire_SomeStructTwinSyncSse_static_return_ok_custom_error_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_custom_enum_error_panic_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_panic_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_panic_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_panic_twin_sync_sse');
  late final _wire_custom_enum_error_panic_twin_sync_sse =
      _wire_custom_enum_error_panic_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_custom_enum_error_return_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_error_twin_sync_sse');
  late final _wire_custom_enum_error_return_error_twin_sync_sse =
      _wire_custom_enum_error_return_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_custom_enum_error_return_ok_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_enum_error_return_ok_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_enum_error_return_ok_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_enum_error_return_ok_twin_sync_sse');
  late final _wire_custom_enum_error_return_ok_twin_sync_sse =
      _wire_custom_enum_error_return_ok_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_custom_nested_error_return_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_nested_error_return_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_nested_error_return_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_nested_error_return_error_twin_sync_sse');
  late final _wire_custom_nested_error_return_error_twin_sync_sse =
      _wire_custom_nested_error_return_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_custom_struct_error_return_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_custom_struct_error_return_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_custom_struct_error_return_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_custom_struct_error_return_error_twin_sync_sse');
  late final _wire_custom_struct_error_return_error_twin_sync_sse =
      _wire_custom_struct_error_return_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_return_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_error_twin_sync_sse');
  late final _wire_func_return_error_twin_sync_sse =
      _wire_func_return_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_type_fallible_panic_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_fallible_panic_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_fallible_panic_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_fallible_panic_twin_sync_sse');
  late final _wire_func_type_fallible_panic_twin_sync_sse =
      _wire_func_type_fallible_panic_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_type_infallible_panic_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_type_infallible_panic_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_type_infallible_panic_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_type_infallible_panic_twin_sync_sse');
  late final _wire_func_type_infallible_panic_twin_sync_sse =
      _wire_func_type_infallible_panic_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_panic_with_custom_result_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_panic_with_custom_result_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_panic_with_custom_result_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_panic_with_custom_result_twin_sync_sse');
  late final _wire_panic_with_custom_result_twin_sync_sse =
      _wire_panic_with_custom_result_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_custom_nested_error_1_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_twin_sync_sse');
  late final _wire_return_custom_nested_error_1_twin_sync_sse =
      _wire_return_custom_nested_error_1_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_custom_nested_error_1_variant1_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_1_variant1_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_1_variant1_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_1_variant1_twin_sync_sse');
  late final _wire_return_custom_nested_error_1_variant1_twin_sync_sse =
      _wire_return_custom_nested_error_1_variant1_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_custom_nested_error_2_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_nested_error_2_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_nested_error_2_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_nested_error_2_twin_sync_sse');
  late final _wire_return_custom_nested_error_2_twin_sync_sse =
      _wire_return_custom_nested_error_2_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_custom_struct_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_error_twin_sync_sse');
  late final _wire_return_custom_struct_error_twin_sync_sse =
      _wire_return_custom_struct_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_custom_struct_ok_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_custom_struct_ok_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_custom_struct_ok_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_custom_struct_ok_twin_sync_sse');
  late final _wire_return_custom_struct_ok_twin_sync_sse =
      _wire_return_custom_struct_ok_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_err_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_err_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_err_custom_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_err_custom_error_twin_sync_sse');
  late final _wire_return_err_custom_error_twin_sync_sse =
      _wire_return_err_custom_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_error_variant_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_error_variant_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_error_variant_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_error_variant_twin_sync_sse');
  late final _wire_return_error_variant_twin_sync_sse =
      _wire_return_error_variant_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_return_ok_custom_error_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_return_ok_custom_error_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_return_ok_custom_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_return_ok_custom_error_twin_sync_sse');
  late final _wire_return_ok_custom_error_twin_sync_sse =
      _wire_return_ok_custom_error_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_stream_sink_throw_anyhow_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_stream_sink_throw_anyhow_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_stream_sink_throw_anyhow_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_stream_sink_throw_anyhow_twin_sync_sse');
  late final _wire_stream_sink_throw_anyhow_twin_sync_sse =
      _wire_stream_sink_throw_anyhow_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_throw_anyhow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_throw_anyhow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_throw_anyhow_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_throw_anyhow_twin_sync_sse');
  late final _wire_throw_anyhow_twin_sync_sse =
      _wire_throw_anyhow_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_call_new_module_system_twin_rust_async(
    int port_,
  ) {
    return _wire_call_new_module_system_twin_rust_async(
      port_,
    );
  }

  late final _wire_call_new_module_system_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_rust_async');
  late final _wire_call_new_module_system_twin_rust_async =
      _wire_call_new_module_system_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_call_old_module_system_twin_rust_async(
    int port_,
  ) {
    return _wire_call_old_module_system_twin_rust_async(
      port_,
    );
  }

  late final _wire_call_old_module_system_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_rust_async');
  late final _wire_call_old_module_system_twin_rust_async =
      _wire_call_old_module_system_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_use_imported_enum_twin_rust_async(
    int port_,
    int my_enum,
  ) {
    return _wire_use_imported_enum_twin_rust_async(
      port_,
      my_enum,
    );
  }

  late final _wire_use_imported_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_rust_async');
  late final _wire_use_imported_enum_twin_rust_async =
      _wire_use_imported_enum_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_use_imported_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_my_struct> my_struct,
  ) {
    return _wire_use_imported_struct_twin_rust_async(
      port_,
      my_struct,
    );
  }

  late final _wire_use_imported_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_my_struct>)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_rust_async');
  late final _wire_use_imported_struct_twin_rust_async =
      _wire_use_imported_struct_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_my_struct>)>();

  void wire_call_new_module_system_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_new_module_system_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_new_module_system_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_rust_async_sse');
  late final _wire_call_new_module_system_twin_rust_async_sse =
      _wire_call_new_module_system_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_call_old_module_system_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_old_module_system_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_old_module_system_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_rust_async_sse');
  late final _wire_call_old_module_system_twin_rust_async_sse =
      _wire_call_old_module_system_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_imported_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_rust_async_sse');
  late final _wire_use_imported_enum_twin_rust_async_sse =
      _wire_use_imported_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_imported_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_rust_async_sse');
  late final _wire_use_imported_struct_twin_rust_async_sse =
      _wire_use_imported_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_call_new_module_system_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_new_module_system_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_new_module_system_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_sse');
  late final _wire_call_new_module_system_twin_sse =
      _wire_call_new_module_system_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_call_old_module_system_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_old_module_system_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_old_module_system_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_sse');
  late final _wire_call_old_module_system_twin_sse =
      _wire_call_old_module_system_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_imported_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_sse');
  late final _wire_use_imported_enum_twin_sse =
      _wire_use_imported_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_use_imported_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_sse');
  late final _wire_use_imported_struct_twin_sse =
      _wire_use_imported_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_call_new_module_system_twin_sync() {
    return _wire_call_new_module_system_twin_sync();
  }

  late final _wire_call_new_module_system_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_sync');
  late final _wire_call_new_module_system_twin_sync =
      _wire_call_new_module_system_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_call_old_module_system_twin_sync() {
    return _wire_call_old_module_system_twin_sync();
  }

  late final _wire_call_old_module_system_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_sync');
  late final _wire_call_old_module_system_twin_sync =
      _wire_call_old_module_system_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_use_imported_enum_twin_sync(
    int my_enum,
  ) {
    return _wire_use_imported_enum_twin_sync(
      my_enum,
    );
  }

  late final _wire_use_imported_enum_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_sync');
  late final _wire_use_imported_enum_twin_sync =
      _wire_use_imported_enum_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_use_imported_struct_twin_sync(
    ffi.Pointer<wire_cst_my_struct> my_struct,
  ) {
    return _wire_use_imported_struct_twin_sync(
      my_struct,
    );
  }

  late final _wire_use_imported_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_my_struct>)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_sync');
  late final _wire_use_imported_struct_twin_sync =
      _wire_use_imported_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_my_struct>)>();

  WireSyncRust2DartSse wire_call_new_module_system_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_new_module_system_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_new_module_system_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_new_module_system_twin_sync_sse');
  late final _wire_call_new_module_system_twin_sync_sse =
      _wire_call_new_module_system_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_call_old_module_system_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_call_old_module_system_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_call_old_module_system_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_call_old_module_system_twin_sync_sse');
  late final _wire_call_old_module_system_twin_sync_sse =
      _wire_call_old_module_system_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_use_imported_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_enum_twin_sync_sse');
  late final _wire_use_imported_enum_twin_sync_sse =
      _wire_use_imported_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_use_imported_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_use_imported_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_use_imported_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_use_imported_struct_twin_sync_sse');
  late final _wire_use_imported_struct_twin_sync_sse =
      _wire_use_imported_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_i32_i32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_i_32_i_32> arg,
  ) {
    return _wire_func_hash_map_i32_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_rust_async');
  late final _wire_func_hash_map_i32_i32_twin_rust_async =
      _wire_func_hash_map_i32_i32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_i_32_i_32>)>();

  void wire_func_hash_map_string_bytes_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_list_prim_u_8> arg,
  ) {
    return _wire_func_hash_map_string_bytes_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_record_string_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_rust_async');
  late final _wire_func_hash_map_string_bytes_twin_rust_async =
      _wire_func_hash_map_string_bytes_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_record_string_list_prim_u_8>)>();

  void wire_func_hash_map_string_complex_enum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async> arg,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_string_kitchen_sink_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_rust_async');
  late final _wire_func_hash_map_string_complex_enum_twin_rust_async =
      _wire_func_hash_map_string_complex_enum_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_record_string_kitchen_sink_twin_rust_async>)>();

  void wire_func_hash_map_string_simple_enum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async> arg,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_list_record_string_enum_simple_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_rust_async');
  late final _wire_func_hash_map_string_simple_enum_twin_rust_async =
      _wire_func_hash_map_string_simple_enum_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_list_record_string_enum_simple_twin_rust_async>)>();

  void wire_func_hash_map_string_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_string> arg,
  ) {
    return _wire_func_hash_map_string_string_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_string_string>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_rust_async');
  late final _wire_func_hash_map_string_string_twin_rust_async =
      _wire_func_hash_map_string_string_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_record_string_string>)>();

  void wire_func_hash_map_string_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_my_size> arg,
  ) {
    return _wire_func_hash_map_string_struct_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_record_string_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_rust_async');
  late final _wire_func_hash_map_string_struct_twin_rust_async =
      _wire_func_hash_map_string_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_record_string_my_size>)>();

  void wire_func_hash_set_i32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_32> arg,
  ) {
    return _wire_func_hash_set_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_set_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_rust_async');
  late final _wire_func_hash_set_i32_twin_rust_async =
      _wire_func_hash_set_i32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_32>)>();

  void wire_func_hash_set_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_String> arg,
  ) {
    return _wire_func_hash_set_string_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_hash_set_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_rust_async');
  late final _wire_func_hash_set_string_twin_rust_async =
      _wire_func_hash_set_string_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_func_hash_map_i32_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_i32_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_rust_async_sse');
  late final _wire_func_hash_map_i32_i32_twin_rust_async_sse =
      _wire_func_hash_map_i32_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_bytes_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_bytes_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_rust_async_sse');
  late final _wire_func_hash_map_string_bytes_twin_rust_async_sse =
      _wire_func_hash_map_string_bytes_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_complex_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_rust_async_sse');
  late final _wire_func_hash_map_string_complex_enum_twin_rust_async_sse =
      _wire_func_hash_map_string_complex_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_simple_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_rust_async_sse');
  late final _wire_func_hash_map_string_simple_enum_twin_rust_async_sse =
      _wire_func_hash_map_string_simple_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_rust_async_sse');
  late final _wire_func_hash_map_string_string_twin_rust_async_sse =
      _wire_func_hash_map_string_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_rust_async_sse');
  late final _wire_func_hash_map_string_struct_twin_rust_async_sse =
      _wire_func_hash_map_string_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_set_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_i32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_rust_async_sse');
  late final _wire_func_hash_set_i32_twin_rust_async_sse =
      _wire_func_hash_set_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_set_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_rust_async_sse');
  late final _wire_func_hash_set_string_twin_rust_async_sse =
      _wire_func_hash_set_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_i32_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_i32_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_sse');
  late final _wire_func_hash_map_i32_i32_twin_sse =
      _wire_func_hash_map_i32_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_bytes_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_bytes_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_sse');
  late final _wire_func_hash_map_string_bytes_twin_sse =
      _wire_func_hash_map_string_bytes_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_complex_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_sse');
  late final _wire_func_hash_map_string_complex_enum_twin_sse =
      _wire_func_hash_map_string_complex_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_simple_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_sse');
  late final _wire_func_hash_map_string_simple_enum_twin_sse =
      _wire_func_hash_map_string_simple_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_sse');
  late final _wire_func_hash_map_string_string_twin_sse =
      _wire_func_hash_map_string_string_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_map_string_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_sse');
  late final _wire_func_hash_map_string_struct_twin_sse =
      _wire_func_hash_map_string_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_set_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_sse');
  late final _wire_func_hash_set_i32_twin_sse =
      _wire_func_hash_set_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_hash_set_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_sse');
  late final _wire_func_hash_set_string_twin_sse =
      _wire_func_hash_set_string_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_func_hash_map_i32_i32_twin_sync(
    ffi.Pointer<wire_cst_list_record_i_32_i_32> arg,
  ) {
    return _wire_func_hash_map_i32_i32_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_i_32_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_sync');
  late final _wire_func_hash_map_i32_i32_twin_sync =
      _wire_func_hash_map_i32_i32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_i_32_i_32>)>();

  WireSyncRust2DartDco wire_func_hash_map_string_bytes_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_list_prim_u_8> arg,
  ) {
    return _wire_func_hash_map_string_bytes_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_string_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_sync');
  late final _wire_func_hash_map_string_bytes_twin_sync =
      _wire_func_hash_map_string_bytes_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_string_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_func_hash_map_string_complex_enum_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync> arg,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_record_string_kitchen_sink_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_sync');
  late final _wire_func_hash_map_string_complex_enum_twin_sync =
      _wire_func_hash_map_string_complex_enum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<
                  wire_cst_list_record_string_kitchen_sink_twin_sync>)>();

  WireSyncRust2DartDco wire_func_hash_map_string_simple_enum_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync> arg,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_list_record_string_enum_simple_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_sync');
  late final _wire_func_hash_map_string_simple_enum_twin_sync =
      _wire_func_hash_map_string_simple_enum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<
                  wire_cst_list_record_string_enum_simple_twin_sync>)>();

  WireSyncRust2DartDco wire_func_hash_map_string_string_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_string> arg,
  ) {
    return _wire_func_hash_map_string_string_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_string_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_string_string>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_sync');
  late final _wire_func_hash_map_string_string_twin_sync =
      _wire_func_hash_map_string_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_string_string>)>();

  WireSyncRust2DartDco wire_func_hash_map_string_struct_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_my_size> arg,
  ) {
    return _wire_func_hash_map_string_struct_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_string_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_sync');
  late final _wire_func_hash_map_string_struct_twin_sync =
      _wire_func_hash_map_string_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_string_my_size>)>();

  WireSyncRust2DartDco wire_func_hash_set_i32_twin_sync(
    ffi.Pointer<wire_cst_list_prim_i_32> arg,
  ) {
    return _wire_func_hash_set_i32_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_set_i32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_sync');
  late final _wire_func_hash_set_i32_twin_sync =
      _wire_func_hash_set_i32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_i_32>)>();

  WireSyncRust2DartDco wire_func_hash_set_string_twin_sync(
    ffi.Pointer<wire_cst_list_String> arg,
  ) {
    return _wire_func_hash_set_string_twin_sync(
      arg,
    );
  }

  late final _wire_func_hash_set_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_sync');
  late final _wire_func_hash_set_string_twin_sync =
      _wire_func_hash_set_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_String>)>();

  WireSyncRust2DartSse wire_func_hash_map_i32_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_i32_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_i32_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_i32_i32_twin_sync_sse');
  late final _wire_func_hash_map_i32_i32_twin_sync_sse =
      _wire_func_hash_map_i32_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_map_string_bytes_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_bytes_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_bytes_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_bytes_twin_sync_sse');
  late final _wire_func_hash_map_string_bytes_twin_sync_sse =
      _wire_func_hash_map_string_bytes_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_map_string_complex_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_complex_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_complex_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_complex_enum_twin_sync_sse');
  late final _wire_func_hash_map_string_complex_enum_twin_sync_sse =
      _wire_func_hash_map_string_complex_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_map_string_simple_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_simple_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_simple_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_simple_enum_twin_sync_sse');
  late final _wire_func_hash_map_string_simple_enum_twin_sync_sse =
      _wire_func_hash_map_string_simple_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_map_string_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_string_twin_sync_sse');
  late final _wire_func_hash_map_string_string_twin_sync_sse =
      _wire_func_hash_map_string_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_map_string_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_map_string_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_map_string_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_map_string_struct_twin_sync_sse');
  late final _wire_func_hash_map_string_struct_twin_sync_sse =
      _wire_func_hash_map_string_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_set_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_i32_twin_sync_sse');
  late final _wire_func_hash_set_i32_twin_sync_sse =
      _wire_func_hash_set_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_hash_set_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_hash_set_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_hash_set_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_hash_set_string_twin_sync_sse');
  late final _wire_func_hash_set_string_twin_sync_sse =
      _wire_func_hash_set_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> a,
    ffi.Pointer<wire_cst_list_prim_u_8> b,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_list_prim_u_8>,
                      ffi.Pointer<wire_cst_list_prim_u_8>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_concatenate_static_twin_rust_asyncPtr
          .asFunction<
              void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> that,
    ffi.Pointer<wire_cst_list_prim_u_8> b,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async(
      port_,
      that,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>,
                      ffi.Pointer<wire_cst_list_prim_u_8>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_concatenate_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void
      wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async(
    int port_,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async(
      port_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_single_arg_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void
      wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async(
    int port_,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async(
      port_,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_handle_some_static_stream_sink_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void
      wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> that,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async(
      port_,
      that,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_at_1_twin_rust_asyncPtr
          .asFunction<
              void Function(int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>)>();

  void
      wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> that,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async(
      port_,
      that,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>,
                      ffi.Uint32,
                      ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_handle_some_stream_sink_twin_rust_asyncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>,
                  int,
                  int)>();

  void wire_ConcatenateWithTwinRustAsync_new_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> a,
  ) {
    return _wire_ConcatenateWithTwinRustAsync_new_twin_rust_async(
      port_,
      a,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsync_new_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsync_new_twin_rust_async');
  late final _wire_ConcatenateWithTwinRustAsync_new_twin_rust_async =
      _wire_ConcatenateWithTwinRustAsync_new_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_SumWithTwinRustAsync_sum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_sum_with_twin_rust_async> that,
    int y,
    int z,
  ) {
    return _wire_SumWithTwinRustAsync_sum_twin_rust_async(
      port_,
      that,
      y,
      z,
    );
  }

  late final _wire_SumWithTwinRustAsync_sum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_sum_with_twin_rust_async>,
                  ffi.Uint32,
                  ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinRustAsync_sum_twin_rust_async');
  late final _wire_SumWithTwinRustAsync_sum_twin_rust_async =
      _wire_SumWithTwinRustAsync_sum_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_sum_with_twin_rust_async>, int, int)>();

  void wire_get_sum_array_twin_rust_async(
    int port_,
    int a,
    int b,
    int c,
  ) {
    return _wire_get_sum_array_twin_rust_async(
      port_,
      a,
      b,
      c,
    );
  }

  late final _wire_get_sum_array_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Uint32, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_rust_async');
  late final _wire_get_sum_array_twin_rust_async =
      _wire_get_sum_array_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int, int)>();

  void wire_get_sum_struct_twin_rust_async(
    int port_,
  ) {
    return _wire_get_sum_struct_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_sum_struct_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_rust_async');
  late final _wire_get_sum_struct_twin_rust_async =
      _wire_get_sum_struct_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void
      wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_concatenate_static_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_concatenate_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_single_arg_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_handle_some_static_stream_sink_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_at_1_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_handle_some_stream_sink_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse');
  late final _wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_sse =
      _wire_ConcatenateWithTwinRustAsyncSse_new_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse');
  late final _wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_sse =
      _wire_SumWithTwinRustAsyncSse_sum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_sum_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_array_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_rust_async_sse');
  late final _wire_get_sum_array_twin_rust_async_sse =
      _wire_get_sum_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_sum_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_rust_async_sse');
  late final _wire_get_sum_struct_twin_rust_async_sse =
      _wire_get_sum_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_concatenate_static_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_concatenate_static_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_concatenate_static_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_concatenate_static_twin_sse');
  late final _wire_ConcatenateWithTwinSse_concatenate_static_twin_sse =
      _wire_ConcatenateWithTwinSse_concatenate_static_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_concatenate_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_concatenate_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_concatenate_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_concatenate_twin_sse');
  late final _wire_ConcatenateWithTwinSse_concatenate_twin_sse =
      _wire_ConcatenateWithTwinSse_concatenate_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse');
  late final _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_sse =
      _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_single_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse');
  late final _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_sse =
      _wire_ConcatenateWithTwinSse_handle_some_static_stream_sink_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse');
  late final _wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_sse =
      _wire_ConcatenateWithTwinSse_handle_some_stream_sink_at_1_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse');
  late final _wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_sse =
      _wire_ConcatenateWithTwinSse_handle_some_stream_sink_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSse_new_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSse_new_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSse_new_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSse_new_twin_sse');
  late final _wire_ConcatenateWithTwinSse_new_twin_sse =
      _wire_ConcatenateWithTwinSse_new_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_SumWithTwinSse_sum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SumWithTwinSse_sum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SumWithTwinSse_sum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinSse_sum_twin_sse');
  late final _wire_SumWithTwinSse_sum_twin_sse =
      _wire_SumWithTwinSse_sum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_sum_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_sse');
  late final _wire_get_sum_array_twin_sse = _wire_get_sum_array_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_sum_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_sse');
  late final _wire_get_sum_struct_twin_sse = _wire_get_sum_struct_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_ConcatenateWithTwinSync_concatenate_static_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> a,
    ffi.Pointer<wire_cst_list_prim_u_8> b,
  ) {
    return _wire_ConcatenateWithTwinSync_concatenate_static_twin_sync(
      a,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinSync_concatenate_static_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(
                      ffi.Pointer<wire_cst_list_prim_u_8>,
                      ffi.Pointer<wire_cst_list_prim_u_8>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_concatenate_static_twin_sync');
  late final _wire_ConcatenateWithTwinSync_concatenate_static_twin_sync =
      _wire_ConcatenateWithTwinSync_concatenate_static_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>,
              ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_ConcatenateWithTwinSync_concatenate_twin_sync(
    ffi.Pointer<wire_cst_concatenate_with_twin_sync> that,
    ffi.Pointer<wire_cst_list_prim_u_8> b,
  ) {
    return _wire_ConcatenateWithTwinSync_concatenate_twin_sync(
      that,
      b,
    );
  }

  late final _wire_ConcatenateWithTwinSync_concatenate_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_concatenate_with_twin_sync>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_concatenate_twin_sync');
  late final _wire_ConcatenateWithTwinSync_concatenate_twin_sync =
      _wire_ConcatenateWithTwinSync_concatenate_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_concatenate_with_twin_sync>,
              ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void
      wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync(
    int port_,
  ) {
    return _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync(
      port_,
    );
  }

  late final _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync');
  late final _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_sync =
      _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_single_arg_twin_syncPtr
          .asFunction<void Function(int)>();

  void wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync(
    int port_,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync(
      port_,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync');
  late final _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_sync =
      _wire_ConcatenateWithTwinSync_handle_some_static_stream_sink_twin_syncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_sync> that,
  ) {
    return _wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync(
      port_,
      that,
    );
  }

  late final _wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_sync>)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync');
  late final _wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_sync =
      _wire_ConcatenateWithTwinSync_handle_some_stream_sink_at_1_twin_syncPtr
          .asFunction<
              void Function(
                  int, ffi.Pointer<wire_cst_concatenate_with_twin_sync>)>();

  void wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync(
    int port_,
    ffi.Pointer<wire_cst_concatenate_with_twin_sync> that,
    int key,
    int max,
  ) {
    return _wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync(
      port_,
      that,
      key,
      max,
    );
  }

  late final _wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(
                      ffi.Int64,
                      ffi.Pointer<wire_cst_concatenate_with_twin_sync>,
                      ffi.Uint32,
                      ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync');
  late final _wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_sync =
      _wire_ConcatenateWithTwinSync_handle_some_stream_sink_twin_syncPtr
          .asFunction<
              void Function(
                  int,
                  ffi.Pointer<wire_cst_concatenate_with_twin_sync>,
                  int,
                  int)>();

  WireSyncRust2DartDco wire_ConcatenateWithTwinSync_new_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> a,
  ) {
    return _wire_ConcatenateWithTwinSync_new_twin_sync(
      a,
    );
  }

  late final _wire_ConcatenateWithTwinSync_new_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSync_new_twin_sync');
  late final _wire_ConcatenateWithTwinSync_new_twin_sync =
      _wire_ConcatenateWithTwinSync_new_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_SumWithTwinSync_sum_twin_sync(
    ffi.Pointer<wire_cst_sum_with_twin_sync> that,
    int y,
    int z,
  ) {
    return _wire_SumWithTwinSync_sum_twin_sync(
      that,
      y,
      z,
    );
  }

  late final _wire_SumWithTwinSync_sum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_sum_with_twin_sync>,
                  ffi.Uint32,
                  ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinSync_sum_twin_sync');
  late final _wire_SumWithTwinSync_sum_twin_sync =
      _wire_SumWithTwinSync_sum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_sum_with_twin_sync>, int, int)>();

  WireSyncRust2DartDco wire_get_sum_array_twin_sync(
    int a,
    int b,
    int c,
  ) {
    return _wire_get_sum_array_twin_sync(
      a,
      b,
      c,
    );
  }

  late final _wire_get_sum_array_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Uint32, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_sync');
  late final _wire_get_sum_array_twin_sync = _wire_get_sum_array_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int, int, int)>();

  WireSyncRust2DartDco wire_get_sum_struct_twin_sync() {
    return _wire_get_sum_struct_twin_sync();
  }

  late final _wire_get_sum_struct_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_sync');
  late final _wire_get_sum_struct_twin_sync = _wire_get_sum_struct_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse
      wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_concatenate_static_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_concatenate_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_single_arg_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_handle_some_static_stream_sink_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_at_1_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_handle_some_stream_sink_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_ConcatenateWithTwinSyncSse_new_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse');
  late final _wire_ConcatenateWithTwinSyncSse_new_twin_sync_sse =
      _wire_ConcatenateWithTwinSyncSse_new_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_SumWithTwinSyncSse_sum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_SumWithTwinSyncSse_sum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_SumWithTwinSyncSse_sum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_SumWithTwinSyncSse_sum_twin_sync_sse');
  late final _wire_SumWithTwinSyncSse_sum_twin_sync_sse =
      _wire_SumWithTwinSyncSse_sum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_sum_array_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_array_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_array_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_array_twin_sync_sse');
  late final _wire_get_sum_array_twin_sync_sse =
      _wire_get_sum_array_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_sum_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_sum_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_sum_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_sum_struct_twin_sync_sse');
  late final _wire_get_sum_struct_twin_sync_sse =
      _wire_get_sum_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_app_settings_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_app_settings_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_rust_async');
  late final _wire_app_settings_stream_twin_rust_async =
      _wire_app_settings_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_app_settings_vec_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_app_settings_vec_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_rust_async');
  late final _wire_app_settings_vec_stream_twin_rust_async =
      _wire_app_settings_vec_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_first_number_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_numbers> nums,
  ) {
    return _wire_first_number_twin_rust_async(
      port_,
      nums,
    );
  }

  late final _wire_first_number_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_numbers>)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_rust_async');
  late final _wire_first_number_twin_rust_async =
      _wire_first_number_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_numbers>)>();

  void wire_first_sequence_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_sequences> seqs,
  ) {
    return _wire_first_sequence_twin_rust_async(
      port_,
      seqs,
    );
  }

  late final _wire_first_sequence_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_sequences>)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_rust_async');
  late final _wire_first_sequence_twin_rust_async =
      _wire_first_sequence_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_sequences>)>();

  void wire_get_app_settings_twin_rust_async(
    int port_,
  ) {
    return _wire_get_app_settings_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_app_settings_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_rust_async');
  late final _wire_get_app_settings_twin_rust_async =
      _wire_get_app_settings_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_get_fallible_app_settings_twin_rust_async(
    int port_,
  ) {
    return _wire_get_fallible_app_settings_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_fallible_app_settings_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_rust_async');
  late final _wire_get_fallible_app_settings_twin_rust_async =
      _wire_get_fallible_app_settings_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_get_message_twin_rust_async(
    int port_,
  ) {
    return _wire_get_message_twin_rust_async(
      port_,
    );
  }

  late final _wire_get_message_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_get_message_twin_rust_async');
  late final _wire_get_message_twin_rust_async =
      _wire_get_message_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_is_app_embedded_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_application_settings> app_settings,
  ) {
    return _wire_is_app_embedded_twin_rust_async(
      port_,
      app_settings,
    );
  }

  late final _wire_is_app_embedded_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_application_settings>)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_rust_async');
  late final _wire_is_app_embedded_twin_rust_async =
      _wire_is_app_embedded_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_application_settings>)>();

  void wire_mirror_struct_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_mirror_struct_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_mirror_struct_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_rust_async');
  late final _wire_mirror_struct_stream_twin_rust_async =
      _wire_mirror_struct_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_mirror_tuple_stream_twin_rust_async(
    int port_,
  ) {
    return _wire_mirror_tuple_stream_twin_rust_async(
      port_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_rust_async');
  late final _wire_mirror_tuple_stream_twin_rust_async =
      _wire_mirror_tuple_stream_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_repeat_number_twin_rust_async(
    int port_,
    int num,
    int times,
  ) {
    return _wire_repeat_number_twin_rust_async(
      port_,
      num,
      times,
    );
  }

  late final _wire_repeat_number_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_rust_async');
  late final _wire_repeat_number_twin_rust_async =
      _wire_repeat_number_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_repeat_sequence_twin_rust_async(
    int port_,
    int seq,
    int times,
  ) {
    return _wire_repeat_sequence_twin_rust_async(
      port_,
      seq,
      times,
    );
  }

  late final _wire_repeat_sequence_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_rust_async');
  late final _wire_repeat_sequence_twin_rust_async =
      _wire_repeat_sequence_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_test_contains_mirrored_sub_struct_twin_rust_async(
    int port_,
  ) {
    return _wire_test_contains_mirrored_sub_struct_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_rust_async');
  late final _wire_test_contains_mirrored_sub_struct_twin_rust_async =
      _wire_test_contains_mirrored_sub_struct_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_fallible_of_raw_string_mirrored_twin_rust_async(
    int port_,
  ) {
    return _wire_test_fallible_of_raw_string_mirrored_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_rust_async');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_rust_async =
      _wire_test_fallible_of_raw_string_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_list_of_nested_enums_mirrored_twin_rust_async(
    int port_,
  ) {
    return _wire_test_list_of_nested_enums_mirrored_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_rust_async');
  late final _wire_test_list_of_nested_enums_mirrored_twin_rust_async =
      _wire_test_list_of_nested_enums_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_list_of_raw_nested_string_mirrored_twin_rust_async(
    int port_,
  ) {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_rust_async');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async =
      _wire_test_list_of_raw_nested_string_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_nested_raw_string_mirrored_twin_rust_async(
    int port_,
  ) {
    return _wire_test_nested_raw_string_mirrored_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_nested_raw_string_mirrored_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_rust_async');
  late final _wire_test_nested_raw_string_mirrored_twin_rust_async =
      _wire_test_nested_raw_string_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_raw_string_enum_mirrored_twin_rust_async(
    int port_,
    bool nested,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_rust_async(
      port_,
      nested,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_rust_async');
  late final _wire_test_raw_string_enum_mirrored_twin_rust_async =
      _wire_test_raw_string_enum_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int, bool)>();

  void wire_test_raw_string_mirrored_twin_rust_async(
    int port_,
  ) {
    return _wire_test_raw_string_mirrored_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_raw_string_mirrored_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_rust_async');
  late final _wire_test_raw_string_mirrored_twin_rust_async =
      _wire_test_raw_string_mirrored_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_app_settings_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_rust_async_sse');
  late final _wire_app_settings_stream_twin_rust_async_sse =
      _wire_app_settings_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_vec_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_vec_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_rust_async_sse');
  late final _wire_app_settings_vec_stream_twin_rust_async_sse =
      _wire_app_settings_vec_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_first_number_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_number_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_number_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_rust_async_sse');
  late final _wire_first_number_twin_rust_async_sse =
      _wire_first_number_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_first_sequence_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_sequence_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_sequence_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_rust_async_sse');
  late final _wire_first_sequence_twin_rust_async_sse =
      _wire_first_sequence_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_app_settings_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_app_settings_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_app_settings_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_rust_async_sse');
  late final _wire_get_app_settings_twin_rust_async_sse =
      _wire_get_app_settings_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_fallible_app_settings_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_fallible_app_settings_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_fallible_app_settings_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_rust_async_sse');
  late final _wire_get_fallible_app_settings_twin_rust_async_sse =
      _wire_get_fallible_app_settings_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_message_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_message_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_message_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_message_twin_rust_async_sse');
  late final _wire_get_message_twin_rust_async_sse =
      _wire_get_message_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_is_app_embedded_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_is_app_embedded_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_is_app_embedded_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_rust_async_sse');
  late final _wire_is_app_embedded_twin_rust_async_sse =
      _wire_is_app_embedded_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_struct_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_struct_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_struct_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_rust_async_sse');
  late final _wire_mirror_struct_stream_twin_rust_async_sse =
      _wire_mirror_struct_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_tuple_stream_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_tuple_stream_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_rust_async_sse');
  late final _wire_mirror_tuple_stream_twin_rust_async_sse =
      _wire_mirror_tuple_stream_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_repeat_number_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_number_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_number_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_rust_async_sse');
  late final _wire_repeat_number_twin_rust_async_sse =
      _wire_repeat_number_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_repeat_sequence_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_sequence_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_sequence_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_rust_async_sse');
  late final _wire_repeat_sequence_twin_rust_async_sse =
      _wire_repeat_sequence_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_contains_mirrored_sub_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_contains_mirrored_sub_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_rust_async_sse');
  late final _wire_test_contains_mirrored_sub_struct_twin_rust_async_sse =
      _wire_test_contains_mirrored_sub_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_rust_async_sse =
      _wire_test_fallible_of_raw_string_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse');
  late final _wire_test_list_of_nested_enums_mirrored_twin_rust_async_sse =
      _wire_test_list_of_nested_enums_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_sse =
      _wire_test_list_of_raw_nested_string_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_nested_raw_string_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_nested_raw_string_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_nested_raw_string_mirrored_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_rust_async_sse');
  late final _wire_test_nested_raw_string_mirrored_twin_rust_async_sse =
      _wire_test_nested_raw_string_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_enum_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_rust_async_sse');
  late final _wire_test_raw_string_enum_mirrored_twin_rust_async_sse =
      _wire_test_raw_string_enum_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_mirrored_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_mirrored_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_mirrored_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_rust_async_sse');
  late final _wire_test_raw_string_mirrored_twin_rust_async_sse =
      _wire_test_raw_string_mirrored_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_sse');
  late final _wire_app_settings_stream_twin_sse =
      _wire_app_settings_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_vec_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_vec_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_sse');
  late final _wire_app_settings_vec_stream_twin_sse =
      _wire_app_settings_vec_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_first_number_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_number_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_number_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_sse');
  late final _wire_first_number_twin_sse = _wire_first_number_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_first_sequence_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_sequence_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_sequence_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_sse');
  late final _wire_first_sequence_twin_sse = _wire_first_sequence_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_app_settings_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_app_settings_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_app_settings_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_sse');
  late final _wire_get_app_settings_twin_sse =
      _wire_get_app_settings_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_fallible_app_settings_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_fallible_app_settings_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_fallible_app_settings_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_sse');
  late final _wire_get_fallible_app_settings_twin_sse =
      _wire_get_fallible_app_settings_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_get_message_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_message_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_message_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_message_twin_sse');
  late final _wire_get_message_twin_sse = _wire_get_message_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_is_app_embedded_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_is_app_embedded_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_is_app_embedded_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_sse');
  late final _wire_is_app_embedded_twin_sse = _wire_is_app_embedded_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_struct_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_struct_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_struct_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_sse');
  late final _wire_mirror_struct_stream_twin_sse =
      _wire_mirror_struct_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_tuple_stream_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_tuple_stream_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_sse');
  late final _wire_mirror_tuple_stream_twin_sse =
      _wire_mirror_tuple_stream_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_repeat_number_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_number_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_number_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_sse');
  late final _wire_repeat_number_twin_sse = _wire_repeat_number_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_repeat_sequence_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_sequence_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_sequence_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_sse');
  late final _wire_repeat_sequence_twin_sse = _wire_repeat_sequence_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_contains_mirrored_sub_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_contains_mirrored_sub_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_sse');
  late final _wire_test_contains_mirrored_sub_struct_twin_sse =
      _wire_test_contains_mirrored_sub_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_fallible_of_raw_string_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_fallible_of_raw_string_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_sse');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_sse =
      _wire_test_fallible_of_raw_string_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_list_of_nested_enums_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_nested_enums_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_sse');
  late final _wire_test_list_of_nested_enums_mirrored_twin_sse =
      _wire_test_list_of_nested_enums_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_list_of_raw_nested_string_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_sse');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_sse =
      _wire_test_list_of_raw_nested_string_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_nested_raw_string_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_nested_raw_string_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_nested_raw_string_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_sse');
  late final _wire_test_nested_raw_string_mirrored_twin_sse =
      _wire_test_nested_raw_string_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_enum_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_sse');
  late final _wire_test_raw_string_enum_mirrored_twin_sse =
      _wire_test_raw_string_enum_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_mirrored_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_mirrored_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_mirrored_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_sse');
  late final _wire_test_raw_string_mirrored_twin_sse =
      _wire_test_raw_string_mirrored_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_stream_twin_sync(
    int port_,
  ) {
    return _wire_app_settings_stream_twin_sync(
      port_,
    );
  }

  late final _wire_app_settings_stream_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_sync');
  late final _wire_app_settings_stream_twin_sync =
      _wire_app_settings_stream_twin_syncPtr.asFunction<void Function(int)>();

  void wire_app_settings_vec_stream_twin_sync(
    int port_,
  ) {
    return _wire_app_settings_vec_stream_twin_sync(
      port_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_sync');
  late final _wire_app_settings_vec_stream_twin_sync =
      _wire_app_settings_vec_stream_twin_syncPtr
          .asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_first_number_twin_sync(
    ffi.Pointer<wire_cst_numbers> nums,
  ) {
    return _wire_first_number_twin_sync(
      nums,
    );
  }

  late final _wire_first_number_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_numbers>)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_sync');
  late final _wire_first_number_twin_sync =
      _wire_first_number_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_numbers>)>();

  WireSyncRust2DartDco wire_first_sequence_twin_sync(
    ffi.Pointer<wire_cst_sequences> seqs,
  ) {
    return _wire_first_sequence_twin_sync(
      seqs,
    );
  }

  late final _wire_first_sequence_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_sequences>)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_sync');
  late final _wire_first_sequence_twin_sync =
      _wire_first_sequence_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_sequences>)>();

  WireSyncRust2DartDco wire_get_app_settings_twin_sync() {
    return _wire_get_app_settings_twin_sync();
  }

  late final _wire_get_app_settings_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_sync');
  late final _wire_get_app_settings_twin_sync =
      _wire_get_app_settings_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_get_fallible_app_settings_twin_sync() {
    return _wire_get_fallible_app_settings_twin_sync();
  }

  late final _wire_get_fallible_app_settings_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_sync');
  late final _wire_get_fallible_app_settings_twin_sync =
      _wire_get_fallible_app_settings_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_get_message_twin_sync() {
    return _wire_get_message_twin_sync();
  }

  late final _wire_get_message_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_get_message_twin_sync');
  late final _wire_get_message_twin_sync = _wire_get_message_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_is_app_embedded_twin_sync(
    ffi.Pointer<wire_cst_application_settings> app_settings,
  ) {
    return _wire_is_app_embedded_twin_sync(
      app_settings,
    );
  }

  late final _wire_is_app_embedded_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_application_settings>)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_sync');
  late final _wire_is_app_embedded_twin_sync =
      _wire_is_app_embedded_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_application_settings>)>();

  void wire_mirror_struct_stream_twin_sync(
    int port_,
  ) {
    return _wire_mirror_struct_stream_twin_sync(
      port_,
    );
  }

  late final _wire_mirror_struct_stream_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_sync');
  late final _wire_mirror_struct_stream_twin_sync =
      _wire_mirror_struct_stream_twin_syncPtr.asFunction<void Function(int)>();

  void wire_mirror_tuple_stream_twin_sync(
    int port_,
  ) {
    return _wire_mirror_tuple_stream_twin_sync(
      port_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_sync');
  late final _wire_mirror_tuple_stream_twin_sync =
      _wire_mirror_tuple_stream_twin_syncPtr.asFunction<void Function(int)>();

  WireSyncRust2DartDco wire_repeat_number_twin_sync(
    int num,
    int times,
  ) {
    return _wire_repeat_number_twin_sync(
      num,
      times,
    );
  }

  late final _wire_repeat_number_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_sync');
  late final _wire_repeat_number_twin_sync = _wire_repeat_number_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_repeat_sequence_twin_sync(
    int seq,
    int times,
  ) {
    return _wire_repeat_sequence_twin_sync(
      seq,
      times,
    );
  }

  late final _wire_repeat_sequence_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Int32, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_sync');
  late final _wire_repeat_sequence_twin_sync =
      _wire_repeat_sequence_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_test_contains_mirrored_sub_struct_twin_sync() {
    return _wire_test_contains_mirrored_sub_struct_twin_sync();
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_sync');
  late final _wire_test_contains_mirrored_sub_struct_twin_sync =
      _wire_test_contains_mirrored_sub_struct_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_fallible_of_raw_string_mirrored_twin_sync() {
    return _wire_test_fallible_of_raw_string_mirrored_twin_sync();
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_sync');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_sync =
      _wire_test_fallible_of_raw_string_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_list_of_nested_enums_mirrored_twin_sync() {
    return _wire_test_list_of_nested_enums_mirrored_twin_sync();
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_sync');
  late final _wire_test_list_of_nested_enums_mirrored_twin_sync =
      _wire_test_list_of_nested_enums_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_test_list_of_raw_nested_string_mirrored_twin_sync() {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_sync();
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_sync');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_sync =
      _wire_test_list_of_raw_nested_string_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_nested_raw_string_mirrored_twin_sync() {
    return _wire_test_nested_raw_string_mirrored_twin_sync();
  }

  late final _wire_test_nested_raw_string_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_sync');
  late final _wire_test_nested_raw_string_mirrored_twin_sync =
      _wire_test_nested_raw_string_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_raw_string_enum_mirrored_twin_sync(
    bool nested,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_sync(
      nested,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_sync');
  late final _wire_test_raw_string_enum_mirrored_twin_sync =
      _wire_test_raw_string_enum_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(bool)>();

  WireSyncRust2DartDco wire_test_raw_string_mirrored_twin_sync() {
    return _wire_test_raw_string_mirrored_twin_sync();
  }

  late final _wire_test_raw_string_mirrored_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_sync');
  late final _wire_test_raw_string_mirrored_twin_sync =
      _wire_test_raw_string_mirrored_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  void wire_app_settings_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_stream_twin_sync_sse');
  late final _wire_app_settings_stream_twin_sync_sse =
      _wire_app_settings_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_app_settings_vec_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_app_settings_vec_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_app_settings_vec_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_app_settings_vec_stream_twin_sync_sse');
  late final _wire_app_settings_vec_stream_twin_sync_sse =
      _wire_app_settings_vec_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_first_number_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_number_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_number_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_number_twin_sync_sse');
  late final _wire_first_number_twin_sync_sse =
      _wire_first_number_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_first_sequence_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_first_sequence_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_first_sequence_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_first_sequence_twin_sync_sse');
  late final _wire_first_sequence_twin_sync_sse =
      _wire_first_sequence_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_app_settings_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_app_settings_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_app_settings_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_app_settings_twin_sync_sse');
  late final _wire_get_app_settings_twin_sync_sse =
      _wire_get_app_settings_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_fallible_app_settings_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_fallible_app_settings_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_fallible_app_settings_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_fallible_app_settings_twin_sync_sse');
  late final _wire_get_fallible_app_settings_twin_sync_sse =
      _wire_get_fallible_app_settings_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_get_message_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_get_message_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_get_message_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_get_message_twin_sync_sse');
  late final _wire_get_message_twin_sync_sse =
      _wire_get_message_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_is_app_embedded_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_is_app_embedded_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_is_app_embedded_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_is_app_embedded_twin_sync_sse');
  late final _wire_is_app_embedded_twin_sync_sse =
      _wire_is_app_embedded_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_struct_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_struct_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_struct_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_struct_stream_twin_sync_sse');
  late final _wire_mirror_struct_stream_twin_sync_sse =
      _wire_mirror_struct_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_mirror_tuple_stream_twin_sync_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_mirror_tuple_stream_twin_sync_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_mirror_tuple_stream_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_mirror_tuple_stream_twin_sync_sse');
  late final _wire_mirror_tuple_stream_twin_sync_sse =
      _wire_mirror_tuple_stream_twin_sync_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_repeat_number_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_number_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_number_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_number_twin_sync_sse');
  late final _wire_repeat_number_twin_sync_sse =
      _wire_repeat_number_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_repeat_sequence_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_repeat_sequence_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_repeat_sequence_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_repeat_sequence_twin_sync_sse');
  late final _wire_repeat_sequence_twin_sync_sse =
      _wire_repeat_sequence_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_contains_mirrored_sub_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_contains_mirrored_sub_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_contains_mirrored_sub_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_contains_mirrored_sub_struct_twin_sync_sse');
  late final _wire_test_contains_mirrored_sub_struct_twin_sync_sse =
      _wire_test_contains_mirrored_sub_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_fallible_of_raw_string_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_fallible_of_raw_string_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_fallible_of_raw_string_mirrored_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_fallible_of_raw_string_mirrored_twin_sync_sse');
  late final _wire_test_fallible_of_raw_string_mirrored_twin_sync_sse =
      _wire_test_fallible_of_raw_string_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_list_of_nested_enums_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_nested_enums_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_nested_enums_mirrored_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_list_of_nested_enums_mirrored_twin_sync_sse');
  late final _wire_test_list_of_nested_enums_mirrored_twin_sync_sse =
      _wire_test_list_of_nested_enums_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_list_of_raw_nested_string_mirrored_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse');
  late final _wire_test_list_of_raw_nested_string_mirrored_twin_sync_sse =
      _wire_test_list_of_raw_nested_string_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_nested_raw_string_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_nested_raw_string_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_nested_raw_string_mirrored_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_nested_raw_string_mirrored_twin_sync_sse');
  late final _wire_test_nested_raw_string_mirrored_twin_sync_sse =
      _wire_test_nested_raw_string_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_raw_string_enum_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_enum_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_enum_mirrored_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_enum_mirrored_twin_sync_sse');
  late final _wire_test_raw_string_enum_mirrored_twin_sync_sse =
      _wire_test_raw_string_enum_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_raw_string_mirrored_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_mirrored_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_mirrored_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_mirrored_twin_sync_sse');
  late final _wire_test_raw_string_mirrored_twin_sync_sse =
      _wire_test_raw_string_mirrored_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_big_buffers_twin_rust_async(
    int port_,
  ) {
    return _wire_handle_big_buffers_twin_rust_async(
      port_,
    );
  }

  late final _wire_handle_big_buffers_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_rust_async');
  late final _wire_handle_big_buffers_twin_rust_async =
      _wire_handle_big_buffers_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_handle_complex_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_my_tree_node_twin_rust_async> s,
  ) {
    return _wire_handle_complex_struct_twin_rust_async(
      port_,
      s,
    );
  }

  late final _wire_handle_complex_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_my_tree_node_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_rust_async');
  late final _wire_handle_complex_struct_twin_rust_async =
      _wire_handle_complex_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_my_tree_node_twin_rust_async>)>();

  void wire_handle_nested_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async> s,
  ) {
    return _wire_handle_nested_struct_twin_rust_async(
      port_,
      s,
    );
  }

  late final _wire_handle_nested_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_rust_async');
  late final _wire_handle_nested_struct_twin_rust_async =
      _wire_handle_nested_struct_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async>)>();

  void wire_handle_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> s,
  ) {
    return _wire_handle_string_twin_rust_async(
      port_,
      s,
    );
  }

  late final _wire_handle_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_rust_async');
  late final _wire_handle_string_twin_rust_async =
      _wire_handle_string_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_handle_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_my_size> arg,
    ffi.Pointer<wire_cst_my_size> boxed,
  ) {
    return _wire_handle_struct_twin_rust_async(
      port_,
      arg,
      boxed,
    );
  }

  late final _wire_handle_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_my_size>,
                  ffi.Pointer<wire_cst_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_rust_async');
  late final _wire_handle_struct_twin_rust_async =
      _wire_handle_struct_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_my_size>,
              ffi.Pointer<wire_cst_my_size>)>();

  void wire_handle_vec_u8_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> v,
  ) {
    return _wire_handle_vec_u8_twin_rust_async(
      port_,
      v,
    );
  }

  late final _wire_handle_vec_u8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_rust_async');
  late final _wire_handle_vec_u8_twin_rust_async =
      _wire_handle_vec_u8_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_list_of_primitive_enums_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_weekdays_twin_rust_async> weekdays,
  ) {
    return _wire_list_of_primitive_enums_twin_rust_async(
      port_,
      weekdays,
    );
  }

  late final _wire_list_of_primitive_enums_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_list_weekdays_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_rust_async');
  late final _wire_list_of_primitive_enums_twin_rust_async =
      _wire_list_of_primitive_enums_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_weekdays_twin_rust_async>)>();

  void wire_test_abc_enum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_abc_twin_rust_async> abc,
  ) {
    return _wire_test_abc_enum_twin_rust_async(
      port_,
      abc,
    );
  }

  late final _wire_test_abc_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_abc_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_rust_async');
  late final _wire_test_abc_enum_twin_rust_async =
      _wire_test_abc_enum_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_abc_twin_rust_async>)>();

  void wire_test_struct_with_enum_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async> se,
  ) {
    return _wire_test_struct_with_enum_twin_rust_async(
      port_,
      se,
    );
  }

  late final _wire_test_struct_with_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_rust_async');
  late final _wire_test_struct_with_enum_twin_rust_async =
      _wire_test_struct_with_enum_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async>)>();

  void wire_handle_big_buffers_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_big_buffers_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_big_buffers_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_rust_async_sse');
  late final _wire_handle_big_buffers_twin_rust_async_sse =
      _wire_handle_big_buffers_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_complex_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_complex_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_complex_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_rust_async_sse');
  late final _wire_handle_complex_struct_twin_rust_async_sse =
      _wire_handle_complex_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_nested_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_nested_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_nested_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_rust_async_sse');
  late final _wire_handle_nested_struct_twin_rust_async_sse =
      _wire_handle_nested_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_rust_async_sse');
  late final _wire_handle_string_twin_rust_async_sse =
      _wire_handle_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_rust_async_sse');
  late final _wire_handle_struct_twin_rust_async_sse =
      _wire_handle_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_u8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_u8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_u8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_rust_async_sse');
  late final _wire_handle_vec_u8_twin_rust_async_sse =
      _wire_handle_vec_u8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_list_of_primitive_enums_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_list_of_primitive_enums_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_list_of_primitive_enums_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_rust_async_sse');
  late final _wire_list_of_primitive_enums_twin_rust_async_sse =
      _wire_list_of_primitive_enums_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_abc_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_abc_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_abc_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_rust_async_sse');
  late final _wire_test_abc_enum_twin_rust_async_sse =
      _wire_test_abc_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_struct_with_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_struct_with_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_struct_with_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_rust_async_sse');
  late final _wire_test_struct_with_enum_twin_rust_async_sse =
      _wire_test_struct_with_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_big_buffers_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_big_buffers_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_big_buffers_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_sse');
  late final _wire_handle_big_buffers_twin_sse =
      _wire_handle_big_buffers_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_complex_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_complex_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_complex_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_sse');
  late final _wire_handle_complex_struct_twin_sse =
      _wire_handle_complex_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_nested_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_nested_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_nested_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_sse');
  late final _wire_handle_nested_struct_twin_sse =
      _wire_handle_nested_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_sse');
  late final _wire_handle_string_twin_sse = _wire_handle_string_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_sse');
  late final _wire_handle_struct_twin_sse = _wire_handle_struct_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_u8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_u8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_u8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_sse');
  late final _wire_handle_vec_u8_twin_sse = _wire_handle_vec_u8_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_list_of_primitive_enums_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_list_of_primitive_enums_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_list_of_primitive_enums_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_sse');
  late final _wire_list_of_primitive_enums_twin_sse =
      _wire_list_of_primitive_enums_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_abc_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_abc_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_abc_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_sse');
  late final _wire_test_abc_enum_twin_sse = _wire_test_abc_enum_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_struct_with_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_struct_with_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_struct_with_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_sse');
  late final _wire_test_struct_with_enum_twin_sse =
      _wire_test_struct_with_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_big_buffers_twin_sync() {
    return _wire_handle_big_buffers_twin_sync();
  }

  late final _wire_handle_big_buffers_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_sync');
  late final _wire_handle_big_buffers_twin_sync =
      _wire_handle_big_buffers_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_handle_complex_struct_twin_sync(
    ffi.Pointer<wire_cst_my_tree_node_twin_sync> s,
  ) {
    return _wire_handle_complex_struct_twin_sync(
      s,
    );
  }

  late final _wire_handle_complex_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_my_tree_node_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_sync');
  late final _wire_handle_complex_struct_twin_sync =
      _wire_handle_complex_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_my_tree_node_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_nested_struct_twin_sync(
    ffi.Pointer<wire_cst_my_nested_struct_twin_sync> s,
  ) {
    return _wire_handle_nested_struct_twin_sync(
      s,
    );
  }

  late final _wire_handle_nested_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_my_nested_struct_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_sync');
  late final _wire_handle_nested_struct_twin_sync =
      _wire_handle_nested_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_my_nested_struct_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_string_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> s,
  ) {
    return _wire_handle_string_twin_sync(
      s,
    );
  }

  late final _wire_handle_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_sync');
  late final _wire_handle_string_twin_sync =
      _wire_handle_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_handle_struct_twin_sync(
    ffi.Pointer<wire_cst_my_size> arg,
    ffi.Pointer<wire_cst_my_size> boxed,
  ) {
    return _wire_handle_struct_twin_sync(
      arg,
      boxed,
    );
  }

  late final _wire_handle_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_my_size>,
                  ffi.Pointer<wire_cst_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_sync');
  late final _wire_handle_struct_twin_sync =
      _wire_handle_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_my_size>, ffi.Pointer<wire_cst_my_size>)>();

  WireSyncRust2DartDco wire_handle_vec_u8_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> v,
  ) {
    return _wire_handle_vec_u8_twin_sync(
      v,
    );
  }

  late final _wire_handle_vec_u8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_sync');
  late final _wire_handle_vec_u8_twin_sync =
      _wire_handle_vec_u8_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_list_of_primitive_enums_twin_sync(
    ffi.Pointer<wire_cst_list_weekdays_twin_sync> weekdays,
  ) {
    return _wire_list_of_primitive_enums_twin_sync(
      weekdays,
    );
  }

  late final _wire_list_of_primitive_enums_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_weekdays_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_sync');
  late final _wire_list_of_primitive_enums_twin_sync =
      _wire_list_of_primitive_enums_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_weekdays_twin_sync>)>();

  WireSyncRust2DartDco wire_test_abc_enum_twin_sync(
    ffi.Pointer<wire_cst_abc_twin_sync> abc,
  ) {
    return _wire_test_abc_enum_twin_sync(
      abc,
    );
  }

  late final _wire_test_abc_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_abc_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_sync');
  late final _wire_test_abc_enum_twin_sync =
      _wire_test_abc_enum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_abc_twin_sync>)>();

  WireSyncRust2DartDco wire_test_struct_with_enum_twin_sync(
    ffi.Pointer<wire_cst_struct_with_enum_twin_sync> se,
  ) {
    return _wire_test_struct_with_enum_twin_sync(
      se,
    );
  }

  late final _wire_test_struct_with_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_struct_with_enum_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_sync');
  late final _wire_test_struct_with_enum_twin_sync =
      _wire_test_struct_with_enum_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_struct_with_enum_twin_sync>)>();

  WireSyncRust2DartSse wire_handle_big_buffers_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_big_buffers_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_big_buffers_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_big_buffers_twin_sync_sse');
  late final _wire_handle_big_buffers_twin_sync_sse =
      _wire_handle_big_buffers_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_complex_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_complex_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_complex_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_complex_struct_twin_sync_sse');
  late final _wire_handle_complex_struct_twin_sync_sse =
      _wire_handle_complex_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_nested_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_nested_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_nested_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_struct_twin_sync_sse');
  late final _wire_handle_nested_struct_twin_sync_sse =
      _wire_handle_nested_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_twin_sync_sse');
  late final _wire_handle_string_twin_sync_sse =
      _wire_handle_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_struct_twin_sync_sse');
  late final _wire_handle_struct_twin_sync_sse =
      _wire_handle_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_vec_u8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_u8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_u8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_u8_twin_sync_sse');
  late final _wire_handle_vec_u8_twin_sync_sse =
      _wire_handle_vec_u8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_list_of_primitive_enums_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_list_of_primitive_enums_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_list_of_primitive_enums_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_list_of_primitive_enums_twin_sync_sse');
  late final _wire_list_of_primitive_enums_twin_sync_sse =
      _wire_list_of_primitive_enums_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_abc_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_abc_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_abc_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_abc_enum_twin_sync_sse');
  late final _wire_test_abc_enum_twin_sync_sse =
      _wire_test_abc_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_struct_with_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_struct_with_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_struct_with_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_struct_with_enum_twin_sync_sse');
  late final _wire_test_struct_with_enum_twin_sync_sse =
      _wire_test_struct_with_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_empty_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_empty_twin_rust_async> empty,
  ) {
    return _wire_empty_struct_twin_rust_async(
      port_,
      empty,
    );
  }

  late final _wire_empty_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_empty_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_rust_async');
  late final _wire_empty_struct_twin_rust_async =
      _wire_empty_struct_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_empty_twin_rust_async>)>();

  void wire_func_return_unit_twin_rust_async(
    int port_,
  ) {
    return _wire_func_return_unit_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_return_unit_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_rust_async');
  late final _wire_func_return_unit_twin_rust_async =
      _wire_func_return_unit_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_func_string_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> arg,
  ) {
    return _wire_func_string_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_string_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_func_string_twin_rust_async');
  late final _wire_func_string_twin_rust_async =
      _wire_func_string_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_handle_list_of_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_my_size> l,
  ) {
    return _wire_handle_list_of_struct_twin_rust_async(
      port_,
      l,
    );
  }

  late final _wire_handle_list_of_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_rust_async');
  late final _wire_handle_list_of_struct_twin_rust_async =
      _wire_handle_list_of_struct_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_my_size>)>();

  void wire_handle_string_list_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_String> names,
  ) {
    return _wire_handle_string_list_twin_rust_async(
      port_,
      names,
    );
  }

  late final _wire_handle_string_list_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_rust_async');
  late final _wire_handle_string_list_twin_rust_async =
      _wire_handle_string_list_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_empty_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_empty_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_empty_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_rust_async_sse');
  late final _wire_empty_struct_twin_rust_async_sse =
      _wire_empty_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_return_unit_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_unit_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_unit_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_rust_async_sse');
  late final _wire_func_return_unit_twin_rust_async_sse =
      _wire_func_return_unit_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_string_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_string_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_string_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_string_twin_rust_async_sse');
  late final _wire_func_string_twin_rust_async_sse =
      _wire_func_string_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_list_of_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_list_of_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_list_of_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_rust_async_sse');
  late final _wire_handle_list_of_struct_twin_rust_async_sse =
      _wire_handle_list_of_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_string_list_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_list_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_list_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_rust_async_sse');
  late final _wire_handle_string_list_twin_rust_async_sse =
      _wire_handle_string_list_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_empty_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_empty_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_empty_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_sse');
  late final _wire_empty_struct_twin_sse = _wire_empty_struct_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_return_unit_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_unit_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_unit_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_sse');
  late final _wire_func_return_unit_twin_sse =
      _wire_func_return_unit_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_string_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_string_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_string_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_string_twin_sse');
  late final _wire_func_string_twin_sse = _wire_func_string_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_list_of_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_list_of_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_list_of_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_sse');
  late final _wire_handle_list_of_struct_twin_sse =
      _wire_handle_list_of_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_string_list_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_list_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_list_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_sse');
  late final _wire_handle_string_list_twin_sse =
      _wire_handle_string_list_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_empty_struct_twin_sync(
    ffi.Pointer<wire_cst_empty_twin_sync> empty,
  ) {
    return _wire_empty_struct_twin_sync(
      empty,
    );
  }

  late final _wire_empty_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_empty_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_sync');
  late final _wire_empty_struct_twin_sync =
      _wire_empty_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_empty_twin_sync>)>();

  WireSyncRust2DartDco wire_func_return_unit_twin_sync() {
    return _wire_func_return_unit_twin_sync();
  }

  late final _wire_func_return_unit_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_sync');
  late final _wire_func_return_unit_twin_sync =
      _wire_func_return_unit_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_func_string_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> arg,
  ) {
    return _wire_func_string_twin_sync(
      arg,
    );
  }

  late final _wire_func_string_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_func_string_twin_sync');
  late final _wire_func_string_twin_sync =
      _wire_func_string_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_handle_list_of_struct_twin_sync(
    ffi.Pointer<wire_cst_list_my_size> l,
  ) {
    return _wire_handle_list_of_struct_twin_sync(
      l,
    );
  }

  late final _wire_handle_list_of_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_my_size>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_sync');
  late final _wire_handle_list_of_struct_twin_sync =
      _wire_handle_list_of_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_my_size>)>();

  WireSyncRust2DartDco wire_handle_string_list_twin_sync(
    ffi.Pointer<wire_cst_list_String> names,
  ) {
    return _wire_handle_string_list_twin_sync(
      names,
    );
  }

  late final _wire_handle_string_list_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_sync');
  late final _wire_handle_string_list_twin_sync =
      _wire_handle_string_list_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_String>)>();

  WireSyncRust2DartSse wire_empty_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_empty_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_empty_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_empty_struct_twin_sync_sse');
  late final _wire_empty_struct_twin_sync_sse =
      _wire_empty_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_return_unit_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_return_unit_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_return_unit_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_return_unit_twin_sync_sse');
  late final _wire_func_return_unit_twin_sync_sse =
      _wire_func_return_unit_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_string_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_string_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_string_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_string_twin_sync_sse');
  late final _wire_func_string_twin_sync_sse =
      _wire_func_string_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_list_of_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_list_of_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_list_of_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_list_of_struct_twin_sync_sse');
  late final _wire_handle_list_of_struct_twin_sync_sse =
      _wire_handle_list_of_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_string_list_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_string_list_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_string_list_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_string_list_twin_sync_sse');
  late final _wire_handle_string_list_twin_sync_sse =
      _wire_handle_string_list_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_newtype_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_new_type_int_twin_rust_async> arg,
  ) {
    return _wire_handle_newtype_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_handle_newtype_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_new_type_int_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_rust_async');
  late final _wire_handle_newtype_twin_rust_async =
      _wire_handle_newtype_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_new_type_int_twin_rust_async>)>();

  void wire_handle_newtype_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_newtype_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_newtype_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_rust_async_sse');
  late final _wire_handle_newtype_twin_rust_async_sse =
      _wire_handle_newtype_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_newtype_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_newtype_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_newtype_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_sse');
  late final _wire_handle_newtype_twin_sse = _wire_handle_newtype_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_newtype_twin_sync(
    ffi.Pointer<wire_cst_new_type_int_twin_sync> arg,
  ) {
    return _wire_handle_newtype_twin_sync(
      arg,
    );
  }

  late final _wire_handle_newtype_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_new_type_int_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_sync');
  late final _wire_handle_newtype_twin_sync =
      _wire_handle_newtype_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_new_type_int_twin_sync>)>();

  WireSyncRust2DartSse wire_handle_newtype_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_newtype_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_newtype_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_newtype_twin_sync_sse');
  late final _wire_handle_newtype_twin_sync_sse =
      _wire_handle_newtype_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_bool_twin_normal(
    int port_,
    ffi.Pointer<ffi.Bool> arg,
  ) {
    return _wire_example_optional_primitive_type_bool_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_bool_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_bool_twin_normal');
  late final _wire_example_optional_primitive_type_bool_twin_normal =
      _wire_example_optional_primitive_type_bool_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Bool>)>();

  void wire_example_optional_primitive_type_f32_twin_normal(
    int port_,
    ffi.Pointer<ffi.Float> arg,
  ) {
    return _wire_example_optional_primitive_type_f32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_f32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Float>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f32_twin_normal');
  late final _wire_example_optional_primitive_type_f32_twin_normal =
      _wire_example_optional_primitive_type_f32_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Float>)>();

  void wire_example_optional_primitive_type_f64_twin_normal(
    int port_,
    ffi.Pointer<ffi.Double> arg,
  ) {
    return _wire_example_optional_primitive_type_f64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_f64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f64_twin_normal');
  late final _wire_example_optional_primitive_type_f64_twin_normal =
      _wire_example_optional_primitive_type_f64_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Double>)>();

  void wire_example_optional_primitive_type_i16_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int16> arg,
  ) {
    return _wire_example_optional_primitive_type_i16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i16_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i16_twin_normal');
  late final _wire_example_optional_primitive_type_i16_twin_normal =
      _wire_example_optional_primitive_type_i16_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int16>)>();

  void wire_example_optional_primitive_type_i32_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int32> arg,
  ) {
    return _wire_example_optional_primitive_type_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i32_twin_normal');
  late final _wire_example_optional_primitive_type_i32_twin_normal =
      _wire_example_optional_primitive_type_i32_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int32>)>();

  void wire_example_optional_primitive_type_i64_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int64> arg,
  ) {
    return _wire_example_optional_primitive_type_i64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i64_twin_normal');
  late final _wire_example_optional_primitive_type_i64_twin_normal =
      _wire_example_optional_primitive_type_i64_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int64>)>();

  void wire_example_optional_primitive_type_i8_twin_normal(
    int port_,
    ffi.Pointer<ffi.Int8> arg,
  ) {
    return _wire_example_optional_primitive_type_i8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i8_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i8_twin_normal');
  late final _wire_example_optional_primitive_type_i8_twin_normal =
      _wire_example_optional_primitive_type_i8_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int8>)>();

  void wire_example_optional_primitive_type_u16_twin_normal(
    int port_,
    ffi.Pointer<ffi.Uint16> arg,
  ) {
    return _wire_example_optional_primitive_type_u16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u16_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u16_twin_normal');
  late final _wire_example_optional_primitive_type_u16_twin_normal =
      _wire_example_optional_primitive_type_u16_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint16>)>();

  void wire_example_optional_primitive_type_u32_twin_normal(
    int port_,
    ffi.Pointer<ffi.Uint32> arg,
  ) {
    return _wire_example_optional_primitive_type_u32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u32_twin_normal');
  late final _wire_example_optional_primitive_type_u32_twin_normal =
      _wire_example_optional_primitive_type_u32_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint32>)>();

  void wire_example_optional_primitive_type_u64_twin_normal(
    int port_,
    ffi.Pointer<ffi.Uint64> arg,
  ) {
    return _wire_example_optional_primitive_type_u64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u64_twin_normal');
  late final _wire_example_optional_primitive_type_u64_twin_normal =
      _wire_example_optional_primitive_type_u64_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint64>)>();

  void wire_example_optional_primitive_type_u8_twin_normal(
    int port_,
    ffi.Pointer<ffi.Uint8> arg,
  ) {
    return _wire_example_optional_primitive_type_u8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u8_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u8_twin_normal');
  late final _wire_example_optional_primitive_type_u8_twin_normal =
      _wire_example_optional_primitive_type_u8_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>)>();

  void wire_primitive_optional_types_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int32> my_i32,
    ffi.Pointer<ffi.Int64> my_i64,
    ffi.Pointer<ffi.Double> my_f64,
    ffi.Pointer<ffi.Bool> my_bool,
  ) {
    return _wire_primitive_optional_types_twin_rust_async(
      port_,
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_optional_types_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_rust_async');
  late final _wire_primitive_optional_types_twin_rust_async =
      _wire_primitive_optional_types_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Int32>, ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>, ffi.Pointer<ffi.Bool>)>();

  void wire_primitive_optional_types_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_optional_types_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_optional_types_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_rust_async_sse');
  late final _wire_primitive_optional_types_twin_rust_async_sse =
      _wire_primitive_optional_types_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_optional_types_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_optional_types_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_optional_types_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_sse');
  late final _wire_primitive_optional_types_twin_sse =
      _wire_primitive_optional_types_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_primitive_optional_types_twin_sync(
    ffi.Pointer<ffi.Int32> my_i32,
    ffi.Pointer<ffi.Int64> my_i64,
    ffi.Pointer<ffi.Double> my_f64,
    ffi.Pointer<ffi.Bool> my_bool,
  ) {
    return _wire_primitive_optional_types_twin_sync(
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_optional_types_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_sync');
  late final _wire_primitive_optional_types_twin_sync =
      _wire_primitive_optional_types_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>,
              ffi.Pointer<ffi.Bool>)>();

  WireSyncRust2DartSse wire_primitive_optional_types_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_optional_types_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_optional_types_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_optional_types_twin_sync_sse');
  late final _wire_primitive_optional_types_twin_sync_sse =
      _wire_primitive_optional_types_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_bool_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Bool> arg,
  ) {
    return _wire_example_optional_primitive_type_bool_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_bool_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Bool>)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_bool_twin_rust_async');
  late final _wire_example_optional_primitive_type_bool_twin_rust_async =
      _wire_example_optional_primitive_type_bool_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Bool>)>();

  void wire_example_optional_primitive_type_f32_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Float> arg,
  ) {
    return _wire_example_optional_primitive_type_f32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_f32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Float>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f32_twin_rust_async');
  late final _wire_example_optional_primitive_type_f32_twin_rust_async =
      _wire_example_optional_primitive_type_f32_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Float>)>();

  void wire_example_optional_primitive_type_f64_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Double> arg,
  ) {
    return _wire_example_optional_primitive_type_f64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_f64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f64_twin_rust_async');
  late final _wire_example_optional_primitive_type_f64_twin_rust_async =
      _wire_example_optional_primitive_type_f64_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Double>)>();

  void wire_example_optional_primitive_type_i16_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int16> arg,
  ) {
    return _wire_example_optional_primitive_type_i16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i16_twin_rust_async');
  late final _wire_example_optional_primitive_type_i16_twin_rust_async =
      _wire_example_optional_primitive_type_i16_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int16>)>();

  void wire_example_optional_primitive_type_i32_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int32> arg,
  ) {
    return _wire_example_optional_primitive_type_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i32_twin_rust_async');
  late final _wire_example_optional_primitive_type_i32_twin_rust_async =
      _wire_example_optional_primitive_type_i32_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int32>)>();

  void wire_example_optional_primitive_type_i64_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int64> arg,
  ) {
    return _wire_example_optional_primitive_type_i64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i64_twin_rust_async');
  late final _wire_example_optional_primitive_type_i64_twin_rust_async =
      _wire_example_optional_primitive_type_i64_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int64>)>();

  void wire_example_optional_primitive_type_i8_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int8> arg,
  ) {
    return _wire_example_optional_primitive_type_i8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i8_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Int8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i8_twin_rust_async');
  late final _wire_example_optional_primitive_type_i8_twin_rust_async =
      _wire_example_optional_primitive_type_i8_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Int8>)>();

  void wire_example_optional_primitive_type_u16_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Uint16> arg,
  ) {
    return _wire_example_optional_primitive_type_u16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u16_twin_rust_async');
  late final _wire_example_optional_primitive_type_u16_twin_rust_async =
      _wire_example_optional_primitive_type_u16_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint16>)>();

  void wire_example_optional_primitive_type_u32_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Uint32> arg,
  ) {
    return _wire_example_optional_primitive_type_u32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u32_twin_rust_async');
  late final _wire_example_optional_primitive_type_u32_twin_rust_async =
      _wire_example_optional_primitive_type_u32_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint32>)>();

  void wire_example_optional_primitive_type_u64_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Uint64> arg,
  ) {
    return _wire_example_optional_primitive_type_u64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u64_twin_rust_async');
  late final _wire_example_optional_primitive_type_u64_twin_rust_async =
      _wire_example_optional_primitive_type_u64_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint64>)>();

  void wire_example_optional_primitive_type_u8_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Uint8> arg,
  ) {
    return _wire_example_optional_primitive_type_u8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u8_twin_rust_async');
  late final _wire_example_optional_primitive_type_u8_twin_rust_async =
      _wire_example_optional_primitive_type_u8_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>)>();

  void wire_example_optional_primitive_type_bool_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_bool_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_bool_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_bool_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_bool_twin_rust_async_sse =
      _wire_example_optional_primitive_type_bool_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_f32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_f32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_f32_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f32_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_f32_twin_rust_async_sse =
      _wire_example_optional_primitive_type_f32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_f64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_f64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_f64_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f64_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_f64_twin_rust_async_sse =
      _wire_example_optional_primitive_type_f64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_i16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i16_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i16_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_i16_twin_rust_async_sse =
      _wire_example_optional_primitive_type_i16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i32_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i32_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_i32_twin_rust_async_sse =
      _wire_example_optional_primitive_type_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_i64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i64_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i64_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_i64_twin_rust_async_sse =
      _wire_example_optional_primitive_type_i64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_i8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i8_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i8_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_i8_twin_rust_async_sse =
      _wire_example_optional_primitive_type_i8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_u16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u16_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u16_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_u16_twin_rust_async_sse =
      _wire_example_optional_primitive_type_u16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_u32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u32_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u32_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_u32_twin_rust_async_sse =
      _wire_example_optional_primitive_type_u32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_u64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u64_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u64_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_u64_twin_rust_async_sse =
      _wire_example_optional_primitive_type_u64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_u8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u8_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u8_twin_rust_async_sse');
  late final _wire_example_optional_primitive_type_u8_twin_rust_async_sse =
      _wire_example_optional_primitive_type_u8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_bool_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_bool_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_bool_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_bool_twin_sse');
  late final _wire_example_optional_primitive_type_bool_twin_sse =
      _wire_example_optional_primitive_type_bool_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_f32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_f32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_f32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f32_twin_sse');
  late final _wire_example_optional_primitive_type_f32_twin_sse =
      _wire_example_optional_primitive_type_f32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_f64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_f64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_f64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f64_twin_sse');
  late final _wire_example_optional_primitive_type_f64_twin_sse =
      _wire_example_optional_primitive_type_f64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_i16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i16_twin_sse');
  late final _wire_example_optional_primitive_type_i16_twin_sse =
      _wire_example_optional_primitive_type_i16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i32_twin_sse');
  late final _wire_example_optional_primitive_type_i32_twin_sse =
      _wire_example_optional_primitive_type_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_i64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i64_twin_sse');
  late final _wire_example_optional_primitive_type_i64_twin_sse =
      _wire_example_optional_primitive_type_i64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_i8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i8_twin_sse');
  late final _wire_example_optional_primitive_type_i8_twin_sse =
      _wire_example_optional_primitive_type_i8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_u16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u16_twin_sse');
  late final _wire_example_optional_primitive_type_u16_twin_sse =
      _wire_example_optional_primitive_type_u16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_u32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u32_twin_sse');
  late final _wire_example_optional_primitive_type_u32_twin_sse =
      _wire_example_optional_primitive_type_u32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_u64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u64_twin_sse');
  late final _wire_example_optional_primitive_type_u64_twin_sse =
      _wire_example_optional_primitive_type_u64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_optional_primitive_type_u8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u8_twin_sse');
  late final _wire_example_optional_primitive_type_u8_twin_sse =
      _wire_example_optional_primitive_type_u8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_bool_twin_sync(
    ffi.Pointer<ffi.Bool> arg,
  ) {
    return _wire_example_optional_primitive_type_bool_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_bool_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_bool_twin_sync');
  late final _wire_example_optional_primitive_type_bool_twin_sync =
      _wire_example_optional_primitive_type_bool_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Bool>)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_f32_twin_sync(
    ffi.Pointer<ffi.Float> arg,
  ) {
    return _wire_example_optional_primitive_type_f32_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_f32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Float>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f32_twin_sync');
  late final _wire_example_optional_primitive_type_f32_twin_sync =
      _wire_example_optional_primitive_type_f32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Float>)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_f64_twin_sync(
    ffi.Pointer<ffi.Double> arg,
  ) {
    return _wire_example_optional_primitive_type_f64_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_f64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f64_twin_sync');
  late final _wire_example_optional_primitive_type_f64_twin_sync =
      _wire_example_optional_primitive_type_f64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Double>)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_i16_twin_sync(
    ffi.Pointer<ffi.Int16> arg,
  ) {
    return _wire_example_optional_primitive_type_i16_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i16_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i16_twin_sync');
  late final _wire_example_optional_primitive_type_i16_twin_sync =
      _wire_example_optional_primitive_type_i16_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int16>)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_i32_twin_sync(
    ffi.Pointer<ffi.Int32> arg,
  ) {
    return _wire_example_optional_primitive_type_i32_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i32_twin_sync');
  late final _wire_example_optional_primitive_type_i32_twin_sync =
      _wire_example_optional_primitive_type_i32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_i64_twin_sync(
    ffi.Pointer<ffi.Int64> arg,
  ) {
    return _wire_example_optional_primitive_type_i64_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i64_twin_sync');
  late final _wire_example_optional_primitive_type_i64_twin_sync =
      _wire_example_optional_primitive_type_i64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int64>)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_i8_twin_sync(
    ffi.Pointer<ffi.Int8> arg,
  ) {
    return _wire_example_optional_primitive_type_i8_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_i8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i8_twin_sync');
  late final _wire_example_optional_primitive_type_i8_twin_sync =
      _wire_example_optional_primitive_type_i8_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Int8>)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_u16_twin_sync(
    ffi.Pointer<ffi.Uint16> arg,
  ) {
    return _wire_example_optional_primitive_type_u16_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u16_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u16_twin_sync');
  late final _wire_example_optional_primitive_type_u16_twin_sync =
      _wire_example_optional_primitive_type_u16_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint16>)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_u32_twin_sync(
    ffi.Pointer<ffi.Uint32> arg,
  ) {
    return _wire_example_optional_primitive_type_u32_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u32_twin_sync');
  late final _wire_example_optional_primitive_type_u32_twin_sync =
      _wire_example_optional_primitive_type_u32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint32>)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_u64_twin_sync(
    ffi.Pointer<ffi.Uint64> arg,
  ) {
    return _wire_example_optional_primitive_type_u64_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u64_twin_sync');
  late final _wire_example_optional_primitive_type_u64_twin_sync =
      _wire_example_optional_primitive_type_u64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint64>)>();

  WireSyncRust2DartDco wire_example_optional_primitive_type_u8_twin_sync(
    ffi.Pointer<ffi.Uint8> arg,
  ) {
    return _wire_example_optional_primitive_type_u8_twin_sync(
      arg,
    );
  }

  late final _wire_example_optional_primitive_type_u8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u8_twin_sync');
  late final _wire_example_optional_primitive_type_u8_twin_sync =
      _wire_example_optional_primitive_type_u8_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Uint8>)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_bool_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_bool_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_bool_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_bool_twin_sync_sse');
  late final _wire_example_optional_primitive_type_bool_twin_sync_sse =
      _wire_example_optional_primitive_type_bool_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_f32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_f32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_f32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f32_twin_sync_sse');
  late final _wire_example_optional_primitive_type_f32_twin_sync_sse =
      _wire_example_optional_primitive_type_f32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_f64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_f64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_f64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_f64_twin_sync_sse');
  late final _wire_example_optional_primitive_type_f64_twin_sync_sse =
      _wire_example_optional_primitive_type_f64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_i16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i16_twin_sync_sse');
  late final _wire_example_optional_primitive_type_i16_twin_sync_sse =
      _wire_example_optional_primitive_type_i16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i32_twin_sync_sse');
  late final _wire_example_optional_primitive_type_i32_twin_sync_sse =
      _wire_example_optional_primitive_type_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_i64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i64_twin_sync_sse');
  late final _wire_example_optional_primitive_type_i64_twin_sync_sse =
      _wire_example_optional_primitive_type_i64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_i8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_i8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_i8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_i8_twin_sync_sse');
  late final _wire_example_optional_primitive_type_i8_twin_sync_sse =
      _wire_example_optional_primitive_type_i8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_u16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u16_twin_sync_sse');
  late final _wire_example_optional_primitive_type_u16_twin_sync_sse =
      _wire_example_optional_primitive_type_u16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_u32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u32_twin_sync_sse');
  late final _wire_example_optional_primitive_type_u32_twin_sync_sse =
      _wire_example_optional_primitive_type_u32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_u64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u64_twin_sync_sse');
  late final _wire_example_optional_primitive_type_u64_twin_sync_sse =
      _wire_example_optional_primitive_type_u64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_optional_primitive_type_u8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_optional_primitive_type_u8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_optional_primitive_type_u8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_optional_primitive_type_u8_twin_sync_sse');
  late final _wire_example_optional_primitive_type_u8_twin_sync_sse =
      _wire_example_optional_primitive_type_u8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_increment_boxed_optional_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Double> opt,
  ) {
    return _wire_handle_increment_boxed_optional_twin_rust_async(
      port_,
      opt,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_rust_async');
  late final _wire_handle_increment_boxed_optional_twin_rust_async =
      _wire_handle_increment_boxed_optional_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Double>)>();

  void wire_handle_option_box_arguments_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Int8> i8box,
    ffi.Pointer<ffi.Uint8> u8box,
    ffi.Pointer<ffi.Int32> i32box,
    ffi.Pointer<ffi.Int64> i64box,
    ffi.Pointer<ffi.Double> f64box,
    ffi.Pointer<ffi.Bool> boolbox,
    ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> structbox,
  ) {
    return _wire_handle_option_box_arguments_twin_rust_async(
      port_,
      i8box,
      u8box,
      i32box,
      i64box,
      f64box,
      boolbox,
      structbox,
    );
  }

  late final _wire_handle_option_box_arguments_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<ffi.Int8>,
                  ffi.Pointer<ffi.Uint8>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>,
                  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_rust_async');
  late final _wire_handle_option_box_arguments_twin_rust_async =
      _wire_handle_option_box_arguments_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Uint8>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>)>();

  void wire_handle_optional_increment_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> opt,
  ) {
    return _wire_handle_optional_increment_twin_rust_async(
      port_,
      opt,
    );
  }

  late final _wire_handle_optional_increment_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_rust_async');
  late final _wire_handle_optional_increment_twin_rust_async =
      _wire_handle_optional_increment_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>)>();

  void wire_handle_optional_return_twin_rust_async(
    int port_,
    double left,
    double right,
  ) {
    return _wire_handle_optional_return_twin_rust_async(
      port_,
      left,
      right,
    );
  }

  late final _wire_handle_optional_return_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Double, ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_rust_async');
  late final _wire_handle_optional_return_twin_rust_async =
      _wire_handle_optional_return_twin_rust_asyncPtr
          .asFunction<void Function(int, double, double)>();

  void wire_handle_optional_struct_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> document,
  ) {
    return _wire_handle_optional_struct_twin_rust_async(
      port_,
      document,
    );
  }

  late final _wire_handle_optional_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_rust_async');
  late final _wire_handle_optional_struct_twin_rust_async =
      _wire_handle_optional_struct_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_handle_vec_of_opts_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_opt_vecs_twin_rust_async> opt,
  ) {
    return _wire_handle_vec_of_opts_twin_rust_async(
      port_,
      opt,
    );
  }

  late final _wire_handle_vec_of_opts_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_opt_vecs_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_rust_async');
  late final _wire_handle_vec_of_opts_twin_rust_async =
      _wire_handle_vec_of_opts_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_opt_vecs_twin_rust_async>)>();

  void wire_handle_increment_boxed_optional_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_increment_boxed_optional_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_rust_async_sse');
  late final _wire_handle_increment_boxed_optional_twin_rust_async_sse =
      _wire_handle_increment_boxed_optional_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_option_box_arguments_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_option_box_arguments_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_option_box_arguments_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_rust_async_sse');
  late final _wire_handle_option_box_arguments_twin_rust_async_sse =
      _wire_handle_option_box_arguments_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_increment_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_increment_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_increment_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_rust_async_sse');
  late final _wire_handle_optional_increment_twin_rust_async_sse =
      _wire_handle_optional_increment_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_return_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_return_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_return_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_rust_async_sse');
  late final _wire_handle_optional_return_twin_rust_async_sse =
      _wire_handle_optional_return_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_rust_async_sse');
  late final _wire_handle_optional_struct_twin_rust_async_sse =
      _wire_handle_optional_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_of_opts_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_opts_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_opts_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_rust_async_sse');
  late final _wire_handle_vec_of_opts_twin_rust_async_sse =
      _wire_handle_vec_of_opts_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_increment_boxed_optional_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_increment_boxed_optional_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_sse');
  late final _wire_handle_increment_boxed_optional_twin_sse =
      _wire_handle_increment_boxed_optional_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_option_box_arguments_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_option_box_arguments_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_option_box_arguments_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_sse');
  late final _wire_handle_option_box_arguments_twin_sse =
      _wire_handle_option_box_arguments_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_increment_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_increment_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_increment_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_sse');
  late final _wire_handle_optional_increment_twin_sse =
      _wire_handle_optional_increment_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_return_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_return_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_return_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_sse');
  late final _wire_handle_optional_return_twin_sse =
      _wire_handle_optional_return_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_optional_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_sse');
  late final _wire_handle_optional_struct_twin_sse =
      _wire_handle_optional_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_of_opts_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_opts_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_opts_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_sse');
  late final _wire_handle_vec_of_opts_twin_sse =
      _wire_handle_vec_of_opts_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_increment_boxed_optional_twin_sync(
    ffi.Pointer<ffi.Double> opt,
  ) {
    return _wire_handle_increment_boxed_optional_twin_sync(
      opt,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Double>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_sync');
  late final _wire_handle_increment_boxed_optional_twin_sync =
      _wire_handle_increment_boxed_optional_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Double>)>();

  WireSyncRust2DartDco wire_handle_option_box_arguments_twin_sync(
    ffi.Pointer<ffi.Int8> i8box,
    ffi.Pointer<ffi.Uint8> u8box,
    ffi.Pointer<ffi.Int32> i32box,
    ffi.Pointer<ffi.Int64> i64box,
    ffi.Pointer<ffi.Double> f64box,
    ffi.Pointer<ffi.Bool> boolbox,
    ffi.Pointer<wire_cst_exotic_optionals_twin_sync> structbox,
  ) {
    return _wire_handle_option_box_arguments_twin_sync(
      i8box,
      u8box,
      i32box,
      i64box,
      f64box,
      boolbox,
      structbox,
    );
  }

  late final _wire_handle_option_box_arguments_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Int8>,
                  ffi.Pointer<ffi.Uint8>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.Pointer<ffi.Double>,
                  ffi.Pointer<ffi.Bool>,
                  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_sync');
  late final _wire_handle_option_box_arguments_twin_sync =
      _wire_handle_option_box_arguments_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<ffi.Int8>,
              ffi.Pointer<ffi.Uint8>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int64>,
              ffi.Pointer<ffi.Double>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<wire_cst_exotic_optionals_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_optional_increment_twin_sync(
    ffi.Pointer<wire_cst_exotic_optionals_twin_sync> opt,
  ) {
    return _wire_handle_optional_increment_twin_sync(
      opt,
    );
  }

  late final _wire_handle_optional_increment_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_sync');
  late final _wire_handle_optional_increment_twin_sync =
      _wire_handle_optional_increment_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_exotic_optionals_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_optional_return_twin_sync(
    double left,
    double right,
  ) {
    return _wire_handle_optional_return_twin_sync(
      left,
      right,
    );
  }

  late final _wire_handle_optional_return_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Double, ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_sync');
  late final _wire_handle_optional_return_twin_sync =
      _wire_handle_optional_return_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(double, double)>();

  WireSyncRust2DartDco wire_handle_optional_struct_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> document,
  ) {
    return _wire_handle_optional_struct_twin_sync(
      document,
    );
  }

  late final _wire_handle_optional_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_sync');
  late final _wire_handle_optional_struct_twin_sync =
      _wire_handle_optional_struct_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_handle_vec_of_opts_twin_sync(
    ffi.Pointer<wire_cst_opt_vecs_twin_sync> opt,
  ) {
    return _wire_handle_vec_of_opts_twin_sync(
      opt,
    );
  }

  late final _wire_handle_vec_of_opts_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_opt_vecs_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_sync');
  late final _wire_handle_vec_of_opts_twin_sync =
      _wire_handle_vec_of_opts_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_opt_vecs_twin_sync>)>();

  WireSyncRust2DartSse wire_handle_increment_boxed_optional_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_increment_boxed_optional_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_increment_boxed_optional_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_increment_boxed_optional_twin_sync_sse');
  late final _wire_handle_increment_boxed_optional_twin_sync_sse =
      _wire_handle_increment_boxed_optional_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_option_box_arguments_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_option_box_arguments_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_option_box_arguments_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_option_box_arguments_twin_sync_sse');
  late final _wire_handle_option_box_arguments_twin_sync_sse =
      _wire_handle_option_box_arguments_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_optional_increment_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_increment_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_increment_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_increment_twin_sync_sse');
  late final _wire_handle_optional_increment_twin_sync_sse =
      _wire_handle_optional_increment_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_optional_return_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_return_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_return_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_return_twin_sync_sse');
  late final _wire_handle_optional_return_twin_sync_sse =
      _wire_handle_optional_return_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_optional_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_optional_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_optional_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_optional_struct_twin_sync_sse');
  late final _wire_handle_optional_struct_twin_sync_sse =
      _wire_handle_optional_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_vec_of_opts_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_opts_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_opts_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_opts_twin_sync_sse');
  late final _wire_handle_vec_of_opts_twin_sync_sse =
      _wire_handle_vec_of_opts_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_bool_twin_normal(
    int port_,
    bool arg,
  ) {
    return _wire_example_primitive_type_bool_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_bool_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_bool_twin_normal');
  late final _wire_example_primitive_type_bool_twin_normal =
      _wire_example_primitive_type_bool_twin_normalPtr
          .asFunction<void Function(int, bool)>();

  void wire_example_primitive_type_f32_twin_normal(
    int port_,
    double arg,
  ) {
    return _wire_example_primitive_type_f32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_f32_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Float)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f32_twin_normal');
  late final _wire_example_primitive_type_f32_twin_normal =
      _wire_example_primitive_type_f32_twin_normalPtr
          .asFunction<void Function(int, double)>();

  void wire_example_primitive_type_f64_twin_normal(
    int port_,
    double arg,
  ) {
    return _wire_example_primitive_type_f64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_f64_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f64_twin_normal');
  late final _wire_example_primitive_type_f64_twin_normal =
      _wire_example_primitive_type_f64_twin_normalPtr
          .asFunction<void Function(int, double)>();

  void wire_example_primitive_type_i16_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_i16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_i16_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int16)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i16_twin_normal');
  late final _wire_example_primitive_type_i16_twin_normal =
      _wire_example_primitive_type_i16_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_i32_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i32_twin_normal');
  late final _wire_example_primitive_type_i32_twin_normal =
      _wire_example_primitive_type_i32_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_i64_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_i64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_i64_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i64_twin_normal');
  late final _wire_example_primitive_type_i64_twin_normal =
      _wire_example_primitive_type_i64_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_i8_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_i8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_i8_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int8)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i8_twin_normal');
  late final _wire_example_primitive_type_i8_twin_normal =
      _wire_example_primitive_type_i8_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_u16_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_u16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_u16_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint16)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u16_twin_normal');
  late final _wire_example_primitive_type_u16_twin_normal =
      _wire_example_primitive_type_u16_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_u32_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_u32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_u32_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u32_twin_normal');
  late final _wire_example_primitive_type_u32_twin_normal =
      _wire_example_primitive_type_u32_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_u64_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_u64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_u64_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u64_twin_normal');
  late final _wire_example_primitive_type_u64_twin_normal =
      _wire_example_primitive_type_u64_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_u8_twin_normal(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_u8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_u8_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint8)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u8_twin_normal');
  late final _wire_example_primitive_type_u8_twin_normal =
      _wire_example_primitive_type_u8_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_list_type_bool_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_bool> arg,
  ) {
    return _wire_example_primitive_list_type_bool_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_bool_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_bool_twin_normal');
  late final _wire_example_primitive_list_type_bool_twin_normal =
      _wire_example_primitive_list_type_bool_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_bool>)>();

  void wire_example_primitive_list_type_f32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_32> arg,
  ) {
    return _wire_example_primitive_list_type_f32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_f32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f32_twin_normal');
  late final _wire_example_primitive_list_type_f32_twin_normal =
      _wire_example_primitive_list_type_f32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_32>)>();

  void wire_example_primitive_list_type_f64_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_64> arg,
  ) {
    return _wire_example_primitive_list_type_f64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_f64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f64_twin_normal');
  late final _wire_example_primitive_list_type_f64_twin_normal =
      _wire_example_primitive_list_type_f64_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_64>)>();

  void wire_example_primitive_list_type_i16_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_16> arg,
  ) {
    return _wire_example_primitive_list_type_i16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i16_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i16_twin_normal');
  late final _wire_example_primitive_list_type_i16_twin_normal =
      _wire_example_primitive_list_type_i16_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_16>)>();

  void wire_example_primitive_list_type_i32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_32> arg,
  ) {
    return _wire_example_primitive_list_type_i32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i32_twin_normal');
  late final _wire_example_primitive_list_type_i32_twin_normal =
      _wire_example_primitive_list_type_i32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_32>)>();

  void wire_example_primitive_list_type_i64_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_64> arg,
  ) {
    return _wire_example_primitive_list_type_i64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i64_twin_normal');
  late final _wire_example_primitive_list_type_i64_twin_normal =
      _wire_example_primitive_list_type_i64_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_64>)>();

  void wire_example_primitive_list_type_i8_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_8> arg,
  ) {
    return _wire_example_primitive_list_type_i8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i8_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i8_twin_normal');
  late final _wire_example_primitive_list_type_i8_twin_normal =
      _wire_example_primitive_list_type_i8_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_8>)>();

  void wire_example_primitive_list_type_u16_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_16> arg,
  ) {
    return _wire_example_primitive_list_type_u16_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u16_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u16_twin_normal');
  late final _wire_example_primitive_list_type_u16_twin_normal =
      _wire_example_primitive_list_type_u16_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_16>)>();

  void wire_example_primitive_list_type_u32_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_32> arg,
  ) {
    return _wire_example_primitive_list_type_u32_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u32_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u32_twin_normal');
  late final _wire_example_primitive_list_type_u32_twin_normal =
      _wire_example_primitive_list_type_u32_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_32>)>();

  void wire_example_primitive_list_type_u64_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_64> arg,
  ) {
    return _wire_example_primitive_list_type_u64_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u64_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u64_twin_normal');
  late final _wire_example_primitive_list_type_u64_twin_normal =
      _wire_example_primitive_list_type_u64_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_64>)>();

  void wire_example_primitive_list_type_u8_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> arg,
  ) {
    return _wire_example_primitive_list_type_u8_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u8_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u8_twin_normal');
  late final _wire_example_primitive_list_type_u8_twin_normal =
      _wire_example_primitive_list_type_u8_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_handle_vec_of_primitive_twin_rust_async(
    int port_,
    int n,
  ) {
    return _wire_handle_vec_of_primitive_twin_rust_async(
      port_,
      n,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_rust_async');
  late final _wire_handle_vec_of_primitive_twin_rust_async =
      _wire_handle_vec_of_primitive_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_vec_of_primitive_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_primitive_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_rust_async_sse');
  late final _wire_handle_vec_of_primitive_twin_rust_async_sse =
      _wire_handle_vec_of_primitive_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_vec_of_primitive_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_primitive_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_sse');
  late final _wire_handle_vec_of_primitive_twin_sse =
      _wire_handle_vec_of_primitive_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_vec_of_primitive_twin_sync(
    int n,
  ) {
    return _wire_handle_vec_of_primitive_twin_sync(
      n,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_sync');
  late final _wire_handle_vec_of_primitive_twin_sync =
      _wire_handle_vec_of_primitive_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartSse wire_handle_vec_of_primitive_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_vec_of_primitive_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_vec_of_primitive_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_vec_of_primitive_twin_sync_sse');
  late final _wire_handle_vec_of_primitive_twin_sync_sse =
      _wire_handle_vec_of_primitive_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_bool_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_bool> arg,
  ) {
    return _wire_example_primitive_list_type_bool_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_bool_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<wire_cst_list_bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_bool_twin_rust_async');
  late final _wire_example_primitive_list_type_bool_twin_rust_async =
      _wire_example_primitive_list_type_bool_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<wire_cst_list_bool>)>();

  void wire_example_primitive_list_type_f32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_32> arg,
  ) {
    return _wire_example_primitive_list_type_f32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_f32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f32_twin_rust_async');
  late final _wire_example_primitive_list_type_f32_twin_rust_async =
      _wire_example_primitive_list_type_f32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_32>)>();

  void wire_example_primitive_list_type_f64_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_f_64> arg,
  ) {
    return _wire_example_primitive_list_type_f64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_f64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_f_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f64_twin_rust_async');
  late final _wire_example_primitive_list_type_f64_twin_rust_async =
      _wire_example_primitive_list_type_f64_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_f_64>)>();

  void wire_example_primitive_list_type_i16_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_16> arg,
  ) {
    return _wire_example_primitive_list_type_i16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i16_twin_rust_async');
  late final _wire_example_primitive_list_type_i16_twin_rust_async =
      _wire_example_primitive_list_type_i16_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_16>)>();

  void wire_example_primitive_list_type_i32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_32> arg,
  ) {
    return _wire_example_primitive_list_type_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i32_twin_rust_async');
  late final _wire_example_primitive_list_type_i32_twin_rust_async =
      _wire_example_primitive_list_type_i32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_32>)>();

  void wire_example_primitive_list_type_i64_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_64> arg,
  ) {
    return _wire_example_primitive_list_type_i64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i64_twin_rust_async');
  late final _wire_example_primitive_list_type_i64_twin_rust_async =
      _wire_example_primitive_list_type_i64_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_64>)>();

  void wire_example_primitive_list_type_i8_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_i_8> arg,
  ) {
    return _wire_example_primitive_list_type_i8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_i_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i8_twin_rust_async');
  late final _wire_example_primitive_list_type_i8_twin_rust_async =
      _wire_example_primitive_list_type_i8_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_i_8>)>();

  void wire_example_primitive_list_type_u16_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_16> arg,
  ) {
    return _wire_example_primitive_list_type_u16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u16_twin_rust_async');
  late final _wire_example_primitive_list_type_u16_twin_rust_async =
      _wire_example_primitive_list_type_u16_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_16>)>();

  void wire_example_primitive_list_type_u32_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_32> arg,
  ) {
    return _wire_example_primitive_list_type_u32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u32_twin_rust_async');
  late final _wire_example_primitive_list_type_u32_twin_rust_async =
      _wire_example_primitive_list_type_u32_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_32>)>();

  void wire_example_primitive_list_type_u64_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_64> arg,
  ) {
    return _wire_example_primitive_list_type_u64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u64_twin_rust_async');
  late final _wire_example_primitive_list_type_u64_twin_rust_async =
      _wire_example_primitive_list_type_u64_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_64>)>();

  void wire_example_primitive_list_type_u8_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> arg,
  ) {
    return _wire_example_primitive_list_type_u8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u8_twin_rust_async');
  late final _wire_example_primitive_list_type_u8_twin_rust_async =
      _wire_example_primitive_list_type_u8_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_example_primitive_list_type_bool_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_bool_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_bool_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_bool_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_bool_twin_rust_async_sse =
      _wire_example_primitive_list_type_bool_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_f32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_f32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_f32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f32_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_f32_twin_rust_async_sse =
      _wire_example_primitive_list_type_f32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_f64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_f64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_f64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f64_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_f64_twin_rust_async_sse =
      _wire_example_primitive_list_type_f64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_i16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i16_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_i16_twin_rust_async_sse =
      _wire_example_primitive_list_type_i16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i32_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_i32_twin_rust_async_sse =
      _wire_example_primitive_list_type_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_i64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i64_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_i64_twin_rust_async_sse =
      _wire_example_primitive_list_type_i64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_i8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i8_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_i8_twin_rust_async_sse =
      _wire_example_primitive_list_type_i8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_u16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u16_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_u16_twin_rust_async_sse =
      _wire_example_primitive_list_type_u16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_u32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u32_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_u32_twin_rust_async_sse =
      _wire_example_primitive_list_type_u32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_u64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u64_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_u64_twin_rust_async_sse =
      _wire_example_primitive_list_type_u64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_u8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u8_twin_rust_async_sse');
  late final _wire_example_primitive_list_type_u8_twin_rust_async_sse =
      _wire_example_primitive_list_type_u8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_bool_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_bool_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_bool_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_bool_twin_sse');
  late final _wire_example_primitive_list_type_bool_twin_sse =
      _wire_example_primitive_list_type_bool_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_f32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_f32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_f32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f32_twin_sse');
  late final _wire_example_primitive_list_type_f32_twin_sse =
      _wire_example_primitive_list_type_f32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_f64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_f64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_f64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f64_twin_sse');
  late final _wire_example_primitive_list_type_f64_twin_sse =
      _wire_example_primitive_list_type_f64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_i16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i16_twin_sse');
  late final _wire_example_primitive_list_type_i16_twin_sse =
      _wire_example_primitive_list_type_i16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i32_twin_sse');
  late final _wire_example_primitive_list_type_i32_twin_sse =
      _wire_example_primitive_list_type_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_i64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i64_twin_sse');
  late final _wire_example_primitive_list_type_i64_twin_sse =
      _wire_example_primitive_list_type_i64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_i8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i8_twin_sse');
  late final _wire_example_primitive_list_type_i8_twin_sse =
      _wire_example_primitive_list_type_i8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_u16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u16_twin_sse');
  late final _wire_example_primitive_list_type_u16_twin_sse =
      _wire_example_primitive_list_type_u16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_u32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u32_twin_sse');
  late final _wire_example_primitive_list_type_u32_twin_sse =
      _wire_example_primitive_list_type_u32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_u64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u64_twin_sse');
  late final _wire_example_primitive_list_type_u64_twin_sse =
      _wire_example_primitive_list_type_u64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_list_type_u8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u8_twin_sse');
  late final _wire_example_primitive_list_type_u8_twin_sse =
      _wire_example_primitive_list_type_u8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_bool_twin_sync(
    ffi.Pointer<wire_cst_list_bool> arg,
  ) {
    return _wire_example_primitive_list_type_bool_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_bool_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_bool>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_bool_twin_sync');
  late final _wire_example_primitive_list_type_bool_twin_sync =
      _wire_example_primitive_list_type_bool_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_bool>)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_f32_twin_sync(
    ffi.Pointer<wire_cst_list_prim_f_32> arg,
  ) {
    return _wire_example_primitive_list_type_f32_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_f32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_f_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f32_twin_sync');
  late final _wire_example_primitive_list_type_f32_twin_sync =
      _wire_example_primitive_list_type_f32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_f_32>)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_f64_twin_sync(
    ffi.Pointer<wire_cst_list_prim_f_64> arg,
  ) {
    return _wire_example_primitive_list_type_f64_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_f64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_f_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f64_twin_sync');
  late final _wire_example_primitive_list_type_f64_twin_sync =
      _wire_example_primitive_list_type_f64_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_f_64>)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_i16_twin_sync(
    ffi.Pointer<wire_cst_list_prim_i_16> arg,
  ) {
    return _wire_example_primitive_list_type_i16_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i16_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_i_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i16_twin_sync');
  late final _wire_example_primitive_list_type_i16_twin_sync =
      _wire_example_primitive_list_type_i16_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_i_16>)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_i32_twin_sync(
    ffi.Pointer<wire_cst_list_prim_i_32> arg,
  ) {
    return _wire_example_primitive_list_type_i32_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i32_twin_sync');
  late final _wire_example_primitive_list_type_i32_twin_sync =
      _wire_example_primitive_list_type_i32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_i_32>)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_i64_twin_sync(
    ffi.Pointer<wire_cst_list_prim_i_64> arg,
  ) {
    return _wire_example_primitive_list_type_i64_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_i_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i64_twin_sync');
  late final _wire_example_primitive_list_type_i64_twin_sync =
      _wire_example_primitive_list_type_i64_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_i_64>)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_i8_twin_sync(
    ffi.Pointer<wire_cst_list_prim_i_8> arg,
  ) {
    return _wire_example_primitive_list_type_i8_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_i8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_i_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i8_twin_sync');
  late final _wire_example_primitive_list_type_i8_twin_sync =
      _wire_example_primitive_list_type_i8_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_i_8>)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_u16_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_16> arg,
  ) {
    return _wire_example_primitive_list_type_u16_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u16_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_16>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u16_twin_sync');
  late final _wire_example_primitive_list_type_u16_twin_sync =
      _wire_example_primitive_list_type_u16_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_16>)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_u32_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_32> arg,
  ) {
    return _wire_example_primitive_list_type_u32_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u32_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_32>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u32_twin_sync');
  late final _wire_example_primitive_list_type_u32_twin_sync =
      _wire_example_primitive_list_type_u32_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_32>)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_u64_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_64> arg,
  ) {
    return _wire_example_primitive_list_type_u64_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u64_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_64>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u64_twin_sync');
  late final _wire_example_primitive_list_type_u64_twin_sync =
      _wire_example_primitive_list_type_u64_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_prim_u_64>)>();

  WireSyncRust2DartDco wire_example_primitive_list_type_u8_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> arg,
  ) {
    return _wire_example_primitive_list_type_u8_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_list_type_u8_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u8_twin_sync');
  late final _wire_example_primitive_list_type_u8_twin_sync =
      _wire_example_primitive_list_type_u8_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_bool_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_bool_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_bool_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_bool_twin_sync_sse');
  late final _wire_example_primitive_list_type_bool_twin_sync_sse =
      _wire_example_primitive_list_type_bool_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_f32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_f32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_f32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f32_twin_sync_sse');
  late final _wire_example_primitive_list_type_f32_twin_sync_sse =
      _wire_example_primitive_list_type_f32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_f64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_f64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_f64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_f64_twin_sync_sse');
  late final _wire_example_primitive_list_type_f64_twin_sync_sse =
      _wire_example_primitive_list_type_f64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_i16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i16_twin_sync_sse');
  late final _wire_example_primitive_list_type_i16_twin_sync_sse =
      _wire_example_primitive_list_type_i16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i32_twin_sync_sse');
  late final _wire_example_primitive_list_type_i32_twin_sync_sse =
      _wire_example_primitive_list_type_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_i64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i64_twin_sync_sse');
  late final _wire_example_primitive_list_type_i64_twin_sync_sse =
      _wire_example_primitive_list_type_i64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_i8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_i8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_i8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_i8_twin_sync_sse');
  late final _wire_example_primitive_list_type_i8_twin_sync_sse =
      _wire_example_primitive_list_type_i8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_u16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u16_twin_sync_sse');
  late final _wire_example_primitive_list_type_u16_twin_sync_sse =
      _wire_example_primitive_list_type_u16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_u32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u32_twin_sync_sse');
  late final _wire_example_primitive_list_type_u32_twin_sync_sse =
      _wire_example_primitive_list_type_u32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_u64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u64_twin_sync_sse');
  late final _wire_example_primitive_list_type_u64_twin_sync_sse =
      _wire_example_primitive_list_type_u64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_list_type_u8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_list_type_u8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_list_type_u8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_list_type_u8_twin_sync_sse');
  late final _wire_example_primitive_list_type_u8_twin_sync_sse =
      _wire_example_primitive_list_type_u8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_isize_loopback_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_primitive_isize_loopback_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_primitive_isize_loopback_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.IntPtr)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_isize_loopback_twin_rust_async');
  late final _wire_primitive_isize_loopback_twin_rust_async =
      _wire_primitive_isize_loopback_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_primitive_types_twin_rust_async(
    int port_,
    int my_i32,
    int my_i64,
    double my_f64,
    bool my_bool,
  ) {
    return _wire_primitive_types_twin_rust_async(
      port_,
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_types_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Int32, ffi.Int64, ffi.Double, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_rust_async');
  late final _wire_primitive_types_twin_rust_async =
      _wire_primitive_types_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int, double, bool)>();

  void wire_primitive_u32_twin_rust_async(
    int port_,
    int my_u32,
  ) {
    return _wire_primitive_u32_twin_rust_async(
      port_,
      my_u32,
    );
  }

  late final _wire_primitive_u32_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_rust_async');
  late final _wire_primitive_u32_twin_rust_async =
      _wire_primitive_u32_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_primitive_usize_loopback_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_primitive_usize_loopback_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_primitive_usize_loopback_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_usize_loopback_twin_rust_async');
  late final _wire_primitive_usize_loopback_twin_rust_async =
      _wire_primitive_usize_loopback_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_primitive_isize_loopback_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_isize_loopback_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_isize_loopback_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_isize_loopback_twin_rust_async_sse');
  late final _wire_primitive_isize_loopback_twin_rust_async_sse =
      _wire_primitive_isize_loopback_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_types_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_types_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_types_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_rust_async_sse');
  late final _wire_primitive_types_twin_rust_async_sse =
      _wire_primitive_types_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_u32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_u32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_u32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_rust_async_sse');
  late final _wire_primitive_u32_twin_rust_async_sse =
      _wire_primitive_u32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_usize_loopback_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_usize_loopback_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_usize_loopback_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_usize_loopback_twin_rust_async_sse');
  late final _wire_primitive_usize_loopback_twin_rust_async_sse =
      _wire_primitive_usize_loopback_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_isize_loopback_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_isize_loopback_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_isize_loopback_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_isize_loopback_twin_sse');
  late final _wire_primitive_isize_loopback_twin_sse =
      _wire_primitive_isize_loopback_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_types_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_types_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_types_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_sse');
  late final _wire_primitive_types_twin_sse = _wire_primitive_types_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_u32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_u32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_u32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_sse');
  late final _wire_primitive_u32_twin_sse = _wire_primitive_u32_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_primitive_usize_loopback_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_usize_loopback_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_usize_loopback_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_usize_loopback_twin_sse');
  late final _wire_primitive_usize_loopback_twin_sse =
      _wire_primitive_usize_loopback_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_primitive_isize_loopback_twin_sync(
    int arg,
  ) {
    return _wire_primitive_isize_loopback_twin_sync(
      arg,
    );
  }

  late final _wire_primitive_isize_loopback_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.IntPtr)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_isize_loopback_twin_sync');
  late final _wire_primitive_isize_loopback_twin_sync =
      _wire_primitive_isize_loopback_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_primitive_types_twin_sync(
    int my_i32,
    int my_i64,
    double my_f64,
    bool my_bool,
  ) {
    return _wire_primitive_types_twin_sync(
      my_i32,
      my_i64,
      my_f64,
      my_bool,
    );
  }

  late final _wire_primitive_types_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Int32, ffi.Int64, ffi.Double, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_sync');
  late final _wire_primitive_types_twin_sync =
      _wire_primitive_types_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int, int, double, bool)>();

  WireSyncRust2DartDco wire_primitive_u32_twin_sync(
    int my_u32,
  ) {
    return _wire_primitive_u32_twin_sync(
      my_u32,
    );
  }

  late final _wire_primitive_u32_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_sync');
  late final _wire_primitive_u32_twin_sync = _wire_primitive_u32_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_primitive_usize_loopback_twin_sync(
    int arg,
  ) {
    return _wire_primitive_usize_loopback_twin_sync(
      arg,
    );
  }

  late final _wire_primitive_usize_loopback_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_usize_loopback_twin_sync');
  late final _wire_primitive_usize_loopback_twin_sync =
      _wire_primitive_usize_loopback_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartSse wire_primitive_isize_loopback_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_isize_loopback_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_isize_loopback_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_isize_loopback_twin_sync_sse');
  late final _wire_primitive_isize_loopback_twin_sync_sse =
      _wire_primitive_isize_loopback_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_primitive_types_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_types_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_types_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_types_twin_sync_sse');
  late final _wire_primitive_types_twin_sync_sse =
      _wire_primitive_types_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_primitive_u32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_u32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_u32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_u32_twin_sync_sse');
  late final _wire_primitive_u32_twin_sync_sse =
      _wire_primitive_u32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_primitive_usize_loopback_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_primitive_usize_loopback_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_primitive_usize_loopback_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_primitive_usize_loopback_twin_sync_sse');
  late final _wire_primitive_usize_loopback_twin_sync_sse =
      _wire_primitive_usize_loopback_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_bool_twin_rust_async(
    int port_,
    bool arg,
  ) {
    return _wire_example_primitive_type_bool_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_bool_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_bool_twin_rust_async');
  late final _wire_example_primitive_type_bool_twin_rust_async =
      _wire_example_primitive_type_bool_twin_rust_asyncPtr
          .asFunction<void Function(int, bool)>();

  void wire_example_primitive_type_f32_twin_rust_async(
    int port_,
    double arg,
  ) {
    return _wire_example_primitive_type_f32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_f32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Float)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f32_twin_rust_async');
  late final _wire_example_primitive_type_f32_twin_rust_async =
      _wire_example_primitive_type_f32_twin_rust_asyncPtr
          .asFunction<void Function(int, double)>();

  void wire_example_primitive_type_f64_twin_rust_async(
    int port_,
    double arg,
  ) {
    return _wire_example_primitive_type_f64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_f64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f64_twin_rust_async');
  late final _wire_example_primitive_type_f64_twin_rust_async =
      _wire_example_primitive_type_f64_twin_rust_asyncPtr
          .asFunction<void Function(int, double)>();

  void wire_example_primitive_type_i16_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_i16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_i16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int16)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i16_twin_rust_async');
  late final _wire_example_primitive_type_i16_twin_rust_async =
      _wire_example_primitive_type_i16_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_i32_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_i32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_i32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i32_twin_rust_async');
  late final _wire_example_primitive_type_i32_twin_rust_async =
      _wire_example_primitive_type_i32_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_i64_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_i64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_i64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i64_twin_rust_async');
  late final _wire_example_primitive_type_i64_twin_rust_async =
      _wire_example_primitive_type_i64_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_i8_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_i8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_i8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int8)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i8_twin_rust_async');
  late final _wire_example_primitive_type_i8_twin_rust_async =
      _wire_example_primitive_type_i8_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_u16_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_u16_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_u16_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint16)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u16_twin_rust_async');
  late final _wire_example_primitive_type_u16_twin_rust_async =
      _wire_example_primitive_type_u16_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_u32_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_u32_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_u32_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u32_twin_rust_async');
  late final _wire_example_primitive_type_u32_twin_rust_async =
      _wire_example_primitive_type_u32_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_u64_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_u64_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_u64_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u64_twin_rust_async');
  late final _wire_example_primitive_type_u64_twin_rust_async =
      _wire_example_primitive_type_u64_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_u8_twin_rust_async(
    int port_,
    int arg,
  ) {
    return _wire_example_primitive_type_u8_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_example_primitive_type_u8_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint8)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u8_twin_rust_async');
  late final _wire_example_primitive_type_u8_twin_rust_async =
      _wire_example_primitive_type_u8_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_example_primitive_type_bool_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_bool_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_bool_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_bool_twin_rust_async_sse');
  late final _wire_example_primitive_type_bool_twin_rust_async_sse =
      _wire_example_primitive_type_bool_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_f32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_f32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_f32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f32_twin_rust_async_sse');
  late final _wire_example_primitive_type_f32_twin_rust_async_sse =
      _wire_example_primitive_type_f32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_f64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_f64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_f64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f64_twin_rust_async_sse');
  late final _wire_example_primitive_type_f64_twin_rust_async_sse =
      _wire_example_primitive_type_f64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_i16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i16_twin_rust_async_sse');
  late final _wire_example_primitive_type_i16_twin_rust_async_sse =
      _wire_example_primitive_type_i16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_i32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i32_twin_rust_async_sse');
  late final _wire_example_primitive_type_i32_twin_rust_async_sse =
      _wire_example_primitive_type_i32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_i64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i64_twin_rust_async_sse');
  late final _wire_example_primitive_type_i64_twin_rust_async_sse =
      _wire_example_primitive_type_i64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_i8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i8_twin_rust_async_sse');
  late final _wire_example_primitive_type_i8_twin_rust_async_sse =
      _wire_example_primitive_type_i8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_u16_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u16_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u16_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u16_twin_rust_async_sse');
  late final _wire_example_primitive_type_u16_twin_rust_async_sse =
      _wire_example_primitive_type_u16_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_u32_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u32_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u32_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u32_twin_rust_async_sse');
  late final _wire_example_primitive_type_u32_twin_rust_async_sse =
      _wire_example_primitive_type_u32_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_u64_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u64_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u64_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u64_twin_rust_async_sse');
  late final _wire_example_primitive_type_u64_twin_rust_async_sse =
      _wire_example_primitive_type_u64_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_u8_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u8_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u8_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u8_twin_rust_async_sse');
  late final _wire_example_primitive_type_u8_twin_rust_async_sse =
      _wire_example_primitive_type_u8_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_bool_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_bool_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_bool_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_bool_twin_sse');
  late final _wire_example_primitive_type_bool_twin_sse =
      _wire_example_primitive_type_bool_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_f32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_f32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_f32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f32_twin_sse');
  late final _wire_example_primitive_type_f32_twin_sse =
      _wire_example_primitive_type_f32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_f64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_f64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_f64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f64_twin_sse');
  late final _wire_example_primitive_type_f64_twin_sse =
      _wire_example_primitive_type_f64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_i16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i16_twin_sse');
  late final _wire_example_primitive_type_i16_twin_sse =
      _wire_example_primitive_type_i16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_i32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i32_twin_sse');
  late final _wire_example_primitive_type_i32_twin_sse =
      _wire_example_primitive_type_i32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_i64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i64_twin_sse');
  late final _wire_example_primitive_type_i64_twin_sse =
      _wire_example_primitive_type_i64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_i8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i8_twin_sse');
  late final _wire_example_primitive_type_i8_twin_sse =
      _wire_example_primitive_type_i8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_u16_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u16_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u16_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u16_twin_sse');
  late final _wire_example_primitive_type_u16_twin_sse =
      _wire_example_primitive_type_u16_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_u32_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u32_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u32_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u32_twin_sse');
  late final _wire_example_primitive_type_u32_twin_sse =
      _wire_example_primitive_type_u32_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_u64_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u64_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u64_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u64_twin_sse');
  late final _wire_example_primitive_type_u64_twin_sse =
      _wire_example_primitive_type_u64_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_example_primitive_type_u8_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u8_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u8_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u8_twin_sse');
  late final _wire_example_primitive_type_u8_twin_sse =
      _wire_example_primitive_type_u8_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_example_primitive_type_bool_twin_sync(
    bool arg,
  ) {
    return _wire_example_primitive_type_bool_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_bool_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Bool)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_bool_twin_sync');
  late final _wire_example_primitive_type_bool_twin_sync =
      _wire_example_primitive_type_bool_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(bool)>();

  WireSyncRust2DartDco wire_example_primitive_type_f32_twin_sync(
    double arg,
  ) {
    return _wire_example_primitive_type_f32_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_f32_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Float)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f32_twin_sync');
  late final _wire_example_primitive_type_f32_twin_sync =
      _wire_example_primitive_type_f32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(double)>();

  WireSyncRust2DartDco wire_example_primitive_type_f64_twin_sync(
    double arg,
  ) {
    return _wire_example_primitive_type_f64_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_f64_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Double)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f64_twin_sync');
  late final _wire_example_primitive_type_f64_twin_sync =
      _wire_example_primitive_type_f64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(double)>();

  WireSyncRust2DartDco wire_example_primitive_type_i16_twin_sync(
    int arg,
  ) {
    return _wire_example_primitive_type_i16_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_i16_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int16)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i16_twin_sync');
  late final _wire_example_primitive_type_i16_twin_sync =
      _wire_example_primitive_type_i16_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_primitive_type_i32_twin_sync(
    int arg,
  ) {
    return _wire_example_primitive_type_i32_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_i32_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i32_twin_sync');
  late final _wire_example_primitive_type_i32_twin_sync =
      _wire_example_primitive_type_i32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_primitive_type_i64_twin_sync(
    int arg,
  ) {
    return _wire_example_primitive_type_i64_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_i64_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i64_twin_sync');
  late final _wire_example_primitive_type_i64_twin_sync =
      _wire_example_primitive_type_i64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_primitive_type_i8_twin_sync(
    int arg,
  ) {
    return _wire_example_primitive_type_i8_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_i8_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int8)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i8_twin_sync');
  late final _wire_example_primitive_type_i8_twin_sync =
      _wire_example_primitive_type_i8_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_primitive_type_u16_twin_sync(
    int arg,
  ) {
    return _wire_example_primitive_type_u16_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_u16_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint16)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u16_twin_sync');
  late final _wire_example_primitive_type_u16_twin_sync =
      _wire_example_primitive_type_u16_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_primitive_type_u32_twin_sync(
    int arg,
  ) {
    return _wire_example_primitive_type_u32_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_u32_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u32_twin_sync');
  late final _wire_example_primitive_type_u32_twin_sync =
      _wire_example_primitive_type_u32_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_primitive_type_u64_twin_sync(
    int arg,
  ) {
    return _wire_example_primitive_type_u64_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_u64_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u64_twin_sync');
  late final _wire_example_primitive_type_u64_twin_sync =
      _wire_example_primitive_type_u64_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_example_primitive_type_u8_twin_sync(
    int arg,
  ) {
    return _wire_example_primitive_type_u8_twin_sync(
      arg,
    );
  }

  late final _wire_example_primitive_type_u8_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint8)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u8_twin_sync');
  late final _wire_example_primitive_type_u8_twin_sync =
      _wire_example_primitive_type_u8_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartSse wire_example_primitive_type_bool_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_bool_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_bool_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_bool_twin_sync_sse');
  late final _wire_example_primitive_type_bool_twin_sync_sse =
      _wire_example_primitive_type_bool_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_type_f32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_f32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_f32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f32_twin_sync_sse');
  late final _wire_example_primitive_type_f32_twin_sync_sse =
      _wire_example_primitive_type_f32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_type_f64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_f64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_f64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_f64_twin_sync_sse');
  late final _wire_example_primitive_type_f64_twin_sync_sse =
      _wire_example_primitive_type_f64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_type_i16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i16_twin_sync_sse');
  late final _wire_example_primitive_type_i16_twin_sync_sse =
      _wire_example_primitive_type_i16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_type_i32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i32_twin_sync_sse');
  late final _wire_example_primitive_type_i32_twin_sync_sse =
      _wire_example_primitive_type_i32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_type_i64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i64_twin_sync_sse');
  late final _wire_example_primitive_type_i64_twin_sync_sse =
      _wire_example_primitive_type_i64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_type_i8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_i8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_i8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_i8_twin_sync_sse');
  late final _wire_example_primitive_type_i8_twin_sync_sse =
      _wire_example_primitive_type_i8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_type_u16_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u16_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u16_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u16_twin_sync_sse');
  late final _wire_example_primitive_type_u16_twin_sync_sse =
      _wire_example_primitive_type_u16_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_type_u32_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u32_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u32_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u32_twin_sync_sse');
  late final _wire_example_primitive_type_u32_twin_sync_sse =
      _wire_example_primitive_type_u32_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_type_u64_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u64_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u64_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u64_twin_sync_sse');
  late final _wire_example_primitive_type_u64_twin_sync_sse =
      _wire_example_primitive_type_u64_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_example_primitive_type_u8_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_example_primitive_type_u8_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_example_primitive_type_u8_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_example_primitive_type_u8_twin_sync_sse');
  late final _wire_example_primitive_type_u8_twin_sync_sse =
      _wire_example_primitive_type_u8_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_more_than_just_one_raw_string_struct_twin_rust_async(
    int port_,
  ) {
    return _wire_test_more_than_just_one_raw_string_struct_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_rust_async');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_rust_async =
      _wire_test_more_than_just_one_raw_string_struct_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_raw_string_item_struct_twin_rust_async(
    int port_,
  ) {
    return _wire_test_raw_string_item_struct_twin_rust_async(
      port_,
    );
  }

  late final _wire_test_raw_string_item_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_rust_async');
  late final _wire_test_raw_string_item_struct_twin_rust_async =
      _wire_test_raw_string_item_struct_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_rust_async_sse =
      _wire_test_more_than_just_one_raw_string_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_item_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_item_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_item_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_rust_async_sse');
  late final _wire_test_raw_string_item_struct_twin_rust_async_sse =
      _wire_test_raw_string_item_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_more_than_just_one_raw_string_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_more_than_just_one_raw_string_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_sse');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_sse =
      _wire_test_more_than_just_one_raw_string_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_raw_string_item_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_item_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_item_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_sse');
  late final _wire_test_raw_string_item_struct_twin_sse =
      _wire_test_raw_string_item_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_test_more_than_just_one_raw_string_struct_twin_sync() {
    return _wire_test_more_than_just_one_raw_string_struct_twin_sync();
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_sync');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_sync =
      _wire_test_more_than_just_one_raw_string_struct_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_test_raw_string_item_struct_twin_sync() {
    return _wire_test_raw_string_item_struct_twin_sync();
  }

  late final _wire_test_raw_string_item_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_sync');
  late final _wire_test_raw_string_item_struct_twin_sync =
      _wire_test_raw_string_item_struct_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartSse
      wire_test_more_than_just_one_raw_string_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_more_than_just_one_raw_string_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_sync_sse');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_sync_sse =
      _wire_test_more_than_just_one_raw_string_struct_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_raw_string_item_struct_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_raw_string_item_struct_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_raw_string_item_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_sync_sse');
  late final _wire_test_raw_string_item_struct_twin_sync_sse =
      _wire_test_raw_string_item_struct_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_sse =
      _wire_NonCloneSimpleTwinSse_instance_method_arg_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_sse =
      _wire_NonCloneSimpleTwinSse_instance_method_arg_mut_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_sse =
      _wire_NonCloneSimpleTwinSse_instance_method_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_sse =
      _wire_NonCloneSimpleTwinSse_instance_method_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_new_custom_name_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_new_custom_name_twin_sse =
      _wire_NonCloneSimpleTwinSse_new_custom_name_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_new_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_new_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_new_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_new_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_new_twin_sse =
      _wire_NonCloneSimpleTwinSse_new_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_new_with_result_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_new_with_result_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_new_with_result_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_new_with_result_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_new_with_result_twin_sse =
      _wire_NonCloneSimpleTwinSse_new_with_result_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_sse =
      _wire_NonCloneSimpleTwinSse_static_method_arg_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_sse =
      _wire_NonCloneSimpleTwinSse_static_method_arg_mut_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_sse =
      _wire_NonCloneSimpleTwinSse_static_method_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSse_static_method_return_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse');
  late final _wire_NonCloneSimpleTwinSse_static_method_return_own_twin_sse =
      _wire_NonCloneSimpleTwinSse_static_method_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_sse');
  late final _wire_rust_auto_opaque_arg_borrow_twin_sse =
      _wire_rust_auto_opaque_arg_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_mut_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_sse');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sse =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_sse');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sse =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_sse');
  late final _wire_rust_auto_opaque_arg_own_twin_sse =
      _wire_rust_auto_opaque_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_callable_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_sse');
  late final _wire_rust_auto_opaque_callable_arg_twin_sse =
      _wire_rust_auto_opaque_callable_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_callable_return_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_sse');
  late final _wire_rust_auto_opaque_callable_return_twin_sse =
      _wire_rust_auto_opaque_callable_return_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sse =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_plus_sign_arg_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_sse');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sse =
      _wire_rust_auto_opaque_plus_sign_arg_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_plus_sign_return_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_sse');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_sse =
      _wire_rust_auto_opaque_plus_sign_return_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_sse');
  late final _wire_rust_auto_opaque_return_own_twin_sse =
      _wire_rust_auto_opaque_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sse =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sse =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_arg_own_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sse =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_sse');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sse =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_sse');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sse =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_rust_auto_opaque_two_args_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_sse');
  late final _wire_rust_auto_opaque_two_args_twin_sse =
      _wire_rust_auto_opaque_two_args_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync(
    ffi.Pointer<ffi.Void> that,
  ) {
    return _wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_sync =
      _wire_NonCloneSimpleTwinSync_instance_method_arg_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync(
    ffi.Pointer<ffi.Void> that,
  ) {
    return _wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_sync =
      _wire_NonCloneSimpleTwinSync_instance_method_arg_mut_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync(
    ffi.Pointer<ffi.Void> that,
  ) {
    return _wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_sync =
      _wire_NonCloneSimpleTwinSync_instance_method_arg_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync(
    ffi.Pointer<ffi.Void> that,
  ) {
    return _wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync(
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_sync =
      _wire_NonCloneSimpleTwinSync_instance_method_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync() {
    return _wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync();
  }

  late final _wire_NonCloneSimpleTwinSync_new_custom_name_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_new_custom_name_twin_sync =
      _wire_NonCloneSimpleTwinSync_new_custom_name_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_NonCloneSimpleTwinSync_new_twin_sync() {
    return _wire_NonCloneSimpleTwinSync_new_twin_sync();
  }

  late final _wire_NonCloneSimpleTwinSync_new_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_new_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_new_twin_sync =
      _wire_NonCloneSimpleTwinSync_new_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_NonCloneSimpleTwinSync_new_with_result_twin_sync() {
    return _wire_NonCloneSimpleTwinSync_new_with_result_twin_sync();
  }

  late final _wire_NonCloneSimpleTwinSync_new_with_result_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_new_with_result_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_new_with_result_twin_sync =
      _wire_NonCloneSimpleTwinSync_new_with_result_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync(
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync(
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_sync =
      _wire_NonCloneSimpleTwinSync_static_method_arg_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync(
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync(
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_sync =
      _wire_NonCloneSimpleTwinSync_static_method_arg_mut_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync(
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync(
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_sync =
      _wire_NonCloneSimpleTwinSync_static_method_arg_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco
      wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync() {
    return _wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync();
  }

  late final _wire_NonCloneSimpleTwinSync_static_method_return_own_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync');
  late final _wire_NonCloneSimpleTwinSync_static_method_return_own_twin_sync =
      _wire_NonCloneSimpleTwinSync_static_method_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_borrow_twin_sync(
    ffi.Pointer<ffi.Void> arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_sync');
  late final _wire_rust_auto_opaque_arg_borrow_twin_sync =
      _wire_rust_auto_opaque_arg_borrow_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_mut_borrow_twin_sync(
    ffi.Pointer<ffi.Void> arg,
    int expect,
    int adder,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_sync(
      arg,
      expect,
      adder,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_sync');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sync =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>, int, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_own_and_return_own_twin_sync(
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_sync');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_arg_own_twin_sync(
    ffi.Pointer<ffi.Void> arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_sync');
  late final _wire_rust_auto_opaque_arg_own_twin_sync =
      _wire_rust_auto_opaque_arg_own_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>, int)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_callable_arg_twin_sync(
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_sync');
  late final _wire_rust_auto_opaque_callable_arg_twin_sync =
      _wire_rust_auto_opaque_callable_arg_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_callable_return_twin_sync() {
    return _wire_rust_auto_opaque_callable_return_twin_sync();
  }

  late final _wire_rust_auto_opaque_callable_return_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_sync');
  late final _wire_rust_auto_opaque_callable_return_twin_sync =
      _wire_rust_auto_opaque_callable_return_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync(
    ffi.Pointer<ffi.Void> a,
    ffi.Pointer<wire_cst_list_prim_u_8> b,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync(
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Void>, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_plus_sign_arg_twin_sync(
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_sync');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sync =
      _wire_rust_auto_opaque_plus_sign_arg_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_plus_sign_return_twin_sync() {
    return _wire_rust_auto_opaque_plus_sign_return_twin_sync();
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_sync');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_sync =
      _wire_rust_auto_opaque_plus_sign_return_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_return_own_twin_sync(
    int initial,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_sync(
      initial,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_sync');
  late final _wire_rust_auto_opaque_return_own_twin_sync =
      _wire_rust_auto_opaque_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sync(
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sync');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sync =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sync(
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sync');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sync =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync(
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync(
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync() {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync();
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync(
    ffi.Pointer<ffi.Void> arg,
    ffi.Pointer<wire_cst_list_prim_u_8> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Void>, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync(
    ffi.Pointer<ffi.Void> arg,
    ffi.Pointer<wire_cst_list_prim_u_8> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>,
                      ffi.Pointer<wire_cst_list_prim_u_8>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_syncPtr
          .asFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_rust_auto_opaque_trait_object_arg_own_twin_sync(
    ffi.Pointer<ffi.Void> arg,
    ffi.Pointer<wire_cst_list_prim_u_8> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_sync(
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Void>, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_sync');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sync =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync() {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync();
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_sync');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync() {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync();
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_sync');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_rust_auto_opaque_two_args_twin_sync(
    ffi.Pointer<ffi.Void> a,
    ffi.Pointer<ffi.Void> b,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_sync(
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_sync');
  late final _wire_rust_auto_opaque_two_args_twin_sync =
      _wire_rust_auto_opaque_two_args_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_mut_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_instance_method_arg_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_instance_method_return_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_new_custom_name_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_new_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_new_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_new_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_new_with_result_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_static_method_arg_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_static_method_arg_mut_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_static_method_arg_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse');
  late final _wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_sse =
      _wire_NonCloneSimpleTwinSyncSse_static_method_return_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_arg_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_arg_borrow_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_sse =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_arg_own_twin_sync_sse =
      _wire_rust_auto_opaque_arg_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_callable_arg_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_sync_sse');
  late final _wire_rust_auto_opaque_callable_arg_twin_sync_sse =
      _wire_rust_auto_opaque_callable_arg_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_callable_return_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_sync_sse');
  late final _wire_rust_auto_opaque_callable_return_twin_sync_sse =
      _wire_rust_auto_opaque_callable_return_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_sse =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_sync_sse =
      _wire_rust_auto_opaque_plus_sign_arg_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_plus_sign_return_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_sync_sse');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_sync_sse =
      _wire_rust_auto_opaque_plus_sign_return_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_return_own_twin_sync_sse =
      _wire_rust_auto_opaque_return_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_sse =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_sse =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_sse =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_sse =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse
      wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  WireSyncRust2DartSse Function(
                      ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_sse =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_sync_ssePtr
          .asFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_rust_auto_opaque_two_args_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_sync_sse');
  late final _wire_rust_auto_opaque_two_args_twin_sync_sse =
      _wire_rust_auto_opaque_two_args_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_frb_sync_generator_test_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_sync_generator_test_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_sync_generator_test_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_sync_generator_test_twin_sse');
  late final _wire_frb_sync_generator_test_twin_sse =
      _wire_frb_sync_generator_test_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_create_non_clone_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_create_non_clone_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_create_non_clone_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_create_non_clone_twin_sse');
  late final _wire_sync_create_non_clone_twin_sse =
      _wire_sync_create_non_clone_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_create_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_create_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_create_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_create_opaque_twin_sse');
  late final _wire_sync_create_opaque_twin_sse =
      _wire_sync_create_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_create_sync_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_create_sync_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_create_sync_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_create_sync_opaque_twin_sse');
  late final _wire_sync_create_sync_opaque_twin_sse =
      _wire_sync_create_sync_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_option_rust_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_option_rust_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_option_rust_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_rust_opaque_twin_sse');
  late final _wire_sync_option_rust_opaque_twin_sse =
      _wire_sync_option_rust_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_sync_run_opaque_twin_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_sync_run_opaque_twin_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_sync_run_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_sync_run_opaque_twin_sse');
  late final _wire_sync_run_opaque_twin_sse =
      _wire_sync_run_opaque_twin_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_array_opaque_enum_twin_rust_async(
    int port_,
  ) {
    return _wire_create_array_opaque_enum_twin_rust_async(
      port_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_rust_async');
  late final _wire_create_array_opaque_enum_twin_rust_async =
      _wire_create_array_opaque_enum_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_create_nested_opaque_twin_rust_async(
    int port_,
  ) {
    return _wire_create_nested_opaque_twin_rust_async(
      port_,
    );
  }

  late final _wire_create_nested_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_rust_async');
  late final _wire_create_nested_opaque_twin_rust_async =
      _wire_create_nested_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_create_opaque_twin_rust_async(
    int port_,
  ) {
    return _wire_create_opaque_twin_rust_async(
      port_,
    );
  }

  late final _wire_create_opaque_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_create_opaque_twin_rust_async');
  late final _wire_create_opaque_twin_rust_async =
      _wire_create_opaque_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_create_option_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_create_option_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_create_option_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_rust_async');
  late final _wire_create_option_opaque_twin_rust_async =
      _wire_create_option_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  void wire_create_sync_opaque_twin_rust_async(
    int port_,
  ) {
    return _wire_create_sync_opaque_twin_rust_async(
      port_,
    );
  }

  late final _wire_create_sync_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_sync_opaque_twin_rust_async');
  late final _wire_create_sync_opaque_twin_rust_async =
      _wire_create_sync_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_frb_generator_test_twin_rust_async(
    int port_,
  ) {
    return _wire_frb_generator_test_twin_rust_async(
      port_,
    );
  }

  late final _wire_frb_generator_test_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_rust_async');
  late final _wire_frb_generator_test_twin_rust_async =
      _wire_frb_generator_test_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_opaque_array_run_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_hide_data> data,
  ) {
    return _wire_opaque_array_run_twin_rust_async(
      port_,
      data,
    );
  }

  late final _wire_opaque_array_run_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_rust_async');
  late final _wire_opaque_array_run_twin_rust_async =
      _wire_opaque_array_run_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>();

  void wire_opaque_array_twin_rust_async(
    int port_,
  ) {
    return _wire_opaque_array_twin_rust_async(
      port_,
    );
  }

  late final _wire_opaque_array_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_array_twin_rust_async');
  late final _wire_opaque_array_twin_rust_async =
      _wire_opaque_array_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_opaque_vec_run_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_hide_data> data,
  ) {
    return _wire_opaque_vec_run_twin_rust_async(
      port_,
      data,
    );
  }

  late final _wire_opaque_vec_run_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_rust_async');
  late final _wire_opaque_vec_run_twin_rust_async =
      _wire_opaque_vec_run_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>();

  void wire_opaque_vec_twin_rust_async(
    int port_,
  ) {
    return _wire_opaque_vec_twin_rust_async(
      port_,
    );
  }

  late final _wire_opaque_vec_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_rust_async');
  late final _wire_opaque_vec_twin_rust_async =
      _wire_opaque_vec_twin_rust_asyncPtr.asFunction<void Function(int)>();

  void wire_run_enum_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_enum_opaque_twin_rust_async> opaque,
  ) {
    return _wire_run_enum_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_run_enum_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_rust_async');
  late final _wire_run_enum_opaque_twin_rust_async =
      _wire_run_enum_opaque_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_enum_opaque_twin_rust_async>)>();

  void wire_run_nested_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_opaque_nested_twin_rust_async> opaque,
  ) {
    return _wire_run_nested_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_run_nested_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_rust_async');
  late final _wire_run_nested_opaque_twin_rust_async =
      _wire_run_nested_opaque_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_opaque_nested_twin_rust_async>)>();

  void wire_run_non_clone_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> clone,
  ) {
    return _wire_run_non_clone_twin_rust_async(
      port_,
      clone,
    );
  }

  late final _wire_run_non_clone_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_rust_async');
  late final _wire_run_non_clone_twin_rust_async =
      _wire_run_non_clone_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_run_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_run_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_rust_async');
  late final _wire_run_opaque_twin_rust_async =
      _wire_run_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_run_opaque_with_delay_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_run_opaque_with_delay_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_with_delay_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_rust_async');
  late final _wire_run_opaque_with_delay_twin_rust_async =
      _wire_run_opaque_with_delay_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_unwrap_rust_opaque_twin_rust_async(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_unwrap_rust_opaque_twin_rust_async(
      port_,
      opaque,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_rust_async');
  late final _wire_unwrap_rust_opaque_twin_rust_async =
      _wire_unwrap_rust_opaque_twin_rust_asyncPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_create_array_opaque_enum_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_array_opaque_enum_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_rust_async_sse');
  late final _wire_create_array_opaque_enum_twin_rust_async_sse =
      _wire_create_array_opaque_enum_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_nested_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_rust_async_sse');
  late final _wire_create_nested_opaque_twin_rust_async_sse =
      _wire_create_nested_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_opaque_twin_rust_async_sse');
  late final _wire_create_opaque_twin_rust_async_sse =
      _wire_create_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_option_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_option_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_option_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_rust_async_sse');
  late final _wire_create_option_opaque_twin_rust_async_sse =
      _wire_create_option_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_sync_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_sync_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_sync_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_sync_opaque_twin_rust_async_sse');
  late final _wire_create_sync_opaque_twin_rust_async_sse =
      _wire_create_sync_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_frb_generator_test_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_generator_test_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_generator_test_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_rust_async_sse');
  late final _wire_frb_generator_test_twin_rust_async_sse =
      _wire_frb_generator_test_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_run_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_run_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_run_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_rust_async_sse');
  late final _wire_opaque_array_run_twin_rust_async_sse =
      _wire_opaque_array_run_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_twin_rust_async_sse');
  late final _wire_opaque_array_twin_rust_async_sse =
      _wire_opaque_array_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_run_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_run_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_run_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_rust_async_sse');
  late final _wire_opaque_vec_run_twin_rust_async_sse =
      _wire_opaque_vec_run_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_rust_async_sse');
  late final _wire_opaque_vec_twin_rust_async_sse =
      _wire_opaque_vec_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_enum_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_enum_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_enum_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_rust_async_sse');
  late final _wire_run_enum_opaque_twin_rust_async_sse =
      _wire_run_enum_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_nested_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_nested_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_nested_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_rust_async_sse');
  late final _wire_run_nested_opaque_twin_rust_async_sse =
      _wire_run_nested_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_non_clone_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_non_clone_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_non_clone_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_rust_async_sse');
  late final _wire_run_non_clone_twin_rust_async_sse =
      _wire_run_non_clone_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_rust_async_sse');
  late final _wire_run_opaque_twin_rust_async_sse =
      _wire_run_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_with_delay_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_with_delay_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_with_delay_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_rust_async_sse');
  late final _wire_run_opaque_with_delay_twin_rust_async_sse =
      _wire_run_opaque_with_delay_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_unwrap_rust_opaque_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_rust_opaque_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_rust_async_sse');
  late final _wire_unwrap_rust_opaque_twin_rust_async_sse =
      _wire_unwrap_rust_opaque_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_array_opaque_enum_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_array_opaque_enum_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_sse');
  late final _wire_create_array_opaque_enum_twin_sse =
      _wire_create_array_opaque_enum_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_nested_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_sse');
  late final _wire_create_nested_opaque_twin_sse =
      _wire_create_nested_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_opaque_twin_sse');
  late final _wire_create_opaque_twin_sse = _wire_create_opaque_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_option_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_option_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_option_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_sse');
  late final _wire_create_option_opaque_twin_sse =
      _wire_create_option_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_create_sync_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_sync_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_sync_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_sync_opaque_twin_sse');
  late final _wire_create_sync_opaque_twin_sse =
      _wire_create_sync_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_frb_generator_test_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_generator_test_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_generator_test_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_sse');
  late final _wire_frb_generator_test_twin_sse =
      _wire_frb_generator_test_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_run_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_run_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_run_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_sse');
  late final _wire_opaque_array_run_twin_sse =
      _wire_opaque_array_run_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_array_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_twin_sse');
  late final _wire_opaque_array_twin_sse = _wire_opaque_array_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_run_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_run_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_run_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_sse');
  late final _wire_opaque_vec_run_twin_sse = _wire_opaque_vec_run_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_opaque_vec_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_sse');
  late final _wire_opaque_vec_twin_sse = _wire_opaque_vec_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_enum_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_enum_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_enum_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_sse');
  late final _wire_run_enum_opaque_twin_sse = _wire_run_enum_opaque_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_nested_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_nested_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_nested_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_sse');
  late final _wire_run_nested_opaque_twin_sse =
      _wire_run_nested_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_non_clone_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_non_clone_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_non_clone_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_sse');
  late final _wire_run_non_clone_twin_sse = _wire_run_non_clone_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_sse');
  late final _wire_run_opaque_twin_sse = _wire_run_opaque_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_run_opaque_with_delay_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_with_delay_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_with_delay_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_sse');
  late final _wire_run_opaque_with_delay_twin_sse =
      _wire_run_opaque_with_delay_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_unwrap_rust_opaque_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_rust_opaque_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_sse');
  late final _wire_unwrap_rust_opaque_twin_sse =
      _wire_unwrap_rust_opaque_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_create_array_opaque_enum_twin_sync() {
    return _wire_create_array_opaque_enum_twin_sync();
  }

  late final _wire_create_array_opaque_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_sync');
  late final _wire_create_array_opaque_enum_twin_sync =
      _wire_create_array_opaque_enum_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_create_nested_opaque_twin_sync() {
    return _wire_create_nested_opaque_twin_sync();
  }

  late final _wire_create_nested_opaque_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_sync');
  late final _wire_create_nested_opaque_twin_sync =
      _wire_create_nested_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_create_opaque_twin_sync() {
    return _wire_create_opaque_twin_sync();
  }

  late final _wire_create_opaque_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_create_opaque_twin_sync');
  late final _wire_create_opaque_twin_sync = _wire_create_opaque_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_create_option_opaque_twin_sync(
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_create_option_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_create_option_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_sync');
  late final _wire_create_option_opaque_twin_sync =
      _wire_create_option_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  WireSyncRust2DartDco wire_create_sync_opaque_twin_sync() {
    return _wire_create_sync_opaque_twin_sync();
  }

  late final _wire_create_sync_opaque_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_create_sync_opaque_twin_sync');
  late final _wire_create_sync_opaque_twin_sync =
      _wire_create_sync_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_frb_generator_test_twin_sync() {
    return _wire_frb_generator_test_twin_sync();
  }

  late final _wire_frb_generator_test_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_sync');
  late final _wire_frb_generator_test_twin_sync =
      _wire_frb_generator_test_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_opaque_array_run_twin_sync(
    ffi.Pointer<wire_cst_list_RustOpaque_hide_data> data,
  ) {
    return _wire_opaque_array_run_twin_sync(
      data,
    );
  }

  late final _wire_opaque_array_run_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_sync');
  late final _wire_opaque_array_run_twin_sync =
      _wire_opaque_array_run_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>();

  WireSyncRust2DartDco wire_opaque_array_twin_sync() {
    return _wire_opaque_array_twin_sync();
  }

  late final _wire_opaque_array_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_opaque_array_twin_sync');
  late final _wire_opaque_array_twin_sync = _wire_opaque_array_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_opaque_vec_run_twin_sync(
    ffi.Pointer<wire_cst_list_RustOpaque_hide_data> data,
  ) {
    return _wire_opaque_vec_run_twin_sync(
      data,
    );
  }

  late final _wire_opaque_vec_run_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_sync');
  late final _wire_opaque_vec_run_twin_sync =
      _wire_opaque_vec_run_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>();

  WireSyncRust2DartDco wire_opaque_vec_twin_sync() {
    return _wire_opaque_vec_twin_sync();
  }

  late final _wire_opaque_vec_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_sync');
  late final _wire_opaque_vec_twin_sync = _wire_opaque_vec_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_run_enum_opaque_twin_sync(
    ffi.Pointer<wire_cst_enum_opaque_twin_sync> opaque,
  ) {
    return _wire_run_enum_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_run_enum_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_enum_opaque_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_sync');
  late final _wire_run_enum_opaque_twin_sync =
      _wire_run_enum_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_enum_opaque_twin_sync>)>();

  WireSyncRust2DartDco wire_run_nested_opaque_twin_sync(
    ffi.Pointer<wire_cst_opaque_nested_twin_sync> opaque,
  ) {
    return _wire_run_nested_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_run_nested_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_opaque_nested_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_sync');
  late final _wire_run_nested_opaque_twin_sync =
      _wire_run_nested_opaque_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_opaque_nested_twin_sync>)>();

  WireSyncRust2DartDco wire_run_non_clone_twin_sync(
    ffi.Pointer<ffi.Void> clone,
  ) {
    return _wire_run_non_clone_twin_sync(
      clone,
    );
  }

  late final _wire_run_non_clone_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_sync');
  late final _wire_run_non_clone_twin_sync = _wire_run_non_clone_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_run_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_run_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_run_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_sync');
  late final _wire_run_opaque_twin_sync = _wire_run_opaque_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_run_opaque_with_delay_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_run_opaque_with_delay_twin_sync(
      opaque,
    );
  }

  late final _wire_run_opaque_with_delay_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_sync');
  late final _wire_run_opaque_with_delay_twin_sync =
      _wire_run_opaque_with_delay_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_unwrap_rust_opaque_twin_sync(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_unwrap_rust_opaque_twin_sync(
      opaque,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_sync');
  late final _wire_unwrap_rust_opaque_twin_sync =
      _wire_unwrap_rust_opaque_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartSse wire_create_array_opaque_enum_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_array_opaque_enum_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_sync_sse');
  late final _wire_create_array_opaque_enum_twin_sync_sse =
      _wire_create_array_opaque_enum_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_nested_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_nested_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_nested_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_sync_sse');
  late final _wire_create_nested_opaque_twin_sync_sse =
      _wire_create_nested_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_opaque_twin_sync_sse');
  late final _wire_create_opaque_twin_sync_sse =
      _wire_create_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_option_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_option_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_option_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_sync_sse');
  late final _wire_create_option_opaque_twin_sync_sse =
      _wire_create_option_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_create_sync_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_create_sync_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_create_sync_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_create_sync_opaque_twin_sync_sse');
  late final _wire_create_sync_opaque_twin_sync_sse =
      _wire_create_sync_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_frb_generator_test_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_frb_generator_test_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_frb_generator_test_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_sync_sse');
  late final _wire_frb_generator_test_twin_sync_sse =
      _wire_frb_generator_test_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_array_run_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_run_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_run_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_sync_sse');
  late final _wire_opaque_array_run_twin_sync_sse =
      _wire_opaque_array_run_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_array_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_array_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_array_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_twin_sync_sse');
  late final _wire_opaque_array_twin_sync_sse =
      _wire_opaque_array_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_vec_run_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_run_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_run_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_sync_sse');
  late final _wire_opaque_vec_run_twin_sync_sse =
      _wire_opaque_vec_run_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_opaque_vec_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_opaque_vec_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_opaque_vec_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_sync_sse');
  late final _wire_opaque_vec_twin_sync_sse =
      _wire_opaque_vec_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_enum_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_enum_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_enum_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_sync_sse');
  late final _wire_run_enum_opaque_twin_sync_sse =
      _wire_run_enum_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_nested_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_nested_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_nested_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_sync_sse');
  late final _wire_run_nested_opaque_twin_sync_sse =
      _wire_run_nested_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_non_clone_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_non_clone_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_non_clone_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_sync_sse');
  late final _wire_run_non_clone_twin_sync_sse =
      _wire_run_non_clone_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_sync_sse');
  late final _wire_run_opaque_twin_sync_sse =
      _wire_run_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_run_opaque_with_delay_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_run_opaque_with_delay_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_run_opaque_with_delay_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_sync_sse');
  late final _wire_run_opaque_with_delay_twin_sync_sse =
      _wire_run_opaque_with_delay_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_unwrap_rust_opaque_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_unwrap_rust_opaque_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_sync_sse');
  late final _wire_unwrap_rust_opaque_twin_sync_sse =
      _wire_unwrap_rust_opaque_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_simple_adder_twin_rust_async(
    int port_,
    int a,
    int b,
  ) {
    return _wire_simple_adder_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_simple_adder_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_rust_async');
  late final _wire_simple_adder_twin_rust_async =
      _wire_simple_adder_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_simple_adder_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_simple_adder_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_simple_adder_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_rust_async_sse');
  late final _wire_simple_adder_twin_rust_async_sse =
      _wire_simple_adder_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_simple_adder_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_simple_adder_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_simple_adder_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_sse');
  late final _wire_simple_adder_twin_sse = _wire_simple_adder_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_simple_adder_twin_sync(
    int a,
    int b,
  ) {
    return _wire_simple_adder_twin_sync(
      a,
      b,
    );
  }

  late final _wire_simple_adder_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<WireSyncRust2DartDco Function(ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_sync');
  late final _wire_simple_adder_twin_sync = _wire_simple_adder_twin_syncPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartSse wire_simple_adder_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_simple_adder_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_simple_adder_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_sync_sse');
  late final _wire_simple_adder_twin_sync_sse =
      _wire_simple_adder_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_realistic_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_realistic_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_realistic_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_realistic_twin_sse');
  late final _wire_func_stream_realistic_twin_sse =
      _wire_func_stream_realistic_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_return_error_twin_rust_async(
    int port_,
  ) {
    return _wire_func_stream_return_error_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_stream_return_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_error_twin_rust_async');
  late final _wire_func_stream_return_error_twin_rust_async =
      _wire_func_stream_return_error_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_func_stream_return_panic_twin_rust_async(
    int port_,
  ) {
    return _wire_func_stream_return_panic_twin_rust_async(
      port_,
    );
  }

  late final _wire_func_stream_return_panic_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_panic_twin_rust_async');
  late final _wire_func_stream_return_panic_twin_rust_async =
      _wire_func_stream_return_panic_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_func_stream_sink_arg_position_twin_rust_async(
    int port_,
    int a,
    int b,
  ) {
    return _wire_func_stream_sink_arg_position_twin_rust_async(
      port_,
      a,
      b,
    );
  }

  late final _wire_func_stream_sink_arg_position_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_sink_arg_position_twin_rust_async');
  late final _wire_func_stream_sink_arg_position_twin_rust_async =
      _wire_func_stream_sink_arg_position_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_of_struct_twin_rust_async(
    int port_,
  ) {
    return _wire_handle_stream_of_struct_twin_rust_async(
      port_,
    );
  }

  late final _wire_handle_stream_of_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_of_struct_twin_rust_async');
  late final _wire_handle_stream_of_struct_twin_rust_async =
      _wire_handle_stream_of_struct_twin_rust_asyncPtr
          .asFunction<void Function(int)>();

  void wire_handle_stream_sink_at_1_twin_rust_async(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_1_twin_rust_async(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_1_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_1_twin_rust_async');
  late final _wire_handle_stream_sink_at_1_twin_rust_async =
      _wire_handle_stream_sink_at_1_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_sink_at_2_twin_rust_async(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_2_twin_rust_async(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_2_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_2_twin_rust_async');
  late final _wire_handle_stream_sink_at_2_twin_rust_async =
      _wire_handle_stream_sink_at_2_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_sink_at_3_twin_rust_async(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_3_twin_rust_async(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_3_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_3_twin_rust_async');
  late final _wire_handle_stream_sink_at_3_twin_rust_async =
      _wire_handle_stream_sink_at_3_twin_rust_asyncPtr
          .asFunction<void Function(int, int, int)>();

  void wire_func_stream_return_error_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_return_error_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_return_error_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_error_twin_rust_async_sse');
  late final _wire_func_stream_return_error_twin_rust_async_sse =
      _wire_func_stream_return_error_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_return_panic_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_return_panic_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_return_panic_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_panic_twin_rust_async_sse');
  late final _wire_func_stream_return_panic_twin_rust_async_sse =
      _wire_func_stream_return_panic_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_sink_arg_position_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_sink_arg_position_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_sink_arg_position_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_sink_arg_position_twin_rust_async_sse');
  late final _wire_func_stream_sink_arg_position_twin_rust_async_sse =
      _wire_func_stream_sink_arg_position_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_of_struct_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_of_struct_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_of_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_of_struct_twin_rust_async_sse');
  late final _wire_handle_stream_of_struct_twin_rust_async_sse =
      _wire_handle_stream_of_struct_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_1_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_1_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_1_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_1_twin_rust_async_sse');
  late final _wire_handle_stream_sink_at_1_twin_rust_async_sse =
      _wire_handle_stream_sink_at_1_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_2_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_2_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_2_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_2_twin_rust_async_sse');
  late final _wire_handle_stream_sink_at_2_twin_rust_async_sse =
      _wire_handle_stream_sink_at_2_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_3_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_3_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_3_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_3_twin_rust_async_sse');
  late final _wire_handle_stream_sink_at_3_twin_rust_async_sse =
      _wire_handle_stream_sink_at_3_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_return_error_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_return_error_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_return_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_error_twin_sse');
  late final _wire_func_stream_return_error_twin_sse =
      _wire_func_stream_return_error_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_return_panic_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_return_panic_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_return_panic_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_panic_twin_sse');
  late final _wire_func_stream_return_panic_twin_sse =
      _wire_func_stream_return_panic_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_stream_sink_arg_position_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_stream_sink_arg_position_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_stream_sink_arg_position_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_sink_arg_position_twin_sse');
  late final _wire_func_stream_sink_arg_position_twin_sse =
      _wire_func_stream_sink_arg_position_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_of_struct_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_of_struct_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_of_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_of_struct_twin_sse');
  late final _wire_handle_stream_of_struct_twin_sse =
      _wire_handle_stream_of_struct_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_1_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_1_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_1_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_1_twin_sse');
  late final _wire_handle_stream_sink_at_1_twin_sse =
      _wire_handle_stream_sink_at_1_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_2_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_2_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_2_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_2_twin_sse');
  late final _wire_handle_stream_sink_at_2_twin_sse =
      _wire_handle_stream_sink_at_2_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_stream_sink_at_3_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_stream_sink_at_3_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_stream_sink_at_3_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_3_twin_sse');
  late final _wire_handle_stream_sink_at_3_twin_sse =
      _wire_handle_stream_sink_at_3_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_one_field_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async> arg,
  ) {
    return _wire_func_struct_with_one_field_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_one_field_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_struct_with_one_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_rust_async');
  late final _wire_func_struct_with_one_field_twin_rust_async =
      _wire_func_struct_with_one_field_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async>)>();

  void wire_func_struct_with_two_field_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async> arg,
  ) {
    return _wire_func_struct_with_two_field_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_two_field_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_struct_with_two_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_rust_async');
  late final _wire_func_struct_with_two_field_twin_rust_async =
      _wire_func_struct_with_two_field_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async>)>();

  void wire_func_struct_with_zero_field_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async> arg,
  ) {
    return _wire_func_struct_with_zero_field_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_struct_with_zero_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_rust_async');
  late final _wire_func_struct_with_zero_field_twin_rust_async =
      _wire_func_struct_with_zero_field_twin_rust_asyncPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async>)>();

  void wire_func_tuple_struct_with_one_field_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async> arg,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_one_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_rust_async');
  late final _wire_func_tuple_struct_with_one_field_twin_rust_async =
      _wire_func_tuple_struct_with_one_field_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_tuple_struct_with_one_field_twin_rust_async>)>();

  void wire_func_tuple_struct_with_two_field_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async> arg,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_rust_async(
      port_,
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_two_field_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_rust_async');
  late final _wire_func_tuple_struct_with_two_field_twin_rust_async =
      _wire_func_tuple_struct_with_two_field_twin_rust_asyncPtr.asFunction<
          void Function(
              int,
              ffi.Pointer<
                  wire_cst_tuple_struct_with_two_field_twin_rust_async>)>();

  void wire_func_struct_with_one_field_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_one_field_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_one_field_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_rust_async_sse');
  late final _wire_func_struct_with_one_field_twin_rust_async_sse =
      _wire_func_struct_with_one_field_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_two_field_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_two_field_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_two_field_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_rust_async_sse');
  late final _wire_func_struct_with_two_field_twin_rust_async_sse =
      _wire_func_struct_with_two_field_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_zero_field_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_zero_field_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_rust_async_sse');
  late final _wire_func_struct_with_zero_field_twin_rust_async_sse =
      _wire_func_struct_with_zero_field_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_tuple_struct_with_one_field_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_rust_async_sse');
  late final _wire_func_tuple_struct_with_one_field_twin_rust_async_sse =
      _wire_func_tuple_struct_with_one_field_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_tuple_struct_with_two_field_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Uint8>,
                      ffi.Int32, ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_rust_async_sse');
  late final _wire_func_tuple_struct_with_two_field_twin_rust_async_sse =
      _wire_func_tuple_struct_with_two_field_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_one_field_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_one_field_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_one_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_sse');
  late final _wire_func_struct_with_one_field_twin_sse =
      _wire_func_struct_with_one_field_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_two_field_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_two_field_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_two_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_sse');
  late final _wire_func_struct_with_two_field_twin_sse =
      _wire_func_struct_with_two_field_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_struct_with_zero_field_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_zero_field_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_sse');
  late final _wire_func_struct_with_zero_field_twin_sse =
      _wire_func_struct_with_zero_field_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_tuple_struct_with_one_field_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_sse');
  late final _wire_func_tuple_struct_with_one_field_twin_sse =
      _wire_func_tuple_struct_with_one_field_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_func_tuple_struct_with_two_field_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_sse');
  late final _wire_func_tuple_struct_with_two_field_twin_sse =
      _wire_func_tuple_struct_with_two_field_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_func_struct_with_one_field_twin_sync(
    ffi.Pointer<wire_cst_struct_with_one_field_twin_sync> arg,
  ) {
    return _wire_func_struct_with_one_field_twin_sync(
      arg,
    );
  }

  late final _wire_func_struct_with_one_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_struct_with_one_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_sync');
  late final _wire_func_struct_with_one_field_twin_sync =
      _wire_func_struct_with_one_field_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_struct_with_one_field_twin_sync>)>();

  WireSyncRust2DartDco wire_func_struct_with_two_field_twin_sync(
    ffi.Pointer<wire_cst_struct_with_two_field_twin_sync> arg,
  ) {
    return _wire_func_struct_with_two_field_twin_sync(
      arg,
    );
  }

  late final _wire_func_struct_with_two_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_struct_with_two_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_sync');
  late final _wire_func_struct_with_two_field_twin_sync =
      _wire_func_struct_with_two_field_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_struct_with_two_field_twin_sync>)>();

  WireSyncRust2DartDco wire_func_struct_with_zero_field_twin_sync(
    ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync> arg,
  ) {
    return _wire_func_struct_with_zero_field_twin_sync(
      arg,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_sync');
  late final _wire_func_struct_with_zero_field_twin_sync =
      _wire_func_struct_with_zero_field_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync>)>();

  WireSyncRust2DartDco wire_func_tuple_struct_with_one_field_twin_sync(
    ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync> arg,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_sync(
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_one_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_sync');
  late final _wire_func_tuple_struct_with_one_field_twin_sync =
      _wire_func_tuple_struct_with_one_field_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync>)>();

  WireSyncRust2DartDco wire_func_tuple_struct_with_two_field_twin_sync(
    ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync> arg,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_sync(
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_two_field_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_sync');
  late final _wire_func_tuple_struct_with_two_field_twin_sync =
      _wire_func_tuple_struct_with_two_field_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync>)>();

  WireSyncRust2DartSse wire_func_struct_with_one_field_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_one_field_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_one_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_sync_sse');
  late final _wire_func_struct_with_one_field_twin_sync_sse =
      _wire_func_struct_with_one_field_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_struct_with_two_field_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_two_field_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_two_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_sync_sse');
  late final _wire_func_struct_with_two_field_twin_sync_sse =
      _wire_func_struct_with_two_field_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_struct_with_zero_field_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_struct_with_zero_field_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_sync_sse');
  late final _wire_func_struct_with_zero_field_twin_sync_sse =
      _wire_func_struct_with_zero_field_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_tuple_struct_with_one_field_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_sync_sse');
  late final _wire_func_tuple_struct_with_one_field_twin_sync_sse =
      _wire_func_tuple_struct_with_one_field_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_func_tuple_struct_with_two_field_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_sync_sse');
  late final _wire_func_tuple_struct_with_two_field_twin_sync_sse =
      _wire_func_tuple_struct_with_two_field_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_tuple_2_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_i_32> value,
  ) {
    return _wire_test_tuple_2_twin_rust_async(
      port_,
      value,
    );
  }

  late final _wire_test_tuple_2_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_rust_async');
  late final _wire_test_tuple_2_twin_rust_async =
      _wire_test_tuple_2_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_string_i_32>)>();

  void wire_test_tuple_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_record_string_i_32> value,
  ) {
    return _wire_test_tuple_twin_rust_async(
      port_,
      value,
    );
  }

  late final _wire_test_tuple_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_rust_async');
  late final _wire_test_tuple_twin_rust_async =
      _wire_test_tuple_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_record_string_i_32>)>();

  void wire_test_tuple_2_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_2_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_2_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_rust_async_sse');
  late final _wire_test_tuple_2_twin_rust_async_sse =
      _wire_test_tuple_2_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_tuple_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_rust_async_sse');
  late final _wire_test_tuple_twin_rust_async_sse =
      _wire_test_tuple_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_tuple_2_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_2_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_2_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_sse');
  late final _wire_test_tuple_2_twin_sse = _wire_test_tuple_2_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_test_tuple_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_sse');
  late final _wire_test_tuple_twin_sse = _wire_test_tuple_twin_ssePtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_test_tuple_2_twin_sync(
    ffi.Pointer<wire_cst_list_record_string_i_32> value,
  ) {
    return _wire_test_tuple_2_twin_sync(
      value,
    );
  }

  late final _wire_test_tuple_2_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_sync');
  late final _wire_test_tuple_2_twin_sync =
      _wire_test_tuple_2_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_list_record_string_i_32>)>();

  WireSyncRust2DartDco wire_test_tuple_twin_sync(
    ffi.Pointer<wire_cst_record_string_i_32> value,
  ) {
    return _wire_test_tuple_twin_sync(
      value,
    );
  }

  late final _wire_test_tuple_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_sync');
  late final _wire_test_tuple_twin_sync =
      _wire_test_tuple_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_record_string_i_32>)>();

  WireSyncRust2DartSse wire_test_tuple_2_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_2_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_2_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_sync_sse');
  late final _wire_test_tuple_2_twin_sync_sse =
      _wire_test_tuple_2_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_test_tuple_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_test_tuple_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_test_tuple_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_sync_sse');
  late final _wire_test_tuple_twin_sync_sse =
      _wire_test_tuple_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_alias_id_twin_rust_async(
    int port_,
    int input,
  ) {
    return _wire_handle_type_alias_id_twin_rust_async(
      port_,
      input,
    );
  }

  late final _wire_handle_type_alias_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_rust_async');
  late final _wire_handle_type_alias_id_twin_rust_async =
      _wire_handle_type_alias_id_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_type_alias_model_twin_rust_async(
    int port_,
    int input,
  ) {
    return _wire_handle_type_alias_model_twin_rust_async(
      port_,
      input,
    );
  }

  late final _wire_handle_type_alias_model_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_rust_async');
  late final _wire_handle_type_alias_model_twin_rust_async =
      _wire_handle_type_alias_model_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_type_nest_alias_id_twin_rust_async(
    int port_,
    int input,
  ) {
    return _wire_handle_type_nest_alias_id_twin_rust_async(
      port_,
      input,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_rust_async');
  late final _wire_handle_type_nest_alias_id_twin_rust_async =
      _wire_handle_type_nest_alias_id_twin_rust_asyncPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_type_alias_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_rust_async_sse');
  late final _wire_handle_type_alias_id_twin_rust_async_sse =
      _wire_handle_type_alias_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_alias_model_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_model_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_model_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_rust_async_sse');
  late final _wire_handle_type_alias_model_twin_rust_async_sse =
      _wire_handle_type_alias_model_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_nest_alias_id_twin_rust_async_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_nest_alias_id_twin_rust_async_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_rust_async_sse');
  late final _wire_handle_type_nest_alias_id_twin_rust_async_sse =
      _wire_handle_type_nest_alias_id_twin_rust_async_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_alias_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_sse');
  late final _wire_handle_type_alias_id_twin_sse =
      _wire_handle_type_alias_id_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_alias_model_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_model_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_model_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_sse');
  late final _wire_handle_type_alias_model_twin_sse =
      _wire_handle_type_alias_model_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_type_nest_alias_id_twin_sse(
    int port_,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_nest_alias_id_twin_sse(
      port_,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_sse');
  late final _wire_handle_type_nest_alias_id_twin_sse =
      _wire_handle_type_nest_alias_id_twin_ssePtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_handle_type_alias_id_twin_sync(
    int input,
  ) {
    return _wire_handle_type_alias_id_twin_sync(
      input,
    );
  }

  late final _wire_handle_type_alias_id_twin_syncPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint64)>>(
          'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_sync');
  late final _wire_handle_type_alias_id_twin_sync =
      _wire_handle_type_alias_id_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_handle_type_alias_model_twin_sync(
    int input,
  ) {
    return _wire_handle_type_alias_model_twin_sync(
      input,
    );
  }

  late final _wire_handle_type_alias_model_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_sync');
  late final _wire_handle_type_alias_model_twin_sync =
      _wire_handle_type_alias_model_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_handle_type_nest_alias_id_twin_sync(
    int input,
  ) {
    return _wire_handle_type_nest_alias_id_twin_sync(
      input,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_sync');
  late final _wire_handle_type_nest_alias_id_twin_sync =
      _wire_handle_type_nest_alias_id_twin_syncPtr
          .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartSse wire_handle_type_alias_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_sync_sse');
  late final _wire_handle_type_alias_id_twin_sync_sse =
      _wire_handle_type_alias_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_type_alias_model_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_alias_model_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_alias_model_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_sync_sse');
  late final _wire_handle_type_alias_model_twin_sync_sse =
      _wire_handle_type_alias_model_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartSse wire_handle_type_nest_alias_id_twin_sync_sse(
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _wire_handle_type_nest_alias_id_twin_sync_sse(
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartSse Function(
                  ffi.Pointer<ffi.Uint8>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_sync_sse');
  late final _wire_handle_type_nest_alias_id_twin_sync_sse =
      _wire_handle_type_nest_alias_id_twin_sync_ssePtr.asFunction<
          WireSyncRust2DartSse Function(ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_handle_nested_uuids_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_feature_uuid_twin_rust_async> ids,
  ) {
    return _wire_handle_nested_uuids_twin_rust_async(
      port_,
      ids,
    );
  }

  late final _wire_handle_nested_uuids_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_feature_uuid_twin_rust_async>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_uuids_twin_rust_async');
  late final _wire_handle_nested_uuids_twin_rust_async =
      _wire_handle_nested_uuids_twin_rust_asyncPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_feature_uuid_twin_rust_async>)>();

  void wire_handle_uuid_twin_rust_async(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> id,
  ) {
    return _wire_handle_uuid_twin_rust_async(
      port_,
      id,
    );
  }

  late final _wire_handle_uuid_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuid_twin_rust_async');
  late final _wire_handle_uuid_twin_rust_async =
      _wire_handle_uuid_twin_rust_asyncPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  WireSyncRust2DartDco wire_handle_nested_uuids_twin_sync(
    ffi.Pointer<wire_cst_feature_uuid_twin_sync> ids,
  ) {
    return _wire_handle_nested_uuids_twin_sync(
      ids,
    );
  }

  late final _wire_handle_nested_uuids_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_feature_uuid_twin_sync>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_uuids_twin_sync');
  late final _wire_handle_nested_uuids_twin_sync =
      _wire_handle_nested_uuids_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_feature_uuid_twin_sync>)>();

  WireSyncRust2DartDco wire_handle_uuid_twin_sync(
    ffi.Pointer<wire_cst_list_prim_u_8> id,
  ) {
    return _wire_handle_uuid_twin_sync(
      id,
    );
  }

  late final _wire_handle_uuid_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuid_twin_sync');
  late final _wire_handle_uuid_twin_sync =
      _wire_handle_uuid_twin_syncPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_test_more_than_just_one_raw_string_struct_twin_normal(
    int port_,
  ) {
    return _wire_test_more_than_just_one_raw_string_struct_twin_normal(
      port_,
    );
  }

  late final _wire_test_more_than_just_one_raw_string_struct_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_test_more_than_just_one_raw_string_struct_twin_normal');
  late final _wire_test_more_than_just_one_raw_string_struct_twin_normal =
      _wire_test_more_than_just_one_raw_string_struct_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_test_raw_string_item_struct_twin_normal(
    int port_,
  ) {
    return _wire_test_raw_string_item_struct_twin_normal(
      port_,
    );
  }

  late final _wire_test_raw_string_item_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_test_raw_string_item_struct_twin_normal');
  late final _wire_test_raw_string_item_struct_twin_normal =
      _wire_test_raw_string_item_struct_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> that,
  ) {
    return _wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normal =
      _wire_NonCloneSimpleTwinNormal_instance_method_arg_borrow_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> that,
  ) {
    return _wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normal =
      _wire_NonCloneSimpleTwinNormal_instance_method_arg_mut_borrow_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> that,
  ) {
    return _wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normal =
      _wire_NonCloneSimpleTwinNormal_instance_method_arg_own_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> that,
  ) {
    return _wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal(
      port_,
      that,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normal =
      _wire_NonCloneSimpleTwinNormal_instance_method_return_own_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normal =
      _wire_NonCloneSimpleTwinNormal_new_custom_name_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinNormal_new_twin_normal(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinNormal_new_twin_normal(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_new_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_new_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_new_twin_normal =
      _wire_NonCloneSimpleTwinNormal_new_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_new_with_result_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_new_with_result_twin_normal =
      _wire_NonCloneSimpleTwinNormal_new_with_result_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normal =
      _wire_NonCloneSimpleTwinNormal_static_method_arg_borrow_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normal =
      _wire_NonCloneSimpleTwinNormal_static_method_arg_mut_borrow_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normal =
      _wire_NonCloneSimpleTwinNormal_static_method_arg_own_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal(
    int port_,
  ) {
    return _wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal(
      port_,
    );
  }

  late final _wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal');
  late final _wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normal =
      _wire_NonCloneSimpleTwinNormal_static_method_return_own_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_arg_borrow_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_borrow_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_borrow_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_borrow_twin_normal');
  late final _wire_rust_auto_opaque_arg_borrow_twin_normal =
      _wire_rust_auto_opaque_arg_borrow_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>, int)>();

  void wire_rust_auto_opaque_arg_mut_borrow_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
    int expect,
    int adder,
  ) {
    return _wire_rust_auto_opaque_arg_mut_borrow_twin_normal(
      port_,
      arg,
      expect,
      adder,
    );
  }

  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_mut_borrow_twin_normal');
  late final _wire_rust_auto_opaque_arg_mut_borrow_twin_normal =
      _wire_rust_auto_opaque_arg_mut_borrow_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>, int, int)>();

  void wire_rust_auto_opaque_arg_own_and_return_own_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_arg_own_and_return_own_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_and_return_own_twin_normal');
  late final _wire_rust_auto_opaque_arg_own_and_return_own_twin_normal =
      _wire_rust_auto_opaque_arg_own_and_return_own_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_auto_opaque_arg_own_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
    int expect,
  ) {
    return _wire_rust_auto_opaque_arg_own_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_arg_own_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_arg_own_twin_normal');
  late final _wire_rust_auto_opaque_arg_own_twin_normal =
      _wire_rust_auto_opaque_arg_own_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>, int)>();

  void wire_rust_auto_opaque_callable_arg_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_callable_arg_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_callable_arg_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_arg_twin_normal');
  late final _wire_rust_auto_opaque_callable_arg_twin_normal =
      _wire_rust_auto_opaque_callable_arg_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_auto_opaque_callable_return_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_callable_return_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_callable_return_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_callable_return_twin_normal');
  late final _wire_rust_auto_opaque_callable_return_twin_normal =
      _wire_rust_auto_opaque_callable_return_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> a,
    ffi.Pointer<wire_cst_list_prim_u_8> b,
  ) {
    return _wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal');
  late final _wire_rust_auto_opaque_normal_and_opaque_arg_twin_normal =
      _wire_rust_auto_opaque_normal_and_opaque_arg_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_rust_auto_opaque_plus_sign_arg_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_plus_sign_arg_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_arg_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_arg_twin_normal');
  late final _wire_rust_auto_opaque_plus_sign_arg_twin_normal =
      _wire_rust_auto_opaque_plus_sign_arg_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_rust_auto_opaque_plus_sign_return_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_plus_sign_return_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_plus_sign_return_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_plus_sign_return_twin_normal');
  late final _wire_rust_auto_opaque_plus_sign_return_twin_normal =
      _wire_rust_auto_opaque_plus_sign_return_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_return_own_twin_normal(
    int port_,
    int initial,
  ) {
    return _wire_rust_auto_opaque_return_own_twin_normal(
      port_,
      initial,
    );
  }

  late final _wire_rust_auto_opaque_return_own_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_return_own_twin_normal');
  late final _wire_rust_auto_opaque_return_own_twin_normal =
      _wire_rust_auto_opaque_return_own_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_normal');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_normal =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_borrow_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_normal');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_normal =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_mut_borrow_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normal =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_arg_own_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void
      wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal');
  late final _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normal =
      _wire_rust_auto_opaque_struct_with_good_and_opaque_field_return_own_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
    ffi.Pointer<wire_cst_list_prim_u_8> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>,
                      ffi.Pointer<wire_cst_list_prim_u_8>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal');
  late final _wire_rust_auto_opaque_trait_object_arg_borrow_twin_normal =
      _wire_rust_auto_opaque_trait_object_arg_borrow_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
    ffi.Pointer<wire_cst_list_prim_u_8> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>,
                      ffi.Pointer<wire_cst_list_prim_u_8>)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal');
  late final _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normal =
      _wire_rust_auto_opaque_trait_object_arg_mut_borrow_twin_normalPtr
          .asFunction<
              void Function(int, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_rust_auto_opaque_trait_object_arg_own_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> arg,
    ffi.Pointer<wire_cst_list_prim_u_8> expect,
  ) {
    return _wire_rust_auto_opaque_trait_object_arg_own_twin_normal(
      port_,
      arg,
      expect,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_arg_own_twin_normal');
  late final _wire_rust_auto_opaque_trait_object_arg_own_twin_normal =
      _wire_rust_auto_opaque_trait_object_arg_own_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>,
              ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_rust_auto_opaque_trait_object_return_own_one_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_one_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_one_twin_normal');
  late final _wire_rust_auto_opaque_trait_object_return_own_one_twin_normal =
      _wire_rust_auto_opaque_trait_object_return_own_one_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_trait_object_return_own_two_twin_normal(
    int port_,
  ) {
    return _wire_rust_auto_opaque_trait_object_return_own_two_twin_normal(
      port_,
    );
  }

  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_trait_object_return_own_two_twin_normal');
  late final _wire_rust_auto_opaque_trait_object_return_own_two_twin_normal =
      _wire_rust_auto_opaque_trait_object_return_own_two_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_rust_auto_opaque_two_args_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> a,
    ffi.Pointer<ffi.Void> b,
  ) {
    return _wire_rust_auto_opaque_two_args_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_rust_auto_opaque_two_args_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_rust_auto_opaque_two_args_twin_normal');
  late final _wire_rust_auto_opaque_two_args_twin_normal =
      _wire_rust_auto_opaque_two_args_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>)>();

  void wire_create_array_opaque_enum_twin_normal(
    int port_,
  ) {
    return _wire_create_array_opaque_enum_twin_normal(
      port_,
    );
  }

  late final _wire_create_array_opaque_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_create_array_opaque_enum_twin_normal');
  late final _wire_create_array_opaque_enum_twin_normal =
      _wire_create_array_opaque_enum_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_create_nested_opaque_twin_normal(
    int port_,
  ) {
    return _wire_create_nested_opaque_twin_normal(
      port_,
    );
  }

  late final _wire_create_nested_opaque_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_create_nested_opaque_twin_normal');
  late final _wire_create_nested_opaque_twin_normal =
      _wire_create_nested_opaque_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_create_opaque_twin_normal(
    int port_,
  ) {
    return _wire_create_opaque_twin_normal(
      port_,
    );
  }

  late final _wire_create_opaque_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_create_opaque_twin_normal');
  late final _wire_create_opaque_twin_normal =
      _wire_create_opaque_twin_normalPtr.asFunction<void Function(int)>();

  void wire_create_option_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Pointer<ffi.Void>> opaque,
  ) {
    return _wire_create_option_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_create_option_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<ffi.Pointer<ffi.Void>>)>>(
      'frbgen_frb_example_pure_dart_wire_create_option_opaque_twin_normal');
  late final _wire_create_option_opaque_twin_normal =
      _wire_create_option_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Pointer<ffi.Void>>)>();

  void wire_create_sync_opaque_twin_normal(
    int port_,
  ) {
    return _wire_create_sync_opaque_twin_normal(
      port_,
    );
  }

  late final _wire_create_sync_opaque_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_create_sync_opaque_twin_normal');
  late final _wire_create_sync_opaque_twin_normal =
      _wire_create_sync_opaque_twin_normalPtr.asFunction<void Function(int)>();

  void wire_frb_generator_test_twin_normal(
    int port_,
  ) {
    return _wire_frb_generator_test_twin_normal(
      port_,
    );
  }

  late final _wire_frb_generator_test_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_frb_generator_test_twin_normal');
  late final _wire_frb_generator_test_twin_normal =
      _wire_frb_generator_test_twin_normalPtr.asFunction<void Function(int)>();

  void wire_opaque_array_run_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_hide_data> data,
  ) {
    return _wire_opaque_array_run_twin_normal(
      port_,
      data,
    );
  }

  late final _wire_opaque_array_run_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_array_run_twin_normal');
  late final _wire_opaque_array_run_twin_normal =
      _wire_opaque_array_run_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>();

  void wire_opaque_array_twin_normal(
    int port_,
  ) {
    return _wire_opaque_array_twin_normal(
      port_,
    );
  }

  late final _wire_opaque_array_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_array_twin_normal');
  late final _wire_opaque_array_twin_normal =
      _wire_opaque_array_twin_normalPtr.asFunction<void Function(int)>();

  void wire_opaque_vec_run_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_RustOpaque_hide_data> data,
  ) {
    return _wire_opaque_vec_run_twin_normal(
      port_,
      data,
    );
  }

  late final _wire_opaque_vec_run_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>>(
      'frbgen_frb_example_pure_dart_wire_opaque_vec_run_twin_normal');
  late final _wire_opaque_vec_run_twin_normal =
      _wire_opaque_vec_run_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_list_RustOpaque_hide_data>)>();

  void wire_opaque_vec_twin_normal(
    int port_,
  ) {
    return _wire_opaque_vec_twin_normal(
      port_,
    );
  }

  late final _wire_opaque_vec_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_wire_opaque_vec_twin_normal');
  late final _wire_opaque_vec_twin_normal =
      _wire_opaque_vec_twin_normalPtr.asFunction<void Function(int)>();

  void wire_run_enum_opaque_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_enum_opaque_twin_normal> opaque,
  ) {
    return _wire_run_enum_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_run_enum_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_enum_opaque_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_run_enum_opaque_twin_normal');
  late final _wire_run_enum_opaque_twin_normal =
      _wire_run_enum_opaque_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_enum_opaque_twin_normal>)>();

  void wire_run_nested_opaque_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_opaque_nested_twin_normal> opaque,
  ) {
    return _wire_run_nested_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_run_nested_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_opaque_nested_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_run_nested_opaque_twin_normal');
  late final _wire_run_nested_opaque_twin_normal =
      _wire_run_nested_opaque_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_opaque_nested_twin_normal>)>();

  void wire_run_non_clone_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> clone,
  ) {
    return _wire_run_non_clone_twin_normal(
      port_,
      clone,
    );
  }

  late final _wire_run_non_clone_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_run_non_clone_twin_normal');
  late final _wire_run_non_clone_twin_normal =
      _wire_run_non_clone_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_run_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_run_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_twin_normal');
  late final _wire_run_opaque_twin_normal = _wire_run_opaque_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_run_opaque_with_delay_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_run_opaque_with_delay_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_run_opaque_with_delay_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_run_opaque_with_delay_twin_normal');
  late final _wire_run_opaque_with_delay_twin_normal =
      _wire_run_opaque_with_delay_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_unwrap_rust_opaque_twin_normal(
    int port_,
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_unwrap_rust_opaque_twin_normal(
      port_,
      opaque,
    );
  }

  late final _wire_unwrap_rust_opaque_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_unwrap_rust_opaque_twin_normal');
  late final _wire_unwrap_rust_opaque_twin_normal =
      _wire_unwrap_rust_opaque_twin_normalPtr
          .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  WireSyncRust2DartDco wire_frb_sync_generator_test_twin_normal() {
    return _wire_frb_sync_generator_test_twin_normal();
  }

  late final _wire_frb_sync_generator_test_twin_normalPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_frb_sync_generator_test_twin_normal');
  late final _wire_frb_sync_generator_test_twin_normal =
      _wire_frb_sync_generator_test_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_create_non_clone_twin_normal() {
    return _wire_sync_create_non_clone_twin_normal();
  }

  late final _wire_sync_create_non_clone_twin_normalPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_sync_create_non_clone_twin_normal');
  late final _wire_sync_create_non_clone_twin_normal =
      _wire_sync_create_non_clone_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_create_opaque_twin_normal() {
    return _wire_sync_create_opaque_twin_normal();
  }

  late final _wire_sync_create_opaque_twin_normalPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
          'frbgen_frb_example_pure_dart_wire_sync_create_opaque_twin_normal');
  late final _wire_sync_create_opaque_twin_normal =
      _wire_sync_create_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_create_sync_opaque_twin_normal() {
    return _wire_sync_create_sync_opaque_twin_normal();
  }

  late final _wire_sync_create_sync_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_sync_create_sync_opaque_twin_normal');
  late final _wire_sync_create_sync_opaque_twin_normal =
      _wire_sync_create_sync_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_option_rust_opaque_twin_normal() {
    return _wire_sync_option_rust_opaque_twin_normal();
  }

  late final _wire_sync_option_rust_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<WireSyncRust2DartDco Function()>>(
      'frbgen_frb_example_pure_dart_wire_sync_option_rust_opaque_twin_normal');
  late final _wire_sync_option_rust_opaque_twin_normal =
      _wire_sync_option_rust_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function()>();

  WireSyncRust2DartDco wire_sync_run_opaque_twin_normal(
    ffi.Pointer<ffi.Void> opaque,
  ) {
    return _wire_sync_run_opaque_twin_normal(
      opaque,
    );
  }

  late final _wire_sync_run_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_wire_sync_run_opaque_twin_normal');
  late final _wire_sync_run_opaque_twin_normal =
      _wire_sync_run_opaque_twin_normalPtr
          .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<ffi.Void>)>();

  void wire_simple_adder_twin_normal(
    int port_,
    int a,
    int b,
  ) {
    return _wire_simple_adder_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_simple_adder_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Int32, ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_wire_simple_adder_twin_normal');
  late final _wire_simple_adder_twin_normal = _wire_simple_adder_twin_normalPtr
      .asFunction<void Function(int, int, int)>();

  void wire_func_stream_return_error_twin_normal(
    int port_,
  ) {
    return _wire_func_stream_return_error_twin_normal(
      port_,
    );
  }

  late final _wire_func_stream_return_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_error_twin_normal');
  late final _wire_func_stream_return_error_twin_normal =
      _wire_func_stream_return_error_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_func_stream_return_panic_twin_normal(
    int port_,
  ) {
    return _wire_func_stream_return_panic_twin_normal(
      port_,
    );
  }

  late final _wire_func_stream_return_panic_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_return_panic_twin_normal');
  late final _wire_func_stream_return_panic_twin_normal =
      _wire_func_stream_return_panic_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_func_stream_sink_arg_position_twin_normal(
    int port_,
    int a,
    int b,
  ) {
    return _wire_func_stream_sink_arg_position_twin_normal(
      port_,
      a,
      b,
    );
  }

  late final _wire_func_stream_sink_arg_position_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_sink_arg_position_twin_normal');
  late final _wire_func_stream_sink_arg_position_twin_normal =
      _wire_func_stream_sink_arg_position_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_of_struct_twin_normal(
    int port_,
  ) {
    return _wire_handle_stream_of_struct_twin_normal(
      port_,
    );
  }

  late final _wire_handle_stream_of_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_of_struct_twin_normal');
  late final _wire_handle_stream_of_struct_twin_normal =
      _wire_handle_stream_of_struct_twin_normalPtr
          .asFunction<void Function(int)>();

  void wire_handle_stream_sink_at_1_twin_normal(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_1_twin_normal(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_1_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_1_twin_normal');
  late final _wire_handle_stream_sink_at_1_twin_normal =
      _wire_handle_stream_sink_at_1_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_sink_at_2_twin_normal(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_2_twin_normal(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_2_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_2_twin_normal');
  late final _wire_handle_stream_sink_at_2_twin_normal =
      _wire_handle_stream_sink_at_2_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_handle_stream_sink_at_3_twin_normal(
    int port_,
    int key,
    int max,
  ) {
    return _wire_handle_stream_sink_at_3_twin_normal(
      port_,
      key,
      max,
    );
  }

  late final _wire_handle_stream_sink_at_3_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Uint32, ffi.Uint32)>>(
      'frbgen_frb_example_pure_dart_wire_handle_stream_sink_at_3_twin_normal');
  late final _wire_handle_stream_sink_at_3_twin_normal =
      _wire_handle_stream_sink_at_3_twin_normalPtr
          .asFunction<void Function(int, int, int)>();

  void wire_func_stream_realistic_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> arg,
  ) {
    return _wire_func_stream_realistic_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_stream_realistic_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_func_stream_realistic_twin_normal');
  late final _wire_func_stream_realistic_twin_normal =
      _wire_func_stream_realistic_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void wire_func_struct_with_one_field_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_one_field_twin_normal> arg,
  ) {
    return _wire_func_struct_with_one_field_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_one_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_struct_with_one_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_one_field_twin_normal');
  late final _wire_func_struct_with_one_field_twin_normal =
      _wire_func_struct_with_one_field_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_struct_with_one_field_twin_normal>)>();

  void wire_func_struct_with_two_field_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_two_field_twin_normal> arg,
  ) {
    return _wire_func_struct_with_two_field_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_two_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_struct_with_two_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_two_field_twin_normal');
  late final _wire_func_struct_with_two_field_twin_normal =
      _wire_func_struct_with_two_field_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_struct_with_two_field_twin_normal>)>();

  void wire_func_struct_with_zero_field_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal> arg,
  ) {
    return _wire_func_struct_with_zero_field_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_struct_with_zero_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64,
                  ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_struct_with_zero_field_twin_normal');
  late final _wire_func_struct_with_zero_field_twin_normal =
      _wire_func_struct_with_zero_field_twin_normalPtr.asFunction<
          void Function(
              int, ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>)>();

  void wire_func_tuple_struct_with_one_field_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal> arg,
  ) {
    return _wire_func_tuple_struct_with_one_field_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_one_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_one_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_one_field_twin_normal');
  late final _wire_func_tuple_struct_with_one_field_twin_normal =
      _wire_func_tuple_struct_with_one_field_twin_normalPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal>)>();

  void wire_func_tuple_struct_with_two_field_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal> arg,
  ) {
    return _wire_func_tuple_struct_with_two_field_twin_normal(
      port_,
      arg,
    );
  }

  late final _wire_func_tuple_struct_with_two_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<
                      wire_cst_tuple_struct_with_two_field_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_func_tuple_struct_with_two_field_twin_normal');
  late final _wire_func_tuple_struct_with_two_field_twin_normal =
      _wire_func_tuple_struct_with_two_field_twin_normalPtr.asFunction<
          void Function(int,
              ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal>)>();

  void wire_test_tuple_2_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_record_string_i_32> value,
  ) {
    return _wire_test_tuple_2_twin_normal(
      port_,
      value,
    );
  }

  late final _wire_test_tuple_2_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_2_twin_normal');
  late final _wire_test_tuple_2_twin_normal =
      _wire_test_tuple_2_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_list_record_string_i_32>)>();

  void wire_test_tuple_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_record_string_i_32> value,
  ) {
    return _wire_test_tuple_twin_normal(
      port_,
      value,
    );
  }

  late final _wire_test_tuple_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_record_string_i_32>)>>(
      'frbgen_frb_example_pure_dart_wire_test_tuple_twin_normal');
  late final _wire_test_tuple_twin_normal =
      _wire_test_tuple_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_record_string_i_32>)>();

  void wire_handle_type_alias_id_twin_normal(
    int port_,
    int input,
  ) {
    return _wire_handle_type_alias_id_twin_normal(
      port_,
      input,
    );
  }

  late final _wire_handle_type_alias_id_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
          'frbgen_frb_example_pure_dart_wire_handle_type_alias_id_twin_normal');
  late final _wire_handle_type_alias_id_twin_normal =
      _wire_handle_type_alias_id_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_type_alias_model_twin_normal(
    int port_,
    int input,
  ) {
    return _wire_handle_type_alias_model_twin_normal(
      port_,
      input,
    );
  }

  late final _wire_handle_type_alias_model_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_alias_model_twin_normal');
  late final _wire_handle_type_alias_model_twin_normal =
      _wire_handle_type_alias_model_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_type_nest_alias_id_twin_normal(
    int port_,
    int input,
  ) {
    return _wire_handle_type_nest_alias_id_twin_normal(
      port_,
      input,
    );
  }

  late final _wire_handle_type_nest_alias_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Uint64)>>(
      'frbgen_frb_example_pure_dart_wire_handle_type_nest_alias_id_twin_normal');
  late final _wire_handle_type_nest_alias_id_twin_normal =
      _wire_handle_type_nest_alias_id_twin_normalPtr
          .asFunction<void Function(int, int)>();

  void wire_handle_nested_uuids_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_feature_uuid_twin_normal> ids,
  ) {
    return _wire_handle_nested_uuids_twin_normal(
      port_,
      ids,
    );
  }

  late final _wire_handle_nested_uuids_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_feature_uuid_twin_normal>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_nested_uuids_twin_normal');
  late final _wire_handle_nested_uuids_twin_normal =
      _wire_handle_nested_uuids_twin_normalPtr.asFunction<
          void Function(int, ffi.Pointer<wire_cst_feature_uuid_twin_normal>)>();

  void wire_handle_uuid_twin_normal(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8> id,
  ) {
    return _wire_handle_uuid_twin_normal(
      port_,
      id,
    );
  }

  late final _wire_handle_uuid_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64, ffi.Pointer<wire_cst_list_prim_u_8>)>>(
      'frbgen_frb_example_pure_dart_wire_handle_uuid_twin_normal');
  late final _wire_handle_uuid_twin_normal = _wire_handle_uuid_twin_normalPtr
      .asFunction<void Function(int, ffi.Pointer<wire_cst_list_prim_u_8>)>();

  void rust_arc_increment_strong_count_RustOpaque_MutexHideData(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_MutexHideData(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideDataPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_MutexHideData');
  late final _rust_arc_increment_strong_count_RustOpaque_MutexHideData =
      _rust_arc_increment_strong_count_RustOpaque_MutexHideDataPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_MutexHideData(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_MutexHideData(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_MutexHideData');
  late final _rust_arc_decrement_strong_count_RustOpaque_MutexHideData =
      _rust_arc_decrement_strong_count_RustOpaque_MutexHideDataPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_RwLockHideData(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_RwLockHideData(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_RwLockHideData');
  late final _rust_arc_increment_strong_count_RustOpaque_RwLockHideData =
      _rust_arc_increment_strong_count_RustOpaque_RwLockHideDataPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_RwLockHideData(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_RwLockHideData(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_RwLockHideData');
  late final _rust_arc_decrement_strong_count_RustOpaque_RwLockHideData =
      _rust_arc_decrement_strong_count_RustOpaque_RwLockHideDataPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsync');
  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsync =
      _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsync');
  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsync =
      _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSse =
      _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinRustAsyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_box_dynDartDebugTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_box_dynDartDebugTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_frb_opaque_return(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_frb_opaque_return(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_frb_opaque_returnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_frb_opaque_return');
  late final _rust_arc_increment_strong_count_RustOpaque_frb_opaque_return =
      _rust_arc_increment_strong_count_RustOpaque_frb_opaque_returnPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_frb_opaque_return(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_frb_opaque_return(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_frb_opaque_returnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_frb_opaque_return');
  late final _rust_arc_decrement_strong_count_RustOpaque_frb_opaque_return =
      _rust_arc_decrement_strong_count_RustOpaque_frb_opaque_returnPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_frb_opaque_sync_return(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_frb_opaque_sync_return(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_frb_opaque_sync_returnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_frb_opaque_sync_return');
  late final _rust_arc_increment_strong_count_RustOpaque_frb_opaque_sync_return =
      _rust_arc_increment_strong_count_RustOpaque_frb_opaque_sync_returnPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_frb_opaque_sync_return(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_frb_opaque_sync_return(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_frb_opaque_sync_returnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_frb_opaque_sync_return');
  late final _rust_arc_decrement_strong_count_RustOpaque_frb_opaque_sync_return =
      _rust_arc_decrement_strong_count_RustOpaque_frb_opaque_sync_returnPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_hide_data(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_hide_data(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_hide_dataPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_hide_data');
  late final _rust_arc_increment_strong_count_RustOpaque_hide_data =
      _rust_arc_increment_strong_count_RustOpaque_hide_dataPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_hide_data(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_hide_data(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_hide_dataPtr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_hide_data');
  late final _rust_arc_decrement_strong_count_RustOpaque_hide_data =
      _rust_arc_decrement_strong_count_RustOpaque_hide_dataPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_i_32(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_i_32(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_i_32Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_i_32');
  late final _rust_arc_increment_strong_count_RustOpaque_i_32 =
      _rust_arc_increment_strong_count_RustOpaque_i_32Ptr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_i_32(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_i_32(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_i_32Ptr = _lookup<
          ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_i_32');
  late final _rust_arc_decrement_strong_count_RustOpaque_i_32 =
      _rust_arc_decrement_strong_count_RustOpaque_i_32Ptr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_non_clone_data(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_non_clone_data(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_non_clone_dataPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_non_clone_data');
  late final _rust_arc_increment_strong_count_RustOpaque_non_clone_data =
      _rust_arc_increment_strong_count_RustOpaque_non_clone_dataPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_non_clone_data(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_non_clone_data(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_non_clone_dataPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_non_clone_data');
  late final _rust_arc_decrement_strong_count_RustOpaque_non_clone_data =
      _rust_arc_decrement_strong_count_RustOpaque_non_clone_dataPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_non_send_hide_data(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_non_send_hide_data(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_non_send_hide_dataPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_non_send_hide_data');
  late final _rust_arc_increment_strong_count_RustOpaque_non_send_hide_data =
      _rust_arc_increment_strong_count_RustOpaque_non_send_hide_dataPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_non_send_hide_data(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_non_send_hide_data(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_non_send_hide_dataPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_non_send_hide_data');
  late final _rust_arc_decrement_strong_count_RustOpaque_non_send_hide_data =
      _rust_arc_decrement_strong_count_RustOpaque_non_send_hide_dataPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynFnStringStringSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynHelloTraitTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinNormalSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSseSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSync =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockBoxdynMyTraitTwinSyncSseSendSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockNonCloneSimpleTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormalPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormal =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinNormalPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSse =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSync =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse');
  late final _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse =
      _rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSsePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_frb_example_pure_dart_rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse');
  late final _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSse =
      _rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockStructWithGoodAndOpaqueFieldTwinSyncSsePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<wire_cst_application_env> cst_new_box_application_env() {
    return _cst_new_box_application_env();
  }

  late final _cst_new_box_application_envPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_application_env> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_application_env');
  late final _cst_new_box_application_env = _cst_new_box_application_envPtr
      .asFunction<ffi.Pointer<wire_cst_application_env> Function()>();

  ffi.Pointer<ffi.Int64> cst_new_box_autoadd_Chrono_Duration(
    int value,
  ) {
    return _cst_new_box_autoadd_Chrono_Duration(
      value,
    );
  }

  late final _cst_new_box_autoadd_Chrono_DurationPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Chrono_Duration');
  late final _cst_new_box_autoadd_Chrono_Duration =
      _cst_new_box_autoadd_Chrono_DurationPtr
          .asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<ffi.Int64> cst_new_box_autoadd_Chrono_Naive(
    int value,
  ) {
    return _cst_new_box_autoadd_Chrono_Naive(
      value,
    );
  }

  late final _cst_new_box_autoadd_Chrono_NaivePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Chrono_Naive');
  late final _cst_new_box_autoadd_Chrono_Naive =
      _cst_new_box_autoadd_Chrono_NaivePtr
          .asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<ffi.Int64> cst_new_box_autoadd_Chrono_Utc(
    int value,
  ) {
    return _cst_new_box_autoadd_Chrono_Utc(
      value,
    );
  }

  late final _cst_new_box_autoadd_Chrono_UtcPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_Chrono_Utc');
  late final _cst_new_box_autoadd_Chrono_Utc =
      _cst_new_box_autoadd_Chrono_UtcPtr
          .asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<ffi.Pointer<ffi.Void>> cst_new_box_autoadd_DartOpaque(
    ffi.Pointer<ffi.Void> value,
  ) {
    return _cst_new_box_autoadd_DartOpaque(
      value,
    );
  }

  late final _cst_new_box_autoadd_DartOpaquePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Pointer<ffi.Void>> Function(
                  ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_DartOpaque');
  late final _cst_new_box_autoadd_DartOpaque =
      _cst_new_box_autoadd_DartOpaquePtr.asFunction<
          ffi.Pointer<ffi.Pointer<ffi.Void>> Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Pointer<ffi.Void>> cst_new_box_autoadd_RustOpaque_hide_data(
    ffi.Pointer<ffi.Void> value,
  ) {
    return _cst_new_box_autoadd_RustOpaque_hide_data(
      value,
    );
  }

  late final _cst_new_box_autoadd_RustOpaque_hide_dataPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<ffi.Pointer<ffi.Void>> Function(
                  ffi.Pointer<ffi.Void>)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_RustOpaque_hide_data');
  late final _cst_new_box_autoadd_RustOpaque_hide_data =
      _cst_new_box_autoadd_RustOpaque_hide_dataPtr.asFunction<
          ffi.Pointer<ffi.Pointer<ffi.Void>> Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<wire_cst_a_twin_normal> cst_new_box_autoadd_a_twin_normal() {
    return _cst_new_box_autoadd_a_twin_normal();
  }

  late final _cst_new_box_autoadd_a_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_a_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_a_twin_normal');
  late final _cst_new_box_autoadd_a_twin_normal =
      _cst_new_box_autoadd_a_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_a_twin_normal> Function()>();

  ffi.Pointer<wire_cst_a_twin_rust_async>
      cst_new_box_autoadd_a_twin_rust_async() {
    return _cst_new_box_autoadd_a_twin_rust_async();
  }

  late final _cst_new_box_autoadd_a_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_a_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_a_twin_rust_async');
  late final _cst_new_box_autoadd_a_twin_rust_async =
      _cst_new_box_autoadd_a_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_a_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_a_twin_rust_async_sse>
      cst_new_box_autoadd_a_twin_rust_async_sse() {
    return _cst_new_box_autoadd_a_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_a_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_a_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_a_twin_rust_async_sse');
  late final _cst_new_box_autoadd_a_twin_rust_async_sse =
      _cst_new_box_autoadd_a_twin_rust_async_ssePtr
          .asFunction<ffi.Pointer<wire_cst_a_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_a_twin_sse> cst_new_box_autoadd_a_twin_sse() {
    return _cst_new_box_autoadd_a_twin_sse();
  }

  late final _cst_new_box_autoadd_a_twin_ssePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_a_twin_sse> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_a_twin_sse');
  late final _cst_new_box_autoadd_a_twin_sse =
      _cst_new_box_autoadd_a_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_a_twin_sse> Function()>();

  ffi.Pointer<wire_cst_a_twin_sync> cst_new_box_autoadd_a_twin_sync() {
    return _cst_new_box_autoadd_a_twin_sync();
  }

  late final _cst_new_box_autoadd_a_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_a_twin_sync> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_a_twin_sync');
  late final _cst_new_box_autoadd_a_twin_sync =
      _cst_new_box_autoadd_a_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_a_twin_sync> Function()>();

  ffi.Pointer<wire_cst_a_twin_sync_sse> cst_new_box_autoadd_a_twin_sync_sse() {
    return _cst_new_box_autoadd_a_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_a_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_a_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_a_twin_sync_sse');
  late final _cst_new_box_autoadd_a_twin_sync_sse =
      _cst_new_box_autoadd_a_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_a_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_abc_twin_normal> cst_new_box_autoadd_abc_twin_normal() {
    return _cst_new_box_autoadd_abc_twin_normal();
  }

  late final _cst_new_box_autoadd_abc_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_abc_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_abc_twin_normal');
  late final _cst_new_box_autoadd_abc_twin_normal =
      _cst_new_box_autoadd_abc_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_abc_twin_normal> Function()>();

  ffi.Pointer<wire_cst_abc_twin_rust_async>
      cst_new_box_autoadd_abc_twin_rust_async() {
    return _cst_new_box_autoadd_abc_twin_rust_async();
  }

  late final _cst_new_box_autoadd_abc_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_abc_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_abc_twin_rust_async');
  late final _cst_new_box_autoadd_abc_twin_rust_async =
      _cst_new_box_autoadd_abc_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_abc_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_abc_twin_rust_async_sse>
      cst_new_box_autoadd_abc_twin_rust_async_sse() {
    return _cst_new_box_autoadd_abc_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_abc_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_abc_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_abc_twin_rust_async_sse');
  late final _cst_new_box_autoadd_abc_twin_rust_async_sse =
      _cst_new_box_autoadd_abc_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_abc_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_abc_twin_sse> cst_new_box_autoadd_abc_twin_sse() {
    return _cst_new_box_autoadd_abc_twin_sse();
  }

  late final _cst_new_box_autoadd_abc_twin_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_abc_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_abc_twin_sse');
  late final _cst_new_box_autoadd_abc_twin_sse =
      _cst_new_box_autoadd_abc_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_abc_twin_sse> Function()>();

  ffi.Pointer<wire_cst_abc_twin_sync> cst_new_box_autoadd_abc_twin_sync() {
    return _cst_new_box_autoadd_abc_twin_sync();
  }

  late final _cst_new_box_autoadd_abc_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_abc_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_abc_twin_sync');
  late final _cst_new_box_autoadd_abc_twin_sync =
      _cst_new_box_autoadd_abc_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_abc_twin_sync> Function()>();

  ffi.Pointer<wire_cst_abc_twin_sync_sse>
      cst_new_box_autoadd_abc_twin_sync_sse() {
    return _cst_new_box_autoadd_abc_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_abc_twin_sync_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_abc_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_abc_twin_sync_sse');
  late final _cst_new_box_autoadd_abc_twin_sync_sse =
      _cst_new_box_autoadd_abc_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_abc_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_application_env> cst_new_box_autoadd_application_env() {
    return _cst_new_box_autoadd_application_env();
  }

  late final _cst_new_box_autoadd_application_envPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_application_env> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_application_env');
  late final _cst_new_box_autoadd_application_env =
      _cst_new_box_autoadd_application_envPtr
          .asFunction<ffi.Pointer<wire_cst_application_env> Function()>();

  ffi.Pointer<wire_cst_application_settings>
      cst_new_box_autoadd_application_settings() {
    return _cst_new_box_autoadd_application_settings();
  }

  late final _cst_new_box_autoadd_application_settingsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_application_settings> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_application_settings');
  late final _cst_new_box_autoadd_application_settings =
      _cst_new_box_autoadd_application_settingsPtr
          .asFunction<ffi.Pointer<wire_cst_application_settings> Function()>();

  ffi.Pointer<wire_cst_attribute_twin_normal>
      cst_new_box_autoadd_attribute_twin_normal() {
    return _cst_new_box_autoadd_attribute_twin_normal();
  }

  late final _cst_new_box_autoadd_attribute_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_attribute_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_attribute_twin_normal');
  late final _cst_new_box_autoadd_attribute_twin_normal =
      _cst_new_box_autoadd_attribute_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_attribute_twin_normal> Function()>();

  ffi.Pointer<wire_cst_attribute_twin_rust_async>
      cst_new_box_autoadd_attribute_twin_rust_async() {
    return _cst_new_box_autoadd_attribute_twin_rust_async();
  }

  late final _cst_new_box_autoadd_attribute_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_attribute_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_attribute_twin_rust_async');
  late final _cst_new_box_autoadd_attribute_twin_rust_async =
      _cst_new_box_autoadd_attribute_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_attribute_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_attribute_twin_rust_async_sse>
      cst_new_box_autoadd_attribute_twin_rust_async_sse() {
    return _cst_new_box_autoadd_attribute_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_attribute_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_attribute_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_attribute_twin_rust_async_sse');
  late final _cst_new_box_autoadd_attribute_twin_rust_async_sse =
      _cst_new_box_autoadd_attribute_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_attribute_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_attribute_twin_sse>
      cst_new_box_autoadd_attribute_twin_sse() {
    return _cst_new_box_autoadd_attribute_twin_sse();
  }

  late final _cst_new_box_autoadd_attribute_twin_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_attribute_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_attribute_twin_sse');
  late final _cst_new_box_autoadd_attribute_twin_sse =
      _cst_new_box_autoadd_attribute_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_attribute_twin_sse> Function()>();

  ffi.Pointer<wire_cst_attribute_twin_sync>
      cst_new_box_autoadd_attribute_twin_sync() {
    return _cst_new_box_autoadd_attribute_twin_sync();
  }

  late final _cst_new_box_autoadd_attribute_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_attribute_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_attribute_twin_sync');
  late final _cst_new_box_autoadd_attribute_twin_sync =
      _cst_new_box_autoadd_attribute_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_attribute_twin_sync> Function()>();

  ffi.Pointer<wire_cst_attribute_twin_sync_sse>
      cst_new_box_autoadd_attribute_twin_sync_sse() {
    return _cst_new_box_autoadd_attribute_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_attribute_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_attribute_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_attribute_twin_sync_sse');
  late final _cst_new_box_autoadd_attribute_twin_sync_sse =
      _cst_new_box_autoadd_attribute_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_attribute_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_b_twin_normal> cst_new_box_autoadd_b_twin_normal() {
    return _cst_new_box_autoadd_b_twin_normal();
  }

  late final _cst_new_box_autoadd_b_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_b_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_b_twin_normal');
  late final _cst_new_box_autoadd_b_twin_normal =
      _cst_new_box_autoadd_b_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_b_twin_normal> Function()>();

  ffi.Pointer<wire_cst_b_twin_rust_async>
      cst_new_box_autoadd_b_twin_rust_async() {
    return _cst_new_box_autoadd_b_twin_rust_async();
  }

  late final _cst_new_box_autoadd_b_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_b_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_b_twin_rust_async');
  late final _cst_new_box_autoadd_b_twin_rust_async =
      _cst_new_box_autoadd_b_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_b_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_b_twin_rust_async_sse>
      cst_new_box_autoadd_b_twin_rust_async_sse() {
    return _cst_new_box_autoadd_b_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_b_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_b_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_b_twin_rust_async_sse');
  late final _cst_new_box_autoadd_b_twin_rust_async_sse =
      _cst_new_box_autoadd_b_twin_rust_async_ssePtr
          .asFunction<ffi.Pointer<wire_cst_b_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_b_twin_sse> cst_new_box_autoadd_b_twin_sse() {
    return _cst_new_box_autoadd_b_twin_sse();
  }

  late final _cst_new_box_autoadd_b_twin_ssePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_b_twin_sse> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_b_twin_sse');
  late final _cst_new_box_autoadd_b_twin_sse =
      _cst_new_box_autoadd_b_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_b_twin_sse> Function()>();

  ffi.Pointer<wire_cst_b_twin_sync> cst_new_box_autoadd_b_twin_sync() {
    return _cst_new_box_autoadd_b_twin_sync();
  }

  late final _cst_new_box_autoadd_b_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_b_twin_sync> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_b_twin_sync');
  late final _cst_new_box_autoadd_b_twin_sync =
      _cst_new_box_autoadd_b_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_b_twin_sync> Function()>();

  ffi.Pointer<wire_cst_b_twin_sync_sse> cst_new_box_autoadd_b_twin_sync_sse() {
    return _cst_new_box_autoadd_b_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_b_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_b_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_b_twin_sync_sse');
  late final _cst_new_box_autoadd_b_twin_sync_sse =
      _cst_new_box_autoadd_b_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_b_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
      cst_new_box_autoadd_benchmark_binary_tree_twin_normal() {
    return _cst_new_box_autoadd_benchmark_binary_tree_twin_normal();
  }

  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_binary_tree_twin_normal');
  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_normal =
      _cst_new_box_autoadd_benchmark_binary_tree_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
      cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async() {
    return _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async();
  }

  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async');
  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async =
      _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse>
      cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async_sse() {
    return _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_benchmark_binary_tree_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async_sse');
  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async_sse =
      _cst_new_box_autoadd_benchmark_binary_tree_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse>
      cst_new_box_autoadd_benchmark_binary_tree_twin_sse() {
    return _cst_new_box_autoadd_benchmark_binary_tree_twin_sse();
  }

  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_binary_tree_twin_sse');
  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_sse =
      _cst_new_box_autoadd_benchmark_binary_tree_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse> Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
      cst_new_box_autoadd_benchmark_binary_tree_twin_sync() {
    return _cst_new_box_autoadd_benchmark_binary_tree_twin_sync();
  }

  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_binary_tree_twin_sync');
  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_sync =
      _cst_new_box_autoadd_benchmark_binary_tree_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse>
      cst_new_box_autoadd_benchmark_binary_tree_twin_sync_sse() {
    return _cst_new_box_autoadd_benchmark_binary_tree_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_binary_tree_twin_sync_sse');
  late final _cst_new_box_autoadd_benchmark_binary_tree_twin_sync_sse =
      _cst_new_box_autoadd_benchmark_binary_tree_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse>
              Function()>();

  ffi.Pointer<wire_cst_benchmark_blob_twin_normal>
      cst_new_box_autoadd_benchmark_blob_twin_normal() {
    return _cst_new_box_autoadd_benchmark_blob_twin_normal();
  }

  late final _cst_new_box_autoadd_benchmark_blob_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_blob_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_blob_twin_normal');
  late final _cst_new_box_autoadd_benchmark_blob_twin_normal =
      _cst_new_box_autoadd_benchmark_blob_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_blob_twin_normal> Function()>();

  ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async>
      cst_new_box_autoadd_benchmark_blob_twin_rust_async() {
    return _cst_new_box_autoadd_benchmark_blob_twin_rust_async();
  }

  late final _cst_new_box_autoadd_benchmark_blob_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_blob_twin_rust_async');
  late final _cst_new_box_autoadd_benchmark_blob_twin_rust_async =
      _cst_new_box_autoadd_benchmark_blob_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async_sse>
      cst_new_box_autoadd_benchmark_blob_twin_rust_async_sse() {
    return _cst_new_box_autoadd_benchmark_blob_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_benchmark_blob_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_blob_twin_rust_async_sse');
  late final _cst_new_box_autoadd_benchmark_blob_twin_rust_async_sse =
      _cst_new_box_autoadd_benchmark_blob_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_blob_twin_rust_async_sse>
              Function()>();

  ffi.Pointer<wire_cst_benchmark_blob_twin_sse>
      cst_new_box_autoadd_benchmark_blob_twin_sse() {
    return _cst_new_box_autoadd_benchmark_blob_twin_sse();
  }

  late final _cst_new_box_autoadd_benchmark_blob_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_blob_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_blob_twin_sse');
  late final _cst_new_box_autoadd_benchmark_blob_twin_sse =
      _cst_new_box_autoadd_benchmark_blob_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_blob_twin_sse> Function()>();

  ffi.Pointer<wire_cst_benchmark_blob_twin_sync>
      cst_new_box_autoadd_benchmark_blob_twin_sync() {
    return _cst_new_box_autoadd_benchmark_blob_twin_sync();
  }

  late final _cst_new_box_autoadd_benchmark_blob_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_blob_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_blob_twin_sync');
  late final _cst_new_box_autoadd_benchmark_blob_twin_sync =
      _cst_new_box_autoadd_benchmark_blob_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_blob_twin_sync> Function()>();

  ffi.Pointer<wire_cst_benchmark_blob_twin_sync_sse>
      cst_new_box_autoadd_benchmark_blob_twin_sync_sse() {
    return _cst_new_box_autoadd_benchmark_blob_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_benchmark_blob_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_blob_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_benchmark_blob_twin_sync_sse');
  late final _cst_new_box_autoadd_benchmark_blob_twin_sync_sse =
      _cst_new_box_autoadd_benchmark_blob_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_blob_twin_sync_sse> Function()>();

  ffi.Pointer<ffi.Bool> cst_new_box_autoadd_bool(
    bool value,
  ) {
    return _cst_new_box_autoadd_bool(
      value,
    );
  }

  late final _cst_new_box_autoadd_boolPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Bool> Function(ffi.Bool)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_bool');
  late final _cst_new_box_autoadd_bool = _cst_new_box_autoadd_boolPtr
      .asFunction<ffi.Pointer<ffi.Bool> Function(bool)>();

  ffi.Pointer<wire_cst_c_twin_normal> cst_new_box_autoadd_c_twin_normal() {
    return _cst_new_box_autoadd_c_twin_normal();
  }

  late final _cst_new_box_autoadd_c_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_c_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_c_twin_normal');
  late final _cst_new_box_autoadd_c_twin_normal =
      _cst_new_box_autoadd_c_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_c_twin_normal> Function()>();

  ffi.Pointer<wire_cst_c_twin_rust_async>
      cst_new_box_autoadd_c_twin_rust_async() {
    return _cst_new_box_autoadd_c_twin_rust_async();
  }

  late final _cst_new_box_autoadd_c_twin_rust_asyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_c_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_c_twin_rust_async');
  late final _cst_new_box_autoadd_c_twin_rust_async =
      _cst_new_box_autoadd_c_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_c_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_c_twin_rust_async_sse>
      cst_new_box_autoadd_c_twin_rust_async_sse() {
    return _cst_new_box_autoadd_c_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_c_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_c_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_c_twin_rust_async_sse');
  late final _cst_new_box_autoadd_c_twin_rust_async_sse =
      _cst_new_box_autoadd_c_twin_rust_async_ssePtr
          .asFunction<ffi.Pointer<wire_cst_c_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_c_twin_sse> cst_new_box_autoadd_c_twin_sse() {
    return _cst_new_box_autoadd_c_twin_sse();
  }

  late final _cst_new_box_autoadd_c_twin_ssePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_c_twin_sse> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_c_twin_sse');
  late final _cst_new_box_autoadd_c_twin_sse =
      _cst_new_box_autoadd_c_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_c_twin_sse> Function()>();

  ffi.Pointer<wire_cst_c_twin_sync> cst_new_box_autoadd_c_twin_sync() {
    return _cst_new_box_autoadd_c_twin_sync();
  }

  late final _cst_new_box_autoadd_c_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_c_twin_sync> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_c_twin_sync');
  late final _cst_new_box_autoadd_c_twin_sync =
      _cst_new_box_autoadd_c_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_c_twin_sync> Function()>();

  ffi.Pointer<wire_cst_c_twin_sync_sse> cst_new_box_autoadd_c_twin_sync_sse() {
    return _cst_new_box_autoadd_c_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_c_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_c_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_c_twin_sync_sse');
  late final _cst_new_box_autoadd_c_twin_sync_sse =
      _cst_new_box_autoadd_c_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_c_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_concatenate_with_twin_normal>
      cst_new_box_autoadd_concatenate_with_twin_normal() {
    return _cst_new_box_autoadd_concatenate_with_twin_normal();
  }

  late final _cst_new_box_autoadd_concatenate_with_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_concatenate_with_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_concatenate_with_twin_normal');
  late final _cst_new_box_autoadd_concatenate_with_twin_normal =
      _cst_new_box_autoadd_concatenate_with_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_concatenate_with_twin_normal> Function()>();

  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>
      cst_new_box_autoadd_concatenate_with_twin_rust_async() {
    return _cst_new_box_autoadd_concatenate_with_twin_rust_async();
  }

  late final _cst_new_box_autoadd_concatenate_with_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_concatenate_with_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_concatenate_with_twin_rust_async');
  late final _cst_new_box_autoadd_concatenate_with_twin_rust_async =
      _cst_new_box_autoadd_concatenate_with_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_concatenate_with_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_concatenate_with_twin_rust_async_sse>
      cst_new_box_autoadd_concatenate_with_twin_rust_async_sse() {
    return _cst_new_box_autoadd_concatenate_with_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_concatenate_with_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_concatenate_with_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_concatenate_with_twin_rust_async_sse');
  late final _cst_new_box_autoadd_concatenate_with_twin_rust_async_sse =
      _cst_new_box_autoadd_concatenate_with_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_concatenate_with_twin_rust_async_sse>
              Function()>();

  ffi.Pointer<wire_cst_concatenate_with_twin_sse>
      cst_new_box_autoadd_concatenate_with_twin_sse() {
    return _cst_new_box_autoadd_concatenate_with_twin_sse();
  }

  late final _cst_new_box_autoadd_concatenate_with_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_concatenate_with_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_concatenate_with_twin_sse');
  late final _cst_new_box_autoadd_concatenate_with_twin_sse =
      _cst_new_box_autoadd_concatenate_with_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_concatenate_with_twin_sse> Function()>();

  ffi.Pointer<wire_cst_concatenate_with_twin_sync>
      cst_new_box_autoadd_concatenate_with_twin_sync() {
    return _cst_new_box_autoadd_concatenate_with_twin_sync();
  }

  late final _cst_new_box_autoadd_concatenate_with_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_concatenate_with_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_concatenate_with_twin_sync');
  late final _cst_new_box_autoadd_concatenate_with_twin_sync =
      _cst_new_box_autoadd_concatenate_with_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_concatenate_with_twin_sync> Function()>();

  ffi.Pointer<wire_cst_concatenate_with_twin_sync_sse>
      cst_new_box_autoadd_concatenate_with_twin_sync_sse() {
    return _cst_new_box_autoadd_concatenate_with_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_concatenate_with_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_concatenate_with_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_concatenate_with_twin_sync_sse');
  late final _cst_new_box_autoadd_concatenate_with_twin_sync_sse =
      _cst_new_box_autoadd_concatenate_with_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_concatenate_with_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal>
      cst_new_box_autoadd_custom_nested_error_2_twin_normal() {
    return _cst_new_box_autoadd_custom_nested_error_2_twin_normal();
  }

  late final _cst_new_box_autoadd_custom_nested_error_2_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_2_twin_normal');
  late final _cst_new_box_autoadd_custom_nested_error_2_twin_normal =
      _cst_new_box_autoadd_custom_nested_error_2_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal> Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async>
      cst_new_box_autoadd_custom_nested_error_2_twin_rust_async() {
    return _cst_new_box_autoadd_custom_nested_error_2_twin_rust_async();
  }

  late final _cst_new_box_autoadd_custom_nested_error_2_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_2_twin_rust_async');
  late final _cst_new_box_autoadd_custom_nested_error_2_twin_rust_async =
      _cst_new_box_autoadd_custom_nested_error_2_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async_sse>
      cst_new_box_autoadd_custom_nested_error_2_twin_rust_async_sse() {
    return _cst_new_box_autoadd_custom_nested_error_2_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_custom_nested_error_2_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_custom_nested_error_2_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_2_twin_rust_async_sse');
  late final _cst_new_box_autoadd_custom_nested_error_2_twin_rust_async_sse =
      _cst_new_box_autoadd_custom_nested_error_2_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_2_twin_sse>
      cst_new_box_autoadd_custom_nested_error_2_twin_sse() {
    return _cst_new_box_autoadd_custom_nested_error_2_twin_sse();
  }

  late final _cst_new_box_autoadd_custom_nested_error_2_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_2_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_2_twin_sse');
  late final _cst_new_box_autoadd_custom_nested_error_2_twin_sse =
      _cst_new_box_autoadd_custom_nested_error_2_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_2_twin_sse> Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync>
      cst_new_box_autoadd_custom_nested_error_2_twin_sync() {
    return _cst_new_box_autoadd_custom_nested_error_2_twin_sync();
  }

  late final _cst_new_box_autoadd_custom_nested_error_2_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_2_twin_sync');
  late final _cst_new_box_autoadd_custom_nested_error_2_twin_sync =
      _cst_new_box_autoadd_custom_nested_error_2_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync> Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync_sse>
      cst_new_box_autoadd_custom_nested_error_2_twin_sync_sse() {
    return _cst_new_box_autoadd_custom_nested_error_2_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_custom_nested_error_2_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_2_twin_sync_sse');
  late final _cst_new_box_autoadd_custom_nested_error_2_twin_sync_sse =
      _cst_new_box_autoadd_custom_nested_error_2_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync_sse>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal>
      cst_new_box_autoadd_custom_nested_error_inner_twin_normal() {
    return _cst_new_box_autoadd_custom_nested_error_inner_twin_normal();
  }

  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_inner_twin_normal');
  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_normal =
      _cst_new_box_autoadd_custom_nested_error_inner_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async>
      cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async() {
    return _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async();
  }

  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_custom_nested_error_inner_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async');
  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async =
      _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async>
                  Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async_sse>
      cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async_sse() {
    return _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_custom_nested_error_inner_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async_sse');
  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async_sse =
      _cst_new_box_autoadd_custom_nested_error_inner_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_custom_nested_error_inner_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sse>
      cst_new_box_autoadd_custom_nested_error_inner_twin_sse() {
    return _cst_new_box_autoadd_custom_nested_error_inner_twin_sse();
  }

  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_inner_twin_sse');
  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_sse =
      _cst_new_box_autoadd_custom_nested_error_inner_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sse>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync>
      cst_new_box_autoadd_custom_nested_error_inner_twin_sync() {
    return _cst_new_box_autoadd_custom_nested_error_inner_twin_sync();
  }

  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_inner_twin_sync');
  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_sync =
      _cst_new_box_autoadd_custom_nested_error_inner_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync_sse>
      cst_new_box_autoadd_custom_nested_error_inner_twin_sync_sse() {
    return _cst_new_box_autoadd_custom_nested_error_inner_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_inner_twin_sync_sse');
  late final _cst_new_box_autoadd_custom_nested_error_inner_twin_sync_sse =
      _cst_new_box_autoadd_custom_nested_error_inner_twin_sync_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync_sse>
                  Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal>
      cst_new_box_autoadd_custom_nested_error_outer_twin_normal() {
    return _cst_new_box_autoadd_custom_nested_error_outer_twin_normal();
  }

  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_outer_twin_normal');
  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_normal =
      _cst_new_box_autoadd_custom_nested_error_outer_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_outer_twin_normal>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async>
      cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async() {
    return _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async();
  }

  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_custom_nested_error_outer_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async');
  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async =
      _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async>
                  Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_rust_async_sse>
      cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async_sse() {
    return _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_custom_nested_error_outer_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async_sse');
  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async_sse =
      _cst_new_box_autoadd_custom_nested_error_outer_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_custom_nested_error_outer_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sse>
      cst_new_box_autoadd_custom_nested_error_outer_twin_sse() {
    return _cst_new_box_autoadd_custom_nested_error_outer_twin_sse();
  }

  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_outer_twin_sse');
  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_sse =
      _cst_new_box_autoadd_custom_nested_error_outer_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sse>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>
      cst_new_box_autoadd_custom_nested_error_outer_twin_sync() {
    return _cst_new_box_autoadd_custom_nested_error_outer_twin_sync();
  }

  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_outer_twin_sync');
  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_sync =
      _cst_new_box_autoadd_custom_nested_error_outer_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync>
              Function()>();

  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync_sse>
      cst_new_box_autoadd_custom_nested_error_outer_twin_sync_sse() {
    return _cst_new_box_autoadd_custom_nested_error_outer_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_nested_error_outer_twin_sync_sse');
  late final _cst_new_box_autoadd_custom_nested_error_outer_twin_sync_sse =
      _cst_new_box_autoadd_custom_nested_error_outer_twin_sync_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_custom_nested_error_outer_twin_sync_sse>
                  Function()>();

  ffi.Pointer<wire_cst_custom_struct_error_twin_normal>
      cst_new_box_autoadd_custom_struct_error_twin_normal() {
    return _cst_new_box_autoadd_custom_struct_error_twin_normal();
  }

  late final _cst_new_box_autoadd_custom_struct_error_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_error_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_error_twin_normal');
  late final _cst_new_box_autoadd_custom_struct_error_twin_normal =
      _cst_new_box_autoadd_custom_struct_error_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_error_twin_normal> Function()>();

  ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>
      cst_new_box_autoadd_custom_struct_error_twin_rust_async() {
    return _cst_new_box_autoadd_custom_struct_error_twin_rust_async();
  }

  late final _cst_new_box_autoadd_custom_struct_error_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_error_twin_rust_async');
  late final _cst_new_box_autoadd_custom_struct_error_twin_rust_async =
      _cst_new_box_autoadd_custom_struct_error_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async_sse>
      cst_new_box_autoadd_custom_struct_error_twin_rust_async_sse() {
    return _cst_new_box_autoadd_custom_struct_error_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_custom_struct_error_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_error_twin_rust_async_sse');
  late final _cst_new_box_autoadd_custom_struct_error_twin_rust_async_sse =
      _cst_new_box_autoadd_custom_struct_error_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_custom_struct_error_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_custom_struct_error_twin_sse>
      cst_new_box_autoadd_custom_struct_error_twin_sse() {
    return _cst_new_box_autoadd_custom_struct_error_twin_sse();
  }

  late final _cst_new_box_autoadd_custom_struct_error_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_error_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_error_twin_sse');
  late final _cst_new_box_autoadd_custom_struct_error_twin_sse =
      _cst_new_box_autoadd_custom_struct_error_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_error_twin_sse> Function()>();

  ffi.Pointer<wire_cst_custom_struct_error_twin_sync>
      cst_new_box_autoadd_custom_struct_error_twin_sync() {
    return _cst_new_box_autoadd_custom_struct_error_twin_sync();
  }

  late final _cst_new_box_autoadd_custom_struct_error_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_error_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_error_twin_sync');
  late final _cst_new_box_autoadd_custom_struct_error_twin_sync =
      _cst_new_box_autoadd_custom_struct_error_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_error_twin_sync> Function()>();

  ffi.Pointer<wire_cst_custom_struct_error_twin_sync_sse>
      cst_new_box_autoadd_custom_struct_error_twin_sync_sse() {
    return _cst_new_box_autoadd_custom_struct_error_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_custom_struct_error_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_error_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_error_twin_sync_sse');
  late final _cst_new_box_autoadd_custom_struct_error_twin_sync_sse =
      _cst_new_box_autoadd_custom_struct_error_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_error_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_custom_struct_twin_normal>
      cst_new_box_autoadd_custom_struct_twin_normal() {
    return _cst_new_box_autoadd_custom_struct_twin_normal();
  }

  late final _cst_new_box_autoadd_custom_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_twin_normal');
  late final _cst_new_box_autoadd_custom_struct_twin_normal =
      _cst_new_box_autoadd_custom_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_twin_normal> Function()>();

  ffi.Pointer<wire_cst_custom_struct_twin_rust_async>
      cst_new_box_autoadd_custom_struct_twin_rust_async() {
    return _cst_new_box_autoadd_custom_struct_twin_rust_async();
  }

  late final _cst_new_box_autoadd_custom_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_twin_rust_async');
  late final _cst_new_box_autoadd_custom_struct_twin_rust_async =
      _cst_new_box_autoadd_custom_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_custom_struct_twin_rust_async_sse>
      cst_new_box_autoadd_custom_struct_twin_rust_async_sse() {
    return _cst_new_box_autoadd_custom_struct_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_custom_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_twin_rust_async_sse');
  late final _cst_new_box_autoadd_custom_struct_twin_rust_async_sse =
      _cst_new_box_autoadd_custom_struct_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_custom_struct_twin_sse>
      cst_new_box_autoadd_custom_struct_twin_sse() {
    return _cst_new_box_autoadd_custom_struct_twin_sse();
  }

  late final _cst_new_box_autoadd_custom_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_twin_sse');
  late final _cst_new_box_autoadd_custom_struct_twin_sse =
      _cst_new_box_autoadd_custom_struct_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_twin_sse> Function()>();

  ffi.Pointer<wire_cst_custom_struct_twin_sync>
      cst_new_box_autoadd_custom_struct_twin_sync() {
    return _cst_new_box_autoadd_custom_struct_twin_sync();
  }

  late final _cst_new_box_autoadd_custom_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_twin_sync');
  late final _cst_new_box_autoadd_custom_struct_twin_sync =
      _cst_new_box_autoadd_custom_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_twin_sync> Function()>();

  ffi.Pointer<wire_cst_custom_struct_twin_sync_sse>
      cst_new_box_autoadd_custom_struct_twin_sync_sse() {
    return _cst_new_box_autoadd_custom_struct_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_custom_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_custom_struct_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_custom_struct_twin_sync_sse');
  late final _cst_new_box_autoadd_custom_struct_twin_sync_sse =
      _cst_new_box_autoadd_custom_struct_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_custom_struct_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_customized_twin_normal>
      cst_new_box_autoadd_customized_twin_normal() {
    return _cst_new_box_autoadd_customized_twin_normal();
  }

  late final _cst_new_box_autoadd_customized_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_customized_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_customized_twin_normal');
  late final _cst_new_box_autoadd_customized_twin_normal =
      _cst_new_box_autoadd_customized_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_customized_twin_normal> Function()>();

  ffi.Pointer<wire_cst_customized_twin_rust_async>
      cst_new_box_autoadd_customized_twin_rust_async() {
    return _cst_new_box_autoadd_customized_twin_rust_async();
  }

  late final _cst_new_box_autoadd_customized_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_customized_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_customized_twin_rust_async');
  late final _cst_new_box_autoadd_customized_twin_rust_async =
      _cst_new_box_autoadd_customized_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_customized_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_customized_twin_rust_async_sse>
      cst_new_box_autoadd_customized_twin_rust_async_sse() {
    return _cst_new_box_autoadd_customized_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_customized_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_customized_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_customized_twin_rust_async_sse');
  late final _cst_new_box_autoadd_customized_twin_rust_async_sse =
      _cst_new_box_autoadd_customized_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_customized_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_customized_twin_sse>
      cst_new_box_autoadd_customized_twin_sse() {
    return _cst_new_box_autoadd_customized_twin_sse();
  }

  late final _cst_new_box_autoadd_customized_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_customized_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_customized_twin_sse');
  late final _cst_new_box_autoadd_customized_twin_sse =
      _cst_new_box_autoadd_customized_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_customized_twin_sse> Function()>();

  ffi.Pointer<wire_cst_customized_twin_sync>
      cst_new_box_autoadd_customized_twin_sync() {
    return _cst_new_box_autoadd_customized_twin_sync();
  }

  late final _cst_new_box_autoadd_customized_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_customized_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_customized_twin_sync');
  late final _cst_new_box_autoadd_customized_twin_sync =
      _cst_new_box_autoadd_customized_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_customized_twin_sync> Function()>();

  ffi.Pointer<wire_cst_customized_twin_sync_sse>
      cst_new_box_autoadd_customized_twin_sync_sse() {
    return _cst_new_box_autoadd_customized_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_customized_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_customized_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_customized_twin_sync_sse');
  late final _cst_new_box_autoadd_customized_twin_sync_sse =
      _cst_new_box_autoadd_customized_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_customized_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal>
      cst_new_box_autoadd_dart_opaque_nested_twin_normal() {
    return _cst_new_box_autoadd_dart_opaque_nested_twin_normal();
  }

  late final _cst_new_box_autoadd_dart_opaque_nested_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_dart_opaque_nested_twin_normal');
  late final _cst_new_box_autoadd_dart_opaque_nested_twin_normal =
      _cst_new_box_autoadd_dart_opaque_nested_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_dart_opaque_nested_twin_normal> Function()>();

  ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>
      cst_new_box_autoadd_dart_opaque_nested_twin_rust_async() {
    return _cst_new_box_autoadd_dart_opaque_nested_twin_rust_async();
  }

  late final _cst_new_box_autoadd_dart_opaque_nested_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_dart_opaque_nested_twin_rust_async');
  late final _cst_new_box_autoadd_dart_opaque_nested_twin_rust_async =
      _cst_new_box_autoadd_dart_opaque_nested_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async_sse>
      cst_new_box_autoadd_dart_opaque_nested_twin_rust_async_sse() {
    return _cst_new_box_autoadd_dart_opaque_nested_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_dart_opaque_nested_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_dart_opaque_nested_twin_rust_async_sse');
  late final _cst_new_box_autoadd_dart_opaque_nested_twin_rust_async_sse =
      _cst_new_box_autoadd_dart_opaque_nested_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_dart_opaque_nested_twin_rust_async_sse>
              Function()>();

  ffi.Pointer<wire_cst_dart_opaque_nested_twin_sse>
      cst_new_box_autoadd_dart_opaque_nested_twin_sse() {
    return _cst_new_box_autoadd_dart_opaque_nested_twin_sse();
  }

  late final _cst_new_box_autoadd_dart_opaque_nested_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_dart_opaque_nested_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_dart_opaque_nested_twin_sse');
  late final _cst_new_box_autoadd_dart_opaque_nested_twin_sse =
      _cst_new_box_autoadd_dart_opaque_nested_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_dart_opaque_nested_twin_sse> Function()>();

  ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync>
      cst_new_box_autoadd_dart_opaque_nested_twin_sync() {
    return _cst_new_box_autoadd_dart_opaque_nested_twin_sync();
  }

  late final _cst_new_box_autoadd_dart_opaque_nested_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_dart_opaque_nested_twin_sync');
  late final _cst_new_box_autoadd_dart_opaque_nested_twin_sync =
      _cst_new_box_autoadd_dart_opaque_nested_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync> Function()>();

  ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync_sse>
      cst_new_box_autoadd_dart_opaque_nested_twin_sync_sse() {
    return _cst_new_box_autoadd_dart_opaque_nested_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_dart_opaque_nested_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_dart_opaque_nested_twin_sync_sse');
  late final _cst_new_box_autoadd_dart_opaque_nested_twin_sync_sse =
      _cst_new_box_autoadd_dart_opaque_nested_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_dart_opaque_nested_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_element_twin_normal>
      cst_new_box_autoadd_element_twin_normal() {
    return _cst_new_box_autoadd_element_twin_normal();
  }

  late final _cst_new_box_autoadd_element_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_element_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_element_twin_normal');
  late final _cst_new_box_autoadd_element_twin_normal =
      _cst_new_box_autoadd_element_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_element_twin_normal> Function()>();

  ffi.Pointer<wire_cst_element_twin_rust_async>
      cst_new_box_autoadd_element_twin_rust_async() {
    return _cst_new_box_autoadd_element_twin_rust_async();
  }

  late final _cst_new_box_autoadd_element_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_element_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_element_twin_rust_async');
  late final _cst_new_box_autoadd_element_twin_rust_async =
      _cst_new_box_autoadd_element_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_element_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_element_twin_rust_async_sse>
      cst_new_box_autoadd_element_twin_rust_async_sse() {
    return _cst_new_box_autoadd_element_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_element_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_element_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_element_twin_rust_async_sse');
  late final _cst_new_box_autoadd_element_twin_rust_async_sse =
      _cst_new_box_autoadd_element_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_element_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_element_twin_sse>
      cst_new_box_autoadd_element_twin_sse() {
    return _cst_new_box_autoadd_element_twin_sse();
  }

  late final _cst_new_box_autoadd_element_twin_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_element_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_element_twin_sse');
  late final _cst_new_box_autoadd_element_twin_sse =
      _cst_new_box_autoadd_element_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_element_twin_sse> Function()>();

  ffi.Pointer<wire_cst_element_twin_sync>
      cst_new_box_autoadd_element_twin_sync() {
    return _cst_new_box_autoadd_element_twin_sync();
  }

  late final _cst_new_box_autoadd_element_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_element_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_element_twin_sync');
  late final _cst_new_box_autoadd_element_twin_sync =
      _cst_new_box_autoadd_element_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_element_twin_sync> Function()>();

  ffi.Pointer<wire_cst_element_twin_sync_sse>
      cst_new_box_autoadd_element_twin_sync_sse() {
    return _cst_new_box_autoadd_element_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_element_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_element_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_element_twin_sync_sse');
  late final _cst_new_box_autoadd_element_twin_sync_sse =
      _cst_new_box_autoadd_element_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_element_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_empty_twin_normal>
      cst_new_box_autoadd_empty_twin_normal() {
    return _cst_new_box_autoadd_empty_twin_normal();
  }

  late final _cst_new_box_autoadd_empty_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_empty_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_empty_twin_normal');
  late final _cst_new_box_autoadd_empty_twin_normal =
      _cst_new_box_autoadd_empty_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_empty_twin_normal> Function()>();

  ffi.Pointer<wire_cst_empty_twin_rust_async>
      cst_new_box_autoadd_empty_twin_rust_async() {
    return _cst_new_box_autoadd_empty_twin_rust_async();
  }

  late final _cst_new_box_autoadd_empty_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_empty_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_empty_twin_rust_async');
  late final _cst_new_box_autoadd_empty_twin_rust_async =
      _cst_new_box_autoadd_empty_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_empty_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_empty_twin_rust_async_sse>
      cst_new_box_autoadd_empty_twin_rust_async_sse() {
    return _cst_new_box_autoadd_empty_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_empty_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_empty_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_empty_twin_rust_async_sse');
  late final _cst_new_box_autoadd_empty_twin_rust_async_sse =
      _cst_new_box_autoadd_empty_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_empty_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_empty_twin_sse> cst_new_box_autoadd_empty_twin_sse() {
    return _cst_new_box_autoadd_empty_twin_sse();
  }

  late final _cst_new_box_autoadd_empty_twin_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_empty_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_empty_twin_sse');
  late final _cst_new_box_autoadd_empty_twin_sse =
      _cst_new_box_autoadd_empty_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_empty_twin_sse> Function()>();

  ffi.Pointer<wire_cst_empty_twin_sync> cst_new_box_autoadd_empty_twin_sync() {
    return _cst_new_box_autoadd_empty_twin_sync();
  }

  late final _cst_new_box_autoadd_empty_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_empty_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_empty_twin_sync');
  late final _cst_new_box_autoadd_empty_twin_sync =
      _cst_new_box_autoadd_empty_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_empty_twin_sync> Function()>();

  ffi.Pointer<wire_cst_empty_twin_sync_sse>
      cst_new_box_autoadd_empty_twin_sync_sse() {
    return _cst_new_box_autoadd_empty_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_empty_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_empty_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_empty_twin_sync_sse');
  late final _cst_new_box_autoadd_empty_twin_sync_sse =
      _cst_new_box_autoadd_empty_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_empty_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal>
      cst_new_box_autoadd_enum_dart_opaque_twin_normal() {
    return _cst_new_box_autoadd_enum_dart_opaque_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_dart_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_dart_opaque_twin_normal');
  late final _cst_new_box_autoadd_enum_dart_opaque_twin_normal =
      _cst_new_box_autoadd_enum_dart_opaque_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_dart_opaque_twin_normal> Function()>();

  ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async>
      cst_new_box_autoadd_enum_dart_opaque_twin_rust_async() {
    return _cst_new_box_autoadd_enum_dart_opaque_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_dart_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_dart_opaque_twin_rust_async');
  late final _cst_new_box_autoadd_enum_dart_opaque_twin_rust_async =
      _cst_new_box_autoadd_enum_dart_opaque_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async_sse>
      cst_new_box_autoadd_enum_dart_opaque_twin_rust_async_sse() {
    return _cst_new_box_autoadd_enum_dart_opaque_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_enum_dart_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_dart_opaque_twin_rust_async_sse');
  late final _cst_new_box_autoadd_enum_dart_opaque_twin_rust_async_sse =
      _cst_new_box_autoadd_enum_dart_opaque_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_dart_opaque_twin_rust_async_sse>
              Function()>();

  ffi.Pointer<wire_cst_enum_dart_opaque_twin_sse>
      cst_new_box_autoadd_enum_dart_opaque_twin_sse() {
    return _cst_new_box_autoadd_enum_dart_opaque_twin_sse();
  }

  late final _cst_new_box_autoadd_enum_dart_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_dart_opaque_twin_sse');
  late final _cst_new_box_autoadd_enum_dart_opaque_twin_sse =
      _cst_new_box_autoadd_enum_dart_opaque_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_dart_opaque_twin_sse> Function()>();

  ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync>
      cst_new_box_autoadd_enum_dart_opaque_twin_sync() {
    return _cst_new_box_autoadd_enum_dart_opaque_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_dart_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_dart_opaque_twin_sync');
  late final _cst_new_box_autoadd_enum_dart_opaque_twin_sync =
      _cst_new_box_autoadd_enum_dart_opaque_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync> Function()>();

  ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync_sse>
      cst_new_box_autoadd_enum_dart_opaque_twin_sync_sse() {
    return _cst_new_box_autoadd_enum_dart_opaque_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_enum_dart_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_dart_opaque_twin_sync_sse');
  late final _cst_new_box_autoadd_enum_dart_opaque_twin_sync_sse =
      _cst_new_box_autoadd_enum_dart_opaque_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_dart_opaque_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_normal>
      cst_new_box_autoadd_enum_opaque_twin_normal() {
    return _cst_new_box_autoadd_enum_opaque_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_normal');
  late final _cst_new_box_autoadd_enum_opaque_twin_normal =
      _cst_new_box_autoadd_enum_opaque_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_opaque_twin_normal> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async>
      cst_new_box_autoadd_enum_opaque_twin_rust_async() {
    return _cst_new_box_autoadd_enum_opaque_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_rust_async');
  late final _cst_new_box_autoadd_enum_opaque_twin_rust_async =
      _cst_new_box_autoadd_enum_opaque_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_opaque_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_sse>
      cst_new_box_autoadd_enum_opaque_twin_rust_async_sse() {
    return _cst_new_box_autoadd_enum_opaque_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_rust_async_sse');
  late final _cst_new_box_autoadd_enum_opaque_twin_rust_async_sse =
      _cst_new_box_autoadd_enum_opaque_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_sse>
      cst_new_box_autoadd_enum_opaque_twin_sse() {
    return _cst_new_box_autoadd_enum_opaque_twin_sse();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_sse');
  late final _cst_new_box_autoadd_enum_opaque_twin_sse =
      _cst_new_box_autoadd_enum_opaque_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_enum_opaque_twin_sse> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_sync>
      cst_new_box_autoadd_enum_opaque_twin_sync() {
    return _cst_new_box_autoadd_enum_opaque_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_sync');
  late final _cst_new_box_autoadd_enum_opaque_twin_sync =
      _cst_new_box_autoadd_enum_opaque_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_enum_opaque_twin_sync> Function()>();

  ffi.Pointer<wire_cst_enum_opaque_twin_sync_sse>
      cst_new_box_autoadd_enum_opaque_twin_sync_sse() {
    return _cst_new_box_autoadd_enum_opaque_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_enum_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_opaque_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_opaque_twin_sync_sse');
  late final _cst_new_box_autoadd_enum_opaque_twin_sync_sse =
      _cst_new_box_autoadd_enum_opaque_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_opaque_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal>
      cst_new_box_autoadd_enum_with_item_mixed_twin_normal() {
    return _cst_new_box_autoadd_enum_with_item_mixed_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_mixed_twin_normal');
  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_normal =
      _cst_new_box_autoadd_enum_with_item_mixed_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_mixed_twin_normal> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>
      cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async() {
    return _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async');
  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async =
      _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async_sse>
      cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async_sse() {
    return _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async_sse');
  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async_sse =
      _cst_new_box_autoadd_enum_with_item_mixed_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sse>
      cst_new_box_autoadd_enum_with_item_mixed_twin_sse() {
    return _cst_new_box_autoadd_enum_with_item_mixed_twin_sse();
  }

  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_mixed_twin_sse');
  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_sse =
      _cst_new_box_autoadd_enum_with_item_mixed_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sse> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync>
      cst_new_box_autoadd_enum_with_item_mixed_twin_sync() {
    return _cst_new_box_autoadd_enum_with_item_mixed_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_mixed_twin_sync');
  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_sync =
      _cst_new_box_autoadd_enum_with_item_mixed_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync_sse>
      cst_new_box_autoadd_enum_with_item_mixed_twin_sync_sse() {
    return _cst_new_box_autoadd_enum_with_item_mixed_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_mixed_twin_sync_sse');
  late final _cst_new_box_autoadd_enum_with_item_mixed_twin_sync_sse =
      _cst_new_box_autoadd_enum_with_item_mixed_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_mixed_twin_sync_sse>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal>
      cst_new_box_autoadd_enum_with_item_struct_twin_normal() {
    return _cst_new_box_autoadd_enum_with_item_struct_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_with_item_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_struct_twin_normal');
  late final _cst_new_box_autoadd_enum_with_item_struct_twin_normal =
      _cst_new_box_autoadd_enum_with_item_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_struct_twin_normal> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async>
      cst_new_box_autoadd_enum_with_item_struct_twin_rust_async() {
    return _cst_new_box_autoadd_enum_with_item_struct_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_with_item_struct_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_struct_twin_rust_async');
  late final _cst_new_box_autoadd_enum_with_item_struct_twin_rust_async =
      _cst_new_box_autoadd_enum_with_item_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async_sse>
      cst_new_box_autoadd_enum_with_item_struct_twin_rust_async_sse() {
    return _cst_new_box_autoadd_enum_with_item_struct_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_enum_with_item_struct_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_enum_with_item_struct_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_struct_twin_rust_async_sse');
  late final _cst_new_box_autoadd_enum_with_item_struct_twin_rust_async_sse =
      _cst_new_box_autoadd_enum_with_item_struct_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_enum_with_item_struct_twin_sse>
      cst_new_box_autoadd_enum_with_item_struct_twin_sse() {
    return _cst_new_box_autoadd_enum_with_item_struct_twin_sse();
  }

  late final _cst_new_box_autoadd_enum_with_item_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_struct_twin_sse');
  late final _cst_new_box_autoadd_enum_with_item_struct_twin_sse =
      _cst_new_box_autoadd_enum_with_item_struct_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_struct_twin_sse> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync>
      cst_new_box_autoadd_enum_with_item_struct_twin_sync() {
    return _cst_new_box_autoadd_enum_with_item_struct_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_with_item_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_struct_twin_sync');
  late final _cst_new_box_autoadd_enum_with_item_struct_twin_sync =
      _cst_new_box_autoadd_enum_with_item_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync_sse>
      cst_new_box_autoadd_enum_with_item_struct_twin_sync_sse() {
    return _cst_new_box_autoadd_enum_with_item_struct_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_enum_with_item_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_struct_twin_sync_sse');
  late final _cst_new_box_autoadd_enum_with_item_struct_twin_sync_sse =
      _cst_new_box_autoadd_enum_with_item_struct_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_struct_twin_sync_sse>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal>
      cst_new_box_autoadd_enum_with_item_tuple_twin_normal() {
    return _cst_new_box_autoadd_enum_with_item_tuple_twin_normal();
  }

  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_tuple_twin_normal');
  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_normal =
      _cst_new_box_autoadd_enum_with_item_tuple_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_tuple_twin_normal> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>
      cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async() {
    return _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async();
  }

  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async');
  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async =
      _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async_sse>
      cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async_sse() {
    return _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async_sse');
  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async_sse =
      _cst_new_box_autoadd_enum_with_item_tuple_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sse>
      cst_new_box_autoadd_enum_with_item_tuple_twin_sse() {
    return _cst_new_box_autoadd_enum_with_item_tuple_twin_sse();
  }

  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_tuple_twin_sse');
  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_sse =
      _cst_new_box_autoadd_enum_with_item_tuple_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sse> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync>
      cst_new_box_autoadd_enum_with_item_tuple_twin_sync() {
    return _cst_new_box_autoadd_enum_with_item_tuple_twin_sync();
  }

  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_tuple_twin_sync');
  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_sync =
      _cst_new_box_autoadd_enum_with_item_tuple_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync> Function()>();

  ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync_sse>
      cst_new_box_autoadd_enum_with_item_tuple_twin_sync_sse() {
    return _cst_new_box_autoadd_enum_with_item_tuple_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_enum_with_item_tuple_twin_sync_sse');
  late final _cst_new_box_autoadd_enum_with_item_tuple_twin_sync_sse =
      _cst_new_box_autoadd_enum_with_item_tuple_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_enum_with_item_tuple_twin_sync_sse>
              Function()>();

  ffi.Pointer<wire_cst_event_twin_normal>
      cst_new_box_autoadd_event_twin_normal() {
    return _cst_new_box_autoadd_event_twin_normal();
  }

  late final _cst_new_box_autoadd_event_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_event_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_event_twin_normal');
  late final _cst_new_box_autoadd_event_twin_normal =
      _cst_new_box_autoadd_event_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_event_twin_normal> Function()>();

  ffi.Pointer<wire_cst_event_twin_rust_async>
      cst_new_box_autoadd_event_twin_rust_async() {
    return _cst_new_box_autoadd_event_twin_rust_async();
  }

  late final _cst_new_box_autoadd_event_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_event_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_event_twin_rust_async');
  late final _cst_new_box_autoadd_event_twin_rust_async =
      _cst_new_box_autoadd_event_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_event_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_event_twin_rust_async_sse>
      cst_new_box_autoadd_event_twin_rust_async_sse() {
    return _cst_new_box_autoadd_event_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_event_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_event_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_event_twin_rust_async_sse');
  late final _cst_new_box_autoadd_event_twin_rust_async_sse =
      _cst_new_box_autoadd_event_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_event_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_event_twin_sse> cst_new_box_autoadd_event_twin_sse() {
    return _cst_new_box_autoadd_event_twin_sse();
  }

  late final _cst_new_box_autoadd_event_twin_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_event_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_event_twin_sse');
  late final _cst_new_box_autoadd_event_twin_sse =
      _cst_new_box_autoadd_event_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_event_twin_sse> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_new_box_autoadd_exotic_optionals_twin_normal() {
    return _cst_new_box_autoadd_exotic_optionals_twin_normal();
  }

  late final _cst_new_box_autoadd_exotic_optionals_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_exotic_optionals_twin_normal');
  late final _cst_new_box_autoadd_exotic_optionals_twin_normal =
      _cst_new_box_autoadd_exotic_optionals_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_normal> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_new_box_autoadd_exotic_optionals_twin_rust_async() {
    return _cst_new_box_autoadd_exotic_optionals_twin_rust_async();
  }

  late final _cst_new_box_autoadd_exotic_optionals_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_exotic_optionals_twin_rust_async');
  late final _cst_new_box_autoadd_exotic_optionals_twin_rust_async =
      _cst_new_box_autoadd_exotic_optionals_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse>
      cst_new_box_autoadd_exotic_optionals_twin_rust_async_sse() {
    return _cst_new_box_autoadd_exotic_optionals_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_exotic_optionals_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_exotic_optionals_twin_rust_async_sse');
  late final _cst_new_box_autoadd_exotic_optionals_twin_rust_async_sse =
      _cst_new_box_autoadd_exotic_optionals_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse>
              Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_sse>
      cst_new_box_autoadd_exotic_optionals_twin_sse() {
    return _cst_new_box_autoadd_exotic_optionals_twin_sse();
  }

  late final _cst_new_box_autoadd_exotic_optionals_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_exotic_optionals_twin_sse');
  late final _cst_new_box_autoadd_exotic_optionals_twin_sse =
      _cst_new_box_autoadd_exotic_optionals_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_sse> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_new_box_autoadd_exotic_optionals_twin_sync() {
    return _cst_new_box_autoadd_exotic_optionals_twin_sync();
  }

  late final _cst_new_box_autoadd_exotic_optionals_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_exotic_optionals_twin_sync');
  late final _cst_new_box_autoadd_exotic_optionals_twin_sync =
      _cst_new_box_autoadd_exotic_optionals_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_sync> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse>
      cst_new_box_autoadd_exotic_optionals_twin_sync_sse() {
    return _cst_new_box_autoadd_exotic_optionals_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_exotic_optionals_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_exotic_optionals_twin_sync_sse');
  late final _cst_new_box_autoadd_exotic_optionals_twin_sync_sse =
      _cst_new_box_autoadd_exotic_optionals_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse> Function()>();

  ffi.Pointer<ffi.Float> cst_new_box_autoadd_f_32(
    double value,
  ) {
    return _cst_new_box_autoadd_f_32(
      value,
    );
  }

  late final _cst_new_box_autoadd_f_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Float> Function(ffi.Float)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_f_32');
  late final _cst_new_box_autoadd_f_32 = _cst_new_box_autoadd_f_32Ptr
      .asFunction<ffi.Pointer<ffi.Float> Function(double)>();

  ffi.Pointer<ffi.Double> cst_new_box_autoadd_f_64(
    double value,
  ) {
    return _cst_new_box_autoadd_f_64(
      value,
    );
  }

  late final _cst_new_box_autoadd_f_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Double> Function(ffi.Double)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_f_64');
  late final _cst_new_box_autoadd_f_64 = _cst_new_box_autoadd_f_64Ptr
      .asFunction<ffi.Pointer<ffi.Double> Function(double)>();

  ffi.Pointer<wire_cst_feature_chrono_twin_normal>
      cst_new_box_autoadd_feature_chrono_twin_normal() {
    return _cst_new_box_autoadd_feature_chrono_twin_normal();
  }

  late final _cst_new_box_autoadd_feature_chrono_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_chrono_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_chrono_twin_normal');
  late final _cst_new_box_autoadd_feature_chrono_twin_normal =
      _cst_new_box_autoadd_feature_chrono_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_feature_chrono_twin_normal> Function()>();

  ffi.Pointer<wire_cst_feature_chrono_twin_rust_async>
      cst_new_box_autoadd_feature_chrono_twin_rust_async() {
    return _cst_new_box_autoadd_feature_chrono_twin_rust_async();
  }

  late final _cst_new_box_autoadd_feature_chrono_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_chrono_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_chrono_twin_rust_async');
  late final _cst_new_box_autoadd_feature_chrono_twin_rust_async =
      _cst_new_box_autoadd_feature_chrono_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_feature_chrono_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_feature_chrono_twin_sync>
      cst_new_box_autoadd_feature_chrono_twin_sync() {
    return _cst_new_box_autoadd_feature_chrono_twin_sync();
  }

  late final _cst_new_box_autoadd_feature_chrono_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_chrono_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_chrono_twin_sync');
  late final _cst_new_box_autoadd_feature_chrono_twin_sync =
      _cst_new_box_autoadd_feature_chrono_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_feature_chrono_twin_sync> Function()>();

  ffi.Pointer<wire_cst_feature_uuid_twin_normal>
      cst_new_box_autoadd_feature_uuid_twin_normal() {
    return _cst_new_box_autoadd_feature_uuid_twin_normal();
  }

  late final _cst_new_box_autoadd_feature_uuid_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_uuid_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_uuid_twin_normal');
  late final _cst_new_box_autoadd_feature_uuid_twin_normal =
      _cst_new_box_autoadd_feature_uuid_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_feature_uuid_twin_normal> Function()>();

  ffi.Pointer<wire_cst_feature_uuid_twin_rust_async>
      cst_new_box_autoadd_feature_uuid_twin_rust_async() {
    return _cst_new_box_autoadd_feature_uuid_twin_rust_async();
  }

  late final _cst_new_box_autoadd_feature_uuid_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_uuid_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_uuid_twin_rust_async');
  late final _cst_new_box_autoadd_feature_uuid_twin_rust_async =
      _cst_new_box_autoadd_feature_uuid_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_feature_uuid_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_feature_uuid_twin_sync>
      cst_new_box_autoadd_feature_uuid_twin_sync() {
    return _cst_new_box_autoadd_feature_uuid_twin_sync();
  }

  late final _cst_new_box_autoadd_feature_uuid_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feature_uuid_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feature_uuid_twin_sync');
  late final _cst_new_box_autoadd_feature_uuid_twin_sync =
      _cst_new_box_autoadd_feature_uuid_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_feature_uuid_twin_sync> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_normal>
      cst_new_box_autoadd_feed_id_twin_normal() {
    return _cst_new_box_autoadd_feed_id_twin_normal();
  }

  late final _cst_new_box_autoadd_feed_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feed_id_twin_normal');
  late final _cst_new_box_autoadd_feed_id_twin_normal =
      _cst_new_box_autoadd_feed_id_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_feed_id_twin_normal> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_rust_async>
      cst_new_box_autoadd_feed_id_twin_rust_async() {
    return _cst_new_box_autoadd_feed_id_twin_rust_async();
  }

  late final _cst_new_box_autoadd_feed_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feed_id_twin_rust_async');
  late final _cst_new_box_autoadd_feed_id_twin_rust_async =
      _cst_new_box_autoadd_feed_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_feed_id_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_rust_async_sse>
      cst_new_box_autoadd_feed_id_twin_rust_async_sse() {
    return _cst_new_box_autoadd_feed_id_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_feed_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feed_id_twin_rust_async_sse');
  late final _cst_new_box_autoadd_feed_id_twin_rust_async_sse =
      _cst_new_box_autoadd_feed_id_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_feed_id_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_sse>
      cst_new_box_autoadd_feed_id_twin_sse() {
    return _cst_new_box_autoadd_feed_id_twin_sse();
  }

  late final _cst_new_box_autoadd_feed_id_twin_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_feed_id_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feed_id_twin_sse');
  late final _cst_new_box_autoadd_feed_id_twin_sse =
      _cst_new_box_autoadd_feed_id_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_feed_id_twin_sse> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_sync>
      cst_new_box_autoadd_feed_id_twin_sync() {
    return _cst_new_box_autoadd_feed_id_twin_sync();
  }

  late final _cst_new_box_autoadd_feed_id_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_feed_id_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feed_id_twin_sync');
  late final _cst_new_box_autoadd_feed_id_twin_sync =
      _cst_new_box_autoadd_feed_id_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_feed_id_twin_sync> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_sync_sse>
      cst_new_box_autoadd_feed_id_twin_sync_sse() {
    return _cst_new_box_autoadd_feed_id_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_feed_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_feed_id_twin_sync_sse');
  late final _cst_new_box_autoadd_feed_id_twin_sync_sse =
      _cst_new_box_autoadd_feed_id_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_feed_id_twin_sync_sse> Function()>();

  ffi.Pointer<ffi.Int16> cst_new_box_autoadd_i_16(
    int value,
  ) {
    return _cst_new_box_autoadd_i_16(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_16Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int16> Function(ffi.Int16)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_i_16');
  late final _cst_new_box_autoadd_i_16 = _cst_new_box_autoadd_i_16Ptr
      .asFunction<ffi.Pointer<ffi.Int16> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_i_32(
    int value,
  ) {
    return _cst_new_box_autoadd_i_32(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_i_32');
  late final _cst_new_box_autoadd_i_32 = _cst_new_box_autoadd_i_32Ptr
      .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int64> cst_new_box_autoadd_i_64(
    int value,
  ) {
    return _cst_new_box_autoadd_i_64(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_i_64');
  late final _cst_new_box_autoadd_i_64 = _cst_new_box_autoadd_i_64Ptr
      .asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<ffi.Int8> cst_new_box_autoadd_i_8(
    int value,
  ) {
    return _cst_new_box_autoadd_i_8(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_8Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int8> Function(ffi.Int8)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_i_8');
  late final _cst_new_box_autoadd_i_8 = _cst_new_box_autoadd_i_8Ptr
      .asFunction<ffi.Pointer<ffi.Int8> Function(int)>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_normal>
      cst_new_box_autoadd_kitchen_sink_twin_normal() {
    return _cst_new_box_autoadd_kitchen_sink_twin_normal();
  }

  late final _cst_new_box_autoadd_kitchen_sink_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_kitchen_sink_twin_normal');
  late final _cst_new_box_autoadd_kitchen_sink_twin_normal =
      _cst_new_box_autoadd_kitchen_sink_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_normal> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>
      cst_new_box_autoadd_kitchen_sink_twin_rust_async() {
    return _cst_new_box_autoadd_kitchen_sink_twin_rust_async();
  }

  late final _cst_new_box_autoadd_kitchen_sink_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_kitchen_sink_twin_rust_async');
  late final _cst_new_box_autoadd_kitchen_sink_twin_rust_async =
      _cst_new_box_autoadd_kitchen_sink_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse>
      cst_new_box_autoadd_kitchen_sink_twin_rust_async_sse() {
    return _cst_new_box_autoadd_kitchen_sink_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_kitchen_sink_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_kitchen_sink_twin_rust_async_sse');
  late final _cst_new_box_autoadd_kitchen_sink_twin_rust_async_sse =
      _cst_new_box_autoadd_kitchen_sink_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_sse>
      cst_new_box_autoadd_kitchen_sink_twin_sse() {
    return _cst_new_box_autoadd_kitchen_sink_twin_sse();
  }

  late final _cst_new_box_autoadd_kitchen_sink_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_kitchen_sink_twin_sse');
  late final _cst_new_box_autoadd_kitchen_sink_twin_sse =
      _cst_new_box_autoadd_kitchen_sink_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_kitchen_sink_twin_sse> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_sync>
      cst_new_box_autoadd_kitchen_sink_twin_sync() {
    return _cst_new_box_autoadd_kitchen_sink_twin_sync();
  }

  late final _cst_new_box_autoadd_kitchen_sink_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_kitchen_sink_twin_sync');
  late final _cst_new_box_autoadd_kitchen_sink_twin_sync =
      _cst_new_box_autoadd_kitchen_sink_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_sync> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse>
      cst_new_box_autoadd_kitchen_sink_twin_sync_sse() {
    return _cst_new_box_autoadd_kitchen_sink_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_kitchen_sink_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_kitchen_sink_twin_sync_sse');
  late final _cst_new_box_autoadd_kitchen_sink_twin_sync_sse =
      _cst_new_box_autoadd_kitchen_sink_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored>
      cst_new_box_autoadd_list_of_nested_raw_string_mirrored() {
    return _cst_new_box_autoadd_list_of_nested_raw_string_mirrored();
  }

  late final _cst_new_box_autoadd_list_of_nested_raw_string_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_list_of_nested_raw_string_mirrored');
  late final _cst_new_box_autoadd_list_of_nested_raw_string_mirrored =
      _cst_new_box_autoadd_list_of_nested_raw_string_mirroredPtr.asFunction<
          ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored>
              Function()>();

  ffi.Pointer<wire_cst_macro_struct> cst_new_box_autoadd_macro_struct() {
    return _cst_new_box_autoadd_macro_struct();
  }

  late final _cst_new_box_autoadd_macro_structPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_macro_struct> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_macro_struct');
  late final _cst_new_box_autoadd_macro_struct =
      _cst_new_box_autoadd_macro_structPtr
          .asFunction<ffi.Pointer<wire_cst_macro_struct> Function()>();

  ffi.Pointer<wire_cst_measure_twin_normal>
      cst_new_box_autoadd_measure_twin_normal() {
    return _cst_new_box_autoadd_measure_twin_normal();
  }

  late final _cst_new_box_autoadd_measure_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_measure_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_measure_twin_normal');
  late final _cst_new_box_autoadd_measure_twin_normal =
      _cst_new_box_autoadd_measure_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_measure_twin_normal> Function()>();

  ffi.Pointer<wire_cst_measure_twin_rust_async>
      cst_new_box_autoadd_measure_twin_rust_async() {
    return _cst_new_box_autoadd_measure_twin_rust_async();
  }

  late final _cst_new_box_autoadd_measure_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_measure_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_measure_twin_rust_async');
  late final _cst_new_box_autoadd_measure_twin_rust_async =
      _cst_new_box_autoadd_measure_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_measure_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_measure_twin_rust_async_sse>
      cst_new_box_autoadd_measure_twin_rust_async_sse() {
    return _cst_new_box_autoadd_measure_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_measure_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_measure_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_measure_twin_rust_async_sse');
  late final _cst_new_box_autoadd_measure_twin_rust_async_sse =
      _cst_new_box_autoadd_measure_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_measure_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_measure_twin_sse>
      cst_new_box_autoadd_measure_twin_sse() {
    return _cst_new_box_autoadd_measure_twin_sse();
  }

  late final _cst_new_box_autoadd_measure_twin_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_measure_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_measure_twin_sse');
  late final _cst_new_box_autoadd_measure_twin_sse =
      _cst_new_box_autoadd_measure_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_measure_twin_sse> Function()>();

  ffi.Pointer<wire_cst_measure_twin_sync>
      cst_new_box_autoadd_measure_twin_sync() {
    return _cst_new_box_autoadd_measure_twin_sync();
  }

  late final _cst_new_box_autoadd_measure_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_measure_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_measure_twin_sync');
  late final _cst_new_box_autoadd_measure_twin_sync =
      _cst_new_box_autoadd_measure_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_measure_twin_sync> Function()>();

  ffi.Pointer<wire_cst_measure_twin_sync_sse>
      cst_new_box_autoadd_measure_twin_sync_sse() {
    return _cst_new_box_autoadd_measure_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_measure_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_measure_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_measure_twin_sync_sse');
  late final _cst_new_box_autoadd_measure_twin_sync_sse =
      _cst_new_box_autoadd_measure_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_measure_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_message_id_twin_normal>
      cst_new_box_autoadd_message_id_twin_normal() {
    return _cst_new_box_autoadd_message_id_twin_normal();
  }

  late final _cst_new_box_autoadd_message_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_message_id_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_message_id_twin_normal');
  late final _cst_new_box_autoadd_message_id_twin_normal =
      _cst_new_box_autoadd_message_id_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_message_id_twin_normal> Function()>();

  ffi.Pointer<wire_cst_message_id_twin_rust_async>
      cst_new_box_autoadd_message_id_twin_rust_async() {
    return _cst_new_box_autoadd_message_id_twin_rust_async();
  }

  late final _cst_new_box_autoadd_message_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_message_id_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_message_id_twin_rust_async');
  late final _cst_new_box_autoadd_message_id_twin_rust_async =
      _cst_new_box_autoadd_message_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_message_id_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_message_id_twin_rust_async_sse>
      cst_new_box_autoadd_message_id_twin_rust_async_sse() {
    return _cst_new_box_autoadd_message_id_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_message_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_message_id_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_message_id_twin_rust_async_sse');
  late final _cst_new_box_autoadd_message_id_twin_rust_async_sse =
      _cst_new_box_autoadd_message_id_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_message_id_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_message_id_twin_sse>
      cst_new_box_autoadd_message_id_twin_sse() {
    return _cst_new_box_autoadd_message_id_twin_sse();
  }

  late final _cst_new_box_autoadd_message_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_message_id_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_message_id_twin_sse');
  late final _cst_new_box_autoadd_message_id_twin_sse =
      _cst_new_box_autoadd_message_id_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_message_id_twin_sse> Function()>();

  ffi.Pointer<wire_cst_message_id_twin_sync>
      cst_new_box_autoadd_message_id_twin_sync() {
    return _cst_new_box_autoadd_message_id_twin_sync();
  }

  late final _cst_new_box_autoadd_message_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_message_id_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_message_id_twin_sync');
  late final _cst_new_box_autoadd_message_id_twin_sync =
      _cst_new_box_autoadd_message_id_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_message_id_twin_sync> Function()>();

  ffi.Pointer<wire_cst_message_id_twin_sync_sse>
      cst_new_box_autoadd_message_id_twin_sync_sse() {
    return _cst_new_box_autoadd_message_id_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_message_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_message_id_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_message_id_twin_sync_sse');
  late final _cst_new_box_autoadd_message_id_twin_sync_sse =
      _cst_new_box_autoadd_message_id_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_message_id_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_my_nested_struct_twin_normal>
      cst_new_box_autoadd_my_nested_struct_twin_normal() {
    return _cst_new_box_autoadd_my_nested_struct_twin_normal();
  }

  late final _cst_new_box_autoadd_my_nested_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_nested_struct_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_nested_struct_twin_normal');
  late final _cst_new_box_autoadd_my_nested_struct_twin_normal =
      _cst_new_box_autoadd_my_nested_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_my_nested_struct_twin_normal> Function()>();

  ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async>
      cst_new_box_autoadd_my_nested_struct_twin_rust_async() {
    return _cst_new_box_autoadd_my_nested_struct_twin_rust_async();
  }

  late final _cst_new_box_autoadd_my_nested_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_nested_struct_twin_rust_async');
  late final _cst_new_box_autoadd_my_nested_struct_twin_rust_async =
      _cst_new_box_autoadd_my_nested_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async_sse>
      cst_new_box_autoadd_my_nested_struct_twin_rust_async_sse() {
    return _cst_new_box_autoadd_my_nested_struct_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_my_nested_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_nested_struct_twin_rust_async_sse');
  late final _cst_new_box_autoadd_my_nested_struct_twin_rust_async_sse =
      _cst_new_box_autoadd_my_nested_struct_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_my_nested_struct_twin_rust_async_sse>
              Function()>();

  ffi.Pointer<wire_cst_my_nested_struct_twin_sse>
      cst_new_box_autoadd_my_nested_struct_twin_sse() {
    return _cst_new_box_autoadd_my_nested_struct_twin_sse();
  }

  late final _cst_new_box_autoadd_my_nested_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_nested_struct_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_nested_struct_twin_sse');
  late final _cst_new_box_autoadd_my_nested_struct_twin_sse =
      _cst_new_box_autoadd_my_nested_struct_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_my_nested_struct_twin_sse> Function()>();

  ffi.Pointer<wire_cst_my_nested_struct_twin_sync>
      cst_new_box_autoadd_my_nested_struct_twin_sync() {
    return _cst_new_box_autoadd_my_nested_struct_twin_sync();
  }

  late final _cst_new_box_autoadd_my_nested_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_nested_struct_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_nested_struct_twin_sync');
  late final _cst_new_box_autoadd_my_nested_struct_twin_sync =
      _cst_new_box_autoadd_my_nested_struct_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_my_nested_struct_twin_sync> Function()>();

  ffi.Pointer<wire_cst_my_nested_struct_twin_sync_sse>
      cst_new_box_autoadd_my_nested_struct_twin_sync_sse() {
    return _cst_new_box_autoadd_my_nested_struct_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_my_nested_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_nested_struct_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_nested_struct_twin_sync_sse');
  late final _cst_new_box_autoadd_my_nested_struct_twin_sync_sse =
      _cst_new_box_autoadd_my_nested_struct_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_my_nested_struct_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_my_size> cst_new_box_autoadd_my_size() {
    return _cst_new_box_autoadd_my_size();
  }

  late final _cst_new_box_autoadd_my_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_my_size> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_size');
  late final _cst_new_box_autoadd_my_size = _cst_new_box_autoadd_my_sizePtr
      .asFunction<ffi.Pointer<wire_cst_my_size> Function()>();

  ffi.Pointer<wire_cst_my_struct> cst_new_box_autoadd_my_struct() {
    return _cst_new_box_autoadd_my_struct();
  }

  late final _cst_new_box_autoadd_my_structPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_my_struct> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_struct');
  late final _cst_new_box_autoadd_my_struct = _cst_new_box_autoadd_my_structPtr
      .asFunction<ffi.Pointer<wire_cst_my_struct> Function()>();

  ffi.Pointer<wire_cst_my_tree_node_twin_normal>
      cst_new_box_autoadd_my_tree_node_twin_normal() {
    return _cst_new_box_autoadd_my_tree_node_twin_normal();
  }

  late final _cst_new_box_autoadd_my_tree_node_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_tree_node_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_tree_node_twin_normal');
  late final _cst_new_box_autoadd_my_tree_node_twin_normal =
      _cst_new_box_autoadd_my_tree_node_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_my_tree_node_twin_normal> Function()>();

  ffi.Pointer<wire_cst_my_tree_node_twin_rust_async>
      cst_new_box_autoadd_my_tree_node_twin_rust_async() {
    return _cst_new_box_autoadd_my_tree_node_twin_rust_async();
  }

  late final _cst_new_box_autoadd_my_tree_node_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_tree_node_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_tree_node_twin_rust_async');
  late final _cst_new_box_autoadd_my_tree_node_twin_rust_async =
      _cst_new_box_autoadd_my_tree_node_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_my_tree_node_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_my_tree_node_twin_rust_async_sse>
      cst_new_box_autoadd_my_tree_node_twin_rust_async_sse() {
    return _cst_new_box_autoadd_my_tree_node_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_my_tree_node_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_tree_node_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_tree_node_twin_rust_async_sse');
  late final _cst_new_box_autoadd_my_tree_node_twin_rust_async_sse =
      _cst_new_box_autoadd_my_tree_node_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_my_tree_node_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_my_tree_node_twin_sse>
      cst_new_box_autoadd_my_tree_node_twin_sse() {
    return _cst_new_box_autoadd_my_tree_node_twin_sse();
  }

  late final _cst_new_box_autoadd_my_tree_node_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_tree_node_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_tree_node_twin_sse');
  late final _cst_new_box_autoadd_my_tree_node_twin_sse =
      _cst_new_box_autoadd_my_tree_node_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_my_tree_node_twin_sse> Function()>();

  ffi.Pointer<wire_cst_my_tree_node_twin_sync>
      cst_new_box_autoadd_my_tree_node_twin_sync() {
    return _cst_new_box_autoadd_my_tree_node_twin_sync();
  }

  late final _cst_new_box_autoadd_my_tree_node_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_tree_node_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_tree_node_twin_sync');
  late final _cst_new_box_autoadd_my_tree_node_twin_sync =
      _cst_new_box_autoadd_my_tree_node_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_my_tree_node_twin_sync> Function()>();

  ffi.Pointer<wire_cst_my_tree_node_twin_sync_sse>
      cst_new_box_autoadd_my_tree_node_twin_sync_sse() {
    return _cst_new_box_autoadd_my_tree_node_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_my_tree_node_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_my_tree_node_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_my_tree_node_twin_sync_sse');
  late final _cst_new_box_autoadd_my_tree_node_twin_sync_sse =
      _cst_new_box_autoadd_my_tree_node_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_my_tree_node_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_nested_raw_string_mirrored>
      cst_new_box_autoadd_nested_raw_string_mirrored() {
    return _cst_new_box_autoadd_nested_raw_string_mirrored();
  }

  late final _cst_new_box_autoadd_nested_raw_string_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_nested_raw_string_mirrored> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_nested_raw_string_mirrored');
  late final _cst_new_box_autoadd_nested_raw_string_mirrored =
      _cst_new_box_autoadd_nested_raw_string_mirroredPtr.asFunction<
          ffi.Pointer<wire_cst_nested_raw_string_mirrored> Function()>();

  ffi.Pointer<wire_cst_new_type_int_twin_normal>
      cst_new_box_autoadd_new_type_int_twin_normal() {
    return _cst_new_box_autoadd_new_type_int_twin_normal();
  }

  late final _cst_new_box_autoadd_new_type_int_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_new_type_int_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_new_type_int_twin_normal');
  late final _cst_new_box_autoadd_new_type_int_twin_normal =
      _cst_new_box_autoadd_new_type_int_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_new_type_int_twin_normal> Function()>();

  ffi.Pointer<wire_cst_new_type_int_twin_rust_async>
      cst_new_box_autoadd_new_type_int_twin_rust_async() {
    return _cst_new_box_autoadd_new_type_int_twin_rust_async();
  }

  late final _cst_new_box_autoadd_new_type_int_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_new_type_int_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_new_type_int_twin_rust_async');
  late final _cst_new_box_autoadd_new_type_int_twin_rust_async =
      _cst_new_box_autoadd_new_type_int_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_new_type_int_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_new_type_int_twin_rust_async_sse>
      cst_new_box_autoadd_new_type_int_twin_rust_async_sse() {
    return _cst_new_box_autoadd_new_type_int_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_new_type_int_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_new_type_int_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_new_type_int_twin_rust_async_sse');
  late final _cst_new_box_autoadd_new_type_int_twin_rust_async_sse =
      _cst_new_box_autoadd_new_type_int_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_new_type_int_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_new_type_int_twin_sse>
      cst_new_box_autoadd_new_type_int_twin_sse() {
    return _cst_new_box_autoadd_new_type_int_twin_sse();
  }

  late final _cst_new_box_autoadd_new_type_int_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_new_type_int_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_new_type_int_twin_sse');
  late final _cst_new_box_autoadd_new_type_int_twin_sse =
      _cst_new_box_autoadd_new_type_int_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_new_type_int_twin_sse> Function()>();

  ffi.Pointer<wire_cst_new_type_int_twin_sync>
      cst_new_box_autoadd_new_type_int_twin_sync() {
    return _cst_new_box_autoadd_new_type_int_twin_sync();
  }

  late final _cst_new_box_autoadd_new_type_int_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_new_type_int_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_new_type_int_twin_sync');
  late final _cst_new_box_autoadd_new_type_int_twin_sync =
      _cst_new_box_autoadd_new_type_int_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_new_type_int_twin_sync> Function()>();

  ffi.Pointer<wire_cst_new_type_int_twin_sync_sse>
      cst_new_box_autoadd_new_type_int_twin_sync_sse() {
    return _cst_new_box_autoadd_new_type_int_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_new_type_int_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_new_type_int_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_new_type_int_twin_sync_sse');
  late final _cst_new_box_autoadd_new_type_int_twin_sync_sse =
      _cst_new_box_autoadd_new_type_int_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_new_type_int_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_note_twin_normal>
      cst_new_box_autoadd_note_twin_normal() {
    return _cst_new_box_autoadd_note_twin_normal();
  }

  late final _cst_new_box_autoadd_note_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_note_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_note_twin_normal');
  late final _cst_new_box_autoadd_note_twin_normal =
      _cst_new_box_autoadd_note_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_note_twin_normal> Function()>();

  ffi.Pointer<wire_cst_note_twin_rust_async>
      cst_new_box_autoadd_note_twin_rust_async() {
    return _cst_new_box_autoadd_note_twin_rust_async();
  }

  late final _cst_new_box_autoadd_note_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_note_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_note_twin_rust_async');
  late final _cst_new_box_autoadd_note_twin_rust_async =
      _cst_new_box_autoadd_note_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_note_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_note_twin_rust_async_sse>
      cst_new_box_autoadd_note_twin_rust_async_sse() {
    return _cst_new_box_autoadd_note_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_note_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_note_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_note_twin_rust_async_sse');
  late final _cst_new_box_autoadd_note_twin_rust_async_sse =
      _cst_new_box_autoadd_note_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_note_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_note_twin_sse> cst_new_box_autoadd_note_twin_sse() {
    return _cst_new_box_autoadd_note_twin_sse();
  }

  late final _cst_new_box_autoadd_note_twin_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_note_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_note_twin_sse');
  late final _cst_new_box_autoadd_note_twin_sse =
      _cst_new_box_autoadd_note_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_note_twin_sse> Function()>();

  ffi.Pointer<wire_cst_note_twin_sync> cst_new_box_autoadd_note_twin_sync() {
    return _cst_new_box_autoadd_note_twin_sync();
  }

  late final _cst_new_box_autoadd_note_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_note_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_note_twin_sync');
  late final _cst_new_box_autoadd_note_twin_sync =
      _cst_new_box_autoadd_note_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_note_twin_sync> Function()>();

  ffi.Pointer<wire_cst_note_twin_sync_sse>
      cst_new_box_autoadd_note_twin_sync_sse() {
    return _cst_new_box_autoadd_note_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_note_twin_sync_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_note_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_note_twin_sync_sse');
  late final _cst_new_box_autoadd_note_twin_sync_sse =
      _cst_new_box_autoadd_note_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_note_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_numbers> cst_new_box_autoadd_numbers() {
    return _cst_new_box_autoadd_numbers();
  }

  late final _cst_new_box_autoadd_numbersPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_numbers> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_numbers');
  late final _cst_new_box_autoadd_numbers = _cst_new_box_autoadd_numbersPtr
      .asFunction<ffi.Pointer<wire_cst_numbers> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_normal>
      cst_new_box_autoadd_opaque_nested_twin_normal() {
    return _cst_new_box_autoadd_opaque_nested_twin_normal();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_normal');
  late final _cst_new_box_autoadd_opaque_nested_twin_normal =
      _cst_new_box_autoadd_opaque_nested_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_normal> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async>
      cst_new_box_autoadd_opaque_nested_twin_rust_async() {
    return _cst_new_box_autoadd_opaque_nested_twin_rust_async();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_rust_async');
  late final _cst_new_box_autoadd_opaque_nested_twin_rust_async =
      _cst_new_box_autoadd_opaque_nested_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_sse>
      cst_new_box_autoadd_opaque_nested_twin_rust_async_sse() {
    return _cst_new_box_autoadd_opaque_nested_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_rust_async_sse');
  late final _cst_new_box_autoadd_opaque_nested_twin_rust_async_sse =
      _cst_new_box_autoadd_opaque_nested_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_sse>
      cst_new_box_autoadd_opaque_nested_twin_sse() {
    return _cst_new_box_autoadd_opaque_nested_twin_sse();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_sse');
  late final _cst_new_box_autoadd_opaque_nested_twin_sse =
      _cst_new_box_autoadd_opaque_nested_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_sse> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_sync>
      cst_new_box_autoadd_opaque_nested_twin_sync() {
    return _cst_new_box_autoadd_opaque_nested_twin_sync();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_sync');
  late final _cst_new_box_autoadd_opaque_nested_twin_sync =
      _cst_new_box_autoadd_opaque_nested_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_sync> Function()>();

  ffi.Pointer<wire_cst_opaque_nested_twin_sync_sse>
      cst_new_box_autoadd_opaque_nested_twin_sync_sse() {
    return _cst_new_box_autoadd_opaque_nested_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_opaque_nested_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opaque_nested_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opaque_nested_twin_sync_sse');
  late final _cst_new_box_autoadd_opaque_nested_twin_sync_sse =
      _cst_new_box_autoadd_opaque_nested_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_opaque_nested_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_opt_vecs_twin_normal>
      cst_new_box_autoadd_opt_vecs_twin_normal() {
    return _cst_new_box_autoadd_opt_vecs_twin_normal();
  }

  late final _cst_new_box_autoadd_opt_vecs_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opt_vecs_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opt_vecs_twin_normal');
  late final _cst_new_box_autoadd_opt_vecs_twin_normal =
      _cst_new_box_autoadd_opt_vecs_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_opt_vecs_twin_normal> Function()>();

  ffi.Pointer<wire_cst_opt_vecs_twin_rust_async>
      cst_new_box_autoadd_opt_vecs_twin_rust_async() {
    return _cst_new_box_autoadd_opt_vecs_twin_rust_async();
  }

  late final _cst_new_box_autoadd_opt_vecs_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opt_vecs_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opt_vecs_twin_rust_async');
  late final _cst_new_box_autoadd_opt_vecs_twin_rust_async =
      _cst_new_box_autoadd_opt_vecs_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_opt_vecs_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_opt_vecs_twin_rust_async_sse>
      cst_new_box_autoadd_opt_vecs_twin_rust_async_sse() {
    return _cst_new_box_autoadd_opt_vecs_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_opt_vecs_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opt_vecs_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opt_vecs_twin_rust_async_sse');
  late final _cst_new_box_autoadd_opt_vecs_twin_rust_async_sse =
      _cst_new_box_autoadd_opt_vecs_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_opt_vecs_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_opt_vecs_twin_sse>
      cst_new_box_autoadd_opt_vecs_twin_sse() {
    return _cst_new_box_autoadd_opt_vecs_twin_sse();
  }

  late final _cst_new_box_autoadd_opt_vecs_twin_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_opt_vecs_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opt_vecs_twin_sse');
  late final _cst_new_box_autoadd_opt_vecs_twin_sse =
      _cst_new_box_autoadd_opt_vecs_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_opt_vecs_twin_sse> Function()>();

  ffi.Pointer<wire_cst_opt_vecs_twin_sync>
      cst_new_box_autoadd_opt_vecs_twin_sync() {
    return _cst_new_box_autoadd_opt_vecs_twin_sync();
  }

  late final _cst_new_box_autoadd_opt_vecs_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_opt_vecs_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opt_vecs_twin_sync');
  late final _cst_new_box_autoadd_opt_vecs_twin_sync =
      _cst_new_box_autoadd_opt_vecs_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_opt_vecs_twin_sync> Function()>();

  ffi.Pointer<wire_cst_opt_vecs_twin_sync_sse>
      cst_new_box_autoadd_opt_vecs_twin_sync_sse() {
    return _cst_new_box_autoadd_opt_vecs_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_opt_vecs_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_opt_vecs_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_opt_vecs_twin_sync_sse');
  late final _cst_new_box_autoadd_opt_vecs_twin_sync_sse =
      _cst_new_box_autoadd_opt_vecs_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_opt_vecs_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_raw_string_mirrored>
      cst_new_box_autoadd_raw_string_mirrored() {
    return _cst_new_box_autoadd_raw_string_mirrored();
  }

  late final _cst_new_box_autoadd_raw_string_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_raw_string_mirrored> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_raw_string_mirrored');
  late final _cst_new_box_autoadd_raw_string_mirrored =
      _cst_new_box_autoadd_raw_string_mirroredPtr
          .asFunction<ffi.Pointer<wire_cst_raw_string_mirrored> Function()>();

  ffi.Pointer<wire_cst_record_string_i_32>
      cst_new_box_autoadd_record_string_i_32() {
    return _cst_new_box_autoadd_record_string_i_32();
  }

  late final _cst_new_box_autoadd_record_string_i_32Ptr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_record_string_i_32> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_record_string_i_32');
  late final _cst_new_box_autoadd_record_string_i_32 =
      _cst_new_box_autoadd_record_string_i_32Ptr
          .asFunction<ffi.Pointer<wire_cst_record_string_i_32> Function()>();

  ffi.Pointer<wire_cst_sequences> cst_new_box_autoadd_sequences() {
    return _cst_new_box_autoadd_sequences();
  }

  late final _cst_new_box_autoadd_sequencesPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_sequences> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sequences');
  late final _cst_new_box_autoadd_sequences = _cst_new_box_autoadd_sequencesPtr
      .asFunction<ffi.Pointer<wire_cst_sequences> Function()>();

  ffi.Pointer<wire_cst_some_struct_twin_normal>
      cst_new_box_autoadd_some_struct_twin_normal() {
    return _cst_new_box_autoadd_some_struct_twin_normal();
  }

  late final _cst_new_box_autoadd_some_struct_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_some_struct_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_some_struct_twin_normal');
  late final _cst_new_box_autoadd_some_struct_twin_normal =
      _cst_new_box_autoadd_some_struct_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_some_struct_twin_normal> Function()>();

  ffi.Pointer<wire_cst_some_struct_twin_rust_async>
      cst_new_box_autoadd_some_struct_twin_rust_async() {
    return _cst_new_box_autoadd_some_struct_twin_rust_async();
  }

  late final _cst_new_box_autoadd_some_struct_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_some_struct_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_some_struct_twin_rust_async');
  late final _cst_new_box_autoadd_some_struct_twin_rust_async =
      _cst_new_box_autoadd_some_struct_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_some_struct_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_some_struct_twin_rust_async_sse>
      cst_new_box_autoadd_some_struct_twin_rust_async_sse() {
    return _cst_new_box_autoadd_some_struct_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_some_struct_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_some_struct_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_some_struct_twin_rust_async_sse');
  late final _cst_new_box_autoadd_some_struct_twin_rust_async_sse =
      _cst_new_box_autoadd_some_struct_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_some_struct_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_some_struct_twin_sse>
      cst_new_box_autoadd_some_struct_twin_sse() {
    return _cst_new_box_autoadd_some_struct_twin_sse();
  }

  late final _cst_new_box_autoadd_some_struct_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_some_struct_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_some_struct_twin_sse');
  late final _cst_new_box_autoadd_some_struct_twin_sse =
      _cst_new_box_autoadd_some_struct_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_some_struct_twin_sse> Function()>();

  ffi.Pointer<wire_cst_some_struct_twin_sync>
      cst_new_box_autoadd_some_struct_twin_sync() {
    return _cst_new_box_autoadd_some_struct_twin_sync();
  }

  late final _cst_new_box_autoadd_some_struct_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_some_struct_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_some_struct_twin_sync');
  late final _cst_new_box_autoadd_some_struct_twin_sync =
      _cst_new_box_autoadd_some_struct_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_some_struct_twin_sync> Function()>();

  ffi.Pointer<wire_cst_some_struct_twin_sync_sse>
      cst_new_box_autoadd_some_struct_twin_sync_sse() {
    return _cst_new_box_autoadd_some_struct_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_some_struct_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_some_struct_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_some_struct_twin_sync_sse');
  late final _cst_new_box_autoadd_some_struct_twin_sync_sse =
      _cst_new_box_autoadd_some_struct_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_some_struct_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_struct_with_comments_twin_normal>
      cst_new_box_autoadd_struct_with_comments_twin_normal() {
    return _cst_new_box_autoadd_struct_with_comments_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_comments_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_comments_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_comments_twin_normal');
  late final _cst_new_box_autoadd_struct_with_comments_twin_normal =
      _cst_new_box_autoadd_struct_with_comments_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_comments_twin_normal> Function()>();

  ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async>
      cst_new_box_autoadd_struct_with_comments_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_comments_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_comments_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_comments_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_comments_twin_rust_async =
      _cst_new_box_autoadd_struct_with_comments_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async_sse>
      cst_new_box_autoadd_struct_with_comments_twin_rust_async_sse() {
    return _cst_new_box_autoadd_struct_with_comments_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_struct_with_comments_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_comments_twin_rust_async_sse');
  late final _cst_new_box_autoadd_struct_with_comments_twin_rust_async_sse =
      _cst_new_box_autoadd_struct_with_comments_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_struct_with_comments_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_comments_twin_sse>
      cst_new_box_autoadd_struct_with_comments_twin_sse() {
    return _cst_new_box_autoadd_struct_with_comments_twin_sse();
  }

  late final _cst_new_box_autoadd_struct_with_comments_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_comments_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_comments_twin_sse');
  late final _cst_new_box_autoadd_struct_with_comments_twin_sse =
      _cst_new_box_autoadd_struct_with_comments_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_comments_twin_sse> Function()>();

  ffi.Pointer<wire_cst_struct_with_comments_twin_sync>
      cst_new_box_autoadd_struct_with_comments_twin_sync() {
    return _cst_new_box_autoadd_struct_with_comments_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_comments_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_comments_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_comments_twin_sync');
  late final _cst_new_box_autoadd_struct_with_comments_twin_sync =
      _cst_new_box_autoadd_struct_with_comments_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_comments_twin_sync> Function()>();

  ffi.Pointer<wire_cst_struct_with_comments_twin_sync_sse>
      cst_new_box_autoadd_struct_with_comments_twin_sync_sse() {
    return _cst_new_box_autoadd_struct_with_comments_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_struct_with_comments_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_comments_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_comments_twin_sync_sse');
  late final _cst_new_box_autoadd_struct_with_comments_twin_sync_sse =
      _cst_new_box_autoadd_struct_with_comments_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_comments_twin_sync_sse>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_enum_twin_normal>
      cst_new_box_autoadd_struct_with_enum_twin_normal() {
    return _cst_new_box_autoadd_struct_with_enum_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_enum_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_enum_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_enum_twin_normal');
  late final _cst_new_box_autoadd_struct_with_enum_twin_normal =
      _cst_new_box_autoadd_struct_with_enum_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_enum_twin_normal> Function()>();

  ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async>
      cst_new_box_autoadd_struct_with_enum_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_enum_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_enum_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_enum_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_enum_twin_rust_async =
      _cst_new_box_autoadd_struct_with_enum_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async_sse>
      cst_new_box_autoadd_struct_with_enum_twin_rust_async_sse() {
    return _cst_new_box_autoadd_struct_with_enum_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_struct_with_enum_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_enum_twin_rust_async_sse');
  late final _cst_new_box_autoadd_struct_with_enum_twin_rust_async_sse =
      _cst_new_box_autoadd_struct_with_enum_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_enum_twin_rust_async_sse>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_enum_twin_sse>
      cst_new_box_autoadd_struct_with_enum_twin_sse() {
    return _cst_new_box_autoadd_struct_with_enum_twin_sse();
  }

  late final _cst_new_box_autoadd_struct_with_enum_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_enum_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_enum_twin_sse');
  late final _cst_new_box_autoadd_struct_with_enum_twin_sse =
      _cst_new_box_autoadd_struct_with_enum_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_enum_twin_sse> Function()>();

  ffi.Pointer<wire_cst_struct_with_enum_twin_sync>
      cst_new_box_autoadd_struct_with_enum_twin_sync() {
    return _cst_new_box_autoadd_struct_with_enum_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_enum_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_enum_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_enum_twin_sync');
  late final _cst_new_box_autoadd_struct_with_enum_twin_sync =
      _cst_new_box_autoadd_struct_with_enum_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_enum_twin_sync> Function()>();

  ffi.Pointer<wire_cst_struct_with_enum_twin_sync_sse>
      cst_new_box_autoadd_struct_with_enum_twin_sync_sse() {
    return _cst_new_box_autoadd_struct_with_enum_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_struct_with_enum_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_enum_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_enum_twin_sync_sse');
  late final _cst_new_box_autoadd_struct_with_enum_twin_sync_sse =
      _cst_new_box_autoadd_struct_with_enum_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_enum_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_struct_with_one_field_twin_normal>
      cst_new_box_autoadd_struct_with_one_field_twin_normal() {
    return _cst_new_box_autoadd_struct_with_one_field_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_one_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_one_field_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_one_field_twin_normal');
  late final _cst_new_box_autoadd_struct_with_one_field_twin_normal =
      _cst_new_box_autoadd_struct_with_one_field_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_one_field_twin_normal> Function()>();

  ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async>
      cst_new_box_autoadd_struct_with_one_field_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_one_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_one_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_one_field_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_one_field_twin_rust_async =
      _cst_new_box_autoadd_struct_with_one_field_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async_sse>
      cst_new_box_autoadd_struct_with_one_field_twin_rust_async_sse() {
    return _cst_new_box_autoadd_struct_with_one_field_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_struct_with_one_field_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_one_field_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_one_field_twin_rust_async_sse');
  late final _cst_new_box_autoadd_struct_with_one_field_twin_rust_async_sse =
      _cst_new_box_autoadd_struct_with_one_field_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_struct_with_one_field_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_one_field_twin_sse>
      cst_new_box_autoadd_struct_with_one_field_twin_sse() {
    return _cst_new_box_autoadd_struct_with_one_field_twin_sse();
  }

  late final _cst_new_box_autoadd_struct_with_one_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_one_field_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_one_field_twin_sse');
  late final _cst_new_box_autoadd_struct_with_one_field_twin_sse =
      _cst_new_box_autoadd_struct_with_one_field_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_one_field_twin_sse> Function()>();

  ffi.Pointer<wire_cst_struct_with_one_field_twin_sync>
      cst_new_box_autoadd_struct_with_one_field_twin_sync() {
    return _cst_new_box_autoadd_struct_with_one_field_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_one_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_one_field_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_one_field_twin_sync');
  late final _cst_new_box_autoadd_struct_with_one_field_twin_sync =
      _cst_new_box_autoadd_struct_with_one_field_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_one_field_twin_sync> Function()>();

  ffi.Pointer<wire_cst_struct_with_one_field_twin_sync_sse>
      cst_new_box_autoadd_struct_with_one_field_twin_sync_sse() {
    return _cst_new_box_autoadd_struct_with_one_field_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_struct_with_one_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_one_field_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_one_field_twin_sync_sse');
  late final _cst_new_box_autoadd_struct_with_one_field_twin_sync_sse =
      _cst_new_box_autoadd_struct_with_one_field_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_one_field_twin_sync_sse>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_two_field_twin_normal>
      cst_new_box_autoadd_struct_with_two_field_twin_normal() {
    return _cst_new_box_autoadd_struct_with_two_field_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_two_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_two_field_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_two_field_twin_normal');
  late final _cst_new_box_autoadd_struct_with_two_field_twin_normal =
      _cst_new_box_autoadd_struct_with_two_field_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_two_field_twin_normal> Function()>();

  ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async>
      cst_new_box_autoadd_struct_with_two_field_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_two_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_two_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_two_field_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_two_field_twin_rust_async =
      _cst_new_box_autoadd_struct_with_two_field_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async_sse>
      cst_new_box_autoadd_struct_with_two_field_twin_rust_async_sse() {
    return _cst_new_box_autoadd_struct_with_two_field_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_struct_with_two_field_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_two_field_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_two_field_twin_rust_async_sse');
  late final _cst_new_box_autoadd_struct_with_two_field_twin_rust_async_sse =
      _cst_new_box_autoadd_struct_with_two_field_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_struct_with_two_field_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_two_field_twin_sse>
      cst_new_box_autoadd_struct_with_two_field_twin_sse() {
    return _cst_new_box_autoadd_struct_with_two_field_twin_sse();
  }

  late final _cst_new_box_autoadd_struct_with_two_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_two_field_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_two_field_twin_sse');
  late final _cst_new_box_autoadd_struct_with_two_field_twin_sse =
      _cst_new_box_autoadd_struct_with_two_field_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_two_field_twin_sse> Function()>();

  ffi.Pointer<wire_cst_struct_with_two_field_twin_sync>
      cst_new_box_autoadd_struct_with_two_field_twin_sync() {
    return _cst_new_box_autoadd_struct_with_two_field_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_two_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_two_field_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_two_field_twin_sync');
  late final _cst_new_box_autoadd_struct_with_two_field_twin_sync =
      _cst_new_box_autoadd_struct_with_two_field_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_two_field_twin_sync> Function()>();

  ffi.Pointer<wire_cst_struct_with_two_field_twin_sync_sse>
      cst_new_box_autoadd_struct_with_two_field_twin_sync_sse() {
    return _cst_new_box_autoadd_struct_with_two_field_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_struct_with_two_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_two_field_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_two_field_twin_sync_sse');
  late final _cst_new_box_autoadd_struct_with_two_field_twin_sync_sse =
      _cst_new_box_autoadd_struct_with_two_field_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_two_field_twin_sync_sse>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>
      cst_new_box_autoadd_struct_with_zero_field_twin_normal() {
    return _cst_new_box_autoadd_struct_with_zero_field_twin_normal();
  }

  late final _cst_new_box_autoadd_struct_with_zero_field_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_zero_field_twin_normal');
  late final _cst_new_box_autoadd_struct_with_zero_field_twin_normal =
      _cst_new_box_autoadd_struct_with_zero_field_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_zero_field_twin_normal>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async>
      cst_new_box_autoadd_struct_with_zero_field_twin_rust_async() {
    return _cst_new_box_autoadd_struct_with_zero_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_struct_with_zero_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_zero_field_twin_rust_async');
  late final _cst_new_box_autoadd_struct_with_zero_field_twin_rust_async =
      _cst_new_box_autoadd_struct_with_zero_field_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async_sse>
      cst_new_box_autoadd_struct_with_zero_field_twin_rust_async_sse() {
    return _cst_new_box_autoadd_struct_with_zero_field_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_struct_with_zero_field_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_struct_with_zero_field_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_zero_field_twin_rust_async_sse');
  late final _cst_new_box_autoadd_struct_with_zero_field_twin_rust_async_sse =
      _cst_new_box_autoadd_struct_with_zero_field_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_struct_with_zero_field_twin_sse>
      cst_new_box_autoadd_struct_with_zero_field_twin_sse() {
    return _cst_new_box_autoadd_struct_with_zero_field_twin_sse();
  }

  late final _cst_new_box_autoadd_struct_with_zero_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_zero_field_twin_sse');
  late final _cst_new_box_autoadd_struct_with_zero_field_twin_sse =
      _cst_new_box_autoadd_struct_with_zero_field_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_zero_field_twin_sse> Function()>();

  ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync>
      cst_new_box_autoadd_struct_with_zero_field_twin_sync() {
    return _cst_new_box_autoadd_struct_with_zero_field_twin_sync();
  }

  late final _cst_new_box_autoadd_struct_with_zero_field_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_zero_field_twin_sync');
  late final _cst_new_box_autoadd_struct_with_zero_field_twin_sync =
      _cst_new_box_autoadd_struct_with_zero_field_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync> Function()>();

  ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync_sse>
      cst_new_box_autoadd_struct_with_zero_field_twin_sync_sse() {
    return _cst_new_box_autoadd_struct_with_zero_field_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_struct_with_zero_field_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_struct_with_zero_field_twin_sync_sse');
  late final _cst_new_box_autoadd_struct_with_zero_field_twin_sync_sse =
      _cst_new_box_autoadd_struct_with_zero_field_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_struct_with_zero_field_twin_sync_sse>
              Function()>();

  ffi.Pointer<wire_cst_sum_with_twin_normal>
      cst_new_box_autoadd_sum_with_twin_normal() {
    return _cst_new_box_autoadd_sum_with_twin_normal();
  }

  late final _cst_new_box_autoadd_sum_with_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_sum_with_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sum_with_twin_normal');
  late final _cst_new_box_autoadd_sum_with_twin_normal =
      _cst_new_box_autoadd_sum_with_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_sum_with_twin_normal> Function()>();

  ffi.Pointer<wire_cst_sum_with_twin_rust_async>
      cst_new_box_autoadd_sum_with_twin_rust_async() {
    return _cst_new_box_autoadd_sum_with_twin_rust_async();
  }

  late final _cst_new_box_autoadd_sum_with_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_sum_with_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sum_with_twin_rust_async');
  late final _cst_new_box_autoadd_sum_with_twin_rust_async =
      _cst_new_box_autoadd_sum_with_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_sum_with_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_sum_with_twin_rust_async_sse>
      cst_new_box_autoadd_sum_with_twin_rust_async_sse() {
    return _cst_new_box_autoadd_sum_with_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_sum_with_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_sum_with_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sum_with_twin_rust_async_sse');
  late final _cst_new_box_autoadd_sum_with_twin_rust_async_sse =
      _cst_new_box_autoadd_sum_with_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_sum_with_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_sum_with_twin_sse>
      cst_new_box_autoadd_sum_with_twin_sse() {
    return _cst_new_box_autoadd_sum_with_twin_sse();
  }

  late final _cst_new_box_autoadd_sum_with_twin_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_sum_with_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sum_with_twin_sse');
  late final _cst_new_box_autoadd_sum_with_twin_sse =
      _cst_new_box_autoadd_sum_with_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_sum_with_twin_sse> Function()>();

  ffi.Pointer<wire_cst_sum_with_twin_sync>
      cst_new_box_autoadd_sum_with_twin_sync() {
    return _cst_new_box_autoadd_sum_with_twin_sync();
  }

  late final _cst_new_box_autoadd_sum_with_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_sum_with_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sum_with_twin_sync');
  late final _cst_new_box_autoadd_sum_with_twin_sync =
      _cst_new_box_autoadd_sum_with_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_sum_with_twin_sync> Function()>();

  ffi.Pointer<wire_cst_sum_with_twin_sync_sse>
      cst_new_box_autoadd_sum_with_twin_sync_sse() {
    return _cst_new_box_autoadd_sum_with_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_sum_with_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_sum_with_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_sum_with_twin_sync_sse');
  late final _cst_new_box_autoadd_sum_with_twin_sync_sse =
      _cst_new_box_autoadd_sum_with_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_sum_with_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_test_id_twin_normal>
      cst_new_box_autoadd_test_id_twin_normal() {
    return _cst_new_box_autoadd_test_id_twin_normal();
  }

  late final _cst_new_box_autoadd_test_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_test_id_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_test_id_twin_normal');
  late final _cst_new_box_autoadd_test_id_twin_normal =
      _cst_new_box_autoadd_test_id_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_test_id_twin_normal> Function()>();

  ffi.Pointer<wire_cst_test_id_twin_rust_async>
      cst_new_box_autoadd_test_id_twin_rust_async() {
    return _cst_new_box_autoadd_test_id_twin_rust_async();
  }

  late final _cst_new_box_autoadd_test_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_test_id_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_test_id_twin_rust_async');
  late final _cst_new_box_autoadd_test_id_twin_rust_async =
      _cst_new_box_autoadd_test_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_test_id_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_test_id_twin_rust_async_sse>
      cst_new_box_autoadd_test_id_twin_rust_async_sse() {
    return _cst_new_box_autoadd_test_id_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_test_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_test_id_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_test_id_twin_rust_async_sse');
  late final _cst_new_box_autoadd_test_id_twin_rust_async_sse =
      _cst_new_box_autoadd_test_id_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_test_id_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_test_id_twin_sse>
      cst_new_box_autoadd_test_id_twin_sse() {
    return _cst_new_box_autoadd_test_id_twin_sse();
  }

  late final _cst_new_box_autoadd_test_id_twin_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_test_id_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_test_id_twin_sse');
  late final _cst_new_box_autoadd_test_id_twin_sse =
      _cst_new_box_autoadd_test_id_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_test_id_twin_sse> Function()>();

  ffi.Pointer<wire_cst_test_id_twin_sync>
      cst_new_box_autoadd_test_id_twin_sync() {
    return _cst_new_box_autoadd_test_id_twin_sync();
  }

  late final _cst_new_box_autoadd_test_id_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_test_id_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_test_id_twin_sync');
  late final _cst_new_box_autoadd_test_id_twin_sync =
      _cst_new_box_autoadd_test_id_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_test_id_twin_sync> Function()>();

  ffi.Pointer<wire_cst_test_id_twin_sync_sse>
      cst_new_box_autoadd_test_id_twin_sync_sse() {
    return _cst_new_box_autoadd_test_id_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_test_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_test_id_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_test_id_twin_sync_sse');
  late final _cst_new_box_autoadd_test_id_twin_sync_sse =
      _cst_new_box_autoadd_test_id_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_test_id_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal>
      cst_new_box_autoadd_tuple_struct_with_one_field_twin_normal() {
    return _cst_new_box_autoadd_tuple_struct_with_one_field_twin_normal();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_one_field_twin_normal');
  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_normal =
      _cst_new_box_autoadd_tuple_struct_with_one_field_twin_normalPtr
          .asFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_normal>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async>
      cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async() {
    return _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_tuple_struct_with_one_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async');
  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async =
      _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_rust_async_sse>
      cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse() {
    return _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_tuple_struct_with_one_field_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse');
  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async_sse =
      _cst_new_box_autoadd_tuple_struct_with_one_field_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_tuple_struct_with_one_field_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sse>
      cst_new_box_autoadd_tuple_struct_with_one_field_twin_sse() {
    return _cst_new_box_autoadd_tuple_struct_with_one_field_twin_sse();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_one_field_twin_sse');
  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_sse =
      _cst_new_box_autoadd_tuple_struct_with_one_field_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sse>
              Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync>
      cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync() {
    return _cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync');
  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync =
      _cst_new_box_autoadd_tuple_struct_with_one_field_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync>
              Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync_sse>
      cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync_sse() {
    return _cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_tuple_struct_with_one_field_twin_sync_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync_sse');
  late final _cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync_sse =
      _cst_new_box_autoadd_tuple_struct_with_one_field_twin_sync_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_one_field_twin_sync_sse>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal>
      cst_new_box_autoadd_tuple_struct_with_two_field_twin_normal() {
    return _cst_new_box_autoadd_tuple_struct_with_two_field_twin_normal();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_normalPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_two_field_twin_normal');
  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_normal =
      _cst_new_box_autoadd_tuple_struct_with_two_field_twin_normalPtr
          .asFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_normal>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async>
      cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async() {
    return _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_asyncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_tuple_struct_with_two_field_twin_rust_async>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async');
  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async =
      _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_asyncPtr
          .asFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_rust_async_sse>
      cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse() {
    return _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_tuple_struct_with_two_field_twin_rust_async_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse');
  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async_sse =
      _cst_new_box_autoadd_tuple_struct_with_two_field_twin_rust_async_ssePtr
          .asFunction<
              ffi.Pointer<
                      wire_cst_tuple_struct_with_two_field_twin_rust_async_sse>
                  Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sse>
      cst_new_box_autoadd_tuple_struct_with_two_field_twin_sse() {
    return _cst_new_box_autoadd_tuple_struct_with_two_field_twin_sse();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_two_field_twin_sse');
  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_sse =
      _cst_new_box_autoadd_tuple_struct_with_two_field_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sse>
              Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync>
      cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync() {
    return _cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_syncPtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync');
  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync =
      _cst_new_box_autoadd_tuple_struct_with_two_field_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync>
              Function()>();

  ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync_sse>
      cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync_sse() {
    return _cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync_ssePtr =
      _lookup<
              ffi.NativeFunction<
                  ffi.Pointer<
                          wire_cst_tuple_struct_with_two_field_twin_sync_sse>
                      Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync_sse');
  late final _cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync_sse =
      _cst_new_box_autoadd_tuple_struct_with_two_field_twin_sync_ssePtr
          .asFunction<
              ffi.Pointer<wire_cst_tuple_struct_with_two_field_twin_sync_sse>
                  Function()>();

  ffi.Pointer<ffi.Uint16> cst_new_box_autoadd_u_16(
    int value,
  ) {
    return _cst_new_box_autoadd_u_16(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_16Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint16> Function(ffi.Uint16)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_u_16');
  late final _cst_new_box_autoadd_u_16 = _cst_new_box_autoadd_u_16Ptr
      .asFunction<ffi.Pointer<ffi.Uint16> Function(int)>();

  ffi.Pointer<ffi.Uint32> cst_new_box_autoadd_u_32(
    int value,
  ) {
    return _cst_new_box_autoadd_u_32(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint32> Function(ffi.Uint32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_u_32');
  late final _cst_new_box_autoadd_u_32 = _cst_new_box_autoadd_u_32Ptr
      .asFunction<ffi.Pointer<ffi.Uint32> Function(int)>();

  ffi.Pointer<ffi.Uint64> cst_new_box_autoadd_u_64(
    int value,
  ) {
    return _cst_new_box_autoadd_u_64(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint64> Function(ffi.Uint64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_u_64');
  late final _cst_new_box_autoadd_u_64 = _cst_new_box_autoadd_u_64Ptr
      .asFunction<ffi.Pointer<ffi.Uint64> Function(int)>();

  ffi.Pointer<ffi.Uint8> cst_new_box_autoadd_u_8(
    int value,
  ) {
    return _cst_new_box_autoadd_u_8(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_8Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint8> Function(ffi.Uint8)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_u_8');
  late final _cst_new_box_autoadd_u_8 = _cst_new_box_autoadd_u_8Ptr
      .asFunction<ffi.Pointer<ffi.Uint8> Function(int)>();

  ffi.Pointer<wire_cst_user_id_twin_normal>
      cst_new_box_autoadd_user_id_twin_normal() {
    return _cst_new_box_autoadd_user_id_twin_normal();
  }

  late final _cst_new_box_autoadd_user_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_user_id_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_user_id_twin_normal');
  late final _cst_new_box_autoadd_user_id_twin_normal =
      _cst_new_box_autoadd_user_id_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_user_id_twin_normal> Function()>();

  ffi.Pointer<wire_cst_user_id_twin_rust_async>
      cst_new_box_autoadd_user_id_twin_rust_async() {
    return _cst_new_box_autoadd_user_id_twin_rust_async();
  }

  late final _cst_new_box_autoadd_user_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_user_id_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_user_id_twin_rust_async');
  late final _cst_new_box_autoadd_user_id_twin_rust_async =
      _cst_new_box_autoadd_user_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_user_id_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_user_id_twin_rust_async_sse>
      cst_new_box_autoadd_user_id_twin_rust_async_sse() {
    return _cst_new_box_autoadd_user_id_twin_rust_async_sse();
  }

  late final _cst_new_box_autoadd_user_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_user_id_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_user_id_twin_rust_async_sse');
  late final _cst_new_box_autoadd_user_id_twin_rust_async_sse =
      _cst_new_box_autoadd_user_id_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_user_id_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_user_id_twin_sse>
      cst_new_box_autoadd_user_id_twin_sse() {
    return _cst_new_box_autoadd_user_id_twin_sse();
  }

  late final _cst_new_box_autoadd_user_id_twin_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_user_id_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_user_id_twin_sse');
  late final _cst_new_box_autoadd_user_id_twin_sse =
      _cst_new_box_autoadd_user_id_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_user_id_twin_sse> Function()>();

  ffi.Pointer<wire_cst_user_id_twin_sync>
      cst_new_box_autoadd_user_id_twin_sync() {
    return _cst_new_box_autoadd_user_id_twin_sync();
  }

  late final _cst_new_box_autoadd_user_id_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_user_id_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_user_id_twin_sync');
  late final _cst_new_box_autoadd_user_id_twin_sync =
      _cst_new_box_autoadd_user_id_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_user_id_twin_sync> Function()>();

  ffi.Pointer<wire_cst_user_id_twin_sync_sse>
      cst_new_box_autoadd_user_id_twin_sync_sse() {
    return _cst_new_box_autoadd_user_id_twin_sync_sse();
  }

  late final _cst_new_box_autoadd_user_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_user_id_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_user_id_twin_sync_sse');
  late final _cst_new_box_autoadd_user_id_twin_sync_sse =
      _cst_new_box_autoadd_user_id_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_user_id_twin_sync_sse> Function()>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_weekdays_twin_normal(
    int value,
  ) {
    return _cst_new_box_autoadd_weekdays_twin_normal(
      value,
    );
  }

  late final _cst_new_box_autoadd_weekdays_twin_normalPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_weekdays_twin_normal');
  late final _cst_new_box_autoadd_weekdays_twin_normal =
      _cst_new_box_autoadd_weekdays_twin_normalPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_weekdays_twin_rust_async(
    int value,
  ) {
    return _cst_new_box_autoadd_weekdays_twin_rust_async(
      value,
    );
  }

  late final _cst_new_box_autoadd_weekdays_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_weekdays_twin_rust_async');
  late final _cst_new_box_autoadd_weekdays_twin_rust_async =
      _cst_new_box_autoadd_weekdays_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_weekdays_twin_rust_async_sse(
    int value,
  ) {
    return _cst_new_box_autoadd_weekdays_twin_rust_async_sse(
      value,
    );
  }

  late final _cst_new_box_autoadd_weekdays_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_weekdays_twin_rust_async_sse');
  late final _cst_new_box_autoadd_weekdays_twin_rust_async_sse =
      _cst_new_box_autoadd_weekdays_twin_rust_async_ssePtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_weekdays_twin_sse(
    int value,
  ) {
    return _cst_new_box_autoadd_weekdays_twin_sse(
      value,
    );
  }

  late final _cst_new_box_autoadd_weekdays_twin_ssePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_autoadd_weekdays_twin_sse');
  late final _cst_new_box_autoadd_weekdays_twin_sse =
      _cst_new_box_autoadd_weekdays_twin_ssePtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_weekdays_twin_sync(
    int value,
  ) {
    return _cst_new_box_autoadd_weekdays_twin_sync(
      value,
    );
  }

  late final _cst_new_box_autoadd_weekdays_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_weekdays_twin_sync');
  late final _cst_new_box_autoadd_weekdays_twin_sync =
      _cst_new_box_autoadd_weekdays_twin_syncPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_weekdays_twin_sync_sse(
    int value,
  ) {
    return _cst_new_box_autoadd_weekdays_twin_sync_sse(
      value,
    );
  }

  late final _cst_new_box_autoadd_weekdays_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_autoadd_weekdays_twin_sync_sse');
  late final _cst_new_box_autoadd_weekdays_twin_sync_sse =
      _cst_new_box_autoadd_weekdays_twin_sync_ssePtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
      cst_new_box_benchmark_binary_tree_twin_normal() {
    return _cst_new_box_benchmark_binary_tree_twin_normal();
  }

  late final _cst_new_box_benchmark_binary_tree_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_benchmark_binary_tree_twin_normal');
  late final _cst_new_box_benchmark_binary_tree_twin_normal =
      _cst_new_box_benchmark_binary_tree_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
      cst_new_box_benchmark_binary_tree_twin_rust_async() {
    return _cst_new_box_benchmark_binary_tree_twin_rust_async();
  }

  late final _cst_new_box_benchmark_binary_tree_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_benchmark_binary_tree_twin_rust_async');
  late final _cst_new_box_benchmark_binary_tree_twin_rust_async =
      _cst_new_box_benchmark_binary_tree_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async>
              Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse>
      cst_new_box_benchmark_binary_tree_twin_rust_async_sse() {
    return _cst_new_box_benchmark_binary_tree_twin_rust_async_sse();
  }

  late final _cst_new_box_benchmark_binary_tree_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_benchmark_binary_tree_twin_rust_async_sse');
  late final _cst_new_box_benchmark_binary_tree_twin_rust_async_sse =
      _cst_new_box_benchmark_binary_tree_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse>
              Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse>
      cst_new_box_benchmark_binary_tree_twin_sse() {
    return _cst_new_box_benchmark_binary_tree_twin_sse();
  }

  late final _cst_new_box_benchmark_binary_tree_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_benchmark_binary_tree_twin_sse');
  late final _cst_new_box_benchmark_binary_tree_twin_sse =
      _cst_new_box_benchmark_binary_tree_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse> Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
      cst_new_box_benchmark_binary_tree_twin_sync() {
    return _cst_new_box_benchmark_binary_tree_twin_sync();
  }

  late final _cst_new_box_benchmark_binary_tree_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_benchmark_binary_tree_twin_sync');
  late final _cst_new_box_benchmark_binary_tree_twin_sync =
      _cst_new_box_benchmark_binary_tree_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> Function()>();

  ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse>
      cst_new_box_benchmark_binary_tree_twin_sync_sse() {
    return _cst_new_box_benchmark_binary_tree_twin_sync_sse();
  }

  late final _cst_new_box_benchmark_binary_tree_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_benchmark_binary_tree_twin_sync_sse');
  late final _cst_new_box_benchmark_binary_tree_twin_sync_sse =
      _cst_new_box_benchmark_binary_tree_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse>
              Function()>();

  ffi.Pointer<wire_cst_blob_twin_normal> cst_new_box_blob_twin_normal() {
    return _cst_new_box_blob_twin_normal();
  }

  late final _cst_new_box_blob_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_blob_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_blob_twin_normal');
  late final _cst_new_box_blob_twin_normal = _cst_new_box_blob_twin_normalPtr
      .asFunction<ffi.Pointer<wire_cst_blob_twin_normal> Function()>();

  ffi.Pointer<wire_cst_blob_twin_rust_async>
      cst_new_box_blob_twin_rust_async() {
    return _cst_new_box_blob_twin_rust_async();
  }

  late final _cst_new_box_blob_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_blob_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_blob_twin_rust_async');
  late final _cst_new_box_blob_twin_rust_async =
      _cst_new_box_blob_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_blob_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_blob_twin_rust_async_sse>
      cst_new_box_blob_twin_rust_async_sse() {
    return _cst_new_box_blob_twin_rust_async_sse();
  }

  late final _cst_new_box_blob_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_blob_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_blob_twin_rust_async_sse');
  late final _cst_new_box_blob_twin_rust_async_sse =
      _cst_new_box_blob_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_blob_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_blob_twin_sse> cst_new_box_blob_twin_sse() {
    return _cst_new_box_blob_twin_sse();
  }

  late final _cst_new_box_blob_twin_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_blob_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_blob_twin_sse');
  late final _cst_new_box_blob_twin_sse = _cst_new_box_blob_twin_ssePtr
      .asFunction<ffi.Pointer<wire_cst_blob_twin_sse> Function()>();

  ffi.Pointer<wire_cst_blob_twin_sync> cst_new_box_blob_twin_sync() {
    return _cst_new_box_blob_twin_sync();
  }

  late final _cst_new_box_blob_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_blob_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_blob_twin_sync');
  late final _cst_new_box_blob_twin_sync = _cst_new_box_blob_twin_syncPtr
      .asFunction<ffi.Pointer<wire_cst_blob_twin_sync> Function()>();

  ffi.Pointer<wire_cst_blob_twin_sync_sse> cst_new_box_blob_twin_sync_sse() {
    return _cst_new_box_blob_twin_sync_sse();
  }

  late final _cst_new_box_blob_twin_sync_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_blob_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_blob_twin_sync_sse');
  late final _cst_new_box_blob_twin_sync_sse =
      _cst_new_box_blob_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_blob_twin_sync_sse> Function()>();

  ffi.Pointer<ffi.Bool> cst_new_box_bool(
    bool value,
  ) {
    return _cst_new_box_bool(
      value,
    );
  }

  late final _cst_new_box_boolPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Bool> Function(ffi.Bool)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_bool');
  late final _cst_new_box_bool =
      _cst_new_box_boolPtr.asFunction<ffi.Pointer<ffi.Bool> Function(bool)>();

  ffi.Pointer<wire_cst_distance_twin_normal>
      cst_new_box_distance_twin_normal() {
    return _cst_new_box_distance_twin_normal();
  }

  late final _cst_new_box_distance_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_distance_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_distance_twin_normal');
  late final _cst_new_box_distance_twin_normal =
      _cst_new_box_distance_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_distance_twin_normal> Function()>();

  ffi.Pointer<wire_cst_distance_twin_rust_async>
      cst_new_box_distance_twin_rust_async() {
    return _cst_new_box_distance_twin_rust_async();
  }

  late final _cst_new_box_distance_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_distance_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_distance_twin_rust_async');
  late final _cst_new_box_distance_twin_rust_async =
      _cst_new_box_distance_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_distance_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_distance_twin_rust_async_sse>
      cst_new_box_distance_twin_rust_async_sse() {
    return _cst_new_box_distance_twin_rust_async_sse();
  }

  late final _cst_new_box_distance_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_distance_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_distance_twin_rust_async_sse');
  late final _cst_new_box_distance_twin_rust_async_sse =
      _cst_new_box_distance_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_distance_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_distance_twin_sse> cst_new_box_distance_twin_sse() {
    return _cst_new_box_distance_twin_sse();
  }

  late final _cst_new_box_distance_twin_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_distance_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_distance_twin_sse');
  late final _cst_new_box_distance_twin_sse = _cst_new_box_distance_twin_ssePtr
      .asFunction<ffi.Pointer<wire_cst_distance_twin_sse> Function()>();

  ffi.Pointer<wire_cst_distance_twin_sync> cst_new_box_distance_twin_sync() {
    return _cst_new_box_distance_twin_sync();
  }

  late final _cst_new_box_distance_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_distance_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_distance_twin_sync');
  late final _cst_new_box_distance_twin_sync =
      _cst_new_box_distance_twin_syncPtr
          .asFunction<ffi.Pointer<wire_cst_distance_twin_sync> Function()>();

  ffi.Pointer<wire_cst_distance_twin_sync_sse>
      cst_new_box_distance_twin_sync_sse() {
    return _cst_new_box_distance_twin_sync_sse();
  }

  late final _cst_new_box_distance_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_distance_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_distance_twin_sync_sse');
  late final _cst_new_box_distance_twin_sync_sse =
      _cst_new_box_distance_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_distance_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_normal>
      cst_new_box_exotic_optionals_twin_normal() {
    return _cst_new_box_exotic_optionals_twin_normal();
  }

  late final _cst_new_box_exotic_optionals_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_exotic_optionals_twin_normal');
  late final _cst_new_box_exotic_optionals_twin_normal =
      _cst_new_box_exotic_optionals_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_normal> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
      cst_new_box_exotic_optionals_twin_rust_async() {
    return _cst_new_box_exotic_optionals_twin_rust_async();
  }

  late final _cst_new_box_exotic_optionals_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_exotic_optionals_twin_rust_async');
  late final _cst_new_box_exotic_optionals_twin_rust_async =
      _cst_new_box_exotic_optionals_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse>
      cst_new_box_exotic_optionals_twin_rust_async_sse() {
    return _cst_new_box_exotic_optionals_twin_rust_async_sse();
  }

  late final _cst_new_box_exotic_optionals_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_exotic_optionals_twin_rust_async_sse');
  late final _cst_new_box_exotic_optionals_twin_rust_async_sse =
      _cst_new_box_exotic_optionals_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_rust_async_sse>
              Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_sse>
      cst_new_box_exotic_optionals_twin_sse() {
    return _cst_new_box_exotic_optionals_twin_sse();
  }

  late final _cst_new_box_exotic_optionals_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_exotic_optionals_twin_sse');
  late final _cst_new_box_exotic_optionals_twin_sse =
      _cst_new_box_exotic_optionals_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_sse> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_sync>
      cst_new_box_exotic_optionals_twin_sync() {
    return _cst_new_box_exotic_optionals_twin_sync();
  }

  late final _cst_new_box_exotic_optionals_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_exotic_optionals_twin_sync');
  late final _cst_new_box_exotic_optionals_twin_sync =
      _cst_new_box_exotic_optionals_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_sync> Function()>();

  ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse>
      cst_new_box_exotic_optionals_twin_sync_sse() {
    return _cst_new_box_exotic_optionals_twin_sync_sse();
  }

  late final _cst_new_box_exotic_optionals_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_exotic_optionals_twin_sync_sse');
  late final _cst_new_box_exotic_optionals_twin_sync_sse =
      _cst_new_box_exotic_optionals_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_exotic_optionals_twin_sync_sse> Function()>();

  ffi.Pointer<ffi.Double> cst_new_box_f_64(
    double value,
  ) {
    return _cst_new_box_f_64(
      value,
    );
  }

  late final _cst_new_box_f_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Double> Function(ffi.Double)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_f_64');
  late final _cst_new_box_f_64 = _cst_new_box_f_64Ptr
      .asFunction<ffi.Pointer<ffi.Double> Function(double)>();

  ffi.Pointer<wire_cst_feed_id_twin_normal> cst_new_box_feed_id_twin_normal() {
    return _cst_new_box_feed_id_twin_normal();
  }

  late final _cst_new_box_feed_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_feed_id_twin_normal');
  late final _cst_new_box_feed_id_twin_normal =
      _cst_new_box_feed_id_twin_normalPtr
          .asFunction<ffi.Pointer<wire_cst_feed_id_twin_normal> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_rust_async>
      cst_new_box_feed_id_twin_rust_async() {
    return _cst_new_box_feed_id_twin_rust_async();
  }

  late final _cst_new_box_feed_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_feed_id_twin_rust_async');
  late final _cst_new_box_feed_id_twin_rust_async =
      _cst_new_box_feed_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_feed_id_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_rust_async_sse>
      cst_new_box_feed_id_twin_rust_async_sse() {
    return _cst_new_box_feed_id_twin_rust_async_sse();
  }

  late final _cst_new_box_feed_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_feed_id_twin_rust_async_sse');
  late final _cst_new_box_feed_id_twin_rust_async_sse =
      _cst_new_box_feed_id_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_feed_id_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_sse> cst_new_box_feed_id_twin_sse() {
    return _cst_new_box_feed_id_twin_sse();
  }

  late final _cst_new_box_feed_id_twin_ssePtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_feed_id_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_feed_id_twin_sse');
  late final _cst_new_box_feed_id_twin_sse = _cst_new_box_feed_id_twin_ssePtr
      .asFunction<ffi.Pointer<wire_cst_feed_id_twin_sse> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_sync> cst_new_box_feed_id_twin_sync() {
    return _cst_new_box_feed_id_twin_sync();
  }

  late final _cst_new_box_feed_id_twin_syncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_feed_id_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_feed_id_twin_sync');
  late final _cst_new_box_feed_id_twin_sync = _cst_new_box_feed_id_twin_syncPtr
      .asFunction<ffi.Pointer<wire_cst_feed_id_twin_sync> Function()>();

  ffi.Pointer<wire_cst_feed_id_twin_sync_sse>
      cst_new_box_feed_id_twin_sync_sse() {
    return _cst_new_box_feed_id_twin_sync_sse();
  }

  late final _cst_new_box_feed_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_feed_id_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_feed_id_twin_sync_sse');
  late final _cst_new_box_feed_id_twin_sync_sse =
      _cst_new_box_feed_id_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_feed_id_twin_sync_sse> Function()>();

  ffi.Pointer<ffi.Int32> cst_new_box_i_32(
    int value,
  ) {
    return _cst_new_box_i_32(
      value,
    );
  }

  late final _cst_new_box_i_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_i_32');
  late final _cst_new_box_i_32 =
      _cst_new_box_i_32Ptr.asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int64> cst_new_box_i_64(
    int value,
  ) {
    return _cst_new_box_i_64(
      value,
    );
  }

  late final _cst_new_box_i_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_i_64');
  late final _cst_new_box_i_64 =
      _cst_new_box_i_64Ptr.asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<ffi.Int8> cst_new_box_i_8(
    int value,
  ) {
    return _cst_new_box_i_8(
      value,
    );
  }

  late final _cst_new_box_i_8Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int8> Function(ffi.Int8)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_i_8');
  late final _cst_new_box_i_8 =
      _cst_new_box_i_8Ptr.asFunction<ffi.Pointer<ffi.Int8> Function(int)>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_normal>
      cst_new_box_kitchen_sink_twin_normal() {
    return _cst_new_box_kitchen_sink_twin_normal();
  }

  late final _cst_new_box_kitchen_sink_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_kitchen_sink_twin_normal');
  late final _cst_new_box_kitchen_sink_twin_normal =
      _cst_new_box_kitchen_sink_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_normal> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async>
      cst_new_box_kitchen_sink_twin_rust_async() {
    return _cst_new_box_kitchen_sink_twin_rust_async();
  }

  late final _cst_new_box_kitchen_sink_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_kitchen_sink_twin_rust_async');
  late final _cst_new_box_kitchen_sink_twin_rust_async =
      _cst_new_box_kitchen_sink_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse>
      cst_new_box_kitchen_sink_twin_rust_async_sse() {
    return _cst_new_box_kitchen_sink_twin_rust_async_sse();
  }

  late final _cst_new_box_kitchen_sink_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse>
                  Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_kitchen_sink_twin_rust_async_sse');
  late final _cst_new_box_kitchen_sink_twin_rust_async_sse =
      _cst_new_box_kitchen_sink_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_sse>
      cst_new_box_kitchen_sink_twin_sse() {
    return _cst_new_box_kitchen_sink_twin_sse();
  }

  late final _cst_new_box_kitchen_sink_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_kitchen_sink_twin_sse');
  late final _cst_new_box_kitchen_sink_twin_sse =
      _cst_new_box_kitchen_sink_twin_ssePtr
          .asFunction<ffi.Pointer<wire_cst_kitchen_sink_twin_sse> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_sync>
      cst_new_box_kitchen_sink_twin_sync() {
    return _cst_new_box_kitchen_sink_twin_sync();
  }

  late final _cst_new_box_kitchen_sink_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_kitchen_sink_twin_sync');
  late final _cst_new_box_kitchen_sink_twin_sync =
      _cst_new_box_kitchen_sink_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_sync> Function()>();

  ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse>
      cst_new_box_kitchen_sink_twin_sync_sse() {
    return _cst_new_box_kitchen_sink_twin_sync_sse();
  }

  late final _cst_new_box_kitchen_sink_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_kitchen_sink_twin_sync_sse');
  late final _cst_new_box_kitchen_sink_twin_sync_sse =
      _cst_new_box_kitchen_sink_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse> Function()>();

  ffi.Pointer<wire_cst_my_size> cst_new_box_my_size() {
    return _cst_new_box_my_size();
  }

  late final _cst_new_box_my_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_my_size> Function()>>(
          'frbgen_frb_example_pure_dart_cst_new_box_my_size');
  late final _cst_new_box_my_size = _cst_new_box_my_sizePtr
      .asFunction<ffi.Pointer<wire_cst_my_size> Function()>();

  ffi.Pointer<wire_cst_speed_twin_normal> cst_new_box_speed_twin_normal() {
    return _cst_new_box_speed_twin_normal();
  }

  late final _cst_new_box_speed_twin_normalPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_speed_twin_normal> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_speed_twin_normal');
  late final _cst_new_box_speed_twin_normal = _cst_new_box_speed_twin_normalPtr
      .asFunction<ffi.Pointer<wire_cst_speed_twin_normal> Function()>();

  ffi.Pointer<wire_cst_speed_twin_rust_async>
      cst_new_box_speed_twin_rust_async() {
    return _cst_new_box_speed_twin_rust_async();
  }

  late final _cst_new_box_speed_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_speed_twin_rust_async> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_speed_twin_rust_async');
  late final _cst_new_box_speed_twin_rust_async =
      _cst_new_box_speed_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<wire_cst_speed_twin_rust_async> Function()>();

  ffi.Pointer<wire_cst_speed_twin_rust_async_sse>
      cst_new_box_speed_twin_rust_async_sse() {
    return _cst_new_box_speed_twin_rust_async_sse();
  }

  late final _cst_new_box_speed_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_speed_twin_rust_async_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_speed_twin_rust_async_sse');
  late final _cst_new_box_speed_twin_rust_async_sse =
      _cst_new_box_speed_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_speed_twin_rust_async_sse> Function()>();

  ffi.Pointer<wire_cst_speed_twin_sse> cst_new_box_speed_twin_sse() {
    return _cst_new_box_speed_twin_sse();
  }

  late final _cst_new_box_speed_twin_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_speed_twin_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_speed_twin_sse');
  late final _cst_new_box_speed_twin_sse = _cst_new_box_speed_twin_ssePtr
      .asFunction<ffi.Pointer<wire_cst_speed_twin_sse> Function()>();

  ffi.Pointer<wire_cst_speed_twin_sync> cst_new_box_speed_twin_sync() {
    return _cst_new_box_speed_twin_sync();
  }

  late final _cst_new_box_speed_twin_syncPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_speed_twin_sync> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_speed_twin_sync');
  late final _cst_new_box_speed_twin_sync = _cst_new_box_speed_twin_syncPtr
      .asFunction<ffi.Pointer<wire_cst_speed_twin_sync> Function()>();

  ffi.Pointer<wire_cst_speed_twin_sync_sse> cst_new_box_speed_twin_sync_sse() {
    return _cst_new_box_speed_twin_sync_sse();
  }

  late final _cst_new_box_speed_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_speed_twin_sync_sse> Function()>>(
      'frbgen_frb_example_pure_dart_cst_new_box_speed_twin_sync_sse');
  late final _cst_new_box_speed_twin_sync_sse =
      _cst_new_box_speed_twin_sync_ssePtr
          .asFunction<ffi.Pointer<wire_cst_speed_twin_sync_sse> Function()>();

  ffi.Pointer<ffi.Uint8> cst_new_box_u_8(
    int value,
  ) {
    return _cst_new_box_u_8(
      value,
    );
  }

  late final _cst_new_box_u_8Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint8> Function(ffi.Uint8)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_u_8');
  late final _cst_new_box_u_8 =
      _cst_new_box_u_8Ptr.asFunction<ffi.Pointer<ffi.Uint8> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_weekdays_twin_normal(
    int value,
  ) {
    return _cst_new_box_weekdays_twin_normal(
      value,
    );
  }

  late final _cst_new_box_weekdays_twin_normalPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_weekdays_twin_normal');
  late final _cst_new_box_weekdays_twin_normal =
      _cst_new_box_weekdays_twin_normalPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_weekdays_twin_rust_async(
    int value,
  ) {
    return _cst_new_box_weekdays_twin_rust_async(
      value,
    );
  }

  late final _cst_new_box_weekdays_twin_rust_asyncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_weekdays_twin_rust_async');
  late final _cst_new_box_weekdays_twin_rust_async =
      _cst_new_box_weekdays_twin_rust_asyncPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_weekdays_twin_rust_async_sse(
    int value,
  ) {
    return _cst_new_box_weekdays_twin_rust_async_sse(
      value,
    );
  }

  late final _cst_new_box_weekdays_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_box_weekdays_twin_rust_async_sse');
  late final _cst_new_box_weekdays_twin_rust_async_sse =
      _cst_new_box_weekdays_twin_rust_async_ssePtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_weekdays_twin_sse(
    int value,
  ) {
    return _cst_new_box_weekdays_twin_sse(
      value,
    );
  }

  late final _cst_new_box_weekdays_twin_ssePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_weekdays_twin_sse');
  late final _cst_new_box_weekdays_twin_sse = _cst_new_box_weekdays_twin_ssePtr
      .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_weekdays_twin_sync(
    int value,
  ) {
    return _cst_new_box_weekdays_twin_sync(
      value,
    );
  }

  late final _cst_new_box_weekdays_twin_syncPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_weekdays_twin_sync');
  late final _cst_new_box_weekdays_twin_sync =
      _cst_new_box_weekdays_twin_syncPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_weekdays_twin_sync_sse(
    int value,
  ) {
    return _cst_new_box_weekdays_twin_sync_sse(
      value,
    );
  }

  late final _cst_new_box_weekdays_twin_sync_ssePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_frb_example_pure_dart_cst_new_box_weekdays_twin_sync_sse');
  late final _cst_new_box_weekdays_twin_sync_sse =
      _cst_new_box_weekdays_twin_sync_ssePtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<wire_cst_list_Chrono_Duration> cst_new_list_Chrono_Duration(
    int len,
  ) {
    return _cst_new_list_Chrono_Duration(
      len,
    );
  }

  late final _cst_new_list_Chrono_DurationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_Chrono_Duration> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_Chrono_Duration');
  late final _cst_new_list_Chrono_Duration = _cst_new_list_Chrono_DurationPtr
      .asFunction<ffi.Pointer<wire_cst_list_Chrono_Duration> Function(int)>();

  ffi.Pointer<wire_cst_list_Chrono_Local> cst_new_list_Chrono_Local(
    int len,
  ) {
    return _cst_new_list_Chrono_Local(
      len,
    );
  }

  late final _cst_new_list_Chrono_LocalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_Chrono_Local> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_Chrono_Local');
  late final _cst_new_list_Chrono_Local = _cst_new_list_Chrono_LocalPtr
      .asFunction<ffi.Pointer<wire_cst_list_Chrono_Local> Function(int)>();

  ffi.Pointer<wire_cst_list_Chrono_Naive> cst_new_list_Chrono_Naive(
    int len,
  ) {
    return _cst_new_list_Chrono_Naive(
      len,
    );
  }

  late final _cst_new_list_Chrono_NaivePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_Chrono_Naive> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_Chrono_Naive');
  late final _cst_new_list_Chrono_Naive = _cst_new_list_Chrono_NaivePtr
      .asFunction<ffi.Pointer<wire_cst_list_Chrono_Naive> Function(int)>();

  ffi.Pointer<wire_cst_list_DartOpaque> cst_new_list_DartOpaque(
    int len,
  ) {
    return _cst_new_list_DartOpaque(
      len,
    );
  }

  late final _cst_new_list_DartOpaquePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_DartOpaque> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_DartOpaque');
  late final _cst_new_list_DartOpaque = _cst_new_list_DartOpaquePtr
      .asFunction<ffi.Pointer<wire_cst_list_DartOpaque> Function(int)>();

  ffi.Pointer<wire_cst_list_RustOpaque_hide_data>
      cst_new_list_RustOpaque_hide_data(
    int len,
  ) {
    return _cst_new_list_RustOpaque_hide_data(
      len,
    );
  }

  late final _cst_new_list_RustOpaque_hide_dataPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_RustOpaque_hide_data> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_RustOpaque_hide_data');
  late final _cst_new_list_RustOpaque_hide_data =
      _cst_new_list_RustOpaque_hide_dataPtr.asFunction<
          ffi.Pointer<wire_cst_list_RustOpaque_hide_data> Function(int)>();

  ffi.Pointer<wire_cst_list_String> cst_new_list_String(
    int len,
  ) {
    return _cst_new_list_String(
      len,
    );
  }

  late final _cst_new_list_StringPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_String> Function(
              ffi.Int32)>>('frbgen_frb_example_pure_dart_cst_new_list_String');
  late final _cst_new_list_String = _cst_new_list_StringPtr
      .asFunction<ffi.Pointer<wire_cst_list_String> Function(int)>();

  ffi.Pointer<wire_cst_list_application_env_var>
      cst_new_list_application_env_var(
    int len,
  ) {
    return _cst_new_list_application_env_var(
      len,
    );
  }

  late final _cst_new_list_application_env_varPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_application_env_var> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_application_env_var');
  late final _cst_new_list_application_env_var =
      _cst_new_list_application_env_varPtr.asFunction<
          ffi.Pointer<wire_cst_list_application_env_var> Function(int)>();

  ffi.Pointer<wire_cst_list_application_settings>
      cst_new_list_application_settings(
    int len,
  ) {
    return _cst_new_list_application_settings(
      len,
    );
  }

  late final _cst_new_list_application_settingsPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_application_settings> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_application_settings');
  late final _cst_new_list_application_settings =
      _cst_new_list_application_settingsPtr.asFunction<
          ffi.Pointer<wire_cst_list_application_settings> Function(int)>();

  ffi.Pointer<wire_cst_list_attribute_twin_normal>
      cst_new_list_attribute_twin_normal(
    int len,
  ) {
    return _cst_new_list_attribute_twin_normal(
      len,
    );
  }

  late final _cst_new_list_attribute_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_attribute_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_attribute_twin_normal');
  late final _cst_new_list_attribute_twin_normal =
      _cst_new_list_attribute_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_attribute_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_attribute_twin_rust_async>
      cst_new_list_attribute_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_attribute_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_attribute_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_attribute_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_attribute_twin_rust_async');
  late final _cst_new_list_attribute_twin_rust_async =
      _cst_new_list_attribute_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_attribute_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_attribute_twin_rust_async_sse>
      cst_new_list_attribute_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_attribute_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_attribute_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_attribute_twin_rust_async_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_attribute_twin_rust_async_sse');
  late final _cst_new_list_attribute_twin_rust_async_sse =
      _cst_new_list_attribute_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_attribute_twin_rust_async_sse> Function(
              int)>();

  ffi.Pointer<wire_cst_list_attribute_twin_sse> cst_new_list_attribute_twin_sse(
    int len,
  ) {
    return _cst_new_list_attribute_twin_sse(
      len,
    );
  }

  late final _cst_new_list_attribute_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_attribute_twin_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_attribute_twin_sse');
  late final _cst_new_list_attribute_twin_sse =
      _cst_new_list_attribute_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_attribute_twin_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_attribute_twin_sync>
      cst_new_list_attribute_twin_sync(
    int len,
  ) {
    return _cst_new_list_attribute_twin_sync(
      len,
    );
  }

  late final _cst_new_list_attribute_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_attribute_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_attribute_twin_sync');
  late final _cst_new_list_attribute_twin_sync =
      _cst_new_list_attribute_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_attribute_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_attribute_twin_sync_sse>
      cst_new_list_attribute_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_attribute_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_attribute_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_attribute_twin_sync_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_attribute_twin_sync_sse');
  late final _cst_new_list_attribute_twin_sync_sse =
      _cst_new_list_attribute_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_attribute_twin_sync_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_bool> cst_new_list_bool(
    int len,
  ) {
    return _cst_new_list_bool(
      len,
    );
  }

  late final _cst_new_list_boolPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_list_bool> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_bool');
  late final _cst_new_list_bool = _cst_new_list_boolPtr
      .asFunction<ffi.Pointer<wire_cst_list_bool> Function(int)>();

  ffi.Pointer<wire_cst_list_element_twin_normal>
      cst_new_list_element_twin_normal(
    int len,
  ) {
    return _cst_new_list_element_twin_normal(
      len,
    );
  }

  late final _cst_new_list_element_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_element_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_element_twin_normal');
  late final _cst_new_list_element_twin_normal =
      _cst_new_list_element_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_element_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_element_twin_rust_async>
      cst_new_list_element_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_element_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_element_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_element_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_element_twin_rust_async');
  late final _cst_new_list_element_twin_rust_async =
      _cst_new_list_element_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_element_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_element_twin_rust_async_sse>
      cst_new_list_element_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_element_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_element_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_element_twin_rust_async_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_element_twin_rust_async_sse');
  late final _cst_new_list_element_twin_rust_async_sse =
      _cst_new_list_element_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_element_twin_rust_async_sse> Function(
              int)>();

  ffi.Pointer<wire_cst_list_element_twin_sse> cst_new_list_element_twin_sse(
    int len,
  ) {
    return _cst_new_list_element_twin_sse(
      len,
    );
  }

  late final _cst_new_list_element_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_element_twin_sse> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_element_twin_sse');
  late final _cst_new_list_element_twin_sse = _cst_new_list_element_twin_ssePtr
      .asFunction<ffi.Pointer<wire_cst_list_element_twin_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_element_twin_sync> cst_new_list_element_twin_sync(
    int len,
  ) {
    return _cst_new_list_element_twin_sync(
      len,
    );
  }

  late final _cst_new_list_element_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_element_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_element_twin_sync');
  late final _cst_new_list_element_twin_sync =
      _cst_new_list_element_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_element_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_element_twin_sync_sse>
      cst_new_list_element_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_element_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_element_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_element_twin_sync_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_element_twin_sync_sse');
  late final _cst_new_list_element_twin_sync_sse =
      _cst_new_list_element_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_element_twin_sync_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_normal>
      cst_new_list_enum_opaque_twin_normal(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_normal(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_normal');
  late final _cst_new_list_enum_opaque_twin_normal =
      _cst_new_list_enum_opaque_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async>
      cst_new_list_enum_opaque_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_rust_async');
  late final _cst_new_list_enum_opaque_twin_rust_async =
      _cst_new_list_enum_opaque_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async> Function(
              int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async_sse>
      cst_new_list_enum_opaque_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_rust_async_sse');
  late final _cst_new_list_enum_opaque_twin_rust_async_sse =
      _cst_new_list_enum_opaque_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_rust_async_sse> Function(
              int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_sse>
      cst_new_list_enum_opaque_twin_sse(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_sse(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_sse');
  late final _cst_new_list_enum_opaque_twin_sse =
      _cst_new_list_enum_opaque_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync>
      cst_new_list_enum_opaque_twin_sync(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_sync(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_sync');
  late final _cst_new_list_enum_opaque_twin_sync =
      _cst_new_list_enum_opaque_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_enum_opaque_twin_sync_sse>
      cst_new_list_enum_opaque_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_enum_opaque_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_enum_opaque_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_enum_opaque_twin_sync_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_enum_opaque_twin_sync_sse');
  late final _cst_new_list_enum_opaque_twin_sync_sse =
      _cst_new_list_enum_opaque_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_enum_opaque_twin_sync_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_my_enum> cst_new_list_my_enum(
    int len,
  ) {
    return _cst_new_list_my_enum(
      len,
    );
  }

  late final _cst_new_list_my_enumPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_my_enum> Function(
              ffi.Int32)>>('frbgen_frb_example_pure_dart_cst_new_list_my_enum');
  late final _cst_new_list_my_enum = _cst_new_list_my_enumPtr
      .asFunction<ffi.Pointer<wire_cst_list_my_enum> Function(int)>();

  ffi.Pointer<wire_cst_list_my_size> cst_new_list_my_size(
    int len,
  ) {
    return _cst_new_list_my_size(
      len,
    );
  }

  late final _cst_new_list_my_sizePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_my_size> Function(
              ffi.Int32)>>('frbgen_frb_example_pure_dart_cst_new_list_my_size');
  late final _cst_new_list_my_size = _cst_new_list_my_sizePtr
      .asFunction<ffi.Pointer<wire_cst_list_my_size> Function(int)>();

  ffi.Pointer<wire_cst_list_my_tree_node_twin_normal>
      cst_new_list_my_tree_node_twin_normal(
    int len,
  ) {
    return _cst_new_list_my_tree_node_twin_normal(
      len,
    );
  }

  late final _cst_new_list_my_tree_node_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_my_tree_node_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_my_tree_node_twin_normal');
  late final _cst_new_list_my_tree_node_twin_normal =
      _cst_new_list_my_tree_node_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_my_tree_node_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async>
      cst_new_list_my_tree_node_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_my_tree_node_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_my_tree_node_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_my_tree_node_twin_rust_async');
  late final _cst_new_list_my_tree_node_twin_rust_async =
      _cst_new_list_my_tree_node_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async> Function(
              int)>();

  ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async_sse>
      cst_new_list_my_tree_node_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_my_tree_node_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_my_tree_node_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_my_tree_node_twin_rust_async_sse');
  late final _cst_new_list_my_tree_node_twin_rust_async_sse =
      _cst_new_list_my_tree_node_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async_sse> Function(
              int)>();

  ffi.Pointer<wire_cst_list_my_tree_node_twin_sse>
      cst_new_list_my_tree_node_twin_sse(
    int len,
  ) {
    return _cst_new_list_my_tree_node_twin_sse(
      len,
    );
  }

  late final _cst_new_list_my_tree_node_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_my_tree_node_twin_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_my_tree_node_twin_sse');
  late final _cst_new_list_my_tree_node_twin_sse =
      _cst_new_list_my_tree_node_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_my_tree_node_twin_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_my_tree_node_twin_sync>
      cst_new_list_my_tree_node_twin_sync(
    int len,
  ) {
    return _cst_new_list_my_tree_node_twin_sync(
      len,
    );
  }

  late final _cst_new_list_my_tree_node_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_my_tree_node_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_my_tree_node_twin_sync');
  late final _cst_new_list_my_tree_node_twin_sync =
      _cst_new_list_my_tree_node_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_my_tree_node_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_my_tree_node_twin_sync_sse>
      cst_new_list_my_tree_node_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_my_tree_node_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_my_tree_node_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_my_tree_node_twin_sync_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_my_tree_node_twin_sync_sse');
  late final _cst_new_list_my_tree_node_twin_sync_sse =
      _cst_new_list_my_tree_node_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_my_tree_node_twin_sync_sse> Function(
              int)>();

  ffi.Pointer<wire_cst_list_nested_raw_string_mirrored>
      cst_new_list_nested_raw_string_mirrored(
    int len,
  ) {
    return _cst_new_list_nested_raw_string_mirrored(
      len,
    );
  }

  late final _cst_new_list_nested_raw_string_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_nested_raw_string_mirrored> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_nested_raw_string_mirrored');
  late final _cst_new_list_nested_raw_string_mirrored =
      _cst_new_list_nested_raw_string_mirroredPtr.asFunction<
          ffi.Pointer<wire_cst_list_nested_raw_string_mirrored> Function(
              int)>();

  ffi.Pointer<wire_cst_list_opt_String> cst_new_list_opt_String(
    int len,
  ) {
    return _cst_new_list_opt_String(
      len,
    );
  }

  late final _cst_new_list_opt_StringPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_String> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_String');
  late final _cst_new_list_opt_String = _cst_new_list_opt_StringPtr
      .asFunction<ffi.Pointer<wire_cst_list_opt_String> Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
      cst_new_list_opt_box_autoadd_attribute_twin_normal(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_attribute_twin_normal(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_attribute_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_attribute_twin_normal');
  late final _cst_new_list_opt_box_autoadd_attribute_twin_normal =
      _cst_new_list_opt_box_autoadd_attribute_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
      cst_new_list_opt_box_autoadd_attribute_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_attribute_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_attribute_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_attribute_twin_rust_async');
  late final _cst_new_list_opt_box_autoadd_attribute_twin_rust_async =
      _cst_new_list_opt_box_autoadd_attribute_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async_sse>
      cst_new_list_opt_box_autoadd_attribute_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_attribute_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_attribute_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_opt_box_autoadd_attribute_twin_rust_async_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_attribute_twin_rust_async_sse');
  late final _cst_new_list_opt_box_autoadd_attribute_twin_rust_async_sse =
      _cst_new_list_opt_box_autoadd_attribute_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<
                  wire_cst_list_opt_box_autoadd_attribute_twin_rust_async_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sse>
      cst_new_list_opt_box_autoadd_attribute_twin_sse(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_attribute_twin_sse(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_attribute_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_attribute_twin_sse');
  late final _cst_new_list_opt_box_autoadd_attribute_twin_sse =
      _cst_new_list_opt_box_autoadd_attribute_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
      cst_new_list_opt_box_autoadd_attribute_twin_sync(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_attribute_twin_sync(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_attribute_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_attribute_twin_sync');
  late final _cst_new_list_opt_box_autoadd_attribute_twin_sync =
      _cst_new_list_opt_box_autoadd_attribute_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync_sse>
      cst_new_list_opt_box_autoadd_attribute_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_attribute_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_attribute_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_attribute_twin_sync_sse');
  late final _cst_new_list_opt_box_autoadd_attribute_twin_sync_sse =
      _cst_new_list_opt_box_autoadd_attribute_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32>
      cst_new_list_opt_box_autoadd_i_32(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_i_32(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_i_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_i_32');
  late final _cst_new_list_opt_box_autoadd_i_32 =
      _cst_new_list_opt_box_autoadd_i_32Ptr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_normal>
      cst_new_list_opt_box_autoadd_weekdays_twin_normal(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_weekdays_twin_normal(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_weekdays_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_weekdays_twin_normal');
  late final _cst_new_list_opt_box_autoadd_weekdays_twin_normal =
      _cst_new_list_opt_box_autoadd_weekdays_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async>
      cst_new_list_opt_box_autoadd_weekdays_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_weekdays_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_weekdays_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_weekdays_twin_rust_async');
  late final _cst_new_list_opt_box_autoadd_weekdays_twin_rust_async =
      _cst_new_list_opt_box_autoadd_weekdays_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async_sse>
      cst_new_list_opt_box_autoadd_weekdays_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_weekdays_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_weekdays_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_weekdays_twin_rust_async_sse');
  late final _cst_new_list_opt_box_autoadd_weekdays_twin_rust_async_sse =
      _cst_new_list_opt_box_autoadd_weekdays_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<
                  wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sse>
      cst_new_list_opt_box_autoadd_weekdays_twin_sse(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_weekdays_twin_sse(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_weekdays_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_weekdays_twin_sse');
  late final _cst_new_list_opt_box_autoadd_weekdays_twin_sse =
      _cst_new_list_opt_box_autoadd_weekdays_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sse> Function(
              int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync>
      cst_new_list_opt_box_autoadd_weekdays_twin_sync(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_weekdays_twin_sync(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_weekdays_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_weekdays_twin_sync');
  late final _cst_new_list_opt_box_autoadd_weekdays_twin_sync =
      _cst_new_list_opt_box_autoadd_weekdays_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync_sse>
      cst_new_list_opt_box_autoadd_weekdays_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_weekdays_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_weekdays_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_box_autoadd_weekdays_twin_sync_sse');
  late final _cst_new_list_opt_box_autoadd_weekdays_twin_sync_sse =
      _cst_new_list_opt_box_autoadd_weekdays_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_opt_list_prim_i_32> cst_new_list_opt_list_prim_i_32(
    int len,
  ) {
    return _cst_new_list_opt_list_prim_i_32(
      len,
    );
  }

  late final _cst_new_list_opt_list_prim_i_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_list_prim_i_32> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_opt_list_prim_i_32');
  late final _cst_new_list_opt_list_prim_i_32 =
      _cst_new_list_opt_list_prim_i_32Ptr.asFunction<
          ffi.Pointer<wire_cst_list_opt_list_prim_i_32> Function(int)>();

  ffi.Pointer<wire_cst_list_point_twin_normal> cst_new_list_point_twin_normal(
    int len,
  ) {
    return _cst_new_list_point_twin_normal(
      len,
    );
  }

  late final _cst_new_list_point_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_point_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_point_twin_normal');
  late final _cst_new_list_point_twin_normal =
      _cst_new_list_point_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_point_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_point_twin_rust_async>
      cst_new_list_point_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_point_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_point_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_point_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_point_twin_rust_async');
  late final _cst_new_list_point_twin_rust_async =
      _cst_new_list_point_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_point_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_point_twin_rust_async_sse>
      cst_new_list_point_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_point_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_point_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_point_twin_rust_async_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_point_twin_rust_async_sse');
  late final _cst_new_list_point_twin_rust_async_sse =
      _cst_new_list_point_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_point_twin_rust_async_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_point_twin_sse> cst_new_list_point_twin_sse(
    int len,
  ) {
    return _cst_new_list_point_twin_sse(
      len,
    );
  }

  late final _cst_new_list_point_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_point_twin_sse> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_point_twin_sse');
  late final _cst_new_list_point_twin_sse = _cst_new_list_point_twin_ssePtr
      .asFunction<ffi.Pointer<wire_cst_list_point_twin_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_point_twin_sync> cst_new_list_point_twin_sync(
    int len,
  ) {
    return _cst_new_list_point_twin_sync(
      len,
    );
  }

  late final _cst_new_list_point_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_point_twin_sync> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_point_twin_sync');
  late final _cst_new_list_point_twin_sync = _cst_new_list_point_twin_syncPtr
      .asFunction<ffi.Pointer<wire_cst_list_point_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_point_twin_sync_sse>
      cst_new_list_point_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_point_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_point_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_point_twin_sync_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_point_twin_sync_sse');
  late final _cst_new_list_point_twin_sync_sse =
      _cst_new_list_point_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_point_twin_sync_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_f_32> cst_new_list_prim_f_32(
    int len,
  ) {
    return _cst_new_list_prim_f_32(
      len,
    );
  }

  late final _cst_new_list_prim_f_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_f_32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_f_32');
  late final _cst_new_list_prim_f_32 = _cst_new_list_prim_f_32Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_f_32> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_f_64> cst_new_list_prim_f_64(
    int len,
  ) {
    return _cst_new_list_prim_f_64(
      len,
    );
  }

  late final _cst_new_list_prim_f_64Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_f_64> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_f_64');
  late final _cst_new_list_prim_f_64 = _cst_new_list_prim_f_64Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_f_64> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_16> cst_new_list_prim_i_16(
    int len,
  ) {
    return _cst_new_list_prim_i_16(
      len,
    );
  }

  late final _cst_new_list_prim_i_16Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_16> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_16');
  late final _cst_new_list_prim_i_16 = _cst_new_list_prim_i_16Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_16> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_32> cst_new_list_prim_i_32(
    int len,
  ) {
    return _cst_new_list_prim_i_32(
      len,
    );
  }

  late final _cst_new_list_prim_i_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_32');
  late final _cst_new_list_prim_i_32 = _cst_new_list_prim_i_32Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_32> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_64> cst_new_list_prim_i_64(
    int len,
  ) {
    return _cst_new_list_prim_i_64(
      len,
    );
  }

  late final _cst_new_list_prim_i_64Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_64> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_64');
  late final _cst_new_list_prim_i_64 = _cst_new_list_prim_i_64Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_64> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_8> cst_new_list_prim_i_8(
    int len,
  ) {
    return _cst_new_list_prim_i_8(
      len,
    );
  }

  late final _cst_new_list_prim_i_8Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_i_8> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_i_8');
  late final _cst_new_list_prim_i_8 = _cst_new_list_prim_i_8Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_8> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_16> cst_new_list_prim_u_16(
    int len,
  ) {
    return _cst_new_list_prim_u_16(
      len,
    );
  }

  late final _cst_new_list_prim_u_16Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_16> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_16');
  late final _cst_new_list_prim_u_16 = _cst_new_list_prim_u_16Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_16> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_32> cst_new_list_prim_u_32(
    int len,
  ) {
    return _cst_new_list_prim_u_32(
      len,
    );
  }

  late final _cst_new_list_prim_u_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_32');
  late final _cst_new_list_prim_u_32 = _cst_new_list_prim_u_32Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_32> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_64> cst_new_list_prim_u_64(
    int len,
  ) {
    return _cst_new_list_prim_u_64(
      len,
    );
  }

  late final _cst_new_list_prim_u_64Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_64> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_64');
  late final _cst_new_list_prim_u_64 = _cst_new_list_prim_u_64Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_64> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8> cst_new_list_prim_u_8(
    int len,
  ) {
    return _cst_new_list_prim_u_8(
      len,
    );
  }

  late final _cst_new_list_prim_u_8Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_prim_u_8> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_prim_u_8');
  late final _cst_new_list_prim_u_8 = _cst_new_list_prim_u_8Ptr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8> Function(int)>();

  ffi.Pointer<wire_cst_list_raw_string_enum_mirrored>
      cst_new_list_raw_string_enum_mirrored(
    int len,
  ) {
    return _cst_new_list_raw_string_enum_mirrored(
      len,
    );
  }

  late final _cst_new_list_raw_string_enum_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_raw_string_enum_mirrored> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_raw_string_enum_mirrored');
  late final _cst_new_list_raw_string_enum_mirrored =
      _cst_new_list_raw_string_enum_mirroredPtr.asFunction<
          ffi.Pointer<wire_cst_list_raw_string_enum_mirrored> Function(int)>();

  ffi.Pointer<wire_cst_list_raw_string_mirrored>
      cst_new_list_raw_string_mirrored(
    int len,
  ) {
    return _cst_new_list_raw_string_mirrored(
      len,
    );
  }

  late final _cst_new_list_raw_string_mirroredPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_raw_string_mirrored> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_raw_string_mirrored');
  late final _cst_new_list_raw_string_mirrored =
      _cst_new_list_raw_string_mirroredPtr.asFunction<
          ffi.Pointer<wire_cst_list_raw_string_mirrored> Function(int)>();

  ffi.Pointer<wire_cst_list_record_i_32_i_32> cst_new_list_record_i_32_i_32(
    int len,
  ) {
    return _cst_new_list_record_i_32_i_32(
      len,
    );
  }

  late final _cst_new_list_record_i_32_i_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_i_32_i_32> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_i_32_i_32');
  late final _cst_new_list_record_i_32_i_32 = _cst_new_list_record_i_32_i_32Ptr
      .asFunction<ffi.Pointer<wire_cst_list_record_i_32_i_32> Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal>
      cst_new_list_record_string_enum_simple_twin_normal(
    int len,
  ) {
    return _cst_new_list_record_string_enum_simple_twin_normal(
      len,
    );
  }

  late final _cst_new_list_record_string_enum_simple_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_enum_simple_twin_normal');
  late final _cst_new_list_record_string_enum_simple_twin_normal =
      _cst_new_list_record_string_enum_simple_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async>
      cst_new_list_record_string_enum_simple_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_record_string_enum_simple_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_record_string_enum_simple_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_string_enum_simple_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_enum_simple_twin_rust_async');
  late final _cst_new_list_record_string_enum_simple_twin_rust_async =
      _cst_new_list_record_string_enum_simple_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_rust_async_sse>
      cst_new_list_record_string_enum_simple_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_record_string_enum_simple_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_record_string_enum_simple_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_string_enum_simple_twin_rust_async_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_enum_simple_twin_rust_async_sse');
  late final _cst_new_list_record_string_enum_simple_twin_rust_async_sse =
      _cst_new_list_record_string_enum_simple_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<
                  wire_cst_list_record_string_enum_simple_twin_rust_async_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sse>
      cst_new_list_record_string_enum_simple_twin_sse(
    int len,
  ) {
    return _cst_new_list_record_string_enum_simple_twin_sse(
      len,
    );
  }

  late final _cst_new_list_record_string_enum_simple_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_enum_simple_twin_sse');
  late final _cst_new_list_record_string_enum_simple_twin_sse =
      _cst_new_list_record_string_enum_simple_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync>
      cst_new_list_record_string_enum_simple_twin_sync(
    int len,
  ) {
    return _cst_new_list_record_string_enum_simple_twin_sync(
      len,
    );
  }

  late final _cst_new_list_record_string_enum_simple_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_enum_simple_twin_sync');
  late final _cst_new_list_record_string_enum_simple_twin_sync =
      _cst_new_list_record_string_enum_simple_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync_sse>
      cst_new_list_record_string_enum_simple_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_record_string_enum_simple_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_record_string_enum_simple_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_enum_simple_twin_sync_sse');
  late final _cst_new_list_record_string_enum_simple_twin_sync_sse =
      _cst_new_list_record_string_enum_simple_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_enum_simple_twin_sync_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_i_32> cst_new_list_record_string_i_32(
    int len,
  ) {
    return _cst_new_list_record_string_i_32(
      len,
    );
  }

  late final _cst_new_list_record_string_i_32Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_i_32> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_i_32');
  late final _cst_new_list_record_string_i_32 =
      _cst_new_list_record_string_i_32Ptr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_i_32> Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal>
      cst_new_list_record_string_kitchen_sink_twin_normal(
    int len,
  ) {
    return _cst_new_list_record_string_kitchen_sink_twin_normal(
      len,
    );
  }

  late final _cst_new_list_record_string_kitchen_sink_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_kitchen_sink_twin_normal');
  late final _cst_new_list_record_string_kitchen_sink_twin_normal =
      _cst_new_list_record_string_kitchen_sink_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_normal>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async>
      cst_new_list_record_string_kitchen_sink_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_record_string_kitchen_sink_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_record_string_kitchen_sink_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_string_kitchen_sink_twin_rust_async>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_kitchen_sink_twin_rust_async');
  late final _cst_new_list_record_string_kitchen_sink_twin_rust_async =
      _cst_new_list_record_string_kitchen_sink_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_rust_async_sse>
      cst_new_list_record_string_kitchen_sink_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_record_string_kitchen_sink_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_record_string_kitchen_sink_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_string_kitchen_sink_twin_rust_async_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_kitchen_sink_twin_rust_async_sse');
  late final _cst_new_list_record_string_kitchen_sink_twin_rust_async_sse =
      _cst_new_list_record_string_kitchen_sink_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<
                  wire_cst_list_record_string_kitchen_sink_twin_rust_async_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sse>
      cst_new_list_record_string_kitchen_sink_twin_sse(
    int len,
  ) {
    return _cst_new_list_record_string_kitchen_sink_twin_sse(
      len,
    );
  }

  late final _cst_new_list_record_string_kitchen_sink_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_kitchen_sink_twin_sse');
  late final _cst_new_list_record_string_kitchen_sink_twin_sse =
      _cst_new_list_record_string_kitchen_sink_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync>
      cst_new_list_record_string_kitchen_sink_twin_sync(
    int len,
  ) {
    return _cst_new_list_record_string_kitchen_sink_twin_sync(
      len,
    );
  }

  late final _cst_new_list_record_string_kitchen_sink_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_kitchen_sink_twin_sync');
  late final _cst_new_list_record_string_kitchen_sink_twin_sync =
      _cst_new_list_record_string_kitchen_sink_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync_sse>
      cst_new_list_record_string_kitchen_sink_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_record_string_kitchen_sink_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_record_string_kitchen_sink_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<
                      wire_cst_list_record_string_kitchen_sink_twin_sync_sse>
                  Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_kitchen_sink_twin_sync_sse');
  late final _cst_new_list_record_string_kitchen_sink_twin_sync_sse =
      _cst_new_list_record_string_kitchen_sink_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_kitchen_sink_twin_sync_sse>
              Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_list_prim_u_8>
      cst_new_list_record_string_list_prim_u_8(
    int len,
  ) {
    return _cst_new_list_record_string_list_prim_u_8(
      len,
    );
  }

  late final _cst_new_list_record_string_list_prim_u_8Ptr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_list_prim_u_8> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_list_prim_u_8');
  late final _cst_new_list_record_string_list_prim_u_8 =
      _cst_new_list_record_string_list_prim_u_8Ptr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_list_prim_u_8> Function(
              int)>();

  ffi.Pointer<wire_cst_list_record_string_my_size>
      cst_new_list_record_string_my_size(
    int len,
  ) {
    return _cst_new_list_record_string_my_size(
      len,
    );
  }

  late final _cst_new_list_record_string_my_sizePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_my_size> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_my_size');
  late final _cst_new_list_record_string_my_size =
      _cst_new_list_record_string_my_sizePtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_my_size> Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_string>
      cst_new_list_record_string_string(
    int len,
  ) {
    return _cst_new_list_record_string_string(
      len,
    );
  }

  late final _cst_new_list_record_string_stringPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_record_string_string> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_record_string_string');
  late final _cst_new_list_record_string_string =
      _cst_new_list_record_string_stringPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_string> Function(int)>();

  ffi.Pointer<wire_cst_list_sum_with_twin_normal>
      cst_new_list_sum_with_twin_normal(
    int len,
  ) {
    return _cst_new_list_sum_with_twin_normal(
      len,
    );
  }

  late final _cst_new_list_sum_with_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_sum_with_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_sum_with_twin_normal');
  late final _cst_new_list_sum_with_twin_normal =
      _cst_new_list_sum_with_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_sum_with_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_sum_with_twin_rust_async>
      cst_new_list_sum_with_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_sum_with_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_sum_with_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_sum_with_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_sum_with_twin_rust_async');
  late final _cst_new_list_sum_with_twin_rust_async =
      _cst_new_list_sum_with_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_sum_with_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_sum_with_twin_rust_async_sse>
      cst_new_list_sum_with_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_sum_with_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_sum_with_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_sum_with_twin_rust_async_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_sum_with_twin_rust_async_sse');
  late final _cst_new_list_sum_with_twin_rust_async_sse =
      _cst_new_list_sum_with_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_sum_with_twin_rust_async_sse> Function(
              int)>();

  ffi.Pointer<wire_cst_list_sum_with_twin_sse> cst_new_list_sum_with_twin_sse(
    int len,
  ) {
    return _cst_new_list_sum_with_twin_sse(
      len,
    );
  }

  late final _cst_new_list_sum_with_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_sum_with_twin_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_sum_with_twin_sse');
  late final _cst_new_list_sum_with_twin_sse =
      _cst_new_list_sum_with_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_sum_with_twin_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_sum_with_twin_sync> cst_new_list_sum_with_twin_sync(
    int len,
  ) {
    return _cst_new_list_sum_with_twin_sync(
      len,
    );
  }

  late final _cst_new_list_sum_with_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_sum_with_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_sum_with_twin_sync');
  late final _cst_new_list_sum_with_twin_sync =
      _cst_new_list_sum_with_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_sum_with_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_sum_with_twin_sync_sse>
      cst_new_list_sum_with_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_sum_with_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_sum_with_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_sum_with_twin_sync_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_sum_with_twin_sync_sse');
  late final _cst_new_list_sum_with_twin_sync_sse =
      _cst_new_list_sum_with_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_sum_with_twin_sync_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_test_id_twin_normal>
      cst_new_list_test_id_twin_normal(
    int len,
  ) {
    return _cst_new_list_test_id_twin_normal(
      len,
    );
  }

  late final _cst_new_list_test_id_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_test_id_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_test_id_twin_normal');
  late final _cst_new_list_test_id_twin_normal =
      _cst_new_list_test_id_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_test_id_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_test_id_twin_rust_async>
      cst_new_list_test_id_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_test_id_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_test_id_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_test_id_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_test_id_twin_rust_async');
  late final _cst_new_list_test_id_twin_rust_async =
      _cst_new_list_test_id_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_test_id_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_test_id_twin_rust_async_sse>
      cst_new_list_test_id_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_test_id_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_test_id_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_test_id_twin_rust_async_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_test_id_twin_rust_async_sse');
  late final _cst_new_list_test_id_twin_rust_async_sse =
      _cst_new_list_test_id_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_test_id_twin_rust_async_sse> Function(
              int)>();

  ffi.Pointer<wire_cst_list_test_id_twin_sse> cst_new_list_test_id_twin_sse(
    int len,
  ) {
    return _cst_new_list_test_id_twin_sse(
      len,
    );
  }

  late final _cst_new_list_test_id_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_test_id_twin_sse> Function(ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_test_id_twin_sse');
  late final _cst_new_list_test_id_twin_sse = _cst_new_list_test_id_twin_ssePtr
      .asFunction<ffi.Pointer<wire_cst_list_test_id_twin_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_test_id_twin_sync> cst_new_list_test_id_twin_sync(
    int len,
  ) {
    return _cst_new_list_test_id_twin_sync(
      len,
    );
  }

  late final _cst_new_list_test_id_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_test_id_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_test_id_twin_sync');
  late final _cst_new_list_test_id_twin_sync =
      _cst_new_list_test_id_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_test_id_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_test_id_twin_sync_sse>
      cst_new_list_test_id_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_test_id_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_test_id_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_test_id_twin_sync_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_test_id_twin_sync_sse');
  late final _cst_new_list_test_id_twin_sync_sse =
      _cst_new_list_test_id_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_test_id_twin_sync_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_weekdays_twin_normal>
      cst_new_list_weekdays_twin_normal(
    int len,
  ) {
    return _cst_new_list_weekdays_twin_normal(
      len,
    );
  }

  late final _cst_new_list_weekdays_twin_normalPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_weekdays_twin_normal> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_weekdays_twin_normal');
  late final _cst_new_list_weekdays_twin_normal =
      _cst_new_list_weekdays_twin_normalPtr.asFunction<
          ffi.Pointer<wire_cst_list_weekdays_twin_normal> Function(int)>();

  ffi.Pointer<wire_cst_list_weekdays_twin_rust_async>
      cst_new_list_weekdays_twin_rust_async(
    int len,
  ) {
    return _cst_new_list_weekdays_twin_rust_async(
      len,
    );
  }

  late final _cst_new_list_weekdays_twin_rust_asyncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_weekdays_twin_rust_async> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_weekdays_twin_rust_async');
  late final _cst_new_list_weekdays_twin_rust_async =
      _cst_new_list_weekdays_twin_rust_asyncPtr.asFunction<
          ffi.Pointer<wire_cst_list_weekdays_twin_rust_async> Function(int)>();

  ffi.Pointer<wire_cst_list_weekdays_twin_rust_async_sse>
      cst_new_list_weekdays_twin_rust_async_sse(
    int len,
  ) {
    return _cst_new_list_weekdays_twin_rust_async_sse(
      len,
    );
  }

  late final _cst_new_list_weekdays_twin_rust_async_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_weekdays_twin_rust_async_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_weekdays_twin_rust_async_sse');
  late final _cst_new_list_weekdays_twin_rust_async_sse =
      _cst_new_list_weekdays_twin_rust_async_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_weekdays_twin_rust_async_sse> Function(
              int)>();

  ffi.Pointer<wire_cst_list_weekdays_twin_sse> cst_new_list_weekdays_twin_sse(
    int len,
  ) {
    return _cst_new_list_weekdays_twin_sse(
      len,
    );
  }

  late final _cst_new_list_weekdays_twin_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_weekdays_twin_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_weekdays_twin_sse');
  late final _cst_new_list_weekdays_twin_sse =
      _cst_new_list_weekdays_twin_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_weekdays_twin_sse> Function(int)>();

  ffi.Pointer<wire_cst_list_weekdays_twin_sync> cst_new_list_weekdays_twin_sync(
    int len,
  ) {
    return _cst_new_list_weekdays_twin_sync(
      len,
    );
  }

  late final _cst_new_list_weekdays_twin_syncPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_weekdays_twin_sync> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_weekdays_twin_sync');
  late final _cst_new_list_weekdays_twin_sync =
      _cst_new_list_weekdays_twin_syncPtr.asFunction<
          ffi.Pointer<wire_cst_list_weekdays_twin_sync> Function(int)>();

  ffi.Pointer<wire_cst_list_weekdays_twin_sync_sse>
      cst_new_list_weekdays_twin_sync_sse(
    int len,
  ) {
    return _cst_new_list_weekdays_twin_sync_sse(
      len,
    );
  }

  late final _cst_new_list_weekdays_twin_sync_ssePtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_weekdays_twin_sync_sse> Function(
                  ffi.Int32)>>(
      'frbgen_frb_example_pure_dart_cst_new_list_weekdays_twin_sync_sse');
  late final _cst_new_list_weekdays_twin_sync_sse =
      _cst_new_list_weekdays_twin_sync_ssePtr.asFunction<
          ffi.Pointer<wire_cst_list_weekdays_twin_sync_sse> Function(int)>();

  int dummy_method_to_enforce_bundling() {
    return _dummy_method_to_enforce_bundling();
  }

  late final _dummy_method_to_enforce_bundlingPtr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function()>>(
          'dummy_method_to_enforce_bundling');
  late final _dummy_method_to_enforce_bundling =
      _dummy_method_to_enforce_bundlingPtr.asFunction<int Function()>();
}

final class benchmark_raw_list_prim_u_8 extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_8 extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_i_32 extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_test_id_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class wire_cst_list_prim_f_64 extends ffi.Struct {
  external ffi.Pointer<ffi.Double> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_test_id_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_test_id_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feed_id_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_blob_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_message_id_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_customized_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> final_field;

  external ffi.Pointer<wire_cst_list_prim_u_8> non_final_field;
}

final class wire_cst_user_id_twin_normal extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_list_Chrono_Duration extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_Chrono_Naive extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feature_chrono_twin_normal extends ffi.Struct {
  @ffi.Int64()
  external int utc;

  @ffi.Int64()
  external int local;

  @ffi.Int64()
  external int duration;

  @ffi.Int64()
  external int naive;
}

final class wire_cst_struct_with_comments_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int field_with_comments;
}

final class wire_cst_EnumDartOpaqueTwinNormal_Primitive extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_EnumDartOpaqueTwinNormal_Opaque extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumDartOpaqueTwinNormalKind extends ffi.Union {
  external wire_cst_EnumDartOpaqueTwinNormal_Primitive Primitive;

  external wire_cst_EnumDartOpaqueTwinNormal_Opaque Opaque;
}

final class wire_cst_enum_dart_opaque_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumDartOpaqueTwinNormalKind kind;
}

final class wire_cst_dart_opaque_nested_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_list_DartOpaque extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Void>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumWithItemMixedTwinNormal_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemMixedTwinNormal_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> c_field;
}

final class EnumWithItemMixedTwinNormalKind extends ffi.Union {
  external wire_cst_EnumWithItemMixedTwinNormal_B B;

  external wire_cst_EnumWithItemMixedTwinNormal_C C;
}

final class wire_cst_enum_with_item_mixed_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemMixedTwinNormalKind kind;
}

final class wire_cst_EnumWithItemStructTwinNormal_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a_field;
}

final class wire_cst_EnumWithItemStructTwinNormal_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> b_field;
}

final class EnumWithItemStructTwinNormalKind extends ffi.Union {
  external wire_cst_EnumWithItemStructTwinNormal_A A;

  external wire_cst_EnumWithItemStructTwinNormal_B B;
}

final class wire_cst_enum_with_item_struct_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemStructTwinNormalKind kind;
}

final class wire_cst_EnumWithItemTupleTwinNormal_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemTupleTwinNormal_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class EnumWithItemTupleTwinNormalKind extends ffi.Union {
  external wire_cst_EnumWithItemTupleTwinNormal_A A;

  external wire_cst_EnumWithItemTupleTwinNormal_B B;
}

final class wire_cst_enum_with_item_tuple_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemTupleTwinNormalKind kind;
}

final class wire_cst_KitchenSinkTwinNormal_Primitives extends ffi.Struct {
  @ffi.Int32()
  external int int32;

  @ffi.Double()
  external double float64;

  @ffi.Bool()
  external bool boolean;
}

final class wire_cst_KitchenSinkTwinNormal_Nested extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_kitchen_sink_twin_normal> field1;
}

final class wire_cst_kitchen_sink_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external KitchenSinkTwinNormalKind kind;
}

final class KitchenSinkTwinNormalKind extends ffi.Union {
  external wire_cst_KitchenSinkTwinNormal_Primitives Primitives;

  external wire_cst_KitchenSinkTwinNormal_Nested Nested;

  external wire_cst_KitchenSinkTwinNormal_Optional Optional;

  external wire_cst_KitchenSinkTwinNormal_Buffer Buffer;

  external wire_cst_KitchenSinkTwinNormal_Enums Enums;
}

final class wire_cst_KitchenSinkTwinNormal_Optional extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> field0;

  external ffi.Pointer<ffi.Int32> field1;
}

final class wire_cst_KitchenSinkTwinNormal_Buffer extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_KitchenSinkTwinNormal_Enums extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_SpeedTwinNormal_GPS extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class SpeedTwinNormalKind extends ffi.Union {
  external wire_cst_SpeedTwinNormal_GPS GPS;
}

final class wire_cst_speed_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external SpeedTwinNormalKind kind;
}

final class wire_cst_MeasureTwinNormal_Speed extends ffi.Struct {
  external ffi.Pointer<wire_cst_speed_twin_normal> field0;
}

final class wire_cst_DistanceTwinNormal_Map extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class DistanceTwinNormalKind extends ffi.Union {
  external wire_cst_DistanceTwinNormal_Map Map;
}

final class wire_cst_distance_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external DistanceTwinNormalKind kind;
}

final class wire_cst_MeasureTwinNormal_Distance extends ffi.Struct {
  external ffi.Pointer<wire_cst_distance_twin_normal> field0;
}

final class MeasureTwinNormalKind extends ffi.Union {
  external wire_cst_MeasureTwinNormal_Speed Speed;

  external wire_cst_MeasureTwinNormal_Distance Distance;
}

final class wire_cst_measure_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external MeasureTwinNormalKind kind;
}

final class wire_cst_note_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> day;

  external ffi.Pointer<wire_cst_list_prim_u_8> body;
}

final class wire_cst_event_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> address;

  external ffi.Pointer<wire_cst_list_prim_u_8> payload;
}

final class wire_cst_custom_struct_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_some_struct_twin_normal extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_CustomNestedErrorOuterTwinNormal_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinNormal_Three extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinNormal_Four extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedErrorInnerTwinNormalKind extends ffi.Union {
  external wire_cst_CustomNestedErrorInnerTwinNormal_Three Three;

  external wire_cst_CustomNestedErrorInnerTwinNormal_Four Four;
}

final class wire_cst_custom_nested_error_inner_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorInnerTwinNormalKind kind;
}

final class wire_cst_CustomNestedErrorOuterTwinNormal_Two extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_inner_twin_normal> field0;
}

final class CustomNestedErrorOuterTwinNormalKind extends ffi.Union {
  external wire_cst_CustomNestedErrorOuterTwinNormal_One One;

  external wire_cst_CustomNestedErrorOuterTwinNormal_Two Two;
}

final class wire_cst_custom_nested_error_outer_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorOuterTwinNormalKind kind;
}

final class wire_cst_custom_struct_error_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_my_struct extends ffi.Struct {
  @ffi.Bool()
  external bool content;
}

final class wire_cst_macro_struct extends ffi.Struct {
  @ffi.Int32()
  external int data;
}

final class wire_cst_record_i_32_i_32 extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_i_32_i_32 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_i_32_i_32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_list_prim_u_8 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  external ffi.Pointer<wire_cst_list_prim_u_8> field1;
}

final class wire_cst_list_record_string_list_prim_u_8 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_list_prim_u_8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_kitchen_sink_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  external wire_cst_kitchen_sink_twin_normal field1;
}

final class wire_cst_list_record_string_kitchen_sink_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_kitchen_sink_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_enum_simple_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_enum_simple_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_enum_simple_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_string extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  external ffi.Pointer<wire_cst_list_prim_u_8> field1;
}

final class wire_cst_list_record_string_string extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_string> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_size extends ffi.Struct {
  @ffi.Int32()
  external int width;

  @ffi.Int32()
  external int height;
}

final class wire_cst_record_string_my_size extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  external wire_cst_my_size field1;
}

final class wire_cst_list_record_string_my_size extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_my_size> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_String extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_concatenate_with_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_sum_with_twin_normal extends ffi.Struct {
  @ffi.Uint32()
  external int x;
}

final class wire_cst_numbers extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class wire_cst_sequences extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class wire_cst_application_env_var extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  @ffi.Bool()
  external bool field1;
}

final class wire_cst_list_application_env_var extends ffi.Struct {
  external ffi.Pointer<wire_cst_application_env_var> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_application_env extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_application_env_var> vars;
}

final class wire_cst_application_settings extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  external ffi.Pointer<wire_cst_list_prim_u_8> version;

  @ffi.Int32()
  external int mode;

  external ffi.Pointer<wire_cst_application_env> env;

  external ffi.Pointer<wire_cst_application_env> env_optional;
}

final class wire_cst_list_my_tree_node_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_tree_node_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_tree_node_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int value_i32;

  external ffi.Pointer<wire_cst_list_prim_u_8> value_vec_u8;

  @ffi.Bool()
  external bool value_boolean;

  external ffi.Pointer<wire_cst_list_my_tree_node_twin_normal> children;
}

final class wire_cst_my_nested_struct_twin_normal extends ffi.Struct {
  external wire_cst_my_tree_node_twin_normal tree_node;

  @ffi.Int32()
  external int weekday;
}

final class wire_cst_list_weekdays_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_a_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_AbcTwinNormal_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_a_twin_normal> field0;
}

final class wire_cst_b_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int b;
}

final class wire_cst_AbcTwinNormal_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_b_twin_normal> field0;
}

final class wire_cst_c_twin_normal extends ffi.Struct {
  @ffi.Bool()
  external bool c;
}

final class wire_cst_AbcTwinNormal_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_c_twin_normal> field0;
}

final class wire_cst_AbcTwinNormal_JustInt extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class AbcTwinNormalKind extends ffi.Union {
  external wire_cst_AbcTwinNormal_A A;

  external wire_cst_AbcTwinNormal_B B;

  external wire_cst_AbcTwinNormal_C C;

  external wire_cst_AbcTwinNormal_JustInt JustInt;
}

final class wire_cst_abc_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AbcTwinNormalKind kind;
}

final class wire_cst_struct_with_enum_twin_normal extends ffi.Struct {
  external wire_cst_abc_twin_normal abc1;

  external wire_cst_abc_twin_normal abc2;
}

final class wire_cst_empty_twin_normal extends ffi.Opaque {}

final class wire_cst_list_my_size extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_size> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_new_type_int_twin_normal extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_list_prim_i_8 extends ffi.Struct {
  external ffi.Pointer<ffi.Int8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_f_32 extends ffi.Struct {
  external ffi.Pointer<ffi.Float> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_attribute_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_list_attribute_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_attribute_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_box_autoadd_attribute_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_attribute_twin_normal>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_exotic_optionals_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> int32;

  external ffi.Pointer<ffi.Int64> int64;

  external ffi.Pointer<ffi.Double> float64;

  external ffi.Pointer<ffi.Bool> boolean;

  external ffi.Pointer<wire_cst_list_prim_u_8> zerocopy;

  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_attribute_twin_normal> attributes;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
      attributes_nullable;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_normal>
      nullable_attributes;

  external ffi.Pointer<wire_cst_new_type_int_twin_normal> newtypeint;
}

final class wire_cst_list_opt_box_autoadd_i_32 extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_box_autoadd_weekdays_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_String extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_list_prim_i_32 extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_i_32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_opt_vecs_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> i32;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_normal>
      enums;

  external ffi.Pointer<wire_cst_list_opt_String> strings;

  external ffi.Pointer<wire_cst_list_opt_list_prim_i_32> buffers;
}

final class wire_cst_test_id_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class wire_cst_list_test_id_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_test_id_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feed_id_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_blob_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_message_id_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_test_id_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class wire_cst_list_test_id_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_test_id_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feed_id_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_blob_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_message_id_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_customized_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> final_field;

  external ffi.Pointer<wire_cst_list_prim_u_8> non_final_field;
}

final class wire_cst_user_id_twin_rust_async extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_customized_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> final_field;

  external ffi.Pointer<wire_cst_list_prim_u_8> non_final_field;
}

final class wire_cst_user_id_twin_sync extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_benchmark_binary_tree_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> left;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_normal> right;
}

final class wire_cst_benchmark_blob_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> first;

  external ffi.Pointer<wire_cst_list_prim_u_8> second;

  external ffi.Pointer<wire_cst_list_prim_u_8> third;
}

final class wire_cst_benchmark_binary_tree_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async> left;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async> right;
}

final class wire_cst_benchmark_blob_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> first;

  external ffi.Pointer<wire_cst_list_prim_u_8> second;

  external ffi.Pointer<wire_cst_list_prim_u_8> third;
}

final class wire_cst_benchmark_binary_tree_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> left;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync> right;
}

final class wire_cst_benchmark_blob_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> first;

  external ffi.Pointer<wire_cst_list_prim_u_8> second;

  external ffi.Pointer<wire_cst_list_prim_u_8> third;
}

final class wire_cst_feature_chrono_twin_rust_async extends ffi.Struct {
  @ffi.Int64()
  external int utc;

  @ffi.Int64()
  external int local;

  @ffi.Int64()
  external int duration;

  @ffi.Int64()
  external int naive;
}

final class wire_cst_feature_chrono_twin_sync extends ffi.Struct {
  @ffi.Int64()
  external int utc;

  @ffi.Int64()
  external int local;

  @ffi.Int64()
  external int duration;

  @ffi.Int64()
  external int naive;
}

final class wire_cst_struct_with_comments_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int field_with_comments;
}

final class wire_cst_struct_with_comments_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int field_with_comments;
}

final class wire_cst_EnumDartOpaqueTwinRustAsync_Primitive extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_EnumDartOpaqueTwinRustAsync_Opaque extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumDartOpaqueTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumDartOpaqueTwinRustAsync_Primitive Primitive;

  external wire_cst_EnumDartOpaqueTwinRustAsync_Opaque Opaque;
}

final class wire_cst_enum_dart_opaque_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumDartOpaqueTwinRustAsyncKind kind;
}

final class wire_cst_dart_opaque_nested_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_EnumDartOpaqueTwinSync_Primitive extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_EnumDartOpaqueTwinSync_Opaque extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumDartOpaqueTwinSyncKind extends ffi.Union {
  external wire_cst_EnumDartOpaqueTwinSync_Primitive Primitive;

  external wire_cst_EnumDartOpaqueTwinSync_Opaque Opaque;
}

final class wire_cst_enum_dart_opaque_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumDartOpaqueTwinSyncKind kind;
}

final class wire_cst_dart_opaque_nested_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_EnumWithItemMixedTwinRustAsync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemMixedTwinRustAsync_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> c_field;
}

final class EnumWithItemMixedTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumWithItemMixedTwinRustAsync_B B;

  external wire_cst_EnumWithItemMixedTwinRustAsync_C C;
}

final class wire_cst_enum_with_item_mixed_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemMixedTwinRustAsyncKind kind;
}

final class wire_cst_EnumWithItemStructTwinRustAsync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a_field;
}

final class wire_cst_EnumWithItemStructTwinRustAsync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> b_field;
}

final class EnumWithItemStructTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumWithItemStructTwinRustAsync_A A;

  external wire_cst_EnumWithItemStructTwinRustAsync_B B;
}

final class wire_cst_enum_with_item_struct_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemStructTwinRustAsyncKind kind;
}

final class wire_cst_EnumWithItemTupleTwinRustAsync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemTupleTwinRustAsync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class EnumWithItemTupleTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumWithItemTupleTwinRustAsync_A A;

  external wire_cst_EnumWithItemTupleTwinRustAsync_B B;
}

final class wire_cst_enum_with_item_tuple_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemTupleTwinRustAsyncKind kind;
}

final class wire_cst_KitchenSinkTwinRustAsync_Primitives extends ffi.Struct {
  @ffi.Int32()
  external int int32;

  @ffi.Double()
  external double float64;

  @ffi.Bool()
  external bool boolean;
}

final class wire_cst_KitchenSinkTwinRustAsync_Nested extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async> field1;
}

final class wire_cst_kitchen_sink_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external KitchenSinkTwinRustAsyncKind kind;
}

final class KitchenSinkTwinRustAsyncKind extends ffi.Union {
  external wire_cst_KitchenSinkTwinRustAsync_Primitives Primitives;

  external wire_cst_KitchenSinkTwinRustAsync_Nested Nested;

  external wire_cst_KitchenSinkTwinRustAsync_Optional Optional;

  external wire_cst_KitchenSinkTwinRustAsync_Buffer Buffer;

  external wire_cst_KitchenSinkTwinRustAsync_Enums Enums;
}

final class wire_cst_KitchenSinkTwinRustAsync_Optional extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> field0;

  external ffi.Pointer<ffi.Int32> field1;
}

final class wire_cst_KitchenSinkTwinRustAsync_Buffer extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_KitchenSinkTwinRustAsync_Enums extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_SpeedTwinRustAsync_GPS extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class SpeedTwinRustAsyncKind extends ffi.Union {
  external wire_cst_SpeedTwinRustAsync_GPS GPS;
}

final class wire_cst_speed_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external SpeedTwinRustAsyncKind kind;
}

final class wire_cst_MeasureTwinRustAsync_Speed extends ffi.Struct {
  external ffi.Pointer<wire_cst_speed_twin_rust_async> field0;
}

final class wire_cst_DistanceTwinRustAsync_Map extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class DistanceTwinRustAsyncKind extends ffi.Union {
  external wire_cst_DistanceTwinRustAsync_Map Map;
}

final class wire_cst_distance_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external DistanceTwinRustAsyncKind kind;
}

final class wire_cst_MeasureTwinRustAsync_Distance extends ffi.Struct {
  external ffi.Pointer<wire_cst_distance_twin_rust_async> field0;
}

final class MeasureTwinRustAsyncKind extends ffi.Union {
  external wire_cst_MeasureTwinRustAsync_Speed Speed;

  external wire_cst_MeasureTwinRustAsync_Distance Distance;
}

final class wire_cst_measure_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external MeasureTwinRustAsyncKind kind;
}

final class wire_cst_note_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> day;

  external ffi.Pointer<wire_cst_list_prim_u_8> body;
}

final class wire_cst_EnumWithItemMixedTwinSync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemMixedTwinSync_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> c_field;
}

final class EnumWithItemMixedTwinSyncKind extends ffi.Union {
  external wire_cst_EnumWithItemMixedTwinSync_B B;

  external wire_cst_EnumWithItemMixedTwinSync_C C;
}

final class wire_cst_enum_with_item_mixed_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemMixedTwinSyncKind kind;
}

final class wire_cst_EnumWithItemStructTwinSync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a_field;
}

final class wire_cst_EnumWithItemStructTwinSync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> b_field;
}

final class EnumWithItemStructTwinSyncKind extends ffi.Union {
  external wire_cst_EnumWithItemStructTwinSync_A A;

  external wire_cst_EnumWithItemStructTwinSync_B B;
}

final class wire_cst_enum_with_item_struct_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemStructTwinSyncKind kind;
}

final class wire_cst_EnumWithItemTupleTwinSync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemTupleTwinSync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class EnumWithItemTupleTwinSyncKind extends ffi.Union {
  external wire_cst_EnumWithItemTupleTwinSync_A A;

  external wire_cst_EnumWithItemTupleTwinSync_B B;
}

final class wire_cst_enum_with_item_tuple_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemTupleTwinSyncKind kind;
}

final class wire_cst_KitchenSinkTwinSync_Primitives extends ffi.Struct {
  @ffi.Int32()
  external int int32;

  @ffi.Double()
  external double float64;

  @ffi.Bool()
  external bool boolean;
}

final class wire_cst_KitchenSinkTwinSync_Nested extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_kitchen_sink_twin_sync> field1;
}

final class wire_cst_kitchen_sink_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external KitchenSinkTwinSyncKind kind;
}

final class KitchenSinkTwinSyncKind extends ffi.Union {
  external wire_cst_KitchenSinkTwinSync_Primitives Primitives;

  external wire_cst_KitchenSinkTwinSync_Nested Nested;

  external wire_cst_KitchenSinkTwinSync_Optional Optional;

  external wire_cst_KitchenSinkTwinSync_Buffer Buffer;

  external wire_cst_KitchenSinkTwinSync_Enums Enums;
}

final class wire_cst_KitchenSinkTwinSync_Optional extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> field0;

  external ffi.Pointer<ffi.Int32> field1;
}

final class wire_cst_KitchenSinkTwinSync_Buffer extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_KitchenSinkTwinSync_Enums extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_SpeedTwinSync_GPS extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class SpeedTwinSyncKind extends ffi.Union {
  external wire_cst_SpeedTwinSync_GPS GPS;
}

final class wire_cst_speed_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external SpeedTwinSyncKind kind;
}

final class wire_cst_MeasureTwinSync_Speed extends ffi.Struct {
  external ffi.Pointer<wire_cst_speed_twin_sync> field0;
}

final class wire_cst_DistanceTwinSync_Map extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class DistanceTwinSyncKind extends ffi.Union {
  external wire_cst_DistanceTwinSync_Map Map;
}

final class wire_cst_distance_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external DistanceTwinSyncKind kind;
}

final class wire_cst_MeasureTwinSync_Distance extends ffi.Struct {
  external ffi.Pointer<wire_cst_distance_twin_sync> field0;
}

final class MeasureTwinSyncKind extends ffi.Union {
  external wire_cst_MeasureTwinSync_Speed Speed;

  external wire_cst_MeasureTwinSync_Distance Distance;
}

final class wire_cst_measure_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external MeasureTwinSyncKind kind;
}

final class wire_cst_note_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> day;

  external ffi.Pointer<wire_cst_list_prim_u_8> body;
}

final class wire_cst_event_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> address;

  external ffi.Pointer<wire_cst_list_prim_u_8> payload;
}

final class wire_cst_custom_struct_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_some_struct_twin_rust_async extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_CustomNestedErrorOuterTwinRustAsync_One
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinRustAsync_Three
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinRustAsync_Four
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedErrorInnerTwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomNestedErrorInnerTwinRustAsync_Three Three;

  external wire_cst_CustomNestedErrorInnerTwinRustAsync_Four Four;
}

final class wire_cst_custom_nested_error_inner_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorInnerTwinRustAsyncKind kind;
}

final class wire_cst_CustomNestedErrorOuterTwinRustAsync_Two
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async>
      field0;
}

final class CustomNestedErrorOuterTwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomNestedErrorOuterTwinRustAsync_One One;

  external wire_cst_CustomNestedErrorOuterTwinRustAsync_Two Two;
}

final class wire_cst_custom_nested_error_outer_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorOuterTwinRustAsyncKind kind;
}

final class wire_cst_custom_struct_error_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_custom_struct_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_some_struct_twin_sync extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_CustomNestedErrorOuterTwinSync_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinSync_Three extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinSync_Four extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedErrorInnerTwinSyncKind extends ffi.Union {
  external wire_cst_CustomNestedErrorInnerTwinSync_Three Three;

  external wire_cst_CustomNestedErrorInnerTwinSync_Four Four;
}

final class wire_cst_custom_nested_error_inner_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorInnerTwinSyncKind kind;
}

final class wire_cst_CustomNestedErrorOuterTwinSync_Two extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync> field0;
}

final class CustomNestedErrorOuterTwinSyncKind extends ffi.Union {
  external wire_cst_CustomNestedErrorOuterTwinSync_One One;

  external wire_cst_CustomNestedErrorOuterTwinSync_Two Two;
}

final class wire_cst_custom_nested_error_outer_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorOuterTwinSyncKind kind;
}

final class wire_cst_custom_struct_error_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_record_string_kitchen_sink_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  external wire_cst_kitchen_sink_twin_rust_async field1;
}

final class wire_cst_list_record_string_kitchen_sink_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_kitchen_sink_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_enum_simple_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_enum_simple_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_enum_simple_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_kitchen_sink_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  external wire_cst_kitchen_sink_twin_sync field1;
}

final class wire_cst_list_record_string_kitchen_sink_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_kitchen_sink_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_enum_simple_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_enum_simple_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_enum_simple_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_concatenate_with_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_sum_with_twin_rust_async extends ffi.Struct {
  @ffi.Uint32()
  external int x;
}

final class wire_cst_concatenate_with_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_sum_with_twin_sync extends ffi.Struct {
  @ffi.Uint32()
  external int x;
}

final class wire_cst_list_my_tree_node_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_tree_node_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_tree_node_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int value_i32;

  external ffi.Pointer<wire_cst_list_prim_u_8> value_vec_u8;

  @ffi.Bool()
  external bool value_boolean;

  external ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async> children;
}

final class wire_cst_my_nested_struct_twin_rust_async extends ffi.Struct {
  external wire_cst_my_tree_node_twin_rust_async tree_node;

  @ffi.Int32()
  external int weekday;
}

final class wire_cst_list_weekdays_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_a_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_AbcTwinRustAsync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_a_twin_rust_async> field0;
}

final class wire_cst_b_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int b;
}

final class wire_cst_AbcTwinRustAsync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_b_twin_rust_async> field0;
}

final class wire_cst_c_twin_rust_async extends ffi.Struct {
  @ffi.Bool()
  external bool c;
}

final class wire_cst_AbcTwinRustAsync_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_c_twin_rust_async> field0;
}

final class wire_cst_AbcTwinRustAsync_JustInt extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class AbcTwinRustAsyncKind extends ffi.Union {
  external wire_cst_AbcTwinRustAsync_A A;

  external wire_cst_AbcTwinRustAsync_B B;

  external wire_cst_AbcTwinRustAsync_C C;

  external wire_cst_AbcTwinRustAsync_JustInt JustInt;
}

final class wire_cst_abc_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AbcTwinRustAsyncKind kind;
}

final class wire_cst_struct_with_enum_twin_rust_async extends ffi.Struct {
  external wire_cst_abc_twin_rust_async abc1;

  external wire_cst_abc_twin_rust_async abc2;
}

final class wire_cst_list_my_tree_node_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_tree_node_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_tree_node_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int value_i32;

  external ffi.Pointer<wire_cst_list_prim_u_8> value_vec_u8;

  @ffi.Bool()
  external bool value_boolean;

  external ffi.Pointer<wire_cst_list_my_tree_node_twin_sync> children;
}

final class wire_cst_my_nested_struct_twin_sync extends ffi.Struct {
  external wire_cst_my_tree_node_twin_sync tree_node;

  @ffi.Int32()
  external int weekday;
}

final class wire_cst_list_weekdays_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_a_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_AbcTwinSync_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_a_twin_sync> field0;
}

final class wire_cst_b_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int b;
}

final class wire_cst_AbcTwinSync_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_b_twin_sync> field0;
}

final class wire_cst_c_twin_sync extends ffi.Struct {
  @ffi.Bool()
  external bool c;
}

final class wire_cst_AbcTwinSync_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_c_twin_sync> field0;
}

final class wire_cst_AbcTwinSync_JustInt extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class AbcTwinSyncKind extends ffi.Union {
  external wire_cst_AbcTwinSync_A A;

  external wire_cst_AbcTwinSync_B B;

  external wire_cst_AbcTwinSync_C C;

  external wire_cst_AbcTwinSync_JustInt JustInt;
}

final class wire_cst_abc_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AbcTwinSyncKind kind;
}

final class wire_cst_struct_with_enum_twin_sync extends ffi.Struct {
  external wire_cst_abc_twin_sync abc1;

  external wire_cst_abc_twin_sync abc2;
}

final class wire_cst_empty_twin_rust_async extends ffi.Opaque {}

final class wire_cst_empty_twin_sync extends ffi.Opaque {}

final class wire_cst_new_type_int_twin_rust_async extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_new_type_int_twin_sync extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_attribute_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_list_attribute_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_attribute_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_box_autoadd_attribute_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_attribute_twin_rust_async>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_exotic_optionals_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> int32;

  external ffi.Pointer<ffi.Int64> int64;

  external ffi.Pointer<ffi.Double> float64;

  external ffi.Pointer<ffi.Bool> boolean;

  external ffi.Pointer<wire_cst_list_prim_u_8> zerocopy;

  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_attribute_twin_rust_async> attributes;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
      attributes_nullable;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async>
      nullable_attributes;

  external ffi.Pointer<wire_cst_new_type_int_twin_rust_async> newtypeint;
}

final class wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_opt_vecs_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> i32;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async>
      enums;

  external ffi.Pointer<wire_cst_list_opt_String> strings;

  external ffi.Pointer<wire_cst_list_opt_list_prim_i_32> buffers;
}

final class wire_cst_attribute_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_list_attribute_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_attribute_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_opt_box_autoadd_attribute_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_attribute_twin_sync>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_exotic_optionals_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> int32;

  external ffi.Pointer<ffi.Int64> int64;

  external ffi.Pointer<ffi.Double> float64;

  external ffi.Pointer<ffi.Bool> boolean;

  external ffi.Pointer<wire_cst_list_prim_u_8> zerocopy;

  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_attribute_twin_sync> attributes;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
      attributes_nullable;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync>
      nullable_attributes;

  external ffi.Pointer<wire_cst_new_type_int_twin_sync> newtypeint;
}

final class wire_cst_list_opt_box_autoadd_weekdays_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_opt_vecs_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> i32;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync> enums;

  external ffi.Pointer<wire_cst_list_opt_String> strings;

  external ffi.Pointer<wire_cst_list_opt_list_prim_i_32> buffers;
}

final class wire_cst_list_bool extends ffi.Struct {
  external ffi.Pointer<ffi.Bool> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_i_16 extends ffi.Struct {
  external ffi.Pointer<ffi.Int16> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_i_64 extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_16 extends ffi.Struct {
  external ffi.Pointer<ffi.Uint16> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_32 extends ffi.Struct {
  external ffi.Pointer<ffi.Uint32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_u_64 extends ffi.Struct {
  external ffi.Pointer<ffi.Uint64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_RustOpaque_hide_data extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Void>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EnumOpaqueTwinRustAsync_Struct extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinRustAsync_Primitive extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinRustAsync_TraitObj extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinRustAsync_Mutex extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinRustAsync_RwLock extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumOpaqueTwinRustAsyncKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinRustAsync_Struct Struct;

  external wire_cst_EnumOpaqueTwinRustAsync_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinRustAsync_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinRustAsync_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinRustAsync_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinRustAsyncKind kind;
}

final class wire_cst_opaque_nested_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_EnumOpaqueTwinSync_Struct extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSync_Primitive extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSync_TraitObj extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSync_Mutex extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSync_RwLock extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumOpaqueTwinSyncKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinSync_Struct Struct;

  external wire_cst_EnumOpaqueTwinSync_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinSync_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinSync_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinSync_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinSyncKind kind;
}

final class wire_cst_opaque_nested_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_struct_with_one_field_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int a;
}

final class wire_cst_struct_with_two_field_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int a;

  @ffi.Int32()
  external int b;
}

final class wire_cst_struct_with_zero_field_twin_rust_async
    extends ffi.Opaque {}

final class wire_cst_tuple_struct_with_one_field_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_tuple_struct_with_two_field_twin_rust_async
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_struct_with_one_field_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int a;
}

final class wire_cst_struct_with_two_field_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int a;

  @ffi.Int32()
  external int b;
}

final class wire_cst_struct_with_zero_field_twin_sync extends ffi.Opaque {}

final class wire_cst_tuple_struct_with_one_field_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_tuple_struct_with_two_field_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_record_string_i_32 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_i_32 extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_i_32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_feature_uuid_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> one;
}

final class wire_cst_feature_uuid_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> one;
}

final class wire_cst_EnumOpaqueTwinNormal_Struct extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinNormal_Primitive extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinNormal_TraitObj extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinNormal_Mutex extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinNormal_RwLock extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumOpaqueTwinNormalKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinNormal_Struct Struct;

  external wire_cst_EnumOpaqueTwinNormal_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinNormal_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinNormal_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinNormal_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinNormalKind kind;
}

final class wire_cst_opaque_nested_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_struct_with_one_field_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int a;
}

final class wire_cst_struct_with_two_field_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int a;

  @ffi.Int32()
  external int b;
}

final class wire_cst_struct_with_zero_field_twin_normal extends ffi.Opaque {}

final class wire_cst_tuple_struct_with_one_field_twin_normal
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_tuple_struct_with_two_field_twin_normal
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_feature_uuid_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> one;
}

final class wire_cst_a_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_a_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_a_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_AbcTwinRustAsyncSse_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_a_twin_rust_async_sse> field0;
}

final class wire_cst_b_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int b;
}

final class wire_cst_AbcTwinRustAsyncSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_b_twin_rust_async_sse> field0;
}

final class wire_cst_c_twin_rust_async_sse extends ffi.Struct {
  @ffi.Bool()
  external bool c;
}

final class wire_cst_AbcTwinRustAsyncSse_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_c_twin_rust_async_sse> field0;
}

final class wire_cst_AbcTwinRustAsyncSse_JustInt extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class AbcTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_AbcTwinRustAsyncSse_A A;

  external wire_cst_AbcTwinRustAsyncSse_B B;

  external wire_cst_AbcTwinRustAsyncSse_C C;

  external wire_cst_AbcTwinRustAsyncSse_JustInt JustInt;
}

final class wire_cst_abc_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AbcTwinRustAsyncSseKind kind;
}

final class wire_cst_AbcTwinSse_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_a_twin_sse> field0;
}

final class wire_cst_b_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int b;
}

final class wire_cst_AbcTwinSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_b_twin_sse> field0;
}

final class wire_cst_c_twin_sse extends ffi.Struct {
  @ffi.Bool()
  external bool c;
}

final class wire_cst_AbcTwinSse_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_c_twin_sse> field0;
}

final class wire_cst_AbcTwinSse_JustInt extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class AbcTwinSseKind extends ffi.Union {
  external wire_cst_AbcTwinSse_A A;

  external wire_cst_AbcTwinSse_B B;

  external wire_cst_AbcTwinSse_C C;

  external wire_cst_AbcTwinSse_JustInt JustInt;
}

final class wire_cst_abc_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AbcTwinSseKind kind;
}

final class wire_cst_AbcTwinSyncSse_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_a_twin_sync_sse> field0;
}

final class wire_cst_b_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int b;
}

final class wire_cst_AbcTwinSyncSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_b_twin_sync_sse> field0;
}

final class wire_cst_c_twin_sync_sse extends ffi.Struct {
  @ffi.Bool()
  external bool c;
}

final class wire_cst_AbcTwinSyncSse_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_c_twin_sync_sse> field0;
}

final class wire_cst_AbcTwinSyncSse_JustInt extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class AbcTwinSyncSseKind extends ffi.Union {
  external wire_cst_AbcTwinSyncSse_A A;

  external wire_cst_AbcTwinSyncSse_B B;

  external wire_cst_AbcTwinSyncSse_C C;

  external wire_cst_AbcTwinSyncSse_JustInt JustInt;
}

final class wire_cst_abc_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AbcTwinSyncSseKind kind;
}

final class wire_cst_attribute_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_attribute_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_attribute_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_benchmark_binary_tree_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse> left;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_rust_async_sse>
      right;
}

final class wire_cst_benchmark_binary_tree_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse> left;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sse> right;
}

final class wire_cst_benchmark_binary_tree_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse> left;

  external ffi.Pointer<wire_cst_benchmark_binary_tree_twin_sync_sse> right;
}

final class wire_cst_benchmark_blob_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> first;

  external ffi.Pointer<wire_cst_list_prim_u_8> second;

  external ffi.Pointer<wire_cst_list_prim_u_8> third;
}

final class wire_cst_benchmark_blob_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> first;

  external ffi.Pointer<wire_cst_list_prim_u_8> second;

  external ffi.Pointer<wire_cst_list_prim_u_8> third;
}

final class wire_cst_benchmark_blob_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> first;

  external ffi.Pointer<wire_cst_list_prim_u_8> second;

  external ffi.Pointer<wire_cst_list_prim_u_8> third;
}

final class wire_cst_concatenate_with_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_concatenate_with_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_concatenate_with_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_CustomNestedError2TwinNormal_CustomNested2
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError2TwinNormal_CustomNested2Number
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedError2TwinNormalKind extends ffi.Union {
  external wire_cst_CustomNestedError2TwinNormal_CustomNested2 CustomNested2;

  external wire_cst_CustomNestedError2TwinNormal_CustomNested2Number
      CustomNested2Number;
}

final class wire_cst_custom_nested_error_2_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError2TwinNormalKind kind;
}

final class wire_cst_CustomNestedError2TwinRustAsync_CustomNested2
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError2TwinRustAsync_CustomNested2Number
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedError2TwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomNestedError2TwinRustAsync_CustomNested2 CustomNested2;

  external wire_cst_CustomNestedError2TwinRustAsync_CustomNested2Number
      CustomNested2Number;
}

final class wire_cst_custom_nested_error_2_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError2TwinRustAsyncKind kind;
}

final class wire_cst_CustomNestedError2TwinRustAsyncSse_CustomNested2
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError2TwinRustAsyncSse_CustomNested2Number
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedError2TwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_CustomNestedError2TwinRustAsyncSse_CustomNested2
      CustomNested2;

  external wire_cst_CustomNestedError2TwinRustAsyncSse_CustomNested2Number
      CustomNested2Number;
}

final class wire_cst_custom_nested_error_2_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError2TwinRustAsyncSseKind kind;
}

final class wire_cst_CustomNestedError2TwinSse_CustomNested2
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError2TwinSse_CustomNested2Number
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedError2TwinSseKind extends ffi.Union {
  external wire_cst_CustomNestedError2TwinSse_CustomNested2 CustomNested2;

  external wire_cst_CustomNestedError2TwinSse_CustomNested2Number
      CustomNested2Number;
}

final class wire_cst_custom_nested_error_2_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError2TwinSseKind kind;
}

final class wire_cst_CustomNestedError2TwinSync_CustomNested2
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError2TwinSync_CustomNested2Number
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedError2TwinSyncKind extends ffi.Union {
  external wire_cst_CustomNestedError2TwinSync_CustomNested2 CustomNested2;

  external wire_cst_CustomNestedError2TwinSync_CustomNested2Number
      CustomNested2Number;
}

final class wire_cst_custom_nested_error_2_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError2TwinSyncKind kind;
}

final class wire_cst_CustomNestedError2TwinSyncSse_CustomNested2
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError2TwinSyncSse_CustomNested2Number
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedError2TwinSyncSseKind extends ffi.Union {
  external wire_cst_CustomNestedError2TwinSyncSse_CustomNested2 CustomNested2;

  external wire_cst_CustomNestedError2TwinSyncSse_CustomNested2Number
      CustomNested2Number;
}

final class wire_cst_custom_nested_error_2_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError2TwinSyncSseKind kind;
}

final class wire_cst_CustomNestedErrorInnerTwinRustAsyncSse_Three
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinRustAsyncSse_Four
    extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedErrorInnerTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_CustomNestedErrorInnerTwinRustAsyncSse_Three Three;

  external wire_cst_CustomNestedErrorInnerTwinRustAsyncSse_Four Four;
}

final class wire_cst_custom_nested_error_inner_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorInnerTwinRustAsyncSseKind kind;
}

final class wire_cst_CustomNestedErrorInnerTwinSse_Three extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinSse_Four extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedErrorInnerTwinSseKind extends ffi.Union {
  external wire_cst_CustomNestedErrorInnerTwinSse_Three Three;

  external wire_cst_CustomNestedErrorInnerTwinSse_Four Four;
}

final class wire_cst_custom_nested_error_inner_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorInnerTwinSseKind kind;
}

final class wire_cst_CustomNestedErrorInnerTwinSyncSse_Three
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorInnerTwinSyncSse_Four extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class CustomNestedErrorInnerTwinSyncSseKind extends ffi.Union {
  external wire_cst_CustomNestedErrorInnerTwinSyncSse_Three Three;

  external wire_cst_CustomNestedErrorInnerTwinSyncSse_Four Four;
}

final class wire_cst_custom_nested_error_inner_twin_sync_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorInnerTwinSyncSseKind kind;
}

final class wire_cst_CustomNestedErrorOuterTwinRustAsyncSse_One
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorOuterTwinRustAsyncSse_Two
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_inner_twin_rust_async_sse>
      field0;
}

final class CustomNestedErrorOuterTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_CustomNestedErrorOuterTwinRustAsyncSse_One One;

  external wire_cst_CustomNestedErrorOuterTwinRustAsyncSse_Two Two;
}

final class wire_cst_custom_nested_error_outer_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorOuterTwinRustAsyncSseKind kind;
}

final class wire_cst_CustomNestedErrorOuterTwinSse_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorOuterTwinSse_Two extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sse> field0;
}

final class CustomNestedErrorOuterTwinSseKind extends ffi.Union {
  external wire_cst_CustomNestedErrorOuterTwinSse_One One;

  external wire_cst_CustomNestedErrorOuterTwinSse_Two Two;
}

final class wire_cst_custom_nested_error_outer_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorOuterTwinSseKind kind;
}

final class wire_cst_CustomNestedErrorOuterTwinSyncSse_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedErrorOuterTwinSyncSse_Two extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_inner_twin_sync_sse> field0;
}

final class CustomNestedErrorOuterTwinSyncSseKind extends ffi.Union {
  external wire_cst_CustomNestedErrorOuterTwinSyncSse_One One;

  external wire_cst_CustomNestedErrorOuterTwinSyncSse_Two Two;
}

final class wire_cst_custom_nested_error_outer_twin_sync_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedErrorOuterTwinSyncSseKind kind;
}

final class wire_cst_custom_struct_error_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_custom_struct_error_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_custom_struct_error_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_custom_struct_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_custom_struct_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_custom_struct_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_customized_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> final_field;

  external ffi.Pointer<wire_cst_list_prim_u_8> non_final_field;
}

final class wire_cst_customized_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> final_field;

  external ffi.Pointer<wire_cst_list_prim_u_8> non_final_field;
}

final class wire_cst_customized_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> final_field;

  external ffi.Pointer<wire_cst_list_prim_u_8> non_final_field;
}

final class wire_cst_dart_opaque_nested_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_dart_opaque_nested_twin_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_dart_opaque_nested_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_list_element_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_element_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_element_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> tag;

  external ffi.Pointer<wire_cst_list_prim_u_8> text;

  external ffi.Pointer<wire_cst_list_attribute_twin_normal> attributes;

  external ffi.Pointer<wire_cst_list_element_twin_normal> children;
}

final class wire_cst_list_element_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_element_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_element_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> tag;

  external ffi.Pointer<wire_cst_list_prim_u_8> text;

  external ffi.Pointer<wire_cst_list_attribute_twin_rust_async> attributes;

  external ffi.Pointer<wire_cst_list_element_twin_rust_async> children;
}

final class wire_cst_list_attribute_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_attribute_twin_rust_async_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_element_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_element_twin_rust_async_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_element_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> tag;

  external ffi.Pointer<wire_cst_list_prim_u_8> text;

  external ffi.Pointer<wire_cst_list_attribute_twin_rust_async_sse> attributes;

  external ffi.Pointer<wire_cst_list_element_twin_rust_async_sse> children;
}

final class wire_cst_list_attribute_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_attribute_twin_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_element_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_element_twin_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_element_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> tag;

  external ffi.Pointer<wire_cst_list_prim_u_8> text;

  external ffi.Pointer<wire_cst_list_attribute_twin_sse> attributes;

  external ffi.Pointer<wire_cst_list_element_twin_sse> children;
}

final class wire_cst_list_element_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_element_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_element_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> tag;

  external ffi.Pointer<wire_cst_list_prim_u_8> text;

  external ffi.Pointer<wire_cst_list_attribute_twin_sync> attributes;

  external ffi.Pointer<wire_cst_list_element_twin_sync> children;
}

final class wire_cst_list_attribute_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_attribute_twin_sync_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_element_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_element_twin_sync_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_element_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> tag;

  external ffi.Pointer<wire_cst_list_prim_u_8> text;

  external ffi.Pointer<wire_cst_list_attribute_twin_sync_sse> attributes;

  external ffi.Pointer<wire_cst_list_element_twin_sync_sse> children;
}

final class wire_cst_empty_twin_rust_async_sse extends ffi.Opaque {}

final class wire_cst_empty_twin_sse extends ffi.Opaque {}

final class wire_cst_empty_twin_sync_sse extends ffi.Opaque {}

final class wire_cst_EnumDartOpaqueTwinRustAsyncSse_Primitive
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_EnumDartOpaqueTwinRustAsyncSse_Opaque extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumDartOpaqueTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_EnumDartOpaqueTwinRustAsyncSse_Primitive Primitive;

  external wire_cst_EnumDartOpaqueTwinRustAsyncSse_Opaque Opaque;
}

final class wire_cst_enum_dart_opaque_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumDartOpaqueTwinRustAsyncSseKind kind;
}

final class wire_cst_EnumDartOpaqueTwinSse_Primitive extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_EnumDartOpaqueTwinSse_Opaque extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumDartOpaqueTwinSseKind extends ffi.Union {
  external wire_cst_EnumDartOpaqueTwinSse_Primitive Primitive;

  external wire_cst_EnumDartOpaqueTwinSse_Opaque Opaque;
}

final class wire_cst_enum_dart_opaque_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumDartOpaqueTwinSseKind kind;
}

final class wire_cst_EnumDartOpaqueTwinSyncSse_Primitive extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_EnumDartOpaqueTwinSyncSse_Opaque extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumDartOpaqueTwinSyncSseKind extends ffi.Union {
  external wire_cst_EnumDartOpaqueTwinSyncSse_Primitive Primitive;

  external wire_cst_EnumDartOpaqueTwinSyncSse_Opaque Opaque;
}

final class wire_cst_enum_dart_opaque_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumDartOpaqueTwinSyncSseKind kind;
}

final class wire_cst_EnumOpaqueTwinRustAsyncSse_Struct extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinRustAsyncSse_Primitive extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinRustAsyncSse_TraitObj extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinRustAsyncSse_Mutex extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinRustAsyncSse_RwLock extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumOpaqueTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinRustAsyncSse_Struct Struct;

  external wire_cst_EnumOpaqueTwinRustAsyncSse_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinRustAsyncSse_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinRustAsyncSse_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinRustAsyncSse_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinRustAsyncSseKind kind;
}

final class wire_cst_EnumOpaqueTwinSse_Struct extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSse_Primitive extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSse_TraitObj extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSse_Mutex extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSse_RwLock extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumOpaqueTwinSseKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinSse_Struct Struct;

  external wire_cst_EnumOpaqueTwinSse_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinSse_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinSse_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinSse_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinSseKind kind;
}

final class wire_cst_EnumOpaqueTwinSyncSse_Struct extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSyncSse_Primitive extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSyncSse_TraitObj extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSyncSse_Mutex extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class wire_cst_EnumOpaqueTwinSyncSse_RwLock extends ffi.Struct {
  external ffi.Pointer<ffi.Void> field0;
}

final class EnumOpaqueTwinSyncSseKind extends ffi.Union {
  external wire_cst_EnumOpaqueTwinSyncSse_Struct Struct;

  external wire_cst_EnumOpaqueTwinSyncSse_Primitive Primitive;

  external wire_cst_EnumOpaqueTwinSyncSse_TraitObj TraitObj;

  external wire_cst_EnumOpaqueTwinSyncSse_Mutex Mutex;

  external wire_cst_EnumOpaqueTwinSyncSse_RwLock RwLock;
}

final class wire_cst_enum_opaque_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumOpaqueTwinSyncSseKind kind;
}

final class wire_cst_EnumWithItemMixedTwinRustAsyncSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemMixedTwinRustAsyncSse_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> c_field;
}

final class EnumWithItemMixedTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_EnumWithItemMixedTwinRustAsyncSse_B B;

  external wire_cst_EnumWithItemMixedTwinRustAsyncSse_C C;
}

final class wire_cst_enum_with_item_mixed_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemMixedTwinRustAsyncSseKind kind;
}

final class wire_cst_EnumWithItemMixedTwinSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemMixedTwinSse_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> c_field;
}

final class EnumWithItemMixedTwinSseKind extends ffi.Union {
  external wire_cst_EnumWithItemMixedTwinSse_B B;

  external wire_cst_EnumWithItemMixedTwinSse_C C;
}

final class wire_cst_enum_with_item_mixed_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemMixedTwinSseKind kind;
}

final class wire_cst_EnumWithItemMixedTwinSyncSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemMixedTwinSyncSse_C extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> c_field;
}

final class EnumWithItemMixedTwinSyncSseKind extends ffi.Union {
  external wire_cst_EnumWithItemMixedTwinSyncSse_B B;

  external wire_cst_EnumWithItemMixedTwinSyncSse_C C;
}

final class wire_cst_enum_with_item_mixed_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemMixedTwinSyncSseKind kind;
}

final class wire_cst_EnumWithItemStructTwinRustAsyncSse_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a_field;
}

final class wire_cst_EnumWithItemStructTwinRustAsyncSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> b_field;
}

final class EnumWithItemStructTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_EnumWithItemStructTwinRustAsyncSse_A A;

  external wire_cst_EnumWithItemStructTwinRustAsyncSse_B B;
}

final class wire_cst_enum_with_item_struct_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemStructTwinRustAsyncSseKind kind;
}

final class wire_cst_EnumWithItemStructTwinSse_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a_field;
}

final class wire_cst_EnumWithItemStructTwinSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> b_field;
}

final class EnumWithItemStructTwinSseKind extends ffi.Union {
  external wire_cst_EnumWithItemStructTwinSse_A A;

  external wire_cst_EnumWithItemStructTwinSse_B B;
}

final class wire_cst_enum_with_item_struct_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemStructTwinSseKind kind;
}

final class wire_cst_EnumWithItemStructTwinSyncSse_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a_field;
}

final class wire_cst_EnumWithItemStructTwinSyncSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> b_field;
}

final class EnumWithItemStructTwinSyncSseKind extends ffi.Union {
  external wire_cst_EnumWithItemStructTwinSyncSse_A A;

  external wire_cst_EnumWithItemStructTwinSyncSse_B B;
}

final class wire_cst_enum_with_item_struct_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemStructTwinSyncSseKind kind;
}

final class wire_cst_EnumWithItemTupleTwinRustAsyncSse_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemTupleTwinRustAsyncSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class EnumWithItemTupleTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_EnumWithItemTupleTwinRustAsyncSse_A A;

  external wire_cst_EnumWithItemTupleTwinRustAsyncSse_B B;
}

final class wire_cst_enum_with_item_tuple_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemTupleTwinRustAsyncSseKind kind;
}

final class wire_cst_EnumWithItemTupleTwinSse_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemTupleTwinSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class EnumWithItemTupleTwinSseKind extends ffi.Union {
  external wire_cst_EnumWithItemTupleTwinSse_A A;

  external wire_cst_EnumWithItemTupleTwinSse_B B;
}

final class wire_cst_enum_with_item_tuple_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemTupleTwinSseKind kind;
}

final class wire_cst_EnumWithItemTupleTwinSyncSse_A extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_EnumWithItemTupleTwinSyncSse_B extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class EnumWithItemTupleTwinSyncSseKind extends ffi.Union {
  external wire_cst_EnumWithItemTupleTwinSyncSse_A A;

  external wire_cst_EnumWithItemTupleTwinSyncSse_B B;
}

final class wire_cst_enum_with_item_tuple_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EnumWithItemTupleTwinSyncSseKind kind;
}

final class wire_cst_event_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> address;

  external ffi.Pointer<wire_cst_list_prim_u_8> payload;
}

final class wire_cst_event_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> address;

  external ffi.Pointer<wire_cst_list_prim_u_8> payload;
}

final class wire_cst_list_opt_box_autoadd_attribute_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_attribute_twin_rust_async_sse>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_new_type_int_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_exotic_optionals_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> int32;

  external ffi.Pointer<ffi.Int64> int64;

  external ffi.Pointer<ffi.Double> float64;

  external ffi.Pointer<ffi.Bool> boolean;

  external ffi.Pointer<wire_cst_list_prim_u_8> zerocopy;

  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_attribute_twin_rust_async_sse> attributes;

  external ffi
      .Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async_sse>
      attributes_nullable;

  external ffi
      .Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_rust_async_sse>
      nullable_attributes;

  external ffi.Pointer<wire_cst_new_type_int_twin_rust_async_sse> newtypeint;
}

final class wire_cst_list_opt_box_autoadd_attribute_twin_sse
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_attribute_twin_sse>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_new_type_int_twin_sse extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_exotic_optionals_twin_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> int32;

  external ffi.Pointer<ffi.Int64> int64;

  external ffi.Pointer<ffi.Double> float64;

  external ffi.Pointer<ffi.Bool> boolean;

  external ffi.Pointer<wire_cst_list_prim_u_8> zerocopy;

  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_attribute_twin_sse> attributes;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sse>
      attributes_nullable;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sse>
      nullable_attributes;

  external ffi.Pointer<wire_cst_new_type_int_twin_sse> newtypeint;
}

final class wire_cst_list_opt_box_autoadd_attribute_twin_sync_sse
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_attribute_twin_sync_sse>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_new_type_int_twin_sync_sse extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_exotic_optionals_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> int32;

  external ffi.Pointer<ffi.Int64> int64;

  external ffi.Pointer<ffi.Double> float64;

  external ffi.Pointer<ffi.Bool> boolean;

  external ffi.Pointer<wire_cst_list_prim_u_8> zerocopy;

  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_attribute_twin_sync_sse> attributes;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync_sse>
      attributes_nullable;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_attribute_twin_sync_sse>
      nullable_attributes;

  external ffi.Pointer<wire_cst_new_type_int_twin_sync_sse> newtypeint;
}

final class wire_cst_feed_id_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_feed_id_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_feed_id_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_KitchenSinkTwinRustAsyncSse_Primitives extends ffi.Struct {
  @ffi.Int32()
  external int int32;

  @ffi.Double()
  external double float64;

  @ffi.Bool()
  external bool boolean;
}

final class wire_cst_KitchenSinkTwinRustAsyncSse_Nested extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_kitchen_sink_twin_rust_async_sse> field1;
}

final class wire_cst_kitchen_sink_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external KitchenSinkTwinRustAsyncSseKind kind;
}

final class KitchenSinkTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_KitchenSinkTwinRustAsyncSse_Primitives Primitives;

  external wire_cst_KitchenSinkTwinRustAsyncSse_Nested Nested;

  external wire_cst_KitchenSinkTwinRustAsyncSse_Optional Optional;

  external wire_cst_KitchenSinkTwinRustAsyncSse_Buffer Buffer;

  external wire_cst_KitchenSinkTwinRustAsyncSse_Enums Enums;
}

final class wire_cst_KitchenSinkTwinRustAsyncSse_Optional extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> field0;

  external ffi.Pointer<ffi.Int32> field1;
}

final class wire_cst_KitchenSinkTwinRustAsyncSse_Buffer extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_KitchenSinkTwinRustAsyncSse_Enums extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_KitchenSinkTwinSse_Primitives extends ffi.Struct {
  @ffi.Int32()
  external int int32;

  @ffi.Double()
  external double float64;

  @ffi.Bool()
  external bool boolean;
}

final class wire_cst_KitchenSinkTwinSse_Nested extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_kitchen_sink_twin_sse> field1;
}

final class wire_cst_kitchen_sink_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external KitchenSinkTwinSseKind kind;
}

final class KitchenSinkTwinSseKind extends ffi.Union {
  external wire_cst_KitchenSinkTwinSse_Primitives Primitives;

  external wire_cst_KitchenSinkTwinSse_Nested Nested;

  external wire_cst_KitchenSinkTwinSse_Optional Optional;

  external wire_cst_KitchenSinkTwinSse_Buffer Buffer;

  external wire_cst_KitchenSinkTwinSse_Enums Enums;
}

final class wire_cst_KitchenSinkTwinSse_Optional extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> field0;

  external ffi.Pointer<ffi.Int32> field1;
}

final class wire_cst_KitchenSinkTwinSse_Buffer extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_KitchenSinkTwinSse_Enums extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_KitchenSinkTwinSyncSse_Primitives extends ffi.Struct {
  @ffi.Int32()
  external int int32;

  @ffi.Double()
  external double float64;

  @ffi.Bool()
  external bool boolean;
}

final class wire_cst_KitchenSinkTwinSyncSse_Nested extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_kitchen_sink_twin_sync_sse> field1;
}

final class wire_cst_kitchen_sink_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external KitchenSinkTwinSyncSseKind kind;
}

final class KitchenSinkTwinSyncSseKind extends ffi.Union {
  external wire_cst_KitchenSinkTwinSyncSse_Primitives Primitives;

  external wire_cst_KitchenSinkTwinSyncSse_Nested Nested;

  external wire_cst_KitchenSinkTwinSyncSse_Optional Optional;

  external wire_cst_KitchenSinkTwinSyncSse_Buffer Buffer;

  external wire_cst_KitchenSinkTwinSyncSse_Enums Enums;
}

final class wire_cst_KitchenSinkTwinSyncSse_Optional extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> field0;

  external ffi.Pointer<ffi.Int32> field1;
}

final class wire_cst_KitchenSinkTwinSyncSse_Buffer extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_KitchenSinkTwinSyncSse_Enums extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_raw_string_mirrored extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_nested_raw_string_mirrored extends ffi.Struct {
  external wire_cst_raw_string_mirrored raw;
}

final class wire_cst_list_nested_raw_string_mirrored extends ffi.Struct {
  external ffi.Pointer<wire_cst_nested_raw_string_mirrored> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_of_nested_raw_string_mirrored extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_nested_raw_string_mirrored> raw;
}

final class wire_cst_SpeedTwinRustAsyncSse_GPS extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class SpeedTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_SpeedTwinRustAsyncSse_GPS GPS;
}

final class wire_cst_speed_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external SpeedTwinRustAsyncSseKind kind;
}

final class wire_cst_MeasureTwinRustAsyncSse_Speed extends ffi.Struct {
  external ffi.Pointer<wire_cst_speed_twin_rust_async_sse> field0;
}

final class wire_cst_DistanceTwinRustAsyncSse_Map extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class DistanceTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_DistanceTwinRustAsyncSse_Map Map;
}

final class wire_cst_distance_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external DistanceTwinRustAsyncSseKind kind;
}

final class wire_cst_MeasureTwinRustAsyncSse_Distance extends ffi.Struct {
  external ffi.Pointer<wire_cst_distance_twin_rust_async_sse> field0;
}

final class MeasureTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_MeasureTwinRustAsyncSse_Speed Speed;

  external wire_cst_MeasureTwinRustAsyncSse_Distance Distance;
}

final class wire_cst_measure_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external MeasureTwinRustAsyncSseKind kind;
}

final class wire_cst_SpeedTwinSse_GPS extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class SpeedTwinSseKind extends ffi.Union {
  external wire_cst_SpeedTwinSse_GPS GPS;
}

final class wire_cst_speed_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external SpeedTwinSseKind kind;
}

final class wire_cst_MeasureTwinSse_Speed extends ffi.Struct {
  external ffi.Pointer<wire_cst_speed_twin_sse> field0;
}

final class wire_cst_DistanceTwinSse_Map extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class DistanceTwinSseKind extends ffi.Union {
  external wire_cst_DistanceTwinSse_Map Map;
}

final class wire_cst_distance_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external DistanceTwinSseKind kind;
}

final class wire_cst_MeasureTwinSse_Distance extends ffi.Struct {
  external ffi.Pointer<wire_cst_distance_twin_sse> field0;
}

final class MeasureTwinSseKind extends ffi.Union {
  external wire_cst_MeasureTwinSse_Speed Speed;

  external wire_cst_MeasureTwinSse_Distance Distance;
}

final class wire_cst_measure_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external MeasureTwinSseKind kind;
}

final class wire_cst_SpeedTwinSyncSse_GPS extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class SpeedTwinSyncSseKind extends ffi.Union {
  external wire_cst_SpeedTwinSyncSse_GPS GPS;
}

final class wire_cst_speed_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external SpeedTwinSyncSseKind kind;
}

final class wire_cst_MeasureTwinSyncSse_Speed extends ffi.Struct {
  external ffi.Pointer<wire_cst_speed_twin_sync_sse> field0;
}

final class wire_cst_DistanceTwinSyncSse_Map extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class DistanceTwinSyncSseKind extends ffi.Union {
  external wire_cst_DistanceTwinSyncSse_Map Map;
}

final class wire_cst_distance_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external DistanceTwinSyncSseKind kind;
}

final class wire_cst_MeasureTwinSyncSse_Distance extends ffi.Struct {
  external ffi.Pointer<wire_cst_distance_twin_sync_sse> field0;
}

final class MeasureTwinSyncSseKind extends ffi.Union {
  external wire_cst_MeasureTwinSyncSse_Speed Speed;

  external wire_cst_MeasureTwinSyncSse_Distance Distance;
}

final class wire_cst_measure_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external MeasureTwinSyncSseKind kind;
}

final class wire_cst_message_id_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_message_id_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_message_id_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_list_my_tree_node_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_tree_node_twin_rust_async_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_tree_node_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int value_i32;

  external ffi.Pointer<wire_cst_list_prim_u_8> value_vec_u8;

  @ffi.Bool()
  external bool value_boolean;

  external ffi.Pointer<wire_cst_list_my_tree_node_twin_rust_async_sse> children;
}

final class wire_cst_my_nested_struct_twin_rust_async_sse extends ffi.Struct {
  external wire_cst_my_tree_node_twin_rust_async_sse tree_node;

  @ffi.Int32()
  external int weekday;
}

final class wire_cst_list_my_tree_node_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_tree_node_twin_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_tree_node_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int value_i32;

  external ffi.Pointer<wire_cst_list_prim_u_8> value_vec_u8;

  @ffi.Bool()
  external bool value_boolean;

  external ffi.Pointer<wire_cst_list_my_tree_node_twin_sse> children;
}

final class wire_cst_my_nested_struct_twin_sse extends ffi.Struct {
  external wire_cst_my_tree_node_twin_sse tree_node;

  @ffi.Int32()
  external int weekday;
}

final class wire_cst_list_my_tree_node_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_my_tree_node_twin_sync_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_my_tree_node_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int value_i32;

  external ffi.Pointer<wire_cst_list_prim_u_8> value_vec_u8;

  @ffi.Bool()
  external bool value_boolean;

  external ffi.Pointer<wire_cst_list_my_tree_node_twin_sync_sse> children;
}

final class wire_cst_my_nested_struct_twin_sync_sse extends ffi.Struct {
  external wire_cst_my_tree_node_twin_sync_sse tree_node;

  @ffi.Int32()
  external int weekday;
}

final class wire_cst_note_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> day;

  external ffi.Pointer<wire_cst_list_prim_u_8> body;
}

final class wire_cst_note_twin_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> day;

  external ffi.Pointer<wire_cst_list_prim_u_8> body;
}

final class wire_cst_note_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> day;

  external ffi.Pointer<wire_cst_list_prim_u_8> body;
}

final class wire_cst_opaque_nested_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_opaque_nested_twin_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_opaque_nested_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Void> first;

  external ffi.Pointer<ffi.Void> second;
}

final class wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_opt_vecs_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> i32;

  external ffi
      .Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_rust_async_sse>
      enums;

  external ffi.Pointer<wire_cst_list_opt_String> strings;

  external ffi.Pointer<wire_cst_list_opt_list_prim_i_32> buffers;
}

final class wire_cst_list_opt_box_autoadd_weekdays_twin_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_opt_vecs_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> i32;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sse> enums;

  external ffi.Pointer<wire_cst_list_opt_String> strings;

  external ffi.Pointer<wire_cst_list_opt_list_prim_i_32> buffers;
}

final class wire_cst_list_opt_box_autoadd_weekdays_twin_sync_sse
    extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int32>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_opt_vecs_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_i_32> i32;

  external ffi.Pointer<wire_cst_list_opt_box_autoadd_weekdays_twin_sync_sse>
      enums;

  external ffi.Pointer<wire_cst_list_opt_String> strings;

  external ffi.Pointer<wire_cst_list_opt_list_prim_i_32> buffers;
}

final class wire_cst_some_struct_twin_rust_async_sse extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_some_struct_twin_sse extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_some_struct_twin_sync_sse extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_struct_with_comments_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int field_with_comments;
}

final class wire_cst_struct_with_comments_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int field_with_comments;
}

final class wire_cst_struct_with_comments_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int field_with_comments;
}

final class wire_cst_struct_with_enum_twin_rust_async_sse extends ffi.Struct {
  external wire_cst_abc_twin_rust_async_sse abc1;

  external wire_cst_abc_twin_rust_async_sse abc2;
}

final class wire_cst_struct_with_enum_twin_sse extends ffi.Struct {
  external wire_cst_abc_twin_sse abc1;

  external wire_cst_abc_twin_sse abc2;
}

final class wire_cst_struct_with_enum_twin_sync_sse extends ffi.Struct {
  external wire_cst_abc_twin_sync_sse abc1;

  external wire_cst_abc_twin_sync_sse abc2;
}

final class wire_cst_struct_with_one_field_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int a;
}

final class wire_cst_struct_with_one_field_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int a;
}

final class wire_cst_struct_with_one_field_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int a;
}

final class wire_cst_struct_with_two_field_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int a;

  @ffi.Int32()
  external int b;
}

final class wire_cst_struct_with_two_field_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int a;

  @ffi.Int32()
  external int b;
}

final class wire_cst_struct_with_two_field_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int a;

  @ffi.Int32()
  external int b;
}

final class wire_cst_struct_with_zero_field_twin_rust_async_sse
    extends ffi.Opaque {}

final class wire_cst_struct_with_zero_field_twin_sse extends ffi.Opaque {}

final class wire_cst_struct_with_zero_field_twin_sync_sse extends ffi.Opaque {}

final class wire_cst_sum_with_twin_rust_async_sse extends ffi.Struct {
  @ffi.Uint32()
  external int x;
}

final class wire_cst_sum_with_twin_sse extends ffi.Struct {
  @ffi.Uint32()
  external int x;
}

final class wire_cst_sum_with_twin_sync_sse extends ffi.Struct {
  @ffi.Uint32()
  external int x;
}

final class wire_cst_test_id_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class wire_cst_test_id_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class wire_cst_test_id_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_32> field0;
}

final class wire_cst_tuple_struct_with_one_field_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_tuple_struct_with_one_field_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_tuple_struct_with_one_field_twin_sync_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_tuple_struct_with_two_field_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_tuple_struct_with_two_field_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_tuple_struct_with_two_field_twin_sync_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_user_id_twin_rust_async_sse extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_user_id_twin_sse extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_user_id_twin_sync_sse extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

final class wire_cst_blob_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_blob_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_blob_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_list_Chrono_Local extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_application_settings extends ffi.Struct {
  external ffi.Pointer<wire_cst_application_settings> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_rust_async_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_enum_opaque_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_enum_opaque_twin_sync_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_my_enum extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_point_twin_normal extends ffi.Struct {
  @ffi.Float()
  external double x;

  @ffi.Float()
  external double y;
}

final class wire_cst_list_point_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_point_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_point_twin_rust_async extends ffi.Struct {
  @ffi.Float()
  external double x;

  @ffi.Float()
  external double y;
}

final class wire_cst_list_point_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_point_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_point_twin_rust_async_sse extends ffi.Struct {
  @ffi.Float()
  external double x;

  @ffi.Float()
  external double y;
}

final class wire_cst_list_point_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_point_twin_rust_async_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_point_twin_sse extends ffi.Struct {
  @ffi.Float()
  external double x;

  @ffi.Float()
  external double y;
}

final class wire_cst_list_point_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_point_twin_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_point_twin_sync extends ffi.Struct {
  @ffi.Float()
  external double x;

  @ffi.Float()
  external double y;
}

final class wire_cst_list_point_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_point_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_point_twin_sync_sse extends ffi.Struct {
  @ffi.Float()
  external double x;

  @ffi.Float()
  external double y;
}

final class wire_cst_list_point_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_point_twin_sync_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_RawStringEnumMirrored_Raw extends ffi.Struct {
  external ffi.Pointer<wire_cst_raw_string_mirrored> field0;
}

final class wire_cst_RawStringEnumMirrored_Nested extends ffi.Struct {
  external ffi.Pointer<wire_cst_nested_raw_string_mirrored> field0;
}

final class wire_cst_RawStringEnumMirrored_ListOfNested extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_of_nested_raw_string_mirrored> field0;
}

final class RawStringEnumMirroredKind extends ffi.Union {
  external wire_cst_RawStringEnumMirrored_Raw Raw;

  external wire_cst_RawStringEnumMirrored_Nested Nested;

  external wire_cst_RawStringEnumMirrored_ListOfNested ListOfNested;
}

final class wire_cst_raw_string_enum_mirrored extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external RawStringEnumMirroredKind kind;
}

final class wire_cst_list_raw_string_enum_mirrored extends ffi.Struct {
  external ffi.Pointer<wire_cst_raw_string_enum_mirrored> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_raw_string_mirrored extends ffi.Struct {
  external ffi.Pointer<wire_cst_raw_string_mirrored> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_enum_simple_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_enum_simple_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_enum_simple_twin_rust_async_sse>
      ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_enum_simple_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_enum_simple_twin_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_enum_simple_twin_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_enum_simple_twin_sync_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_list_record_string_enum_simple_twin_sync_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_enum_simple_twin_sync_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_kitchen_sink_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  external wire_cst_kitchen_sink_twin_rust_async_sse field1;
}

final class wire_cst_list_record_string_kitchen_sink_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_kitchen_sink_twin_rust_async_sse>
      ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_kitchen_sink_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  external wire_cst_kitchen_sink_twin_sse field1;
}

final class wire_cst_list_record_string_kitchen_sink_twin_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_kitchen_sink_twin_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_record_string_kitchen_sink_twin_sync_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;

  external wire_cst_kitchen_sink_twin_sync_sse field1;
}

final class wire_cst_list_record_string_kitchen_sink_twin_sync_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_kitchen_sink_twin_sync_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_sum_with_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_sum_with_twin_normal> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_sum_with_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_sum_with_twin_rust_async> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_sum_with_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_sum_with_twin_rust_async_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_sum_with_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_sum_with_twin_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_sum_with_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_sum_with_twin_sync> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_sum_with_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_sum_with_twin_sync_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_test_id_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_test_id_twin_rust_async_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_test_id_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_test_id_twin_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_test_id_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_test_id_twin_sync_sse> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_weekdays_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_weekdays_twin_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_weekdays_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_another_macro_struct_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int data;

  @ffi.Int32()
  external int non_final_data;
}

final class wire_cst_another_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_another_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_another_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_another_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_another_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_another_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> a;
}

final class wire_cst_ApplicationMessage_DisplayMessage extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_ApplicationMessage_RenderPixel extends ffi.Struct {
  @ffi.Int32()
  external int x;

  @ffi.Int32()
  external int y;
}

final class ApplicationMessageKind extends ffi.Union {
  external wire_cst_ApplicationMessage_DisplayMessage DisplayMessage;

  external wire_cst_ApplicationMessage_RenderPixel RenderPixel;
}

final class wire_cst_application_message extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ApplicationMessageKind kind;
}

final class wire_cst_big_buffers_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_64> int64;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64;
}

final class wire_cst_big_buffers_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_64> int64;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64;
}

final class wire_cst_big_buffers_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_64> int64;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64;
}

final class wire_cst_big_buffers_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_64> int64;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64;
}

final class wire_cst_big_buffers_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_64> int64;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64;
}

final class wire_cst_big_buffers_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_64> int64;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64;
}

final class wire_cst_contains_mirrored_sub_struct_twin_normal
    extends ffi.Struct {
  external wire_cst_raw_string_mirrored test;

  external wire_cst_another_twin_normal test2;
}

final class wire_cst_contains_mirrored_sub_struct_twin_rust_async
    extends ffi.Struct {
  external wire_cst_raw_string_mirrored test;

  external wire_cst_another_twin_rust_async test2;
}

final class wire_cst_contains_mirrored_sub_struct_twin_rust_async_sse
    extends ffi.Struct {
  external wire_cst_raw_string_mirrored test;

  external wire_cst_another_twin_rust_async_sse test2;
}

final class wire_cst_contains_mirrored_sub_struct_twin_sse extends ffi.Struct {
  external wire_cst_raw_string_mirrored test;

  external wire_cst_another_twin_sse test2;
}

final class wire_cst_contains_mirrored_sub_struct_twin_sync extends ffi.Struct {
  external wire_cst_raw_string_mirrored test;

  external wire_cst_another_twin_sync test2;
}

final class wire_cst_contains_mirrored_sub_struct_twin_sync_sse
    extends ffi.Struct {
  external wire_cst_raw_string_mirrored test;

  external wire_cst_another_twin_sync_sse test2;
}

final class wire_cst_CustomEnumErrorTwinNormal_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomEnumErrorTwinNormal_Two extends ffi.Struct {
  @ffi.Uint32()
  external int message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomEnumErrorTwinNormalKind extends ffi.Union {
  external wire_cst_CustomEnumErrorTwinNormal_One One;

  external wire_cst_CustomEnumErrorTwinNormal_Two Two;
}

final class wire_cst_custom_enum_error_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomEnumErrorTwinNormalKind kind;
}

final class wire_cst_CustomEnumErrorTwinRustAsync_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomEnumErrorTwinRustAsync_Two extends ffi.Struct {
  @ffi.Uint32()
  external int message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomEnumErrorTwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomEnumErrorTwinRustAsync_One One;

  external wire_cst_CustomEnumErrorTwinRustAsync_Two Two;
}

final class wire_cst_custom_enum_error_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomEnumErrorTwinRustAsyncKind kind;
}

final class wire_cst_CustomEnumErrorTwinRustAsyncSse_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomEnumErrorTwinRustAsyncSse_Two extends ffi.Struct {
  @ffi.Uint32()
  external int message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomEnumErrorTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_CustomEnumErrorTwinRustAsyncSse_One One;

  external wire_cst_CustomEnumErrorTwinRustAsyncSse_Two Two;
}

final class wire_cst_custom_enum_error_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomEnumErrorTwinRustAsyncSseKind kind;
}

final class wire_cst_CustomEnumErrorTwinSse_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomEnumErrorTwinSse_Two extends ffi.Struct {
  @ffi.Uint32()
  external int message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomEnumErrorTwinSseKind extends ffi.Union {
  external wire_cst_CustomEnumErrorTwinSse_One One;

  external wire_cst_CustomEnumErrorTwinSse_Two Two;
}

final class wire_cst_custom_enum_error_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomEnumErrorTwinSseKind kind;
}

final class wire_cst_CustomEnumErrorTwinSync_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomEnumErrorTwinSync_Two extends ffi.Struct {
  @ffi.Uint32()
  external int message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomEnumErrorTwinSyncKind extends ffi.Union {
  external wire_cst_CustomEnumErrorTwinSync_One One;

  external wire_cst_CustomEnumErrorTwinSync_Two Two;
}

final class wire_cst_custom_enum_error_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomEnumErrorTwinSyncKind kind;
}

final class wire_cst_CustomEnumErrorTwinSyncSse_One extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomEnumErrorTwinSyncSse_Two extends ffi.Struct {
  @ffi.Uint32()
  external int message;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomEnumErrorTwinSyncSseKind extends ffi.Union {
  external wire_cst_CustomEnumErrorTwinSyncSse_One One;

  external wire_cst_CustomEnumErrorTwinSyncSse_Two Two;
}

final class wire_cst_custom_enum_error_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomEnumErrorTwinSyncSseKind kind;
}

final class wire_cst_CustomErrorTwinNormal_Error0 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomErrorTwinNormal_Error1 extends ffi.Struct {
  @ffi.Uint32()
  external int e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomErrorTwinNormalKind extends ffi.Union {
  external wire_cst_CustomErrorTwinNormal_Error0 Error0;

  external wire_cst_CustomErrorTwinNormal_Error1 Error1;
}

final class wire_cst_custom_error_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomErrorTwinNormalKind kind;
}

final class wire_cst_CustomErrorTwinRustAsync_Error0 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomErrorTwinRustAsync_Error1 extends ffi.Struct {
  @ffi.Uint32()
  external int e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomErrorTwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomErrorTwinRustAsync_Error0 Error0;

  external wire_cst_CustomErrorTwinRustAsync_Error1 Error1;
}

final class wire_cst_custom_error_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomErrorTwinRustAsyncKind kind;
}

final class wire_cst_CustomErrorTwinRustAsyncSse_Error0 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomErrorTwinRustAsyncSse_Error1 extends ffi.Struct {
  @ffi.Uint32()
  external int e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomErrorTwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_CustomErrorTwinRustAsyncSse_Error0 Error0;

  external wire_cst_CustomErrorTwinRustAsyncSse_Error1 Error1;
}

final class wire_cst_custom_error_twin_rust_async_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomErrorTwinRustAsyncSseKind kind;
}

final class wire_cst_CustomErrorTwinSse_Error0 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomErrorTwinSse_Error1 extends ffi.Struct {
  @ffi.Uint32()
  external int e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomErrorTwinSseKind extends ffi.Union {
  external wire_cst_CustomErrorTwinSse_Error0 Error0;

  external wire_cst_CustomErrorTwinSse_Error1 Error1;
}

final class wire_cst_custom_error_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomErrorTwinSseKind kind;
}

final class wire_cst_CustomErrorTwinSync_Error0 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomErrorTwinSync_Error1 extends ffi.Struct {
  @ffi.Uint32()
  external int e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomErrorTwinSyncKind extends ffi.Union {
  external wire_cst_CustomErrorTwinSync_Error0 Error0;

  external wire_cst_CustomErrorTwinSync_Error1 Error1;
}

final class wire_cst_custom_error_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomErrorTwinSyncKind kind;
}

final class wire_cst_CustomErrorTwinSyncSse_Error0 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class wire_cst_CustomErrorTwinSyncSse_Error1 extends ffi.Struct {
  @ffi.Uint32()
  external int e;

  external ffi.Pointer<wire_cst_list_prim_u_8> backtrace;
}

final class CustomErrorTwinSyncSseKind extends ffi.Union {
  external wire_cst_CustomErrorTwinSyncSse_Error0 Error0;

  external wire_cst_CustomErrorTwinSyncSse_Error1 Error1;
}

final class wire_cst_custom_error_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomErrorTwinSyncSseKind kind;
}

final class wire_cst_CustomNestedError1TwinNormal_CustomNested1
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError1TwinNormal_ErrorNested
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_2_twin_normal> field0;
}

final class CustomNestedError1TwinNormalKind extends ffi.Union {
  external wire_cst_CustomNestedError1TwinNormal_CustomNested1 CustomNested1;

  external wire_cst_CustomNestedError1TwinNormal_ErrorNested ErrorNested;
}

final class wire_cst_custom_nested_error_1_twin_normal extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError1TwinNormalKind kind;
}

final class wire_cst_CustomNestedError1TwinRustAsync_CustomNested1
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError1TwinRustAsync_ErrorNested
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async> field0;
}

final class CustomNestedError1TwinRustAsyncKind extends ffi.Union {
  external wire_cst_CustomNestedError1TwinRustAsync_CustomNested1 CustomNested1;

  external wire_cst_CustomNestedError1TwinRustAsync_ErrorNested ErrorNested;
}

final class wire_cst_custom_nested_error_1_twin_rust_async extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError1TwinRustAsyncKind kind;
}

final class wire_cst_CustomNestedError1TwinRustAsyncSse_CustomNested1
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError1TwinRustAsyncSse_ErrorNested
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_2_twin_rust_async_sse>
      field0;
}

final class CustomNestedError1TwinRustAsyncSseKind extends ffi.Union {
  external wire_cst_CustomNestedError1TwinRustAsyncSse_CustomNested1
      CustomNested1;

  external wire_cst_CustomNestedError1TwinRustAsyncSse_ErrorNested ErrorNested;
}

final class wire_cst_custom_nested_error_1_twin_rust_async_sse
    extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError1TwinRustAsyncSseKind kind;
}

final class wire_cst_CustomNestedError1TwinSse_CustomNested1
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError1TwinSse_ErrorNested extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_2_twin_sse> field0;
}

final class CustomNestedError1TwinSseKind extends ffi.Union {
  external wire_cst_CustomNestedError1TwinSse_CustomNested1 CustomNested1;

  external wire_cst_CustomNestedError1TwinSse_ErrorNested ErrorNested;
}

final class wire_cst_custom_nested_error_1_twin_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError1TwinSseKind kind;
}

final class wire_cst_CustomNestedError1TwinSync_CustomNested1
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError1TwinSync_ErrorNested extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync> field0;
}

final class CustomNestedError1TwinSyncKind extends ffi.Union {
  external wire_cst_CustomNestedError1TwinSync_CustomNested1 CustomNested1;

  external wire_cst_CustomNestedError1TwinSync_ErrorNested ErrorNested;
}

final class wire_cst_custom_nested_error_1_twin_sync extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError1TwinSyncKind kind;
}

final class wire_cst_CustomNestedError1TwinSyncSse_CustomNested1
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> field0;
}

final class wire_cst_CustomNestedError1TwinSyncSse_ErrorNested
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_custom_nested_error_2_twin_sync_sse> field0;
}

final class CustomNestedError1TwinSyncSseKind extends ffi.Union {
  external wire_cst_CustomNestedError1TwinSyncSse_CustomNested1 CustomNested1;

  external wire_cst_CustomNestedError1TwinSyncSse_ErrorNested ErrorNested;
}

final class wire_cst_custom_nested_error_1_twin_sync_sse extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external CustomNestedError1TwinSyncSseKind kind;
}

final class wire_cst_custom_struct_error_another_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_custom_struct_error_another_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_custom_struct_error_another_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_custom_struct_error_another_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_custom_struct_error_another_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_custom_struct_error_another_twin_sync_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> message;
}

final class wire_cst_demo_struct_for_rust_call_dart_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;
}

final class wire_cst_demo_struct_for_rust_call_dart_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;
}

final class wire_cst_demo_struct_for_rust_call_dart_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;
}

final class wire_cst_demo_struct_for_rust_call_dart_twin_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> name;
}

final class wire_cst_log_2_twin_normal extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_log_2_twin_rust_async extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_log_2_twin_rust_async_sse extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_log_2_twin_sse extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_log_2_twin_sync extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_log_2_twin_sync_sse extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  external ffi.Pointer<wire_cst_list_prim_u_8> value;
}

final class wire_cst_log_twin_normal extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  @ffi.Uint32()
  external int value;
}

final class wire_cst_log_twin_rust_async extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  @ffi.Uint32()
  external int value;
}

final class wire_cst_log_twin_rust_async_sse extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  @ffi.Uint32()
  external int value;
}

final class wire_cst_log_twin_sse extends ffi.Struct {
  @ffi.Uint32()
  external int key;

  @ffi.Uint32()
  external int value;
}

final class wire_cst_mirror_struct_twin_normal extends ffi.Struct {
  external wire_cst_application_settings a;

  external wire_cst_my_struct b;

  external ffi.Pointer<wire_cst_list_my_enum> c;

  external ffi.Pointer<wire_cst_list_application_settings> d;
}

final class wire_cst_mirror_struct_twin_rust_async extends ffi.Struct {
  external wire_cst_application_settings a;

  external wire_cst_my_struct b;

  external ffi.Pointer<wire_cst_list_my_enum> c;

  external ffi.Pointer<wire_cst_list_application_settings> d;
}

final class wire_cst_mirror_struct_twin_rust_async_sse extends ffi.Struct {
  external wire_cst_application_settings a;

  external wire_cst_my_struct b;

  external ffi.Pointer<wire_cst_list_my_enum> c;

  external ffi.Pointer<wire_cst_list_application_settings> d;
}

final class wire_cst_mirror_struct_twin_sse extends ffi.Struct {
  external wire_cst_application_settings a;

  external wire_cst_my_struct b;

  external ffi.Pointer<wire_cst_list_my_enum> c;

  external ffi.Pointer<wire_cst_list_application_settings> d;
}

final class wire_cst_mirror_struct_twin_sync extends ffi.Struct {
  external wire_cst_application_settings a;

  external wire_cst_my_struct b;

  external ffi.Pointer<wire_cst_list_my_enum> c;

  external ffi.Pointer<wire_cst_list_application_settings> d;
}

final class wire_cst_mirror_struct_twin_sync_sse extends ffi.Struct {
  external wire_cst_application_settings a;

  external wire_cst_my_struct b;

  external ffi.Pointer<wire_cst_list_my_enum> c;

  external ffi.Pointer<wire_cst_list_application_settings> d;
}

final class wire_cst_more_than_just_one_raw_string_struct_twin_normal
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> regular;

  external ffi.Pointer<wire_cst_list_prim_u_8> type;

  @ffi.Bool()
  external bool async1;

  external ffi.Pointer<wire_cst_list_prim_u_8> another;
}

final class wire_cst_more_than_just_one_raw_string_struct_twin_rust_async
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> regular;

  external ffi.Pointer<wire_cst_list_prim_u_8> type;

  @ffi.Bool()
  external bool async1;

  external ffi.Pointer<wire_cst_list_prim_u_8> another;
}

final class wire_cst_more_than_just_one_raw_string_struct_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> regular;

  external ffi.Pointer<wire_cst_list_prim_u_8> type;

  @ffi.Bool()
  external bool async1;

  external ffi.Pointer<wire_cst_list_prim_u_8> another;
}

final class wire_cst_more_than_just_one_raw_string_struct_twin_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> regular;

  external ffi.Pointer<wire_cst_list_prim_u_8> type;

  @ffi.Bool()
  external bool async1;

  external ffi.Pointer<wire_cst_list_prim_u_8> another;
}

final class wire_cst_more_than_just_one_raw_string_struct_twin_sync
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> regular;

  external ffi.Pointer<wire_cst_list_prim_u_8> type;

  @ffi.Bool()
  external bool async1;

  external ffi.Pointer<wire_cst_list_prim_u_8> another;
}

final class wire_cst_more_than_just_one_raw_string_struct_twin_sync_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> regular;

  external ffi.Pointer<wire_cst_list_prim_u_8> type;

  @ffi.Bool()
  external bool async1;

  external ffi.Pointer<wire_cst_list_prim_u_8> another;
}

final class wire_cst_my_stream_entry_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> hello;
}

final class wire_cst_my_stream_entry_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> hello;
}

final class wire_cst_my_stream_entry_twin_rust_async_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> hello;
}

final class wire_cst_my_stream_entry_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> hello;
}

final class wire_cst_new_simple_struct extends ffi.Struct {
  @ffi.Int32()
  external int field;
}

final class wire_cst_old_simple_struct extends ffi.Struct {
  @ffi.Int32()
  external int field;
}

final class wire_cst_raw_string_item_struct_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> type;
}

final class wire_cst_raw_string_item_struct_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> type;
}

final class wire_cst_raw_string_item_struct_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> type;
}

final class wire_cst_raw_string_item_struct_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> type;
}

final class wire_cst_raw_string_item_struct_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> type;
}

final class wire_cst_raw_string_item_struct_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8> type;
}

final class wire_cst_record_application_settings_raw_string_enum_mirrored
    extends ffi.Struct {
  external wire_cst_application_settings field0;

  external wire_cst_raw_string_enum_mirrored field1;
}

final class wire_cst_test_chrono_twin_normal extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> dt;

  external ffi.Pointer<ffi.Int64> dt2;

  external ffi.Pointer<ffi.Int64> du;
}

final class wire_cst_test_chrono_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> dt;

  external ffi.Pointer<ffi.Int64> dt2;

  external ffi.Pointer<ffi.Int64> du;
}

final class wire_cst_test_chrono_twin_sync extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> dt;

  external ffi.Pointer<ffi.Int64> dt2;

  external ffi.Pointer<ffi.Int64> du;
}

final class wire_cst_test_model_twin_normal extends ffi.Struct {
  @ffi.Uint64()
  external int id;

  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  @ffi.Int32()
  external int alias_enum;

  external wire_cst_my_struct alias_struct;
}

final class wire_cst_test_model_twin_rust_async extends ffi.Struct {
  @ffi.Uint64()
  external int id;

  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  @ffi.Int32()
  external int alias_enum;

  external wire_cst_my_struct alias_struct;
}

final class wire_cst_test_model_twin_rust_async_sse extends ffi.Struct {
  @ffi.Uint64()
  external int id;

  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  @ffi.Int32()
  external int alias_enum;

  external wire_cst_my_struct alias_struct;
}

final class wire_cst_test_model_twin_sse extends ffi.Struct {
  @ffi.Uint64()
  external int id;

  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  @ffi.Int32()
  external int alias_enum;

  external wire_cst_my_struct alias_struct;
}

final class wire_cst_test_model_twin_sync extends ffi.Struct {
  @ffi.Uint64()
  external int id;

  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  @ffi.Int32()
  external int alias_enum;

  external wire_cst_my_struct alias_struct;
}

final class wire_cst_test_model_twin_sync_sse extends ffi.Struct {
  @ffi.Uint64()
  external int id;

  external ffi.Pointer<wire_cst_list_prim_u_8> name;

  @ffi.Int32()
  external int alias_enum;

  external wire_cst_my_struct alias_struct;
}

final class wire_cst_vec_of_primitive_pack_twin_normal extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_16> int16list;

  external ffi.Pointer<wire_cst_list_prim_u_16> uint16list;

  external ffi.Pointer<wire_cst_list_prim_u_32> uint32list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64list;

  external ffi.Pointer<wire_cst_list_prim_i_64> int64list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_bool> bool_list;
}

final class wire_cst_vec_of_primitive_pack_twin_rust_async extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_16> int16list;

  external ffi.Pointer<wire_cst_list_prim_u_16> uint16list;

  external ffi.Pointer<wire_cst_list_prim_u_32> uint32list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64list;

  external ffi.Pointer<wire_cst_list_prim_i_64> int64list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_bool> bool_list;
}

final class wire_cst_vec_of_primitive_pack_twin_rust_async_sse
    extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_16> int16list;

  external ffi.Pointer<wire_cst_list_prim_u_16> uint16list;

  external ffi.Pointer<wire_cst_list_prim_u_32> uint32list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64list;

  external ffi.Pointer<wire_cst_list_prim_i_64> int64list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_bool> bool_list;
}

final class wire_cst_vec_of_primitive_pack_twin_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_16> int16list;

  external ffi.Pointer<wire_cst_list_prim_u_16> uint16list;

  external ffi.Pointer<wire_cst_list_prim_u_32> uint32list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64list;

  external ffi.Pointer<wire_cst_list_prim_i_64> int64list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_bool> bool_list;
}

final class wire_cst_vec_of_primitive_pack_twin_sync extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_16> int16list;

  external ffi.Pointer<wire_cst_list_prim_u_16> uint16list;

  external ffi.Pointer<wire_cst_list_prim_u_32> uint32list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64list;

  external ffi.Pointer<wire_cst_list_prim_i_64> int64list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_bool> bool_list;
}

final class wire_cst_vec_of_primitive_pack_twin_sync_sse extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_8> int8list;

  external ffi.Pointer<wire_cst_list_prim_u_8> uint8list;

  external ffi.Pointer<wire_cst_list_prim_i_16> int16list;

  external ffi.Pointer<wire_cst_list_prim_u_16> uint16list;

  external ffi.Pointer<wire_cst_list_prim_u_32> uint32list;

  external ffi.Pointer<wire_cst_list_prim_i_32> int32list;

  external ffi.Pointer<wire_cst_list_prim_u_64> uint64list;

  external ffi.Pointer<wire_cst_list_prim_i_64> int64list;

  external ffi.Pointer<wire_cst_list_prim_f_32> float32list;

  external ffi.Pointer<wire_cst_list_prim_f_64> float64list;

  external ffi.Pointer<wire_cst_list_bool> bool_list;
}
