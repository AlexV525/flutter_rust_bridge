// NOTE: This file is mimicking how a human developer writes tests,
// and is auto-generated by frb_internal
// Please do not modify manually, but modify the origin and re-run frb_internal generator

import 'package:frb_example_pure_dart/src/rust/api/pseudo_manual/basic_map.dart';
import 'package:frb_example_pure_dart/src/rust/frb_generated.dart';
import 'package:test/test.dart';
import '../../test_utils.dart';
import 'dart:typed_data';

Future<void> main({bool skipRustLibInit = false}) async {
  if (!skipRustLibInit) await RustLib.init();

  group('basic_map', () {
    addTestsIdentityFunctionCall(exampleBasicMapTypeI8TwinNormal, [
      {},
      {42: 0},
      {42: -128},
      {42: 127}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeI16TwinNormal, [
      {},
      {42: 0},
      {42: -32768},
      {42: 32767}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeI32TwinNormal, [
      {},
      {42: 0},
      {42: -2147483648},
      {42: 2147483647}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeI64TwinNormal, [
      {},
      {42: 0},
      {42: -9007199254740992},
      {42: 9007199254740992}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeU8TwinNormal, [
      {},
      {42: 0},
      {42: 255}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeU16TwinNormal, [
      {},
      {42: 0},
      {42: 65535}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeU32TwinNormal, [
      {},
      {42: 0},
      {42: 4294967295}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeU64TwinNormal, [
      {},
      {42: 0},
      {42: 9007199254740992}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeIsizeTwinNormal, [
      {},
      {42: 0},
      {42: -2147483648},
      {42: 2147483647},
      {42: -9007199254740992},
      {42: 9007199254740992}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeUsizeTwinNormal, [
      {},
      {42: 0},
      {42: 4294967295},
      {42: 9007199254740992}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeF32TwinNormal, [
      {},
      {42: 0},
      {42: -42.5},
      {42: 123456}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeF64TwinNormal, [
      {},
      {42: 0},
      {42: -42.5},
      {42: 123456}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeBoolTwinNormal, [
      {},
      {42: false},
      {42: true}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeStringTwinNormal, [
      {},
      {42: ""},
      {42: "hello"},
      {42: "ðŸ˜‚"}
    ]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeBytesTwinNormal, [
      {},
      {42: Uint8List.fromList([])},
      {
        42: Uint8List.fromList([255, 0])
      },
      {
        42: Uint8List.fromList([10, 20, 30, 40])
      }
    ]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeBasicPrimitiveEnumTwinNormalTwinNormal, [
      {},
      {42: BasicPrimitiveEnumTwinNormal.apple},
      {42: BasicPrimitiveEnumTwinNormal.orange}
    ]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeBasicGeneralEnumTwinNormalTwinNormal, [
      {},
      {42: BasicGeneralEnumTwinNormal.apple(field: "one")},
      {42: BasicGeneralEnumTwinNormal.orange()}
    ]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeBasicStructTwinNormalTwinNormal, [
      {},
      {42: BasicStructTwinNormal(apple: null, orange: null)},
      {42: BasicStructTwinNormal(apple: "one", orange: 42)}
    ]);
  });
}
