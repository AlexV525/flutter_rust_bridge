// NOTE: This file is mimicking how a human developer writes tests,
// and is auto-generated from `basic_map_test.dart` by frb_internal
// Please do not modify manually, but modify the origin and re-run frb_internal generator

// NOTE: This file is mimicking how a human developer writes tests,
// and is auto-generated by frb_internal
// Please do not modify manually, but modify the origin and re-run frb_internal generator

import 'package:frb_example_pure_dart/src/rust/api/pseudo_manual/basic_map_twin_rust_async.dart';
import 'package:frb_example_pure_dart/src/rust/frb_generated.dart';
import 'package:test/test.dart';
import '../../test_utils.dart';

Future<void> main({bool skipRustLibInit = false}) async {
  if (!skipRustLibInit) await RustLib.init();

  group('basic_map', () {
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeI8TwinRustAsync, [0, -128, 127]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeI16TwinRustAsync, [0, -32768, 32767]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeI32TwinRustAsync, [0, -2147483648, 2147483647]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeI64TwinRustAsync,
        [0, -9007199254740992, 9007199254740992]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeU8TwinRustAsync, [0, 255]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeU16TwinRustAsync, [0, 65535]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeU32TwinRustAsync, [0, 4294967295]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeU64TwinRustAsync, [0, 9007199254740992]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeIsizeTwinRustAsync,
        [0, -2147483648, 2147483647, -9007199254740992, 9007199254740992]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeUsizeTwinRustAsync,
        [0, 4294967295, 9007199254740992]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeF32TwinRustAsync, [0, -42.5, 123456]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeF64TwinRustAsync, [0, -42.5, 123456]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeBoolTwinRustAsync, [false, true]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeStringTwinRustAsync, ["", "hello", "ðŸ˜‚"]);
    addTestsIdentityFunctionCall(exampleBasicMapTypeBytesTwinRustAsync, [
      Uint8List.fromList([]),
      Uint8List.fromList([255, 0]),
      Uint8List.fromList([10, 20, 30, 40])
    ]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeBasicPrimitiveEnumTwinRustAsyncTwinRustAsync, [
      BasicPrimitiveEnumTwinRustAsync.apple,
      BasicPrimitiveEnumTwinRustAsync.orange
    ]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeBasicGeneralEnumTwinRustAsyncTwinRustAsync, [
      BasicGeneralEnumTwinRustAsync.apple(field: "one"),
      BasicGeneralEnumTwinRustAsync.orange()
    ]);
    addTestsIdentityFunctionCall(
        exampleBasicMapTypeBasicStructTwinRustAsyncTwinRustAsync, [
      BasicStructTwinRustAsync(apple: null, orange: null),
      BasicStructTwinRustAsync(apple: "one", orange: 42)
    ]);
  });
}
