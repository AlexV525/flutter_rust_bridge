// NOTE: This file is mimicking how a human developer writes tests, 
// and is auto-generated from `basic_test.dart` by frb_internal
// Please do not modify manually, but modify the origin and re-run frb_internal generator

// NOTE: This file is mimicking how a human developer writes tests, 
// and is auto-generated by frb_internal
// Please do not modify manually, but modify the origin and re-run frb_internal generator


import 'package:frb_example_pure_dart/src/rust/api/pseudo_manual/basic_twin_sync_sse.dart';
import 'package:frb_example_pure_dart/src/rust/frb_generated.dart';
import 'package:test/test.dart';
import '../../test_utils.dart';
  import 'dart:typed_data';
  
  

Future<void> main({bool skipRustLibInit = false}) async {
  if (!skipRustLibInit) await RustLib.init();
  
  group('basic', () {
    addTestsIdentityFunctionCall(exampleBasicTypeI8TwinSyncSse, <int>[0, -128, 127]);addTestsIdentityFunctionCall(exampleBasicTypeI16TwinSyncSse, <int>[0, -32768, 32767]);addTestsIdentityFunctionCall(exampleBasicTypeI32TwinSyncSse, <int>[0, -2147483648, 2147483647]);addTestsIdentityFunctionCall(exampleBasicTypeI64TwinSyncSse, <int>[0, -9007199254740992, 9007199254740992]);addTestsIdentityFunctionCall(exampleBasicTypeU8TwinSyncSse, <int>[0, 255]);addTestsIdentityFunctionCall(exampleBasicTypeU16TwinSyncSse, <int>[0, 65535]);addTestsIdentityFunctionCall(exampleBasicTypeU32TwinSyncSse, <int>[0, 4294967295]);addTestsIdentityFunctionCall(exampleBasicTypeU64TwinSyncSse, <int>[0, 9007199254740992]);addTestsIdentityFunctionCall(exampleBasicTypeIsizeTwinSyncSse, <int>[0, -2147483648, 2147483647]);addTestsIdentityFunctionCall(exampleBasicTypeUsizeTwinSyncSse, <int>[0, 4294967295]);addTestsIdentityFunctionCall(exampleBasicTypeF32TwinSyncSse, <double>[0, -42.5, 123456]);addTestsIdentityFunctionCall(exampleBasicTypeF64TwinSyncSse, <double>[0, -42.5, 123456]);addTestsIdentityFunctionCall(exampleBasicTypeBoolTwinSyncSse, <bool>[false, true]);addTestsIdentityFunctionCall(exampleBasicTypeStringTwinSyncSse, <String>["", "hello", "ðŸ˜‚"]);addTestsIdentityFunctionCall(exampleBasicTypeBytesTwinSyncSse, <Uint8List>[Uint8List.fromList([]), Uint8List.fromList([255, 0]), Uint8List.fromList([10, 20, 30, 40])]);addTestsIdentityFunctionCall(exampleBasicTypeBasicPrimitiveEnumTwinSyncSseTwinSyncSse, <BasicPrimitiveEnumTwinSyncSse>[BasicPrimitiveEnumTwinSyncSse.apple, BasicPrimitiveEnumTwinSyncSse.orange]);addTestsIdentityFunctionCall(exampleBasicTypeBasicGeneralEnumTwinSyncSseTwinSyncSse, <BasicGeneralEnumTwinSyncSse>[BasicGeneralEnumTwinSyncSse.apple(field: "one"), BasicGeneralEnumTwinSyncSse.orange()]);addTestsIdentityFunctionCall(exampleBasicTypeBasicStructTwinSyncSseTwinSyncSse, <BasicStructTwinSyncSse>[BasicStructTwinSyncSse(apple: null, orange: null), BasicStructTwinSyncSse(apple: "one", orange: 42)]);
  });
}
  