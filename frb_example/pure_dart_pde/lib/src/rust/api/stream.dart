// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.30.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// The type `LogTwinNormal` is not used by any `pub` functions, thus it is ignored.
// The type `MyStreamEntryTwinNormal` is not used by any `pub` functions, thus it is ignored.

Future<Stream<String>> funcStreamReturnErrorTwinNormal({dynamic hint}) =>
    RustLib.instance.api.funcStreamReturnErrorTwinNormal(hint: hint);

Future<Stream<String>> funcStreamReturnPanicTwinNormal({dynamic hint}) =>
    RustLib.instance.api.funcStreamReturnPanicTwinNormal(hint: hint);

Future<Stream<int>> funcStreamSinkArgPositionTwinNormal(
        {required int a, required int b, dynamic hint}) =>
    RustLib.instance.api
        .funcStreamSinkArgPositionTwinNormal(a: a, b: b, hint: hint);

Future<Stream<MyStreamEntryTwinNormal>> handleStreamOfStructTwinNormal(
        {dynamic hint}) =>
    RustLib.instance.api.handleStreamOfStructTwinNormal(hint: hint);

Future<Stream<LogTwinNormal>> handleStreamSinkAt1TwinNormal(
        {required int key, required int max, dynamic hint}) =>
    RustLib.instance.api
        .handleStreamSinkAt1TwinNormal(key: key, max: max, hint: hint);

Future<Stream<LogTwinNormal>> handleStreamSinkAt2TwinNormal(
        {required int key, required int max, dynamic hint}) =>
    RustLib.instance.api
        .handleStreamSinkAt2TwinNormal(key: key, max: max, hint: hint);

Future<Stream<LogTwinNormal>> handleStreamSinkAt3TwinNormal(
        {required int key, required int max, dynamic hint}) =>
    RustLib.instance.api
        .handleStreamSinkAt3TwinNormal(key: key, max: max, hint: hint);

Future<Stream<U8Array2>> streamSinkFixedSizedPrimitiveArrayTwinNormal(
        {dynamic hint}) =>
    RustLib.instance.api
        .streamSinkFixedSizedPrimitiveArrayTwinNormal(hint: hint);
