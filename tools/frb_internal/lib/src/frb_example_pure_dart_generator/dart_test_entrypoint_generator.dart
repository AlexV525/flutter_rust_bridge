import 'dart:io';

import 'package:collection/collection.dart';

// ignore: implementation_imports
import 'package:flutter_rust_bridge/src/cli/run_command.dart';
import 'package:glob/glob.dart';
import 'package:glob/list_local_fs.dart';
import 'package:path/path.dart' as path;

Future<void> generateDartTestEntrypoints({required Uri dartRoot}) async {
  await _generateDartValgrindTestEntrypoint(dartRoot: dartRoot);
  await _generateDartWebTestEntrypoint(dartRoot: dartRoot);
}

Future<void> _generateDartWebTestEntrypoint({required Uri dartRoot}) async {
  const code = '''
$_kPrelude

import 'package:flutter_rust_bridge_utils/flutter_rust_bridge_utils_web.dart';
import 'dart_valgrind_test_entrypoint.dart' as dart_valgrind_test_entrypoint;

void main() {
  dartWebTestEntrypoint(() async {
    await dart_valgrind_test_entrypoint.main();
  });
}
  ''';

  await _writeToFile(dartRoot, 'test/dart_web_test_entrypoint.dart', code);
}

Future<void> _generateDartValgrindTestEntrypoint(
    {required Uri dartRoot}) async {
  final dirTest = dartRoot.resolve('test/');
  final dirInterest = dirTest.resolve('api/');
  final files = [
    for (final file in Glob('${dirInterest.toFilePath()}**.dart').listSync())
      file.path
  ].sorted();

  final imports = [
    for (final file in files) //
      "import '${path.relative(file, from: dirTest.toFilePath())}' as ${path.basenameWithoutExtension(file)};\n"
  ];
  final calls = [
    for (final file in files) //
      "await ${path.basenameWithoutExtension(file)}.main(skipRustLibInit: true);\n"
  ];

  final code = '''
$_kPrelude

import 'package:frb_example_pure_dart/src/rust/frb_generated.dart';

${imports.join("")}

void main() {
  await RustLib.init();

  ${calls.join("")}
}
  ''';

  await _writeToFile(dartRoot, 'test/dart_valgrind_test_entrypoint.dart', code);
}

Future<void> _writeToFile(
    Uri dartRoot, String relativePath, String code) async {
  final pathOutput = dartRoot.resolve(relativePath).toFilePath();
  File(pathOutput).writeAsStringSync(code);
  await runCommand('dart', ['format', pathOutput]);
}

const _kPrelude =
    '/// NOTE: This file is auto-generated by frb_internal. Please do not manually modify it.';
